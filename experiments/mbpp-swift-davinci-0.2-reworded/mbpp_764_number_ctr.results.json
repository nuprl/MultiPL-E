{
  "name": "mbpp_764_number_ctr",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_764_number_ctr.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i >= \"0\" && i <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "/tmp/tmpi_w7l25z.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.characters.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "/tmp/tmpuc3n5hxd.swift:4:16: error: 'characters' is unavailable: Please use String directly\n    return str.characters.count\n               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for i in str {\n        if i >= \"0\" && i <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str {\n        if ch >= \"0\" && ch <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str {\n        if ch >= \"0\" && ch <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str {\n        if ch.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.characters.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "/tmp/tmpuc3n5hxd.swift:4:16: error: 'characters' is unavailable: Please use String directly\n    return str.characters.count\n               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.characters.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "/tmp/tmpuc3n5hxd.swift:4:16: error: 'characters' is unavailable: Please use String directly\n    return str.characters.count\n               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.characters.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "/tmp/tmpuc3n5hxd.swift:4:16: error: 'characters' is unavailable: Please use String directly\n    return str.characters.count\n               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for c in str {\n        if c.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for _ in str {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "tmp_bmt2g1v/tmp_bmt2g1v.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac54e6ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac54e3f6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac54e3f6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac54e3f57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bmt2g1v                        0x0000558b762a5324 <unavailable> + 4900\n5    libc.so.6                          0x00002ac54e8eb460 __libc_start_main + 245\n6    tmp_bmt2g1v                        0x0000558b762a4fa9 <unavailable> + 4009\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for i in str {\n        if i >= \"0\" && i <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var number_ctr = 0\n    for char in str {\n        if char.isNumber {\n            number_ctr += 1\n        }\n    }\n    return number_ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str {\n        if ch >= \"0\" && ch <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str.characters {\n        if char >= \"0\" && char <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "/tmp/tmpugvl4x2r.swift:5:21: error: 'characters' is unavailable: Please use String directly\n    for char in str.characters {\n                    ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.characters.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "/tmp/tmpuc3n5hxd.swift:4:16: error: 'characters' is unavailable: Please use String directly\n    return str.characters.count\n               ^~~~~~~~~~\nSwift.String:5:16: note: 'characters' was obsoleted in Swift 5.0\n    public var characters: String { get set }\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char >= \"0\" && char <= \"9\" {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for _ in str {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "tmp_bmt2g1v/tmp_bmt2g1v.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac54e6ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac54e3f6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac54e3f6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac54e3f57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_bmt2g1v                        0x0000558b762a5324 <unavailable> + 4900\n5    libc.so.6                          0x00002ac54e8eb460 __libc_start_main + 245\n6    tmp_bmt2g1v                        0x0000558b762a4fa9 <unavailable> + 4009\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for i in str {\n        if i.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var count = 0\n    for char in str {\n        if char.isNumber {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for char in str {\n        if char.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    return str.count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1665510111,
      "stdout": "",
      "stderr": "tmpx5xm9j9j/tmpx5xm9j9j.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91ff597c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91ff28eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91ff28e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91ff28d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpx5xm9j9j                        0x00005577dd96b2c4 <unavailable> + 4804\n5    libc.so.6                          0x00002b91ff783460 __libc_start_main + 245\n6    tmpx5xm9j9j                        0x00005577dd96af49 <unavailable> + 3913\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to count number of digits in a given string.\nfunc number_ctr(str: String) -> Int {\n    var ctr = 0\n    for ch in str {\n        if ch.isNumber {\n            ctr += 1\n        }\n    }\n    return ctr\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(number_ctr(str: \"program2bedone\") == 1)\nassert(number_ctr(str: \"3wonders\") == 1)\nassert(number_ctr(str: \"123\") == 3)\nassert(number_ctr(str: \"3wond-1ers2\") == 3)",
      "timestamp": 1666122700,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_637_noprofit_noloss",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether the given amount has no profit and no loss\nfunc noprofit_noloss(actual_cost: Int, sale_amount: Int) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_637_noprofit_noloss.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(noprofit_noloss(actual_cost: 1500, sale_amount: 1200) == false)\nassert(noprofit_noloss(actual_cost: 100, sale_amount: 100) == true)\nassert(noprofit_noloss(actual_cost: 2000, sale_amount: 5000) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    if actual_cost == sale_amount {\n        return true\n    }\n    else {\n        return false\n    }",
    "    if actual_cost == sale_amount {\n        return true\n    } else {\n        return false\n    }",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    else {\n        return false\n    }",
    "    if actual_cost == sale_amount {\n        return true\n    } else {\n        return false\n    }",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    if actual_cost == sale_amount {\n        return true\n    } else {\n        return false\n    }",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    return actual_cost == sale_amount",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    return actual_cost == sale_amount",
    "    return actual_cost == sale_amount",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    if (actual_cost == sale_amount) {\n        return true\n    }\n    return false",
    "    if actual_cost == sale_amount {\n        return true\n    }\n    return false",
    "    return actual_cost == sale_amount"
  ]
}
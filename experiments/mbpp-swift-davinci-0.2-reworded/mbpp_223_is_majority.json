{
  "name": "mbpp_223_is_majority",
  "language": "swift",
  "prompt": "\n/// Write a function that takes in a sorted array, its length (n), and an element and returns whether the element is the majority element in the given sorted array. (The majority element is the element that occurs more than n/2 times.)\nfunc is_majority(arr: [Int], n: Int, x: Int) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_majority(arr: [1, 2, 3, 3, 3, 3, 10], n: 7, x: 3) == true)\nassert(is_majority(arr: [1, 1, 2, 4, 4, 4, 6, 6], n: 8, x: 4) == false)\nassert(is_majority(arr: [1, 1, 1, 2, 2], n: 5, x: 1) == true)\nassert(is_majority(arr: [1, 1, 2, 2], n: 5, x: 1) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    if count > n/2 {\n        return true\n    }\n    return false",
    "    let count = arr.filter { $0 == x }.count\n    return count > n / 2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    if count > n/2 {\n        return true\n    }\n    return false",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    let count = arr.filter { $0 == x }.count\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    if count > n/2 {\n        return true\n    }\n    return false",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    if count > n/2 {\n        return true\n    }\n    return false",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    return count > n/2",
    "    var count = 0\n    for i in 0..<n {\n        if arr[i] == x {\n            count += 1\n        }\n    }\n    if count > n/2 {\n        return true\n    }\n    return false"
  ]
}
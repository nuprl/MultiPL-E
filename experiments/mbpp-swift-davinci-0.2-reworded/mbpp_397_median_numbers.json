{
  "name": "mbpp_397_median_numbers",
  "language": "swift",
  "prompt": "\n/// Write a function to find the median of three numbers.\nfunc median_numbers(a: Int, b: Int, c: Int) -> Double {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_397_median_numbers.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(median_numbers(a: 25, b: 55, c: 65) == 55.0)\nassert(median_numbers(a: 20, b: 10, c: 30) == 20.0)\nassert(median_numbers(a: 15, b: 45, c: 75) == 45.0)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    let array = [a, b, c]\n    let sorted = array.sorted()\n    return Double(sorted[1])",
    "    let sorted = [a, b, c].sorted()\n    return Double(sorted[1])",
    "    var array = [a, b, c]\n    array.sort()\n    return Double(array[1])",
    "    var array = [a, b, c]\n    array.sort()\n    return Double(array[1])",
    "    let array = [a, b, c]\n    let sortedArray = array.sorted()\n    let median = sortedArray[1]\n    return Double(median)",
    "    let numbers = [a, b, c]\n    let sortedNumbers = numbers.sorted()\n    let median = sortedNumbers[1]\n    return Double(median)",
    "    let numbers = [a, b, c]\n    let sortedNumbers = numbers.sorted()\n    let median = sortedNumbers[1]\n    return Double(median)",
    "    let array = [a, b, c].sorted()\n    return Double(array[1])",
    "    return Double(a + b + c) / 3",
    "    let numbers = [a, b, c]\n    let sorted = numbers.sorted()\n    return Double(sorted[1])",
    "    let numbers = [a, b, c].sorted()\n    return Double(numbers[1])",
    "    let numbers = [a, b, c].sorted()\n    return Double(numbers[1])",
    "    let array = [a, b, c]\n    let sorted = array.sorted()\n    let median = sorted[1]\n    return Double(median)",
    "    var array = [a, b, c]\n    array.sort()\n    return Double(array[1])",
    "    let array = [a, b, c]\n    let sorted = array.sorted()\n    let middle = sorted[1]\n    return Double(middle)",
    "    var numbers = [a, b, c]\n    numbers.sort()\n    return Double(numbers[1])",
    "    let array = [a, b, c]\n    let sorted = array.sorted()\n    let middle = sorted[1]\n    return Double(middle)",
    "    let arr = [a, b, c].sorted()\n    if arr.count % 2 == 0 {\n        return Double(arr[arr.count / 2] + arr[arr.count / 2 - 1]) / 2\n    } else {\n        return Double(arr[arr.count / 2])\n    }",
    "    let array = [a, b, c]\n    let sortedArray = array.sorted()\n    let median = sortedArray[1]\n    return Double(median)",
    "    let numbers = [a, b, c]\n    let sortedNumbers = numbers.sorted()\n    let medianIndex = sortedNumbers.count / 2\n    return Double(sortedNumbers[medianIndex])"
  ]
}
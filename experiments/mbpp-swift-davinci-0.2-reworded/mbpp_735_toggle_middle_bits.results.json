{
  "name": "mbpp_735_toggle_middle_bits",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_735_toggle_middle_bits.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 0\n    var i = 1\n    while i < (n.bitWidth - 1) {\n        mask = mask | (1 << i)\n        i += 1\n    }\n    num = num ^ mask\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp21eyua7e/tmp21eyua7e.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad240d14c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad240a0bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad240a0b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad240a0a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp21eyua7e                        0x0000561e4d246265 <unavailable> + 4709\n5    libc.so.6                          0x00002ad240f00460 __libc_start_main + 245\n6    tmp21eyua7e                        0x0000561e4d245f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111111\n    let first_bit = n & 0b1\n    let last_bit = n & 0b10000000000000000000000000000000\n    let middle_bits = n & mask\n    let middle_bits_toggled = middle_bits ^ mask\n    return first_bit | middle_bits_toggled | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpsjvoj_vg/tmpsjvoj_vg.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6822568c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b682225fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b682225f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b682225e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsjvoj_vg                        0x00005571946b91b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b6822754460 __libc_start_main + 245\n6    tmpsjvoj_vg                        0x00005571946b8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first_bit = num & 1\n    num = num >> 1\n    let last_bit = num & 1\n    num = num >> 1\n    num = num ^ (num >> 1)\n    num = num << 1\n    num = num | first_bit\n    num = num << 1\n    num = num | last_bit\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3jupljnm/tmp3jupljnm.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af61bb64c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af61b85bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af61b85b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af61b85a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3jupljnm                        0x000055a47671d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af61bd50460 __libc_start_main + 245\n6    tmp3jupljnm                        0x000055a47671ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpneysjtul/tmpneysjtul.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6c6f017c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6c6ed0eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6c6ed0e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6c6ed0d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpneysjtul                        0x00005571fd490265 <unavailable> + 4709\n5    libc.so.6                          0x00002b6c6f203460 __libc_start_main + 245\n6    tmpneysjtul                        0x00005571fd48ff19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpw18dnzpb/tmpw18dnzpb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8da3b5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8da3856b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8da3856988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8da38557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw18dnzpb                        0x000055c73f5e71b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8da3d4b460 __libc_start_main + 245\n6    tmpw18dnzpb                        0x000055c73f5e6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    n ^= mask\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpr1ldoaqz/tmpr1ldoaqz.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b660b4ccc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b660b1c3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b660b1c3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b660b1c27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr1ldoaqz                        0x000055d04382b265 <unavailable> + 4709\n5    libc.so.6                          0x00002b660b6b8460 __libc_start_main + 245\n6    tmpr1ldoaqz                        0x000055d04382af19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpgx36b4do/tmpgx36b4do.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad6a18f9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad6a15f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad6a15f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad6a15ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgx36b4do                        0x000055eaf1a861b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ad6a1ae5460 __libc_start_main + 245\n6    tmpgx36b4do                        0x000055eaf1a85e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpaxz2aa4m/tmpaxz2aa4m.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b467ea1bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b467e712b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b467e712988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b467e7117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpaxz2aa4m                        0x0000558991a861b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b467ec07460 __libc_start_main + 245\n6    tmpaxz2aa4m                        0x0000558991a85e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return (n & 0xFFFFFFE) ^ 0x55555554\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpidu1ogzp/tmpidu1ogzp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b20aa176c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b20a9e6db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b20a9e6d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b20a9e6c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpidu1ogzp                        0x000056493b9411b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b20aa362460 __libc_start_main + 245\n6    tmpidu1ogzp                        0x000056493b940e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    num = num ^ (num >> 1)\n    num = num ^ (num >> 2)\n    num = num ^ (num >> 4)\n    num = num ^ (num >> 8)\n    num = num ^ (num >> 16)\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpj46sxu3c/tmpj46sxu3c.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5753c27c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b575391eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b575391e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b575391d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj46sxu3c                        0x000055bcf10021b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5753e13460 __libc_start_main + 245\n6    tmpj46sxu3c                        0x000055bcf1001e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b011111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9esh0jy0/tmp9esh0jy0.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b593acd2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b593a9c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b593a9c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b593a9c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9esh0jy0                        0x000055bff87781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b593aebe460 __libc_start_main + 245\n6    tmp9esh0jy0                        0x000055bff8777e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (first_bit | last_bit))\n    let toggled_middle_bits = middle_bits ^ (mask ^ (first_bit | last_bit))\n    return first_bit | toggled_middle_bits | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpimtdp28b/tmpimtdp28b.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3d86088c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3d85d7fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3d85d7f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3d85d7e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpimtdp28b                        0x0000560a05515265 <unavailable> + 4709\n5    libc.so.6                          0x00002b3d86274460 __libc_start_main + 245\n6    tmpimtdp28b                        0x0000560a05514f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b1111_1111_1111_1111_1111_1111_1111_1110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpuzu_s10a/tmpuzu_s10a.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad93b9c1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad93b6b8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad93b6b8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad93b6b77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzu_s10a                        0x00005632379481b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ad93bbad460 __libc_start_main + 245\n6    tmpuzu_s10a                        0x0000563237947e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 1\n    while mask < num {\n        num = num ^ mask\n        mask = mask << 1\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpn02eaknu/tmpn02eaknu.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b466bc67c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b466b95eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b466b95e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b466b95d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn02eaknu                        0x000055c6f3c481b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b466be53460 __libc_start_main + 245\n6    tmpn02eaknu                        0x000055c6f3c47e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b1111_1111_1111_1111_1111_1111_1111_1111\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpv8ri67u8/tmpv8ri67u8.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac016ba8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac01689fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac01689f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac01689e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv8ri67u8                        0x00005625edb4c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ac016d94460 __libc_start_main + 245\n6    tmpv8ri67u8                        0x00005625edb4be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (0b11111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpor24pdg4/tmpor24pdg4.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b91d5cc9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b91d59c0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b91d59c0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91d59bf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpor24pdg4                        0x000055b7b61331b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b91d5eb5460 __libc_start_main + 245\n6    tmpor24pdg4                        0x000055b7b6132e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111101\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpdpma_88f/tmpdpma_88f.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7051e20c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7051b17b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7051b17988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b7051b167b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdpma_88f                        0x000055e87efd81b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b705200c460 __libc_start_main + 245\n6    tmpdpma_88f                        0x000055e87efd7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var mask = 1\n    var num = n\n    while mask < n {\n        num = num ^ mask\n        mask = mask << 1\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9ejx_stf/tmp9ejx_stf.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5fa7957c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5fa764eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5fa764e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5fa764d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9ejx_stf                        0x0000563ed6d191b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5fa7b43460 __libc_start_main + 245\n6    tmp9ejx_stf                        0x0000563ed6d18e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111111\n    let mask_first_last = 0b1111111111111111111111111111111111111111111111111111111111111111\n    let mask_first = 0b1000000000000000000000000000000000000000000000000000000000000000\n    let mask_last = 0b0000000000000000000000000000000000000000000000000000000000000001\n    let mask_middle = mask_first_last ^ (mask_first | mask_last)\n    return n ^ mask_middle\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmp7c0ovm70.swift:4:9: warning: initialization of immutable value 'mask' was never used; consider replacing with assignment to '_' or removing it\n    let mask = 0b11111111111111111111111111111111\n    ~~~~^~~~\n    _\n/tmp/tmp7c0ovm70.swift:6:22: error: integer literal '9223372036854775808' overflows when stored into 'Int'\n    let mask_first = 0b1000000000000000000000000000000000000000000000000000000000000000\n                     ^\n/tmp/tmp7c0ovm70.swift:5:27: error: integer literal '18446744073709551615' overflows when stored into 'Int'\n    let mask_first_last = 0b1111111111111111111111111111111111111111111111111111111111111111\n                          ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    return n ^ (mask >> 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpneysjtul/tmpneysjtul.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6c6f017c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6c6ed0eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6c6ed0e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6c6ed0d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpneysjtul                        0x00005571fd490265 <unavailable> + 4709\n5    libc.so.6                          0x00002b6c6f203460 __libc_start_main + 245\n6    tmpneysjtul                        0x00005571fd48ff19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1) ^ (1 << 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp_3zoksdi/tmp_3zoksdi.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6078a51c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6078748b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6078748988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b60787477b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_3zoksdi                        0x0000555904f1a326 <unavailable> + 4902\n5    libc.so.6                          0x00002b6078c3d460 __libc_start_main + 245\n6    tmp_3zoksdi                        0x0000555904f19e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let mask2 = (1 << (n.bitWidth - 2)) - 1\n    return n ^ (mask ^ mask2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp8hlxgb0_/tmp8hlxgb0_.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9e07578c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9e0726fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9e0726f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9e0726e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp8hlxgb0_                        0x0000555c5f301265 <unavailable> + 4709\n5    libc.so.6                          0x00002b9e07764460 __libc_start_main + 245\n6    tmp8hlxgb0_                        0x0000555c5f300f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.count_bits() - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmppqei5d5q.swift:4:25: error: value of type 'Int' has no member 'count_bits'\n    let mask = (1 << (n.count_bits() - 2)) - 1\n                      ~ ^~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b01111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpcdm09ry1/tmpcdm09ry1.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3db588ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3db5585b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3db5585988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3db55847b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcdm09ry1                        0x000056417e6501b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b3db5a7a460 __libc_start_main + 245\n6    tmpcdm09ry1                        0x000056417e64fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b011111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9esh0jy0/tmp9esh0jy0.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b593acd2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b593a9c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b593a9c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b593a9c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9esh0jy0                        0x000055bff87781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b593aebe460 __libc_start_main + 245\n6    tmp9esh0jy0                        0x000055bff8777e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpidchksto/tmpidchksto.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b92de73ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b92de435b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b92de435988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b92de4347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpidchksto                        0x000056296fdb9265 <unavailable> + 4709\n5    libc.so.6                          0x00002b92de92a460 __libc_start_main + 245\n6    tmpidchksto                        0x000056296fdb8f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var m = n\n    var i = 1\n    while i < m.bitWidth - 1 {\n        m = m ^ (1 << i)\n        i += 1\n    }\n    return m\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9hcflwd0/tmp9hcflwd0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b18382acc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1837fa3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1837fa3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1837fa27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9hcflwd0                        0x00005595666d3265 <unavailable> + 4709\n5    libc.so.6                          0x00002b1838498460 __libc_start_main + 245\n6    tmp9hcflwd0                        0x00005595666d2f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var left = 1\n    var right = 1\n    while num & left == 0 {\n        left = left << 1\n    }\n    while num & right == 0 {\n        right = right << 1\n    }\n    right = right << 1\n    var mask = left | right\n    mask = mask | (mask - 1)\n    return num ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpuaarvudy/tmpuaarvudy.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cc035bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cc0052b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9cc0052988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9cc00517b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaarvudy                        0x0000558516fe31b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b9cc0547460 __libc_start_main + 245\n6    tmpuaarvudy                        0x0000558516fe2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp_tczv6dw/tmp_tczv6dw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba894883c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba89457ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba89457a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8945797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_tczv6dw                        0x000055b8cb6d51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ba894a6f460 __libc_start_main + 245\n6    tmp_tczv6dw                        0x000055b8cb6d4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (first_bit | last_bit))\n    return first_bit | (middle_bits ^ middle_bits) | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp87t9xuja/tmp87t9xuja.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b330f8eec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b330f5e5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b330f5e5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b330f5e47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp87t9xuja                        0x000055ab048b1265 <unavailable> + 4709\n5    libc.so.6                          0x00002b330fada460 __libc_start_main + 245\n6    tmp87t9xuja                        0x000055ab048b0f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpidchksto/tmpidchksto.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b92de73ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b92de435b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b92de435988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b92de4347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpidchksto                        0x000056296fdb9265 <unavailable> + 4709\n5    libc.so.6                          0x00002b92de92a460 __libc_start_main + 245\n6    tmpidchksto                        0x000056296fdb8f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 0b11\n    var i = 1\n    while num > 0 {\n        if i == 1 || i == 8 {\n            num = num >> 1\n            i += 1\n            continue\n        }\n        num = num ^ mask\n        num = num >> 1\n        i += 1\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp4ctp7n8d/tmp4ctp7n8d.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b936660ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9366305b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9366305988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b93663047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4ctp7n8d                        0x00005630fbb291b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b93667fa460 __libc_start_main + 245\n6    tmp4ctp7n8d                        0x00005630fbb28e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1) ^ (1 << 2) ^ (1 << 3) ^ (1 << 4) ^ (1 << 5) ^ (1 << 6) ^ (1 << 7)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmp3jhp4xel/tmp3jhp4xel.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae3f7026c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae3f6d1db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae3f6d1d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae3f6d1c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3jhp4xel                        0x00005625d81211b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ae3f7212460 __libc_start_main + 245\n6    tmp3jhp4xel                        0x00005625d8120e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth) - 1\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    let middle_bits = n & (mask ^ (first_bit | last_bit))\n    return first_bit | (middle_bits ^ middle_bits) | last_bit\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp87t9xuja/tmp87t9xuja.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b330f8eec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b330f5e5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b330f5e5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b330f5e47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp87t9xuja                        0x000055ab048b1265 <unavailable> + 4709\n5    libc.so.6                          0x00002b330fada460 __libc_start_main + 245\n6    tmp87t9xuja                        0x000055ab048b0f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0xAAAAAAAA\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpuosgfldk/tmpuosgfldk.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b52f67ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b52f64d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b52f64d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b52f64d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuosgfldk                        0x0000556a64d8a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b52f69c9460 __libc_start_main + 245\n6    tmpuosgfldk                        0x0000556a64d89e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    n = n ^ (n & ((1 << (n.bitWidth - 2)) - 1))\n    n = n | first_bit\n    n = n | last_bit\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpfd_liqqp/tmpfd_liqqp.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4a0d84c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4a0a7bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4a0a7b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4a0a7a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfd_liqqp                        0x000055b641ae7265 <unavailable> + 4709\n5    libc.so.6                          0x00002ab4a0f70460 __libc_start_main + 245\n6    tmpfd_liqqp                        0x000055b641ae6f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b01111111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpxz51gysr/tmpxz51gysr.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b357a10bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3579e02b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3579e02988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3579e017b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxz51gysr                        0x0000556332b631b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b357a2f7460 __libc_start_main + 245\n6    tmpxz51gysr                        0x0000556332b62e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp_tczv6dw/tmp_tczv6dw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba894883c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba89457ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba89457a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8945797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_tczv6dw                        0x000055b8cb6d51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ba894a6f460 __libc_start_main + 245\n6    tmp_tczv6dw                        0x000055b8cb6d4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpw18dnzpb/tmpw18dnzpb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8da3b5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8da3856b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8da3856988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8da38557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw18dnzpb                        0x000055c73f5e71b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8da3d4b460 __libc_start_main + 245\n6    tmpw18dnzpb                        0x000055c73f5e6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 1\n    while mask < num {\n        num = num ^ mask\n        mask = mask << 1\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpn02eaknu/tmpn02eaknu.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b466bc67c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b466b95eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b466b95e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b466b95d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn02eaknu                        0x000055c6f3c481b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b466be53460 __libc_start_main + 245\n6    tmpn02eaknu                        0x000055c6f3c47e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b01111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpcdm09ry1/tmpcdm09ry1.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3db588ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3db5585b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3db5585988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3db55847b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcdm09ry1                        0x000056417e6501b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b3db5a7a460 __libc_start_main + 245\n6    tmpcdm09ry1                        0x000056417e64fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    // TODO: Write your solution here\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpg_jxuqdg/tmpg_jxuqdg.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b89f2896c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b89f258db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b89f258d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b89f258c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg_jxuqdg                        0x0000560596b2b1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b89f2a82460 __libc_start_main + 245\n6    tmpg_jxuqdg                        0x0000560596b2ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b011111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9esh0jy0/tmp9esh0jy0.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b593acd2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b593a9c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b593a9c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b593a9c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9esh0jy0                        0x000055bff87781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b593aebe460 __libc_start_main + 245\n6    tmp9esh0jy0                        0x000055bff8777e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b1111_1110_1111_1110_1111_1110_1111_1110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpb0b5my6_/tmpb0b5my6_.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afbe1de5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afbe1adcb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afbe1adc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afbe1adb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpb0b5my6_                        0x000055e022b101b5 <unavailable> + 4533\n5    libc.so.6                          0x00002afbe1fd1460 __libc_start_main + 245\n6    tmpb0b5my6_                        0x000055e022b0fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp_tczv6dw/tmp_tczv6dw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba894883c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba89457ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba89457a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8945797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_tczv6dw                        0x000055b8cb6d51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ba894a6f460 __libc_start_main + 245\n6    tmp_tczv6dw                        0x000055b8cb6d4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111111\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpxifanmxx/tmpxifanmxx.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5be875c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac5be56cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac5be56c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5be56b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxifanmxx                        0x00005633f7bd61b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ac5bea61460 __libc_start_main + 245\n6    tmpxifanmxx                        0x00005633f7bd5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 0b11111111111111111111111111111110\n    num = num & mask\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmp6r592ysd/tmp6r592ysd.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3e3ddb3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3e3daaab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3e3daaa988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3e3daa97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp6r592ysd                        0x000055e5859081b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b3e3df9f460 __libc_start_main + 245\n6    tmp6r592ysd                        0x000055e585907e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmp33cr4w5i.swift:4:16: error: integer literal '12297829382473034410' overflows when stored into 'Int'\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpjuixd3qf/tmpjuixd3qf.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4834a54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b483474bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b483474b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b483474a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjuixd3qf                        0x000055c3502961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b4834c40460 __libc_start_main + 245\n6    tmpjuixd3qf                        0x000055c350295e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpw18dnzpb/tmpw18dnzpb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8da3b5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8da3856b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8da3856988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8da38557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw18dnzpb                        0x000055c73f5e71b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8da3d4b460 __libc_start_main + 245\n6    tmpw18dnzpb                        0x000055c73f5e6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var m = n\n    var i = 0\n    while i < 31 {\n        m = m ^ (1 << i)\n        i = i + 2\n    }\n    return m\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmph0up03_m/tmph0up03_m.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8a527e3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8a524dab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8a524da988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8a524d97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph0up03_m                        0x000056106617f1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8a529cf460 __libc_start_main + 245\n6    tmph0up03_m                        0x000056106617ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return (n ^ 0b11111111111111111111111111111110)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpmzu7uz0z/tmpmzu7uz0z.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b51dac6ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b51da965b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b51da965988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b51da9647b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmzu7uz0z                        0x0000557b083351b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b51dae5a460 __libc_start_main + 245\n6    tmpmzu7uz0z                        0x0000557b08334e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0bn}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmp4vtzyyu_.swift:4:9: warning: initialization of immutable value 'mask' was never used; consider replacing with assignment to '_' or removing it\n    let mask = 0bn    ~~~~^~~~\n    _\n/tmp/tmp4vtzyyu_.swift:4:16: error: integer literal '29326237612518360273324834748083034614499060912302748190148044495166529541481373859169571088204419456439664137440255713356182385415243137741255706666562129531405183291370713192721204491754474266874920968429307133415352886893299285622127397997029678383103' overflows when stored into 'Int'\n    let mask = 0b11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111_11111",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var result = n\n    var i = 1\n    while i < (n.bitWidth - 1) {\n        result = result ^ (1 << i)\n        i += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpzqpco74h/tmpzqpco74h.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ace8e4ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ace8e1f6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ace8e1f6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ace8e1f57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzqpco74h                        0x000056423b61d265 <unavailable> + 4709\n5    libc.so.6                          0x00002ace8e6eb460 __libc_start_main + 245\n6    tmpzqpco74h                        0x000056423b61cf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var mask = 0b11111111111111111111111111111111\n    mask = mask & ~(1 << 0)\n    mask = mask & ~(1 << 31)\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpg689ie20/tmpg689ie20.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23dfde1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b23dfad8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b23dfad8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b23dfad77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpg689ie20                        0x000055df00fe71b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b23dffcd460 __libc_start_main + 245\n6    tmpg689ie20                        0x000055df00fe6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b011111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9esh0jy0/tmp9esh0jy0.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b593acd2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b593a9c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b593a9c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b593a9c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9esh0jy0                        0x000055bff87781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b593aebe460 __libc_start_main + 245\n6    tmp9esh0jy0                        0x000055bff8777e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first_bit = num & 1\n    var last_bit = num & (1 << (sizeof(Int) * 8 - 1))\n    last_bit = last_bit >> (sizeof(Int) * 8 - 2)\n    num = num ^ (num & (num - 1))\n    num = num | (first_bit << (sizeof(Int) * 8 - 1))\n    num = num | (last_bit)\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmpgmcatiw5.swift:6:33: error: cannot find 'sizeof' in scope\n    var last_bit = num & (1 << (sizeof(Int) * 8 - 1))\n                                ^~~~~~\n/tmp/tmpgmcatiw5.swift:7:29: error: cannot find 'sizeof' in scope\n    last_bit = last_bit >> (sizeof(Int) * 8 - 2)\n                            ^~~~~~\n/tmp/tmpgmcatiw5.swift:9:32: error: cannot find 'sizeof' in scope\n    num = num | (first_bit << (sizeof(Int) * 8 - 1))\n                               ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    var mask = 1\n    while mask < num {\n        num = num ^ mask\n        mask = mask << 1\n    }\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpn02eaknu/tmpn02eaknu.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b466bc67c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b466b95eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b466b95e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b466b95d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn02eaknu                        0x000055c6f3c481b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b466be53460 __libc_start_main + 245\n6    tmpn02eaknu                        0x000055c6f3c47e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpi5tferlo/tmpi5tferlo.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b906dfcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b906dcc2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b906dcc2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b906dcc17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi5tferlo                        0x000055c5b69e11b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b906e1b7460 __libc_start_main + 245\n6    tmpi5tferlo                        0x000055c5b69e0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return (n ^ ((1 << (n.bitWidth - 2)) - 1))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmp17ss1v96/tmp17ss1v96.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b92b0b25c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b92b081cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b92b081c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b92b081b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp17ss1v96                        0x000055d5b4329265 <unavailable> + 4709\n5    libc.so.6                          0x00002b92b0d11460 __libc_start_main + 245\n6    tmp17ss1v96                        0x000055d5b4328f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    num = num >> 1\n    num = num << 1\n    num = num | first_bit\n    num = num | last_bit\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpwgh567w5/tmpwgh567w5.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab58b330c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab58b027b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab58b027988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab58b0267b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwgh567w5                        0x000055d15d533265 <unavailable> + 4709\n5    libc.so.6                          0x00002ab58b51c460 __libc_start_main + 245\n6    tmpwgh567w5                        0x000055d15d532f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b011111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9esh0jy0/tmp9esh0jy0.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b593acd2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b593a9c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b593a9c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b593a9c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9esh0jy0                        0x000055bff87781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b593aebe460 __libc_start_main + 245\n6    tmp9esh0jy0                        0x000055bff8777e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ ((1 << (n.bitWidth - 2)) - 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpidchksto/tmpidchksto.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b92de73ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b92de435b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b92de435988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b92de4347b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpidchksto                        0x000056296fdb9265 <unavailable> + 4709\n5    libc.so.6                          0x00002b92de92a460 __libc_start_main + 245\n6    tmpidchksto                        0x000056296fdb8f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpwg_z_lr2/tmpwg_z_lr2.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5a2210ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5a21e05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5a21e05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5a21e047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwg_z_lr2                        0x000055adbbc961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5a222fa460 __libc_start_main + 245\n6    tmpwg_z_lr2                        0x000055adbbc95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpw18dnzpb/tmpw18dnzpb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8da3b5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8da3856b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8da3856988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8da38557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw18dnzpb                        0x000055c73f5e71b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8da3d4b460 __libc_start_main + 245\n6    tmpw18dnzpb                        0x000055c73f5e6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0xAAAAAAAA\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpuosgfldk/tmpuosgfldk.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b52f67ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b52f64d4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b52f64d4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b52f64d37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuosgfldk                        0x0000556a64d8a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b52f69c9460 __libc_start_main + 245\n6    tmpuosgfldk                        0x0000556a64d89e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmp33cr4w5i.swift:4:16: error: integer literal '12297829382473034410' overflows when stored into 'Int'\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp_tczv6dw/tmp_tczv6dw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba894883c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba89457ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba89457a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8945797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_tczv6dw                        0x000055b8cb6d51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ba894a6f460 __libc_start_main + 245\n6    tmp_tczv6dw                        0x000055b8cb6d4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return (n ^ ((1 << (n.bitWidth - 2)) - 1))\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmp17ss1v96/tmp17ss1v96.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b92b0b25c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b92b081cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b92b081c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b92b081b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp17ss1v96                        0x000055d5b4329265 <unavailable> + 4709\n5    libc.so.6                          0x00002b92b0d11460 __libc_start_main + 245\n6    tmp17ss1v96                        0x000055d5b4328f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpw18dnzpb/tmpw18dnzpb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8da3b5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8da3856b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8da3856988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8da38557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpw18dnzpb                        0x000055c73f5e71b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8da3d4b460 __libc_start_main + 245\n6    tmpw18dnzpb                        0x000055c73f5e6e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var n = n\n    let mask = (1 << (n.count - 2)) - 1\n    n ^= mask\n    return n\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmphkqli28z.swift:5:25: error: value of type 'Int' has no member 'count'\n    let mask = (1 << (n.count - 2)) - 1\n                      ~ ^~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b1111111111111111111111111111111111111111111111111111111111111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmpxp5o_pbc.swift:4:16: error: integer literal '18446744073709551614' overflows when stored into 'Int'\n    let mask = 0b1111111111111111111111111111111111111111111111111111111111111110\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp_tczv6dw/tmp_tczv6dw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba894883c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba89457ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba89457a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8945797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_tczv6dw                        0x000055b8cb6d51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ba894a6f460 __libc_start_main + 245\n6    tmp_tczv6dw                        0x000055b8cb6d4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first_bit = n & 1\n    let last_bit = n & (1 << (n.bitWidth - 1))\n    num = num >> 1\n    num = num << 1\n    num = num | first_bit\n    num = num >> 1\n    num = num << 1\n    num = num | last_bit\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmp46r2442z/tmp46r2442z.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b346849bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3468192b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3468192988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b34681917b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46r2442z                        0x000055c00620f265 <unavailable> + 4709\n5    libc.so.6                          0x00002b3468687460 __libc_start_main + 245\n6    tmp46r2442z                        0x000055c00620ef19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b11111111111111111111111111111110\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpaxz2aa4m/tmpaxz2aa4m.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b467ea1bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b467e712b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b467e712988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b467e7117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpaxz2aa4m                        0x0000558991a861b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b467ec07460 __libc_start_main + 245\n6    tmpaxz2aa4m                        0x0000558991a85e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b011111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp9esh0jy0/tmp9esh0jy0.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b593acd2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b593a9c9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b593a9c9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b593a9c87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9esh0jy0                        0x000055bff87781b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b593aebe460 __libc_start_main + 245\n6    tmp9esh0jy0                        0x000055bff8777e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b1010101010101010101010101010101010101010101010101010101010101010\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmpp40mrgmv.swift:4:16: error: integer literal '12297829382473034410' overflows when stored into 'Int'\n    let mask = 0b1010101010101010101010101010101010101010101010101010101010101010\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpjuixd3qf/tmpjuixd3qf.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4834a54c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b483474bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b483474b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b483474a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjuixd3qf                        0x000055c3502961b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b4834c40460 __libc_start_main + 245\n6    tmpjuixd3qf                        0x000055c350295e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b0111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmp9dsvcilp/tmp9dsvcilp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e6de23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e6db1ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e6db1a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e6db197b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9dsvcilp                        0x000055857b4e81b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8e6e00f460 __libc_start_main + 245\n6    tmp9dsvcilp                        0x000055857b4e7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b11111111111111111111111111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmpzjulkidn/tmpzjulkidn.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b077ac08c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b077a8ffb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b077a8ff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b077a8fe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzjulkidn                        0x000055859e74d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b077adf4460 __libc_start_main + 245\n6    tmpzjulkidn                        0x000055859e74ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    var num = n\n    let first_bit = num & 1\n    var last_bit = num & (1 << (sizeof(Int) * 8 - 1))\n    last_bit = last_bit >> (sizeof(Int) * 8 - 1)\n    num = num >> 1\n    num = num << 1\n    num = num | first_bit\n    num = num | (last_bit << (sizeof(Int) * 8 - 1))\n    return num\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "/tmp/tmp54nmirst.swift:6:33: error: cannot find 'sizeof' in scope\n    var last_bit = num & (1 << (sizeof(Int) * 8 - 1))\n                                ^~~~~~\n/tmp/tmp54nmirst.swift:7:29: error: cannot find 'sizeof' in scope\n    last_bit = last_bit >> (sizeof(Int) * 8 - 1)\n                            ^~~~~~\n/tmp/tmp54nmirst.swift:11:31: error: cannot find 'sizeof' in scope\n    num = num | (last_bit << (sizeof(Int) * 8 - 1))\n                              ^~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmp_tczv6dw/tmp_tczv6dw.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba894883c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba89457ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba89457a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba8945797b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_tczv6dw                        0x000055b8cb6d51b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ba894a6f460 __libc_start_main + 245\n6    tmp_tczv6dw                        0x000055b8cb6d4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ (1 << 1) ^ (1 << 2) ^ (1 << 3) ^ (1 << 4) ^ (1 << 5)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpktn02ngj/tmpktn02ngj.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac2aa208c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac2a9effb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac2a9eff988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac2a9efe7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpktn02ngj                        0x000055e81428a1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ac2aa3f4460 __libc_start_main + 245\n6    tmpktn02ngj                        0x000055e814289e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b0111111110\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmp9dsvcilp/tmp9dsvcilp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8e6de23c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8e6db1ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8e6db1a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8e6db197b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9dsvcilp                        0x000055857b4e81b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8e6e00f460 __libc_start_main + 245\n6    tmp9dsvcilp                        0x000055857b4e7e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "/tmp/tmp33cr4w5i.swift:4:16: error: integer literal '12297829382473034410' overflows when stored into 'Int'\n    return n ^ 0b1010101010101010101010101010101010101010101010101010101010101010\n               ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp3dew80yc/tmp3dew80yc.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff8cf8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff89efb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff89ef988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff89ee7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3dew80yc                        0x0000557a8d97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b8ff8ee4460 __libc_start_main + 245\n6    tmp3dew80yc                        0x0000557a8d97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << (n.bitWidth - 2)) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp98ha1vsk/tmp98ha1vsk.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba7c3aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba7c37e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba7c37e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba7c37e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp98ha1vsk                        0x0000561a30ae2265 <unavailable> + 4709\n5    libc.so.6                          0x00002ba7c3cd6460 __libc_start_main + 245\n6    tmp98ha1vsk                        0x0000561a30ae1f19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b10101010101010101010101010101010\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpea_llhkn/tmpea_llhkn.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5100c82c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5100979b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5100979988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b51009787b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpea_llhkn                        0x000055af4a97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5100e6e460 __libc_start_main + 245\n6    tmpea_llhkn                        0x000055af4a97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = (1 << n.bitWidth - 2) - 1\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpxxlj2r80/tmpxxlj2r80.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f46536c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f4622db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0f4622d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0f4622c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxxlj2r80                        0x000056549c8fe265 <unavailable> + 4709\n5    libc.so.6                          0x00002b0f46722460 __libc_start_main + 245\n6    tmpxxlj2r80                        0x000056549c8fdf19 <unavailable> + 3865\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    let mask = 0b10101010101010101010101010101010\n    return n ^ mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122415,
      "stdout": "",
      "stderr": "tmpea_llhkn/tmpea_llhkn.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5100c82c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5100979b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5100979988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b51009787b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpea_llhkn                        0x000055af4a97c1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b5100e6e460 __libc_start_main + 245\n6    tmpea_llhkn                        0x000055af4a97be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b10101010101010101010101010101010\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1665509839,
      "stdout": "",
      "stderr": "tmp46yhuc6k/tmp46yhuc6k.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af2ed49dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af2ed194b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af2ed194988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af2ed1937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp46yhuc6k                        0x000055af15d5d1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002af2ed689460 __libc_start_main + 245\n6    tmp46yhuc6k                        0x000055af15d5ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to toggle bits of the number except the first and the last bit. https://www.geeksforgeeks.org/toggle-bits-number-expect-first-last-bits/\nfunc toggle_middle_bits(n: Int) -> Int {\n    return n ^ 0b111111100\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(toggle_middle_bits(n: 9) == 15)\nassert(toggle_middle_bits(n: 10) == 12)\nassert(toggle_middle_bits(n: 11) == 13)\nassert(toggle_middle_bits(n: 65) == 127)\nassert(toggle_middle_bits(n: 77) == 115)",
      "timestamp": 1666122414,
      "stdout": "",
      "stderr": "tmpgx36b4do/tmpgx36b4do.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad6a18f9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad6a15f0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad6a15f0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad6a15ef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgx36b4do                        0x000055eaf1a861b5 <unavailable> + 4533\n5    libc.so.6                          0x00002ad6a1ae5460 __libc_start_main + 245\n6    tmpgx36b4do                        0x000055eaf1a85e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
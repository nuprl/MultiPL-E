{
  "name": "mbpp_91_find_substring",
  "language": "swift",
  "prompt": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9e07fb1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9e07ca8561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9e07ca8286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9e07ca813c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9e07ca7bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b9e07e02e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b9e07e0785c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b9e07cd4920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b9e0798fb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b9e0798eb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b9e0798fced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b9e0797542d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b9e07973840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b9e07973e70 StringProtocol.contains(_:) + 64\n14   tmpkc6nyw38                        0x00005645625e7d25 <unavailable> + 7461\n15   tmpkc6nyw38                        0x00005645625e78c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b9e0819d460 __libc_start_main + 245\n17   tmpkc6nyw38                        0x00005645625e7309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var is_substring = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            is_substring = true\n        }\n    }\n    return is_substring\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0e00acfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0e007c6561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b0e007c6286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b0e007c613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b0e007c5bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b0e00920e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b0e0092585c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b0e007f2920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b0e004adb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b0e004acb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b0e004adced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b0e0049342d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b0e00491840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b0e00491e70 StringProtocol.contains(_:) + 64\n14   tmph78e4vkr                        0x00005585d8d7ad25 <unavailable> + 7461\n15   tmph78e4vkr                        0x00005585d8d7a8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b0e00cbb460 __libc_start_main + 245\n17   tmph78e4vkr                        0x00005585d8d7a309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6a2ebabc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6a2e8a2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6a2e8a2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6a2e8a213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6a2e8a1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b6a2e9fce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b6a2ea0185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b6a2e8ce920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b6a2e589b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b6a2e588b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b6a2e589ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b6a2e56f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b6a2e56d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b6a2e56de70 StringProtocol.contains(_:) + 64\n14   tmpcaoicw46                        0x00005572f1de5c09 <unavailable> + 7177\n15   tmpcaoicw46                        0x00005572f1de57f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b6a2ed97460 __libc_start_main + 245\n17   tmpcaoicw46                        0x00005572f1de5239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in str1 {\n        if i.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac7585a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac7582a0561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac7582a0286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac7582a013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac75829fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ac7583fae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ac7583ff85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ac7582cc920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ac757f87b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ac757f86b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ac757f87ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ac757f6d42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ac757f6b840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ac757f6be70 StringProtocol.contains(_:) + 64\n14   tmp9u2ibymi                        0x00005625c027bc09 <unavailable> + 7177\n15   tmp9u2ibymi                        0x00005625c027b7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ac758795460 __libc_start_main + 245\n17   tmp9u2ibymi                        0x00005625c027b239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1751275c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1750f6c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1750f6c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b1750f6c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1750f6bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b17510c6e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b17510cb85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b1750f98920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b1750c53b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b1750c52b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b1750c53ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b1750c3942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b1750c37840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b1750c37e70 StringProtocol.contains(_:) + 64\n14   tmpdckq__5w                        0x000055a274610c09 <unavailable> + 7177\n15   tmpdckq__5w                        0x000055a2746107f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b1751461460 __libc_start_main + 245\n17   tmpdckq__5w                        0x000055a274610239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1751275c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1750f6c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1750f6c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b1750f6c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1750f6bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b17510c6e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b17510cb85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b1750f98920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b1750c53b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b1750c52b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b1750c53ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b1750c3942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b1750c37840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b1750c37e70 StringProtocol.contains(_:) + 64\n14   tmpdckq__5w                        0x000055a274610c09 <unavailable> + 7177\n15   tmpdckq__5w                        0x000055a2746107f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b1751461460 __libc_start_main + 245\n17   tmpdckq__5w                        0x000055a274610239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var found = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            found = true\n            break\n        }\n    }\n    return found\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b94fb07ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b94fad71561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b94fad71286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b94fad7113c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b94fad70bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b94faecbe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b94faed085c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b94fad9d920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b94faa58b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b94faa57b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b94faa58ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b94faa3e42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b94faa3c840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b94faa3ce70 StringProtocol.contains(_:) + 64\n14   tmp62e50y4g                        0x0000565221960c09 <unavailable> + 7177\n15   tmp62e50y4g                        0x00005652219607f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b94fb266460 __libc_start_main + 245\n17   tmp62e50y4g                        0x0000565221960239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1751275c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1750f6c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1750f6c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b1750f6c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1750f6bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b17510c6e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b17510cb85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b1750f98920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b1750c53b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b1750c52b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b1750c53ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b1750c3942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b1750c37840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b1750c37e70 StringProtocol.contains(_:) + 64\n14   tmpdckq__5w                        0x000055a274610c09 <unavailable> + 7177\n15   tmpdckq__5w                        0x000055a2746107f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b1751461460 __libc_start_main + 245\n17   tmpdckq__5w                        0x000055a274610239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9e07fb1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9e07ca8561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9e07ca8286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9e07ca813c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9e07ca7bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b9e07e02e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b9e07e0785c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b9e07cd4920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b9e0798fb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b9e0798eb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b9e0798fced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b9e0797542d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b9e07973840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b9e07973e70 StringProtocol.contains(_:) + 64\n14   tmpkc6nyw38                        0x00005645625e7d25 <unavailable> + 7461\n15   tmpkc6nyw38                        0x00005645625e78c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b9e0819d460 __libc_start_main + 245\n17   tmpkc6nyw38                        0x00005645625e7309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var found = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            found = true\n        }\n    }\n    return found\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b46c39a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b46c369d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b46c369d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b46c369d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b46c369cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b46c37f7e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b46c37fc85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b46c36c9920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b46c3385b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b46c3384b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b46c3385ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b46c336b42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b46c3369840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b46c3369e70 StringProtocol.contains(_:) + 64\n14   tmpe5n27oer                        0x000055912ee3bd25 <unavailable> + 7461\n15   tmpe5n27oer                        0x000055912ee3b8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b46c3b92460 __libc_start_main + 245\n17   tmpe5n27oer                        0x000055912ee3b309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var found = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            found = true\n        }\n    }\n    return found\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b46c39a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b46c369d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b46c369d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b46c369d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b46c369cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b46c37f7e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b46c37fc85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b46c36c9920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b46c3385b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b46c3384b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b46c3385ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b46c336b42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b46c3369840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b46c3369e70 StringProtocol.contains(_:) + 64\n14   tmpe5n27oer                        0x000055912ee3bd25 <unavailable> + 7461\n15   tmpe5n27oer                        0x000055912ee3b8c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b46c3b92460 __libc_start_main + 245\n17   tmpe5n27oer                        0x000055912ee3b309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6a2ebabc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6a2e8a2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6a2e8a2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6a2e8a213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6a2e8a1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b6a2e9fce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b6a2ea0185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b6a2e8ce920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b6a2e589b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b6a2e588b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b6a2e589ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b6a2e56f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b6a2e56d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b6a2e56de70 StringProtocol.contains(_:) + 64\n14   tmpcaoicw46                        0x00005572f1de5c09 <unavailable> + 7177\n15   tmpcaoicw46                        0x00005572f1de57f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b6a2ed97460 __libc_start_main + 245\n17   tmpcaoicw46                        0x00005572f1de5239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6a2ebabc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6a2e8a2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6a2e8a2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6a2e8a213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6a2e8a1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b6a2e9fce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b6a2ea0185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b6a2e8ce920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b6a2e589b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b6a2e588b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b6a2e589ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b6a2e56f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b6a2e56d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b6a2e56de70 StringProtocol.contains(_:) + 64\n14   tmpcaoicw46                        0x00005572f1de5c09 <unavailable> + 7177\n15   tmpcaoicw46                        0x00005572f1de57f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b6a2ed97460 __libc_start_main + 245\n17   tmpcaoicw46                        0x00005572f1de5239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var found = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            found = true\n            break\n        }\n    }\n    return found\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b94fb07ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b94fad71561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b94fad71286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b94fad7113c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b94fad70bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b94faecbe40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b94faed085c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b94fad9d920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b94faa58b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b94faa57b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b94faa58ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b94faa3e42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b94faa3c840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b94faa3ce70 StringProtocol.contains(_:) + 64\n14   tmp62e50y4g                        0x0000565221960c09 <unavailable> + 7177\n15   tmp62e50y4g                        0x00005652219607f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b94fb266460 __libc_start_main + 245\n17   tmp62e50y4g                        0x0000565221960239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6a2ebabc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6a2e8a2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6a2e8a2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6a2e8a213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6a2e8a1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b6a2e9fce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b6a2ea0185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b6a2e8ce920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b6a2e589b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b6a2e588b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b6a2e589ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b6a2e56f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b6a2e56d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b6a2e56de70 StringProtocol.contains(_:) + 64\n14   tmpcaoicw46                        0x00005572f1de5c09 <unavailable> + 7177\n15   tmpcaoicw46                        0x00005572f1de57f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b6a2ed97460 __libc_start_main + 245\n17   tmpcaoicw46                        0x00005572f1de5239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result: Bool = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac577417c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac57710e561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac57710e286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac57710e13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac57710dbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ac577268e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ac57726d85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ac57713a920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ac576df6b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ac576df5b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ac576df6ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ac576ddc42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ac576dda840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ac576ddae70 StringProtocol.contains(_:) + 64\n14   tmp7s84acc6                        0x000055a91b12fc09 <unavailable> + 7177\n15   tmp7s84acc6                        0x000055a91b12f7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ac577603460 __libc_start_main + 245\n17   tmp7s84acc6                        0x000055a91b12f239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1751275c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1750f6c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1750f6c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b1750f6c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1750f6bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b17510c6e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b17510cb85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b1750f98920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b1750c53b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b1750c52b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b1750c53ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b1750c3942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b1750c37840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b1750c37e70 StringProtocol.contains(_:) + 64\n14   tmpdckq__5w                        0x000055a274610c09 <unavailable> + 7177\n15   tmpdckq__5w                        0x000055a2746107f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b1751461460 __libc_start_main + 245\n17   tmpdckq__5w                        0x000055a274610239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    \n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b655970fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6559406561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6559406286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b655940613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6559405bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b6559560e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b655956585c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b6559432920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b65590eeb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b65590edb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b65590eeced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b65590d442d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b65590d2840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b65590d2e70 StringProtocol.contains(_:) + 64\n14   tmp_lnbc85w                        0x0000555f8ed94c09 <unavailable> + 7177\n15   tmp_lnbc85w                        0x0000555f8ed947f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b65598fb460 __libc_start_main + 245\n17   tmp_lnbc85w                        0x0000555f8ed94239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1751275c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1750f6c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1750f6c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b1750f6c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1750f6bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b17510c6e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b17510cb85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b1750f98920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b1750c53b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b1750c52b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b1750c53ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b1750c3942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b1750c37840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b1750c37e70 StringProtocol.contains(_:) + 64\n14   tmpdckq__5w                        0x000055a274610c09 <unavailable> + 7177\n15   tmpdckq__5w                        0x000055a2746107f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b1751461460 __libc_start_main + 245\n17   tmpdckq__5w                        0x000055a274610239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9e07fb1c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9e07ca8561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9e07ca8286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9e07ca813c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9e07ca7bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b9e07e02e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b9e07e0785c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b9e07cd4920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b9e0798fb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b9e0798eb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b9e0798fced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b9e0797542d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b9e07973840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b9e07973e70 StringProtocol.contains(_:) + 64\n14   tmpkc6nyw38                        0x00005645625e7d25 <unavailable> + 7461\n15   tmpkc6nyw38                        0x00005645625e78c3 <unavailable> + 6339\n16   libc.so.6                          0x00002b9e0819d460 __libc_start_main + 245\n17   tmpkc6nyw38                        0x00005645625e7309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for i in str1 {\n        if i.contains(sub_str) {\n            result = true\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac7585a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac7582a0561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ac7582a0286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ac7582a013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ac75829fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ac7583fae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ac7583ff85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ac7582cc920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ac757f87b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ac757f86b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ac757f87ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ac757f6d42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ac757f6b840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ac757f6be70 StringProtocol.contains(_:) + 64\n14   tmp9u2ibymi                        0x00005625c027bc09 <unavailable> + 7177\n15   tmp9u2ibymi                        0x00005625c027b7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ac758795460 __libc_start_main + 245\n17   tmp9u2ibymi                        0x00005625c027b239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1751275c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1750f6c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1750f6c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b1750f6c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1750f6bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b17510c6e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b17510cb85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b1750f98920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b1750c53b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b1750c52b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b1750c53ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b1750c3942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b1750c37840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b1750c37e70 StringProtocol.contains(_:) + 64\n14   tmpdckq__5w                        0x000055a274610c09 <unavailable> + 7177\n15   tmpdckq__5w                        0x000055a2746107f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b1751461460 __libc_start_main + 245\n17   tmpdckq__5w                        0x000055a274610239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var is_substring = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            is_substring = true\n        }\n    }\n    return is_substring\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b00ec4ddc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b00ec1d4561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b00ec1d4286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b00ec1d413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b00ec1d3bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b00ec32ee40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b00ec33385c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b00ec200920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b00ebebcb82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b00ebebbb2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b00ebebcced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b00ebea242d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b00ebea0840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b00ebea0e70 StringProtocol.contains(_:) + 64\n14   tmps5cxsqbj                        0x0000558866d55c09 <unavailable> + 7177\n15   tmps5cxsqbj                        0x0000558866d557f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b00ec6c9460 __libc_start_main + 245\n17   tmps5cxsqbj                        0x0000558866d55239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var result = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            result = true\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1751275c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1750f6c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1750f6c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b1750f6c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1750f6bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002b17510c6e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002b17510cb85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002b1750f98920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002b1750c53b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002b1750c52b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002b1750c53ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002b1750c3942d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002b1750c37840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002b1750c37e70 StringProtocol.contains(_:) + 64\n14   tmpdckq__5w                        0x000055a274610c09 <unavailable> + 7177\n15   tmpdckq__5w                        0x000055a2746107f3 <unavailable> + 6131\n16   libc.so.6                          0x00002b1751461460 __libc_start_main + 245\n17   tmpdckq__5w                        0x000055a274610239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    var is_substring = false\n    for str in str1 {\n        if str.contains(sub_str) {\n            is_substring = true\n            break\n        }\n    }\n    return is_substring\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aee04b68c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aee0485f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002aee0485f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002aee0485f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002aee0485ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002aee049b9e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002aee049be85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002aee0488b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002aee04547b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002aee04546b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002aee04547ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002aee0452d42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002aee0452b840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002aee0452be70 StringProtocol.contains(_:) + 64\n14   tmpmdc7z6bb                        0x0000557d125dfc09 <unavailable> + 7177\n15   tmpmdc7z6bb                        0x0000557d125df7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002aee04d54460 __libc_start_main + 245\n17   tmpmdc7z6bb                        0x0000557d125df239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in str1 {\n        if i.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af84ea39c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af84e730561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002af84e730286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002af84e73013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002af84e72fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002af84e88ae40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002af84e88f85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002af84e75c920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002af84e417b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002af84e416b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002af84e417ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002af84e3fd42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002af84e3fb840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002af84e3fbe70 StringProtocol.contains(_:) + 64\n14   tmpvru43o36                        0x000055ef95673bec <unavailable> + 7148\n15   tmpvru43o36                        0x000055ef956737f3 <unavailable> + 6131\n16   libc.so.6                          0x00002af84ec25460 __libc_start_main + 245\n17   tmpvru43o36                        0x000055ef95673239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for i in 0..<str1.count {\n        if str1[i].contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abfdefbbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abfdecb2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abfdecb2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abfdecb213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abfdecb1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002abfdee0ce40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002abfdee1185c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002abfdecde920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002abfde999b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002abfde998b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002abfde999ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002abfde97f42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002abfde97d840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002abfde97de70 StringProtocol.contains(_:) + 64\n14   tmpr16r_vqh                        0x0000565445f53d0b <unavailable> + 7435\n15   tmpr16r_vqh                        0x0000565445f538c3 <unavailable> + 6339\n16   libc.so.6                          0x00002abfdf1a7460 __libc_start_main + 245\n17   tmpr16r_vqh                        0x0000565445f53309 <unavailable> + 4873\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to check if a string is present as a substring in a given array of string values.\nfunc find_substring(str1: [String], sub_str: String) -> Bool {\n    for str in str1 {\n        if str.contains(sub_str) {\n            return true\n        }\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ack\") == true)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"abc\") == false)\nassert(find_substring(str1: [\"red\", \"black\", \"white\", \"green\", \"orange\"], sub_str: \"ange\") == true)",
      "timestamp": 1665510246,
      "stdout": "",
      "stderr": "Swift/Substring.swift:316: Fatal error: String index is out of bounds\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae038128c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae037e1f561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae037e1f286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae037e1f13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae037e1ebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    libswiftCore.so                    0x00002ae037f79e40 Substring.index(_:offsetBy:) + 880\n6    libswiftCore.so                    0x00002ae037f7e85c <unavailable> + 2873436\n7    libswiftCore.so                    0x00002ae037e4b920 Collection.formIndex(_:offsetBy:) + 116\n8    libswift_StringProcessing.so       0x00002ae037b06b82 <unavailable> + 285570\n9    libswift_StringProcessing.so       0x00002ae037b05b2f <unavailable> + 281391\n10   libswift_StringProcessing.so       0x00002ae037b06ced <unavailable> + 285933\n11   libswift_StringProcessing.so       0x00002ae037aec42d <unavailable> + 177197\n12   libswift_StringProcessing.so       0x00002ae037aea840 BidirectionalCollection<>.firstRange<A>(of:) + 1517\n13   libswift_StringProcessing.so       0x00002ae037aeae70 StringProtocol.contains(_:) + 64\n14   tmp5_tzkz77                        0x000056508430dbec <unavailable> + 7148\n15   tmp5_tzkz77                        0x000056508430d7f3 <unavailable> + 6131\n16   libc.so.6                          0x00002ae038314460 __libc_start_main + 245\n17   tmp5_tzkz77                        0x000056508430d239 <unavailable> + 4665\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_74_is_samepatterns",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether it follows the sequence given in the patterns array.\nfunc is_samepatterns(colors: [String], patterns: [String]) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_74_is_samepatterns.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_samepatterns(colors: [\"red\", \"green\", \"green\"], patterns: [\"a\", \"b\", \"b\"]) == true)\nassert(is_samepatterns(colors: [\"red\", \"green\", \"greenn\"], patterns: [\"a\", \"b\", \"b\"]) == false)\nassert(is_samepatterns(colors: [\"red\", \"green\", \"greenn\"], patterns: [\"a\", \"b\"]) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var index = 0\n    var color = colors[index]\n    var pattern = patterns[index]\n    while index < patterns.count {\n        if color == pattern {\n            index += 1\n            if index < patterns.count {\n                color = colors[index]\n                pattern = patterns[index]\n            }\n        } else {\n            return false\n        }\n    }\n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var color_index = 0\n    var pattern_index = 0\n    var color_count = 0\n    var pattern_count = 0\n    \n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n            color_count += 1\n            pattern_count += 1\n        } else {\n            color_index += 1\n            color_count += 1\n        }\n        \n        if color_count == 3 && pattern_count != 2 {\n            return false\n        }\n        \n        if color_count == 3 {\n            color_count = 0\n        }\n        \n        if pattern_count == 2 {\n            pattern_count = 0\n        }\n    }\n    \n    if color_index == colors.count && pattern_index == patterns.count {\n        return true\n    }\n    \n    return false",
    "    var color_index = 0\n    var pattern_index = 0\n    var color_count = 0\n    var pattern_count = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n            color_count = 0\n            pattern_count = 0\n        } else {\n            if color_count == 0 {\n                color_count = 1\n            } else if pattern_count == 0 {\n                pattern_count = 1\n            } else {\n                return false\n            }\n            if color_count == pattern_count {\n                color_index += color_count\n                pattern_index += pattern_count\n                color_count = 0\n                pattern_count = 0\n            } else if color_count > pattern_count {\n                pattern_index += 1\n            } else {\n                color_index += 1\n            }\n        }\n    }\n    if color_index == colors.count && pattern_index == patterns.count {\n        return true\n    }\n    return false",
    "    var index = 0\n    var pattern = patterns[index]\n    var count = 0\n    for color in colors {\n        if color == pattern {\n            count += 1\n        } else {\n            if count == 0 {\n                return false\n            }\n            index += 1\n            if index >= patterns.count {\n                return false\n            }\n            pattern = patterns[index]\n            if color != pattern {\n                return false\n            }\n            count = 1\n        }\n    }\n    return true",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count",
    "    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var aa = 0\n    var bb = 0\n    var cc = 0\n    var dd = 0\n    var ee = 0\n    var ff = 0\n    var gg = 0\n    var hh = 0\n    var ii = 0\n    var jj = 0\n    var kk = 0\n    var ll = 0\n    var mm = 0\n    var nn = 0\n    var oo = 0\n    var pp = 0\n    var qq = 0\n    var rr = 0\n    var ss = 0\n    var tt = 0\n    var uu = 0\n    var vv = 0\n    var ww = 0\n    var xx = 0\n    var yy = 0\n    var zz = 0\n    var aaa = 0\n    var bbb = 0\n    var ccc = 0\n    var ddd = 0\n    var eee = 0\n    var fff = 0\n    var ggg = 0\n    var hhh = 0\n    var iii = 0\n    var jjj = 0\n    var kkk = 0\n    var lll = 0\n    var mmm = 0\n    var nnn = 0\n    var ooo = 0\n    var ppp = 0\n    var qqq = 0\n    var rrr = 0\n    var sss = 0\n    var ttt = 0\n    var uuu = 0\n    var vvv = 0\n    var www = 0\n    var xxx = 0\n    var yyy = 0\n    var zzz = 0\n    var aaaa = 0\n    var bbbb = 0\n    var cccc = 0\n    var dddd = 0\n    var eeee = 0\n    var ffff = 0\n    var ggg",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count",
    "    var i = 0\n    var j = 0\n    while i < colors.count && j < patterns.count {\n        if colors[i] == patterns[j] {\n            i += 1\n            j += 1\n        } else {\n            i += 1\n        }\n    }\n    return j == patterns.count",
    "    var i = 0\n    for pattern in patterns {\n        if pattern == \"R\" {\n            if colors[i] == \"R\" {\n                i += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"G\" {\n            if colors[i] == \"G\" {\n                i += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"B\" {\n            if colors[i] == \"B\" {\n                i += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"Y\" {\n            if colors[i] == \"Y\" {\n                i += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"W\" {\n            if colors[i] == \"W\" {\n                i += 1\n            } else {\n                return false\n            }\n        } else if pattern == \"*\" {\n            i += 1\n        } else {\n            return false\n        }\n    }\n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    var color_count = 0\n    var pattern_count = 0\n    var color_last = \"\"\n    var pattern_last = \"\"\n    \n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == color_last {\n            color_count += 1\n        } else {\n            color_last = colors[color_index]\n            color_count = 1\n        }\n        \n        if patterns[pattern_index] == pattern_last {\n            pattern_count += 1\n        } else {\n            pattern_last = patterns[pattern_index]\n            pattern_count = 1\n        }\n        \n        if color_count != pattern_count {\n            return false\n        }\n        \n        color_index += 1\n        pattern_index += 1\n    }\n    \n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    var color_count = 0\n    var pattern_count = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n            color_count += 1\n        }\n        if color_count > 1 {\n            return false\n        }\n        if pattern_index == patterns.count - 1 {\n            pattern_index = 0\n            pattern_count += 1\n        }\n    }\n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    var color_count = 0\n    var pattern_count = 0\n    var prev_color = \"\"\n    var prev_pattern = \"\"\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == prev_color {\n            color_count += 1\n        } else {\n            color_count = 1\n            prev_color = colors[color_index]\n        }\n        if patterns[pattern_index] == prev_pattern {\n            pattern_count += 1\n        } else {\n            pattern_count = 1\n            prev_pattern = patterns[pattern_index]\n        }\n        if color_count != pattern_count {\n            return false\n        }\n        color_index += 1\n        pattern_index += 1\n    }\n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var i = 0\n    var j = 0\n    var k = 0\n    var l = 0\n    var m = 0\n    var n = 0\n    var o = 0\n    var p = 0\n    var q = 0\n    var r = 0\n    var s = 0\n    var t = 0\n    var u = 0\n    var v = 0\n    var w = 0\n    var x = 0\n    var y = 0\n    var z = 0\n    var a = 0\n    var b = 0\n    var c = 0\n    var d = 0\n    var e = 0\n    var f = 0\n    var g = 0\n    var h = 0\n    var ii = 0\n    var jj = 0\n    var kk = 0\n    var ll = 0\n    var mm = 0\n    var nn = 0\n    var oo = 0\n    var pp = 0\n    var qq = 0\n    var rr = 0\n    var ss = 0\n    var tt = 0\n    var uu = 0\n    var vv = 0\n    var ww = 0\n    var xx = 0\n    var yy = 0\n    var zz = 0\n    var aa = 0\n    var bb = 0\n    var cc = 0\n    var dd = 0\n    var ee = 0\n    var ff = 0\n    var gg = 0\n    var hh = 0\n    var iii = 0\n    var jjj = 0\n    var kkk = 0\n    var lll = 0\n    var mmm = 0\n    var nnn = 0\n    var ooo = 0\n    var ppp = 0\n    var qqq = 0\n    var rrr = 0\n    var sss = 0\n    var ttt = 0\n    var uuu = 0\n    var vvv = 0\n    var www = 0\n    var xxx = 0\n    var yyy = 0\n    var zzz = 0\n    var aaaa = 0\n    var bbbb = 0\n    var cccc = 0\n    var dddd = 0\n    var eeee = 0\n    var ffff = 0\n    var gggg = 0\n    var hhhh",
    "    var index = 0\n    for pattern in patterns {\n        if pattern == \"R\" {\n            if colors[index] != \"R\" {\n                return false\n            }\n        } else if pattern == \"G\" {\n            if colors[index] != \"G\" {\n                return false\n            }\n        } else if pattern == \"B\" {\n            if colors[index] != \"B\" {\n                return false\n            }\n        } else if pattern == \"Y\" {\n            if colors[index] != \"Y\" {\n                return false\n            }\n        } else if pattern == \"*\" {\n            if colors[index] != \"R\" && colors[index] != \"G\" && colors[index] != \"B\" && colors[index] != \"Y\" {\n                return false\n            }\n        } else {\n            return false\n        }\n        index += 1\n    }\n    return true",
    "    var color_index = 0\n    var pattern_index = 0\n    while color_index < colors.count && pattern_index < patterns.count {\n        if colors[color_index] == patterns[pattern_index] {\n            color_index += 1\n            pattern_index += 1\n        } else {\n            color_index += 1\n        }\n    }\n    return pattern_index == patterns.count",
    "    var patterns = patterns\n    var colors = colors\n    var result = true\n    while !patterns.isEmpty {\n        let pattern = patterns.removeFirst()\n        if pattern == \"*\" {\n            continue\n        }\n        if colors.isEmpty {\n            result = false\n            break\n        }\n        let color = colors.removeFirst()\n        if pattern != color {\n            result = false\n            break\n        }\n    }\n    return result"
  ]
}
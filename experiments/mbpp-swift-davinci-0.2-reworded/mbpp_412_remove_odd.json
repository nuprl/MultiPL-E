{
  "name": "mbpp_412_remove_odd",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to remove odd numbers from a given array.\nfunc remove_odd(l: [Int]) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_412_remove_odd.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(remove_odd(l: [1, 2, 3]) == [2])\nassert(remove_odd(l: [2, 4, 6]) == [2, 4, 6])\nassert(remove_odd(l: [10, 20, 3]) == [10, 20])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    var result: [Int] = []\n    for i in l {\n        if i % 2 == 0 {\n            result.append(i)\n        }\n    }\n    return result",
    "    return l.filter { $0 % 2 == 0 }",
    "    return l.filter { $0 % 2 == 0 }",
    "    var result: [Int] = []\n    for i in l {\n        if i % 2 == 0 {\n            result.append(i)\n        }\n    }\n    return result"
  ]
}
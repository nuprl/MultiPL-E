{
  "name": "mbpp_245_max_sum",
  "language": "swift",
  "prompt": "\n/// Write a function that takes an array and finds the maximum sum of a bitonic subsequence for the given array, where a sequence is bitonic if it is first increasing and then decreasing.\nfunc max_sum(arr: [Int]) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_245_max_sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(max_sum(arr: [1, 15, 51, 45, 33, 100, 12, 18, 9]) == 194)\nassert(max_sum(arr: [80, 60, 30, 40, 20, 10]) == 210)\nassert(max_sum(arr: [2, 3, 14, 16, 21, 23, 29, 30]) == 138)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var max_sum = 0\n    var max_sum_left = Array(repeating: 0, count: arr.count)\n    var max_sum_right = Array(repeating: 0, count: arr.count)\n    \n    // find max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(arr[i], arr[i] + max_sum_left[i-1])\n        }\n    }\n    \n    // find max sum from right to left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(arr[i], arr[i] + max_sum_right[i+1])\n        }\n    }\n    \n    // find max sum\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var left = [Int](repeating: 0, count: arr.count)\n    var right = [Int](repeating: 0, count: arr.count)\n    \n    left[0] = arr[0]\n    for i in 1..<arr.count {\n        left[i] = max(arr[i], left[i-1] + arr[i])\n    }\n    \n    right[arr.count-1] = arr[arr.count-1]\n    for i in stride(from: arr.count-2, through: 0, by: -1) {\n        right[i] = max(arr[i], right[i+1] + arr[i])\n    }\n    \n    var max_sum = Int.min\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, left[i] + right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            if sum_arr.count == 0 {\n                sum_arr.append(arr[j])\n                sum += arr[j]\n            } else if sum_arr.last! <= arr[j] {\n                sum_arr.append(arr[j])\n                sum += arr[j]\n            } else {\n                break\n            }\n        }\n        for j in (0..<i).reversed() {\n            if sum_arr.last! <= arr[j] {\n                sum_arr.append(arr[j])\n                sum += arr[j]\n            } else {\n                break\n            }\n        }\n        if sum > max_sum {\n            max_sum = sum\n            max_sum_arr = sum_arr\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max {\n            max = sum\n        }\n    }\n    return max",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum += max(max_sum_left[i], max_sum_right[i]) - arr[i]\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    max_sum_inc[0] = arr[0]\n    max_sum_dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i])\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i])\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else if arr[i] > arr[j] {\n            sum += arr[j]\n            j -= 1\n        } else {\n            max_sum = max(max_sum, sum)\n            sum = 0\n            i += 1\n            j -= 1\n        }\n    }\n    max_sum = max(max_sum, sum)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // find max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n        }\n    }\n    \n    // find max sum from right to left\n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        if i == arr.count-1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n        }\n    }\n    \n    // find max sum\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var maxSumArr = [Int]()\n    \n    for i in 0..<arr.count {\n        var sum = 0\n        var sumArr = [Int]()\n        \n        for j in i..<arr.count {\n            sum += arr[j]\n            sumArr.append(arr[j])\n            \n            if sum > maxSum {\n                maxSum = sum\n                maxSumArr = sumArr\n            }\n        }\n    }\n    \n    print(maxSumArr)\n    \n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(max_sum_ending_here + arr[i], arr[i])\n        max_sum_ending_here_so_far = max(max_sum_ending_here_so_far, max_sum_ending_here)\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here_so_far)\n    }\n    max_sum = max_sum_so_far\n    max_sum_so_far = 0\n    max_sum_ending_here = 0\n    max_sum_ending_here_so_far = 0\n    for i in (0..<arr.count).reversed() {\n        max_sum_ending_here = max(max_sum_ending_here + arr[i], arr[i])\n        max_sum_ending_here_so_far = max(max_sum_ending_here_so_far, max_sum_ending_here)\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here_so_far)\n    }\n    max_sum = max(max_sum, max_sum_so_far)\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    }\n    var max_sum = inc[0] + dec[0] - arr[0]\n    for i in 1..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    let n = arr.count\n    var inc = [Int](repeating: 0, count: n)\n    var dec = [Int](repeating: 0, count: n)\n    inc[0] = arr[0]\n    dec[n-1] = arr[n-1]\n    for i in 1..<n {\n        inc[i] = max(inc[i-1], arr[i])\n    }\n    for i in stride(from: n-2, through: 0, by: -1) {\n        dec[i] = max(dec[i+1], arr[i])\n    }\n    var sum = 0\n    for i in 0..<n {\n        sum = max(sum, inc[i] + dec[i] - arr[i])\n    }\n    return sum",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(maxSumEndingHere + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum = maxSumSoFar\n    maxSumSoFar = 0\n    maxSumEndingHere = 0\n    for i in (0..<arr.count).reversed() {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum += maxSumSoFar\n    return maxSum",
    "    var max_sum = 0\n    var sum = 0\n    \n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_inc[0] = arr[0]\n    max_sum_dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(maxSumEndingHere + arr[i], arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n    }\n    return maxSum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum = max_sum_so_far\n    max_sum_so_far = 0\n    max_sum_ending_here = 0\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum += max_sum_so_far\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum < max_sum_ending_here {\n            max_sum = max_sum_ending_here\n        }\n    }\n    return max_sum",
    "    var maxSum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > maxSum {\n            maxSum = sum\n        }\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // find max sum of increasing sequence from left to right\n    var current_sum = 0\n    for i in 0..<arr.count {\n        current_sum += arr[i]\n        max_sum_left[i] = max(current_sum, arr[i])\n        current_sum = max_sum_left[i]\n    }\n    \n    // find max sum of increasing sequence from right to left\n    current_sum = 0\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        current_sum += arr[i]\n        max_sum_right[i] = max(current_sum, arr[i])\n        current_sum = max_sum_right[i]\n    }\n    \n    // find max sum of bitonic sequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // find max sum of increasing subsequence from left to right\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i])\n            }\n        }\n    }\n    \n    // find max sum of increasing subsequence from right to left\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_right[i] = arr[i]\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i])\n            }\n        }\n    }\n    \n    // find max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var max_sum = Int.min\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var inc = Array(repeating: 0, count: arr.count)\n    var dec = Array(repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    var max_sum = 0\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_inc[0] = arr[0]\n    max_sum_dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_inc[i] = max(max_sum_inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_dec[i] = max(max_sum_dec[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here)\n    }\n    max_sum = max_sum_so_far\n    max_sum_so_far = 0\n    max_sum_ending_here = 0\n    for i in (0..<arr.count).reversed() {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here)\n    }\n    max_sum += max_sum_so_far\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else if arr[i] > arr[j] {\n            sum += arr[j]\n            j -= 1\n        } else {\n            max_sum = max(max_sum, sum)\n            sum = 0\n            i += 1\n            j -= 1\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_inc[i] = arr[i]\n        max_sum_dec[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_inc[i] = max(max_sum_inc[i], max_sum_inc[j] + arr[i])\n            }\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[j] < arr[i] {\n                max_sum_dec[i] = max(max_sum_dec[i], max_sum_dec[j] + arr[i])\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_inc[i] + max_sum_dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max_sum_ending_here + arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    return max_sum_so_far",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        max_sum_arr.append(arr[i])\n        if i > 0 {\n            max_sum_arr[i] = max(max_sum_arr[i], max_sum_arr[i - 1] + arr[i])\n        }\n        max_sum = max(max_sum, max_sum_arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_arr = [Int]()\n    var sum_arr = [Int]()\n    for i in 0..<arr.count {\n        sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = Array(arr[i...j])\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_arr = [Int]()\n    var sum_arr = [Int]()\n    for i in 0..<arr.count {\n        sum = 0\n        sum_arr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var inc = Array(repeating: 0, count: arr.count)\n    var dec = Array(repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(arr[i], inc[i - 1] + arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(arr[i], dec[i + 1] + arr[i])\n    }\n    \n    var maxSum = inc[0] + dec[0] - arr[0]\n    for i in 1..<arr.count {\n        maxSum = max(maxSum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    for i in 0..<arr.count {\n        max_sum_arr.append(arr[i])\n        max_sum_arr_rev.append(arr[i])\n        max_sum_arr_rev_rev.append(arr[i])\n    }\n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i] {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            }\n        }\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] {\n                max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n            }\n        }\n    }\n    for i in 0..<arr.count {\n        max_sum_arr_rev_rev[i] = max_sum_arr_rev[arr.count - 1 - i]\n    }\n    for i in 0..<arr.count {\n        if max_sum < max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i] {\n            max_sum = max_sum_arr[i] + max_sum_arr_rev_rev[i] - arr[i]\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    var max_sum_ending_here_index_so_far = 0\n    var max_sum_ending_here_index_so_far_index = 0\n    var max_sum_ending_here_index_so_far_index_index = 0\n    var max_sum_ending_here_index_index = 0\n    var max_sum_ending_here_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_index_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n    }\n    \n    max_sum_right[arr.count-1] = arr[arr.count-1]\n    for i in (0..<arr.count-1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = Int.min\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        max_sum = max(max_sum, sum)\n        if sum < 0 {\n            sum = 0\n        }\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = max(sum, inc[i] + dec[i])\n    }\n    return sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    var max_sum = inc[0] + dec[0] - arr[0]\n    for i in 1..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum = maxSumSoFar\n    maxSumSoFar = 0\n    maxSumEndingHere = 0\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n    }\n    maxSum += maxSumSoFar\n    return maxSum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    var maxSumEndingHereSoFar = 0\n    var maxSumEndingHereReverse = 0\n    var maxSumEndingHereReverseSoFar = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        maxSumEndingHereSoFar = max(maxSumEndingHere, maxSumEndingHereSoFar)\n        maxSumEndingHereReverse += arr[arr.count - 1 - i]\n        maxSumEndingHereReverseSoFar = max(maxSumEndingHereReverse, maxSumEndingHereReverseSoFar)\n    }\n    maxSum = max(maxSumEndingHereSoFar, maxSumEndingHereReverseSoFar)\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    var maxSumStartingHere = 0\n    var maxSumStartingHereEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n        maxSumStartingHereEndingHere = max(arr[i], maxSumStartingHereEndingHere + arr[i])\n        maxSumStartingHere = max(maxSumStartingHere, maxSumStartingHereEndingHere)\n    }\n    return maxSum - maxSumStartingHere",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n        }\n    }\n    \n    // max sum from right to left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n        }\n    }\n    \n    // max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        max_sum_left[i] = max(max_sum_left[i-1], sum)\n    }\n    \n    sum = 0\n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        max_sum_right[i] = max(max_sum_right[i+1], sum)\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && arr[i] > arr[i-1] {\n            max_sum_left[i] += max_sum_left[i-1]\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        max_sum_right[i] = arr[i]\n        if i < arr.count-1 && arr[i] > arr[i+1] {\n            max_sum_right[i] += max_sum_right[i+1]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    var max_sum_left_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && arr[i] > arr[i-1] {\n            max_sum_left[i] = max_sum_left[i-1] + arr[i]\n        }\n    }\n    \n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        max_sum_right[i] = arr[i]\n        if i < arr.count-1 && arr[i] > arr[i+1] {\n            max_sum_right[i] = max_sum_right[i+1] + arr[i]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i]\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left_right[i])\n    }\n    \n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var max_val = Int.min\n    for i in 0..<arr.count {\n        max_val = max(max_val, inc[i] + dec[i] - arr[i])\n    }\n    \n    return max_val",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from left to right\n    max_sum_left[0] = arr[0]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(arr[i], max_sum_left[i-1] + arr[i])\n    }\n    \n    // max sum from right to left\n    max_sum_right[arr.count-1] = arr[arr.count-1]\n    for i in stride(from: arr.count-2, through: 0, by: -1) {\n        max_sum_right[i] = max(arr[i], max_sum_right[i+1] + arr[i])\n    }\n    \n    // max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(arr[i], max_sum_left[i - 1] + arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(arr[i], max_sum_right[i + 1] + arr[i])\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            if sum_arr.count == 0 {\n                sum_arr.append(arr[j])\n            } else if sum_arr.last! <= arr[j] {\n                sum_arr.append(arr[j])\n            } else {\n                break\n            }\n        }\n        for j in (0..<i).reversed() {\n            if sum_arr.last! <= arr[j] {\n                sum_arr.append(arr[j])\n            } else {\n                break\n            }\n        }\n        sum = sum_arr.reduce(0, +)\n        if sum > max_sum {\n            max_sum = sum\n            max_sum_arr = sum_arr\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else if arr[i] > arr[j] {\n            sum += arr[j]\n            j -= 1\n        } else {\n            max_sum = max(max_sum, sum)\n            sum = 0\n            i += 1\n            j -= 1\n        }\n    }\n    max_sum = max(max_sum, sum)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // calculate max sum left\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n        }\n    }\n    \n    // calculate max sum right\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n        }\n    }\n    \n    // calculate max sum\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var max_sum_left = 0\n        var max_sum_right = 0\n        var j = i - 1\n        while j >= 0 {\n            if arr[j] < arr[j + 1] {\n                max_sum_left += arr[j]\n            }\n            j -= 1\n        }\n        j = i + 1\n        while j < arr.count {\n            if arr[j] < arr[j - 1] {\n                max_sum_right += arr[j]\n            }\n            j += 1\n        }\n        max_sum = max(max_sum, max_sum_left + max_sum_right + arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = Array(arr[i...j])\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    \n    var sum = 0\n    for i in 0..<arr.count {\n        sum += max(inc[i], dec[i])\n    }\n    \n    return sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_so_far_reverse = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_ending_here_reverse += arr[i]\n        if max_sum_ending_here_reverse < 0 {\n            max_sum_ending_here_reverse = 0\n        }\n        if max_sum_so_far_reverse < max_sum_ending_here_reverse {\n            max_sum_so_far_reverse = max_sum_ending_here_reverse\n        }\n    }\n    max_sum = max_sum_so_far + max_sum_so_far_reverse\n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSumSoFar = max(maxSumSoFar, maxSumEndingHere)\n    }\n    maxSum = maxSumSoFar\n    maxSumSoFar = 0\n    maxSumEndingHere = 0\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSumSoFar = max(maxSumSoFar, maxSumEndingHere)\n    }\n    maxSum += maxSumSoFar\n    return maxSum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    // TODO: Implement solution\n    return 0",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n    }\n    \n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum = max(arr[i], sum + arr[i])\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // Find the max sum of increasing subsequence from left to right\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        for j in 0..<i {\n            if arr[j] < arr[i] {\n                max_sum_left[i] = max(max_sum_left[i], max_sum_left[j] + arr[i])\n            }\n        }\n    }\n    \n    // Find the max sum of increasing subsequence from right to left\n    for i in stride(from: arr.count - 1, through: 0, by: -1) {\n        max_sum_right[i] = arr[i]\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[j] < arr[i] {\n                max_sum_right[i] = max(max_sum_right[i], max_sum_right[j] + arr[i])\n            }\n        }\n    }\n    \n    // Find the max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        max_sum = max(max_sum, sum)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_reverse = [Int]()\n    var max_sum_arr_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here)\n    }\n    return max_sum_so_far",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHereNeg = 0\n    var maxSumSoFarNeg = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumSoFar < maxSumEndingHere {\n            maxSumSoFar = maxSumEndingHere\n        }\n        maxSumEndingHereNeg += arr[arr.count - 1 - i]\n        if maxSumEndingHereNeg < 0 {\n            maxSumEndingHereNeg = 0\n        }\n        if maxSumSoFarNeg < maxSumEndingHereNeg {\n            maxSumSoFarNeg = maxSumEndingHereNeg\n        }\n    }\n    maxSum = maxSumSoFar + maxSumSoFarNeg\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_ending_here_reverse_temp = 0\n    var max_sum_ending_here_temp = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here_temp = max_sum_ending_here + arr[i]\n        max_sum_ending_here = max(max_sum_ending_here_temp, arr[i])\n        max_sum_ending_here_reverse_temp = max_sum_ending_here_reverse + arr[arr.count - 1 - i]\n        max_sum_ending_here_reverse = max(max_sum_ending_here_reverse_temp, arr[arr.count - 1 - i])\n        max_sum = max(max_sum, max_sum_ending_here + max_sum_ending_here_reverse - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_so_far_reverse = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n        max_sum_ending_here_reverse += arr[arr.count - i - 1]\n        if max_sum_ending_here_reverse < 0 {\n            max_sum_ending_here_reverse = 0\n        }\n        if max_sum_so_far_reverse < max_sum_ending_here_reverse {\n            max_sum_so_far_reverse = max_sum_ending_here_reverse\n        }\n    }\n    max_sum = max_sum_so_far + max_sum_so_far_reverse\n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    for i in 0..<arr.count {\n        maxSumSoFar += arr[i]\n        if maxSumSoFar < 0 {\n            maxSumSoFar = 0\n        }\n        if maxSum < maxSumSoFar {\n            maxSum = maxSumSoFar\n        }\n    }\n    return maxSum",
    "    var maxSum = 0\n    var maxSumLeft = [Int](repeating: 0, count: arr.count)\n    var maxSumRight = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        maxSumLeft[i] = arr[i]\n        maxSumRight[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && maxSumLeft[i] < maxSumLeft[j] + arr[i] {\n                maxSumLeft[i] = maxSumLeft[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && maxSumRight[i] < maxSumRight[j] + arr[i] {\n                maxSumRight[i] = maxSumRight[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        maxSum = max(maxSum, maxSumLeft[i] + maxSumRight[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var maxSum = 0\n    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        if arr[i] > max {\n            max = arr[i]\n            sum += arr[i]\n        } else {\n            if sum > maxSum {\n                maxSum = sum\n            }\n            sum = 0\n        }\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    \n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else if arr[i] > arr[j] {\n            sum += arr[j]\n            j -= 1\n        } else {\n            maxSum = max(maxSum, sum)\n            sum = 0\n            i += 1\n            j -= 1\n        }\n    }\n    \n    return max(maxSum, sum)",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here)\n    }\n    return max_sum_so_far",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSumSoFar = max(maxSumSoFar, maxSumEndingHere)\n    }\n    maxSum = maxSumSoFar\n    maxSumSoFar = 0\n    maxSumEndingHere = 0\n    for i in (0..<arr.count).reversed() {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSumSoFar = max(maxSumSoFar, maxSumEndingHere)\n    }\n    maxSum = max(maxSum, maxSumSoFar)\n    return maxSum",
    "    var maxSum = 0\n    var maxSumArr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sumArr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sumArr.append(arr[j])\n            if sum > maxSum {\n                maxSum = sum\n                maxSumArr = sumArr\n            }\n        }\n    }\n    print(maxSumArr)\n    return maxSum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    var maxSumEndingHere2 = 0\n    var maxSumSoFar2 = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere += arr[i]\n        maxSumEndingHere2 += arr[arr.count - 1 - i]\n        if maxSumEndingHere < 0 {\n            maxSumEndingHere = 0\n        }\n        if maxSumEndingHere2 < 0 {\n            maxSumEndingHere2 = 0\n        }\n        if maxSumEndingHere > maxSumSoFar {\n            maxSumSoFar = maxSumEndingHere\n        }\n        if maxSumEndingHere2 > maxSumSoFar2 {\n            maxSumSoFar2 = maxSumEndingHere2\n        }\n    }\n    maxSum = maxSumSoFar + maxSumSoFar2\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var maxSumLeft = [Int](repeating: 0, count: arr.count)\n    var maxSumRight = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        maxSumLeft[i] = arr[i]\n        if i > 0 && arr[i] > arr[i - 1] {\n            maxSumLeft[i] = max(maxSumLeft[i], maxSumLeft[i - 1] + arr[i])\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        maxSumRight[i] = arr[i]\n        if i < arr.count - 1 && arr[i] > arr[i + 1] {\n            maxSumRight[i] = max(maxSumRight[i], maxSumRight[i + 1] + arr[i])\n        }\n    }\n    \n    for i in 0..<arr.count {\n        maxSum = max(maxSum, maxSumLeft[i] + maxSumRight[i] - arr[i])\n    }\n    \n    return maxSum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_inc = [Int](repeating: 0, count: arr.count)\n    var max_sum_dec = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_inc[i] = arr[i]\n        max_sum_dec[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_inc[i] < max_sum_inc[j] + arr[i] {\n                max_sum_inc[i] = max_sum_inc[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count-1).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && max_sum_dec[i] < max_sum_dec[j] + arr[i] {\n                max_sum_dec[i] = max_sum_dec[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        if max_sum < max_sum_inc[i] + max_sum_dec[i] - arr[i] {\n            max_sum = max_sum_inc[i] + max_sum_dec[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        for j in i..<arr.count {\n            sum += arr[j]\n            if sum > max_sum {\n                max_sum = sum\n            }\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_ending_here_reverse_temp = 0\n    var max_sum_ending_here_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse_temp_reverse_temp_reverse_temp_reverse_temp_reverse",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var maxSumEndingHere = 0\n    for i in 0..<arr.count {\n        maxSumEndingHere = max(arr[i], maxSumEndingHere + arr[i])\n        maxSum = max(maxSum, maxSumEndingHere)\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        max_sum_so_far = max(max_sum_so_far, max_sum_ending_here)\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum += max(max_sum_left[i], max_sum_right[i]) - arr[i]\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var inc = Array(repeating: 0, count: arr.count)\n    var dec = Array(repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var max_sum = inc[0] + dec[0] - arr[0]\n    for i in 1..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && arr[i] > arr[i-1] {\n            max_sum_left[i] = max_sum_left[i-1] + arr[i]\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        max_sum_right[i] = arr[i]\n        if i < arr.count-1 && arr[i] > arr[i+1] {\n            max_sum_right[i] = max_sum_right[i+1] + arr[i]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    for i in 0..<arr.count {\n        max_sum_arr.append(arr[i])\n        max_sum_arr_rev.append(arr[i])\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_arr[i] < max_sum_arr[j] + arr[i] {\n                max_sum_arr[i] = max_sum_arr[j] + arr[i]\n            }\n        }\n    }\n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        for j in stride(from: arr.count-1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_arr_rev[i] < max_sum_arr_rev[j] + arr[i] {\n                max_sum_arr_rev[i] = max_sum_arr_rev[j] + arr[i]\n            }\n        }\n    }\n    for i in 0..<arr.count {\n        if max_sum < max_sum_arr[i] + max_sum_arr_rev[i] - arr[i] {\n            max_sum = max_sum_arr[i] + max_sum_arr_rev[i] - arr[i]\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    var max_sum_ending_here_index_so_far = 0\n    var max_sum_ending_here_index_so_far_index = 0\n    var max_sum_ending_here_index_so_far_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index = 0\n    var max_sum_ending_here_index_so_far_index_index_index_index_index_index_index_index_index_index_index_index_index",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && arr[i] > arr[i - 1] {\n            max_sum_left[i] += max_sum_left[i - 1]\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        max_sum_right[i] = arr[i]\n        if i < arr.count - 1 && arr[i] > arr[i + 1] {\n            max_sum_right[i] += max_sum_right[i + 1]\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    var maxSumEndingHereSoFar = 0\n    var maxSumEndingHereSoFar2 = 0\n    var maxSumEndingHere2 = 0\n    \n    for i in 0..<arr.count {\n        maxSumEndingHereSoFar = max(maxSumEndingHereSoFar + arr[i], arr[i])\n        maxSumEndingHereSoFar2 = max(maxSumEndingHereSoFar2 + arr[arr.count - 1 - i], arr[arr.count - 1 - i])\n        maxSumEndingHere = max(maxSumEndingHereSoFar, maxSumEndingHere)\n        maxSumEndingHere2 = max(maxSumEndingHereSoFar2, maxSumEndingHere2)\n    }\n    maxSum = max(maxSumEndingHere, maxSumEndingHere2)\n    return maxSum",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        for j in (i + 1)..<arr.count {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = 0\n    while i < arr.count {\n        sum = 0\n        j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        i += 1\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var inc = Array(repeating: 0, count: arr.count)\n    var dec = Array(repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    for i in (0..<arr.count - 1).reversed() {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    var max_sum = 0\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum from left to right\n    for i in 0..<arr.count {\n        if i == 0 {\n            max_sum_left[i] = arr[i]\n        } else {\n            max_sum_left[i] = max(arr[i], max_sum_left[i-1] + arr[i])\n        }\n    }\n    \n    // max sum from right to left\n    for i in (0..<arr.count).reversed() {\n        if i == arr.count - 1 {\n            max_sum_right[i] = arr[i]\n        } else {\n            max_sum_right[i] = max(arr[i], max_sum_right[i+1] + arr[i])\n        }\n    }\n    \n    // max sum\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // find max sum of increasing subsequence from left to right\n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    // find max sum of increasing subsequence from right to left\n    for i in (0..<arr.count).reversed() {\n        max_sum_right[i] = arr[i]\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    // find max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        if max_sum < max_sum_left[i] + max_sum_right[i] - arr[i] {\n            max_sum = max_sum_left[i] + max_sum_right[i] - arr[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n        if sum < 0 {\n            sum = 0\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var prev = arr[0]\n    var is_increasing = true\n    for i in 1..<arr.count {\n        if arr[i] > prev {\n            if !is_increasing {\n                max_sum = max(max_sum, sum)\n                sum = 0\n            }\n            sum += arr[i]\n            is_increasing = true\n        } else {\n            if is_increasing {\n                max_sum = max(max_sum, sum)\n                sum = 0\n            }\n            sum += arr[i]\n            is_increasing = false\n        }\n        prev = arr[i]\n    }\n    max_sum = max(max_sum, sum)\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far = max(max_sum_so_far + arr[i], arr[i])\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far = max(max_sum_so_far + arr[i], arr[i])\n        max_sum = max(max_sum, max_sum_so_far)\n    }\n    return max_sum",
    "    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        if arr[i] > max {\n            max = arr[i]\n            sum += arr[i]\n        }\n    }\n    return sum",
    "    var inc = Array(repeating: 0, count: arr.count)\n    var dec = Array(repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    var max_sum = inc[0] + dec[0] - arr[0]\n    for i in 1..<arr.count {\n        max_sum = max(max_sum, inc[i] + dec[i] - arr[i])\n    }\n    return max_sum",
    "    var dp = Array(repeating: 0, count: arr.count)\n    dp[0] = arr[0]\n    for i in 1..<arr.count {\n        dp[i] = arr[i]\n        for j in 0..<i {\n            if arr[i] > arr[j] {\n                dp[i] = max(dp[i], dp[j] + arr[i])\n            }\n        }\n    }\n    return dp.max()!",
    "    var maxSum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > maxSum {\n            maxSum = sum\n        }\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_so_far = 0\n    var max_sum_ending_here_so_far_index = 0\n    var max_sum_ending_here_index = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        if max_sum_ending_here > max_sum_ending_here_so_far {\n            max_sum_ending_here_so_far = max_sum_ending_here\n            max_sum_ending_here_so_far_index = i\n        }\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n            max_sum_ending_here_index = i + 1\n        }\n    }\n    max_sum_ending_here = 0\n    for i in stride(from: max_sum_ending_here_so_far_index, to: -1, by: -1) {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        if max_sum_ending_here > max_sum_so_far {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum = max_sum_so_far\n    max_sum_so_far = 0\n    max_sum_ending_here = 0\n    for i in stride(from: max_sum_ending_here_index, to: arr.count, by: 1) {\n        max_sum_ending_here = max(arr[i], max_sum_ending_here + arr[i])\n        if max_sum_ending_here > max_sum_so_far {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum = max(max_sum, max_sum_so_far)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    var maxSumEndingHere2 = 0\n    var maxSumSoFar2 = 0\n    var maxSum2 = 0\n    var i = 0\n    var j = arr.count - 1\n    \n    while i < arr.count - 1 {\n        if arr[i] < arr[i + 1] {\n            maxSumEndingHere += arr[i]\n        } else {\n            maxSumEndingHere = 0\n        }\n        if maxSumEndingHere > maxSumSoFar {\n            maxSumSoFar = maxSumEndingHere\n        }\n        i += 1\n    }\n    maxSum = maxSumSoFar\n    \n    while j > 0 {\n        if arr[j] < arr[j - 1] {\n            maxSumEndingHere2 += arr[j]\n        } else {\n            maxSumEndingHere2 = 0\n        }\n        if maxSumEndingHere2 > maxSumSoFar2 {\n            maxSumSoFar2 = maxSumEndingHere2\n        }\n        j -= 1\n    }\n    maxSum2 = maxSumSoFar2\n    \n    return maxSum + maxSum2",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    while i < arr.count {\n        sum += arr[i]\n        if sum > max_sum {\n            max_sum = sum\n        }\n        i += 1\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        if i > 0 && max_sum_left[i-1] > 0 {\n            max_sum_left[i] += max_sum_left[i-1]\n        }\n        max_sum = max(max_sum, max_sum_left[i])\n    }\n    \n    for i in stride(from: arr.count-1, through: 0, by: -1) {\n        max_sum_right[i] = arr[i]\n        if i < arr.count-1 && max_sum_right[i+1] > 0 {\n            max_sum_right[i] += max_sum_right[i+1]\n        }\n        max_sum = max(max_sum, max_sum_right[i])\n    }\n    \n    for i in 1..<arr.count-1 {\n        max_sum = max(max_sum, max_sum_left[i-1] + max_sum_right[i+1])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(arr[i], max_sum_left[i - 1] + arr[i])\n    }\n    \n    for i in (0..<arr.count - 1).reversed() {\n        max_sum_right[i] = max(arr[i], max_sum_right[i + 1] + arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumSoFarReverse = 0\n    var maxSumReverse = 0\n    var maxSumSoFarReverseTemp = 0\n    var maxSumSoFarTemp = 0\n    for i in 0..<arr.count {\n        maxSumSoFarTemp = max(maxSumSoFarTemp + arr[i], arr[i])\n        maxSumSoFar = max(maxSumSoFar, maxSumSoFarTemp)\n        maxSumSoFarReverseTemp = max(maxSumSoFarReverseTemp + arr[arr.count - 1 - i], arr[arr.count - 1 - i])\n        maxSumSoFarReverse = max(maxSumSoFarReverse, maxSumSoFarReverseTemp)\n    }\n    maxSum = maxSumSoFar + maxSumSoFarReverse - arr[arr.count - 1]\n    return maxSum",
    "    var maxSum = 0\n    var maxSumSoFar = 0\n    var maxSumEndingHere = 0\n    var maxSumEndingHereSoFar = 0\n    var maxSumEndingHereSoFarNeg = 0\n    var maxSumEndingHereNeg = 0\n    var maxSumEndingHereNegSoFar = 0\n    var maxSumEndingHereNegSoFarNeg = 0\n    var maxSumEndingHereNegSoFarPos = 0\n    var maxSumEndingHerePos = 0\n    var maxSumEndingHerePosSoFar = 0\n    var maxSumEndingHerePosSoFarPos = 0\n    var maxSumEndingHerePosSoFarNeg = 0\n    var maxSumEndingHereSoFarPos = 0\n    var maxSumEndingHereSoFarNeg = 0\n    var maxSumEndingHereSoFarPosNeg = 0\n    var maxSumEndingHereSoFarNegNeg = 0\n    var maxSumEndingHereSoFarNegPos = 0\n    var maxSumEndingHereSoFarPosPos = 0\n    var maxSumEndingHereSoFarPosNeg = 0\n    var maxSumEndingHereSoFarNegPos = 0\n    var maxSumEndingHereSoFarNegNeg = 0\n    var maxSumEndingHereSoFarPosPos = 0\n    var maxSumEndingHereSoFarPosNegNeg = 0\n    var maxSumEndingHereSoFarNegPosNeg = 0\n    var maxSumEndingHereSoFarNegNegNeg = 0\n    var maxSumEndingHereSoFarPosPosPos = 0\n    var maxSumEndingHereSoFarPosPosNeg = 0\n    var maxSumEndingHereSoFarPosNegPos = 0\n    var maxSumEndingHereSoFarNegPosPos = 0\n    var maxSumEndingHereSoFarNegNegPos = 0\n    var maxSumEndingHereSoFarNegPosNeg = 0\n    var maxSumEndingHereSoFarPosNegNeg = 0\n    var maxSumEndingHereSoFarNegNegNeg = 0\n    var maxSumEndingHereSoFarPosPosPos = 0\n    var maxSumEndingHereSoFarPosPosNegNeg = 0\n    var maxSumEndingHereSoFarPosNegPosNeg = 0\n    var maxSumEnding",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var sum = 0\n    var max = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum > max {\n            max = sum\n        }\n    }\n    return max",
    "    var max_sum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i + 1, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var dp = Array(repeating: 0, count: arr.count)\n    for i in 0..<arr.count {\n        dp[i] = arr[i]\n    }\n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && dp[i] < dp[j] + arr[i] {\n                dp[i] = dp[j] + arr[i]\n            }\n        }\n    }\n    return dp.max()!",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_ending_here_reverse = 0\n    var max_sum_ending_here_reverse_temp = 0\n    var max_sum_ending_here_temp = 0\n    var max_sum_ending_here_reverse_temp_reverse = 0\n    var max_sum_ending_here_temp_reverse = 0\n    var max_sum_ending_here_reverse_temp_reverse_temp = 0\n    var max_sum_ending_here_temp_reverse_temp = 0\n    \n    for i in 0..<arr.count {\n        max_sum_ending_here_temp = max_sum_ending_here + arr[i]\n        max_sum_ending_here_temp_reverse = max_sum_ending_here_reverse + arr[i]\n        max_sum_ending_here_reverse_temp = max_sum_ending_here_reverse + arr[arr.count-1-i]\n        max_sum_ending_here_reverse_temp_reverse = max_sum_ending_here + arr[arr.count-1-i]\n        max_sum_ending_here_reverse_temp_reverse_temp = max_sum_ending_here_reverse_temp + arr[arr.count-1-i]\n        max_sum_ending_here_temp_reverse_temp = max_sum_ending_here_temp + arr[arr.count-1-i]\n        \n        if max_sum_ending_here_temp > max_sum_ending_here {\n            max_sum_ending_here = max_sum_ending_here_temp\n        }\n        if max_sum_ending_here_temp_reverse > max_sum_ending_here_reverse {\n            max_sum_ending_here_reverse = max_sum_ending_here_temp_reverse\n        }\n        if max_sum_ending_here_reverse_temp > max_sum_ending_here_reverse_temp_reverse {\n            max_sum_ending_here_reverse_temp_reverse = max_sum_ending_here_reverse_temp\n        }\n        if max_sum_ending_here_",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_index = 0\n    var max_sum_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index = 0\n    var max_sum_arr_index_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index_arr_index = 0\n    var max_sum_arr_index_arr_index_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index_arr_index_arr_index = 0\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index = 0\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index = 0\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index = 0\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index = 0\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr = [Int]()\n    var max_sum_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_arr_index_",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        for j in stride(from: arr.count - 1, through: i, by: -1) {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var sum = 0\n    var max_sum_arr = [Int]()\n    var sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var sum_arr_rev_rev_rev_rev = [Int]()\n    \n    for i in 0..<arr.count {\n        sum = sum + arr[i]\n        sum_arr.append(sum)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    \n    max_sum_arr = sum_arr\n    \n    sum = 0\n    for i in (0..<arr.count).reversed() {\n        sum = sum + arr[i]\n        sum_arr_rev.append(sum)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    \n    max_sum_arr_rev = sum_arr_rev\n    \n    sum = 0\n    for i in 0..<arr.count {\n        sum = sum + arr[i]\n        sum_arr_rev_rev.append(sum)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    \n    max_sum_arr_rev_rev = sum_arr_rev_rev\n    \n    sum = 0\n    for i in (0..<arr.count).reversed() {\n        sum = sum + arr[i]\n        sum_arr_rev_rev_rev.append(sum)\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    \n    max_sum_arr_rev_rev_rev = sum_arr_rev_rev_",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    // max sum of increasing subsequence from left to right\n    max_sum_left[0] = arr[0]\n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n    }\n    \n    // max sum of increasing subsequence from right to left\n    max_sum_right[arr.count-1] = arr[arr.count-1]\n    for i in (0..<arr.count-1).reversed() {\n        max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n    }\n    \n    // max sum of bitonic subsequence\n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i-1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i+1] + arr[i], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    var max_sum_ending_here = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    return max_sum_so_far",
    "    var maxSum = 0\n    for i in 0..<arr.count {\n        var sum = 0\n        var j = i\n        while j < arr.count {\n            sum += arr[j]\n            j += 1\n        }\n        j = i - 1\n        while j >= 0 {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > maxSum {\n            maxSum = sum\n        }\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(arr[i], max_sum_left[i - 1] + arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(arr[i], max_sum_right[i + 1] + arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_index = [Int]()\n    var max_sum_arr_index_reverse = [Int]()\n    var max_sum_arr_reverse = [Int]()\n    var max_sum_arr_reverse_index = [Int]()\n    var max_sum_arr_reverse_index_reverse = [Int]()\n    var max_sum_arr_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_index = [Int]()\n    var max_sum_arr_reverse_reverse_index_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_index = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_index_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_index = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_index_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_index = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_index_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_index = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_index_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse = [Int]()\n    var max_sum_arr_reverse_reverse_reverse_reverse_reverse_reverse_reverse_index = [Int]()\n    var max_sum_",
    "    var max_sum = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_so_far += arr[i]\n        if max_sum_so_far < 0 {\n            max_sum_so_far = 0\n        }\n        if max_sum < max_sum_so_far {\n            max_sum = max_sum_so_far\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    var max_sum_arr_rev = [Int]()\n    var max_sum_arr_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev_rev = [Int]()\n    var max_sum_arr_rev_",
    "    var max_sum = 0\n    var sum = 0\n    var i = 0\n    var j = arr.count - 1\n    while i < j {\n        if arr[i] < arr[j] {\n            sum += arr[i]\n            i += 1\n        } else {\n            sum += arr[j]\n            j -= 1\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var inc = [Int](repeating: 0, count: arr.count)\n    var dec = [Int](repeating: 0, count: arr.count)\n    \n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1], arr[i])\n    }\n    \n    var sum = 0\n    \n    for i in 0..<arr.count {\n        sum = max(sum, inc[i] + dec[i])\n    }\n    \n    return sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(max_sum_left[i - 1], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        max_sum_right[i] = max(max_sum_right[i + 1], arr[i])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var inc = Array(repeating: 0, count: arr.count)\n    var dec = Array(repeating: 0, count: arr.count)\n    inc[0] = arr[0]\n    dec[arr.count - 1] = arr[arr.count - 1]\n    \n    for i in 1..<arr.count {\n        inc[i] = max(inc[i - 1] + arr[i], arr[i])\n    }\n    \n    for i in stride(from: arr.count - 2, through: 0, by: -1) {\n        dec[i] = max(dec[i + 1] + arr[i], arr[i])\n    }\n    \n    var maxSum = inc[0] + dec[1]\n    for i in 1..<arr.count - 1 {\n        maxSum = max(maxSum, inc[i] + dec[i + 1])\n    }\n    return maxSum",
    "    var max_sum = 0\n    var max_sum_arr = [Int]()\n    for i in 0..<arr.count {\n        var sum = 0\n        var sum_arr = [Int]()\n        for j in i..<arr.count {\n            sum += arr[j]\n            sum_arr.append(arr[j])\n            if sum > max_sum {\n                max_sum = sum\n                max_sum_arr = sum_arr\n            }\n        }\n    }\n    print(max_sum_arr)\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    \n    max_sum_left[0] = arr[0]\n    max_sum_right[arr.count-1] = arr[arr.count-1]\n    \n    for i in 1..<arr.count {\n        max_sum_left[i] = max(arr[i], arr[i] + max_sum_left[i-1])\n    }\n    \n    for i in stride(from: arr.count-2, through: 0, by: -1) {\n        max_sum_right[i] = max(arr[i], arr[i] + max_sum_right[i+1])\n    }\n    \n    for i in 0..<arr.count {\n        max_sum = max(max_sum, max_sum_left[i] + max_sum_right[i] - arr[i])\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var max_sum_ending_here = 0\n    var max_sum_so_far = 0\n    for i in 0..<arr.count {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum = max_sum_so_far\n    max_sum_ending_here = 0\n    max_sum_so_far = 0\n    for i in (0..<arr.count).reversed() {\n        max_sum_ending_here += arr[i]\n        if max_sum_ending_here < 0 {\n            max_sum_ending_here = 0\n        }\n        if max_sum_so_far < max_sum_ending_here {\n            max_sum_so_far = max_sum_ending_here\n        }\n    }\n    max_sum += max_sum_so_far\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum",
    "    var max_sum = 0\n    var max_sum_left = [Int](repeating: 0, count: arr.count)\n    var max_sum_right = [Int](repeating: 0, count: arr.count)\n    var max_sum_left_right = [Int](repeating: 0, count: arr.count)\n    \n    for i in 0..<arr.count {\n        max_sum_left[i] = arr[i]\n        max_sum_right[i] = arr[i]\n        max_sum_left_right[i] = arr[i]\n    }\n    \n    for i in 1..<arr.count {\n        for j in 0..<i {\n            if arr[i] > arr[j] && max_sum_left[i] < max_sum_left[j] + arr[i] {\n                max_sum_left[i] = max_sum_left[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in (0..<arr.count).reversed() {\n        for j in (i+1..<arr.count).reversed() {\n            if arr[i] > arr[j] && max_sum_right[i] < max_sum_right[j] + arr[i] {\n                max_sum_right[i] = max_sum_right[j] + arr[i]\n            }\n        }\n    }\n    \n    for i in 0..<arr.count {\n        max_sum_left_right[i] = max_sum_left[i] + max_sum_right[i] - arr[i]\n        if max_sum < max_sum_left_right[i] {\n            max_sum = max_sum_left_right[i]\n        }\n    }\n    \n    return max_sum",
    "    var max_sum = 0\n    var sum = 0\n    for i in 0..<arr.count {\n        sum += arr[i]\n        if sum < 0 {\n            sum = 0\n        }\n        if sum > max_sum {\n            max_sum = sum\n        }\n    }\n    return max_sum"
  ]
}
{
  "name": "mbpp_745_divisible_by_digits",
  "language": "swift",
  "prompt": "\n/// Write a function to find numbers within a given range from startnum ti endnum where every number is divisible by every digit it contains. https://www.w3resource.com/swiftthon-exercises/lambda/swiftthon-lambda-exercise-24.php\nfunc divisible_by_digits(startnum: Int, endnum: Int) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_745_divisible_by_digits.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(divisible_by_digits(startnum: 1, endnum: 22) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15, 22])\nassert(divisible_by_digits(startnum: 1, endnum: 15) == [1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 15])\nassert(divisible_by_digits(startnum: 20, endnum: 25) == [22, 24])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return (startnum...endnum).filter {\n        var num = $0\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || $0 % digit != 0 {\n                return false\n            }\n            num /= 10\n        }\n        return true\n    }",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    return Array(startnum...endnum).filter { (num) -> Bool in\n        let digits = String(num).compactMap { Int(String($0)) }\n        return digits.allSatisfy { num % $0 == 0 }\n    }",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        if i.digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        let digits = String(i).compactMap { Int(String($0)) }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var digits: [Int] = []\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({i % $0 == 0}).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for num in startnum...endnum {\n        var digits = [Int]()\n        var numCopy = num\n        while numCopy > 0 {\n            digits.append(numCopy % 10)\n            numCopy /= 10\n        }\n        var isDivisible = true\n        for digit in digits {\n            if num % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(num)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var is_divisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for digit in String(i) {\n            if i % Int(String(digit)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits = [Int]()\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({ i % $0 == 0 }).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        let digits = String(i).compactMap { Int(String($0)) }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var flag = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            temp /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for num in startnum...endnum {\n        var digits: [Int] = []\n        var num_copy = num\n        while num_copy > 0 {\n            digits.append(num_copy % 10)\n            num_copy /= 10\n        }\n        if digits.allSatisfy({ num % $0 == 0 }) {\n            result.append(num)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    return (startnum...endnum).filter {\n        $0.digits.allSatisfy { $0.isMultiple(of: $0) }\n    }",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    return Array(startnum...endnum).filter {\n        $0.digits.allSatisfy { $0.isMultiple(of: $0) }\n    }",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var digits = [Int]()\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.allSatisfy({i % $0 == 0}) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var flag = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            num /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var is_divisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        if i.digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        if i.digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var flag = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 {\n                flag = false\n                break\n            }\n            if i % digit != 0 {\n                flag = false\n                break\n            }\n            temp = temp / 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var digits = [Int]()\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        var flag = true\n        for digit in digits {\n            if i % digit != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var divisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                divisible = false\n                break\n            }\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        let digits = String(i).compactMap{Int(String($0))}\n        if digits.allSatisfy({i % $0 == 0}) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var digits = [Int]()\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({i % $0 == 0}).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var temp = i\n        var isDivisible = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 {\n                isDivisible = false\n                break\n            }\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            temp /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        let digits = String(i).compactMap { Int(String($0)) }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        let digits = Array(String(i))\n        for digit in digits {\n            if i % Int(String(digit))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var temp = i\n        while temp > 0 {\n            digits.append(temp % 10)\n            temp /= 10\n        }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var flag = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            num /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    return (startnum...endnum).filter {\n        let digits = String($0).map { Int(String($0))! }\n        return digits.allSatisfy {
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var digits = [Int]()\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({ i % $0 == 0 }).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                is_divisible = false\n                break\n            }\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var divisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                divisible = false\n                break\n            }\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        let digits = Array(String(i)).map { Int(String($0))! }\n        if digits.filter({ i % $0 == 0 }).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        let digits = Array(String(i)).map { Int(String($0))! }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var is_divisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).compactMap { Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                is_divisible = false\n                break\n            }\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).map { Int(String($0))! }\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                divisible = false\n                break\n            }\n            if i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var is_divisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).compactMap { Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var digits = [Int]()\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        var isDivisible = true\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        let digits = String(i).compactMap { Int(String($0)) }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var flag = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            temp /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var digits: [Int] = []\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({ i % $0 == 0 }).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var digits: [Int] = []\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({i % $0 == 0}).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num = num / 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    return (startnum...endnum).filter {\n        var num = $0\n        while num > 0 {\n            if $0 % (num % 10) != 0 {\n                return false\n            }\n            num /= 10\n        }\n        return true\n    }",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        if i % i.digits.reduce(1, *) == 0 {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var number = i\n        var divisible = true\n        while number > 0 {\n            let digit = number % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            number /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.allSatisfy({i % $0 == 0}) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    let range = startnum...endnum\n    return range.filter { (num) -> Bool in\n        let digits = String(num).compactMap { Int(String($0)) }\n        return digits.allSatisfy { num % $0 == 0 }\n    }",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var is_divisible = true\n        for digit in String(i) {\n            if i % Int(String(digit))! != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var isDivisible = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            temp /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for num in startnum...endnum {\n        var num_digits = [Int]()\n        var num_copy = num\n        while num_copy > 0 {\n            num_digits.append(num_copy % 10)\n            num_copy /= 10\n        }\n        if num_digits.allSatisfy({ num % $0 == 0 }) {\n            result.append(num)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        if i.digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in i.digits {\n            if i % j != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var divisible = true\n        for j in i.digits {\n            if i % j != 0 {\n                divisible = false\n                break\n            }\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var is_divisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var flag = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            num /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.allSatisfy({i % $0 == 0}) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).compactMap { Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                is_divisible = false\n                break\n            }\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        var num = i\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var divisible = true\n        let digits = String(i).compactMap { Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                divisible = false\n                break\n            }\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var flag = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 {\n                flag = false\n                break\n            }\n            if i % digit != 0 {\n                flag = false\n                break\n            }\n            temp /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var flag = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            temp /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    let range = startnum...endnum\n    let result = range.filter { (num) -> Bool in\n        let digits = String(num).compactMap { Int(String($0)) }\n        return digits.allSatisfy { num % $0 == 0 }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for digit in String(i) {\n            if i % Int(String(digit)) != 0 {\n                isDivisible = false\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        let digits = String(i).compactMap{Int(String($0))}\n        if digits.allSatisfy({i % $0 == 0}) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        var num = i\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        let digits = String(i).compactMap { Int(String($0)) }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var arr = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in i.digits {\n            if i % j != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            arr.append(i)\n        }\n    }\n    return arr",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var is_divisible = true\n        let digits = String(i).compactMap { Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var number = i\n        var digits: [Int] = []\n        while number > 0 {\n            digits.append(number % 10)\n            number /= 10\n        }\n        if digits.allSatisfy({i % $0 == 0}) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        let digits = String(i).compactMap{Int(String($0))}\n        for digit in digits {\n            if i % digit != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var temp = i\n        var divisible = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            temp /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var temp = i\n        var divisible = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            temp /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).compactMap{ Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var digits = [Int]()\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for num in startnum...endnum {\n        var num_copy = num\n        var digits: [Int] = []\n        while num_copy > 0 {\n            digits.append(num_copy % 10)\n            num_copy /= 10\n        }\n        var is_divisible = true\n        for digit in digits {\n            if num % digit != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            result.append(num)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    return (startnum...endnum).filter { num in\n        let digits = String(num).compactMap { Int(String($0)) }\n        return digits.allSatisfy { num % $0 == 0 }\n    }",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var divisible = true\n        let digits = String(i).compactMap{Int(String($0))}\n        for digit in digits {\n            if i % digit != 0 {\n                divisible = false\n                break\n            }\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                is_divisible = false\n                break\n            }\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var flag = true\n        let num = String(i)\n        for c in num {\n            if i % Int(String(c))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        let digits = Array(String(i))\n        var flag = true\n        for digit in digits {\n            if i % Int(String(digit)) != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var numbers: [Int] = []\n    for i in startnum...endnum {\n        var number = i\n        var digits: [Int] = []\n        while number > 0 {\n            digits.append(number % 10)\n            number = number / 10\n        }\n        var is_divisible = true\n        for digit in digits {\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n        }\n        if is_divisible {\n            numbers.append(i)\n        }\n    }\n    return numbers",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in i.digits {\n            if i % j != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).compactMap { Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var divisible = true\n        for j in i.digits {\n            if i % j != 0 {\n                divisible = false\n                break\n            }\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num = num / 10\n        }\n        var flag = true\n        for j in digits {\n            if i % j != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                is_divisible = false\n                break\n            }\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({i % $0 == 0}).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var digits = [Int]()\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        var flag = true\n        for j in digits {\n            if i % j != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        let digits = String(i).compactMap{ Int(String($0)) }\n        if digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var is_divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                is_divisible = false\n                break\n            }\n            if i % digit != 0 {\n                is_divisible = false\n                break\n            }\n            num /= 10\n        }\n        if is_divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    let result = (startnum...endnum).filter { (num) -> Bool in\n        var num = num\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || num % digit != 0 {\n                return false\n            }\n            num /= 10\n        }\n        return true\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).compactMap { Int(String($0)) }\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    return (startnum...endnum).filter { num in\n        let digits = String(num).compactMap { Int(String($0)) }\n        return digits.allSatisfy { num % $0 == 0 }\n    }",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num = num / 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var divisible = true\n        var num = i\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var number = i\n        var divisible = true\n        while number > 0 {\n            let digit = number % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            number /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        let digits = String(i).compactMap{Int(String($0))}\n        if digits.allSatisfy({i % $0 == 0}) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var flag = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                flag = false\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var number = i\n        while number > 0 {\n            digits.append(number % 10)\n            number /= 10\n        }\n        if digits.filter({ i % $0 == 0 }).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j))! != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 {\n                isDivisible = false\n                break\n            }\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var flag = true\n        let num = String(i)\n        for char in num {\n            if i % Int(String(char))! != 0 {\n                flag = false\n                break\n            }\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var isDivisible = true\n        let digits = String(i).compactMap{Int(String($0))}\n        for digit in digits {\n            if i % digit != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    return (startnum...endnum).filter {\n        var num = $0\n        while num > 0 {\n            if num % 10 == 0 || $0 % (num % 10) != 0 {\n                return false\n            }\n            num /= 10\n        }\n        return true\n    }",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for j in String(i) {\n            if i % Int(String(j)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var num = i\n        var divisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                divisible = false\n                break\n            }\n            num /= 10\n        }\n        if divisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({ i % $0 == 0 }).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var digits: [Int] = []\n        var num = i\n        while num > 0 {\n            digits.append(num % 10)\n            num /= 10\n        }\n        if digits.filter({i % $0 == 0}).count == digits.count {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        if i.digits.allSatisfy({ i % $0 == 0 }) {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var flag = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            temp /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var isDivisible = true\n        for digit in String(i) {\n            if i % Int(String(digit)) != 0 {\n                isDivisible = false\n                break\n            }\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result: [Int] = []\n    for i in startnum...endnum {\n        var num = i\n        var isDivisible = true\n        while num > 0 {\n            let digit = num % 10\n            if digit == 0 || i % digit != 0 {\n                isDivisible = false\n                break\n            }\n            num /= 10\n        }\n        if isDivisible {\n            result.append(i)\n        }\n    }\n    return result",
    "    var result = [Int]()\n    for i in startnum...endnum {\n        var temp = i\n        var flag = true\n        while temp > 0 {\n            let digit = temp % 10\n            if digit == 0 || i % digit != 0 {\n                flag = false\n                break\n            }\n            temp /= 10\n        }\n        if flag {\n            result.append(i)\n        }\n    }\n    return result"
  ]
}
{
  "name": "mbpp_746_sector_area",
  "language": "swift",
  "prompt": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let pi = 3.14159265359\n    return Double(r * r * a) / 360 * pi\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpu1kj7umu/tmpu1kj7umu.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac435d25c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac435a1cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac435a1c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac435a1b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpu1kj7umu                        0x000056531864f26f <unavailable> + 4719\n5    libc.so.6                          0x00002ac435f11460 __libc_start_main + 245\n6    tmpu1kj7umu                        0x000056531864ee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi4m_2xho/tmpi4m_2xho.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afaef60cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afaef303b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afaef303988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afaef3027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4m_2xho                        0x000055e10a0162ff <unavailable> + 4863\n5    libc.so.6                          0x00002afaef7f8460 __libc_start_main + 245\n6    tmpi4m_2xho                        0x000055e10a015ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * Double.pi / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r) * Double(a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr5zgao1h/tmpr5zgao1h.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8f4c6a8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8f4c39fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8f4c39f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8f4c39e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr5zgao1h                        0x000055bc81cba26f <unavailable> + 4719\n5    libc.so.6                          0x00002b8f4c894460 __libc_start_main + 245\n6    tmpr5zgao1h                        0x000055bc81cb9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi4m_2xho/tmpi4m_2xho.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afaef60cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afaef303b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afaef303988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afaef3027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4m_2xho                        0x000055e10a0162ff <unavailable> + 4863\n5    libc.so.6                          0x00002afaef7f8460 __libc_start_main + 245\n6    tmpi4m_2xho                        0x000055e10a015ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let pi = 3.14\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpab1v1u6q/tmpab1v1u6q.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3666236c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3665f2db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3665f2d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3665f2c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpab1v1u6q                        0x00005643bbd3926f <unavailable> + 4719\n5    libc.so.6                          0x00002b3666422460 __libc_start_main + 245\n6    tmpab1v1u6q                        0x00005643bbd38e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi4m_2xho/tmpi4m_2xho.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afaef60cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afaef303b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afaef303988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afaef3027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4m_2xho                        0x000055e10a0162ff <unavailable> + 4863\n5    libc.so.6                          0x00002afaef7f8460 __libc_start_main + 245\n6    tmpi4m_2xho                        0x000055e10a015ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi4m_2xho/tmpi4m_2xho.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afaef60cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afaef303b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afaef303988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afaef3027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4m_2xho                        0x000055e10a0162ff <unavailable> + 4863\n5    libc.so.6                          0x00002afaef7f8460 __libc_start_main + 245\n6    tmpi4m_2xho                        0x000055e10a015ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpkli5_k3x/tmpkli5_k3x.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b2ace0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b2a9d7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4b2a9d7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4b2a9d67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkli5_k3x                        0x0000559a2a6da26f <unavailable> + 4719\n5    libc.so.6                          0x00002b4b2aecc460 __libc_start_main + 245\n6    tmpkli5_k3x                        0x0000559a2a6d9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp245f5j4u/tmp245f5j4u.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4f3d070c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4f3cd67b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4f3cd67988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4f3cd667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp245f5j4u                        0x000055818664026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4f3d25c460 __libc_start_main + 245\n6    tmp245f5j4u                        0x000055818663fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r*r*a)/360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpxg77b_6w/tmpxg77b_6w.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b697c89dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b697c594b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b697c594988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b697c5937b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxg77b_6w                        0x000055c82475926f <unavailable> + 4719\n5    libc.so.6                          0x00002b697ca89460 __libc_start_main + 245\n6    tmpxg77b_6w                        0x000055c824758e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi4m_2xho/tmpi4m_2xho.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afaef60cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afaef303b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afaef303988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afaef3027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4m_2xho                        0x000055e10a0162ff <unavailable> + 4863\n5    libc.so.6                          0x00002afaef7f8460 __libc_start_main + 245\n6    tmpi4m_2xho                        0x000055e10a015ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpmip2zxrc/tmpmip2zxrc.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4342fc7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4342cbeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4342cbe988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4342cbd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmip2zxrc                        0x00005560b2fcf26f <unavailable> + 4719\n5    libc.so.6                          0x00002b43431b3460 __libc_start_main + 245\n6    tmpmip2zxrc                        0x00005560b2fcee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    } else {\n        return Double(r * r * a) / 2\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmput9u_va6/tmput9u_va6.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3a66898c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3a6658fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3a6658f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3a6658e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmput9u_va6                        0x0000556542c0626f <unavailable> + 4719\n5    libc.so.6                          0x00002b3a66a84460 __libc_start_main + 245\n6    tmput9u_va6                        0x0000556542c05e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 2\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp28y472al/tmp28y472al.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9d7f67ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9d7f371b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9d7f371988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9d7f3707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp28y472al                        0x0000561175b5026f <unavailable> + 4719\n5    libc.so.6                          0x00002b9d7f866460 __libc_start_main + 245\n6    tmp28y472al                        0x0000561175b4fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpmip2zxrc/tmpmip2zxrc.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4342fc7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4342cbeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4342cbe988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4342cbd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmip2zxrc                        0x00005560b2fcf26f <unavailable> + 4719\n5    libc.so.6                          0x00002b43431b3460 __libc_start_main + 245\n6    tmpmip2zxrc                        0x00005560b2fcee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a / 360)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi4m_2xho/tmpi4m_2xho.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afaef60cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afaef303b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afaef303988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afaef3027b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi4m_2xho                        0x000055e10a0162ff <unavailable> + 4863\n5    libc.so.6                          0x00002afaef7f8460 __libc_start_main + 245\n6    tmpi4m_2xho                        0x000055e10a015ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r * r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpzs6it727/tmpzs6it727.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b59dbc0ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b59db905b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b59db905988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b59db9047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzs6it727                        0x0000563d039cf26f <unavailable> + 4719\n5    libc.so.6                          0x00002b59dbdfa460 __libc_start_main + 245\n6    tmpzs6it727                        0x0000563d039cee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r * r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp7i99ze97/tmp7i99ze97.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab09b23fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab09af36b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab09af36988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab09af357b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7i99ze97                        0x000055e90f46b26f <unavailable> + 4719\n5    libc.so.6                          0x00002ab09b42b460 __libc_start_main + 245\n6    tmp7i99ze97                        0x000055e90f46ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpkli5_k3x/tmpkli5_k3x.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b2ace0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b2a9d7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4b2a9d7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4b2a9d67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkli5_k3x                        0x0000559a2a6da26f <unavailable> + 4719\n5    libc.so.6                          0x00002b4b2aecc460 __libc_start_main + 245\n6    tmpkli5_k3x                        0x0000559a2a6d9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp43e2bjtm/tmp43e2bjtm.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aede78bdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aede75b4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aede75b4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aede75b37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp43e2bjtm                        0x000055bab3dfe26f <unavailable> + 4719\n5    libc.so.6                          0x00002aede7aa9460 __libc_start_main + 245\n6    tmp43e2bjtm                        0x000055bab3dfde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp245f5j4u/tmp245f5j4u.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4f3d070c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4f3cd67b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4f3cd67988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4f3cd667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp245f5j4u                        0x000055818664026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4f3d25c460 __libc_start_main + 245\n6    tmp245f5j4u                        0x000055818663fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) / 360 * Double.pi * Double(r * r)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r * r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp7i99ze97/tmp7i99ze97.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab09b23fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab09af36b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab09af36988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab09af357b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7i99ze97                        0x000055e90f46b26f <unavailable> + 4719\n5    libc.so.6                          0x00002ab09b42b460 __libc_start_main + 245\n6    tmp7i99ze97                        0x000055e90f46ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpr7hzj7i4/tmpr7hzj7i4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad020bcbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad0208c2b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad0208c2988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad0208c17b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpr7hzj7i4                        0x0000557890d7c26f <unavailable> + 4719\n5    libc.so.6                          0x00002ad020db7460 __libc_start_main + 245\n6    tmpr7hzj7i4                        0x0000557890d7be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return (Double(a) / 360.0) * Double(r) * Double(r) * Double.pi\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp245f5j4u/tmp245f5j4u.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4f3d070c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4f3cd67b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4f3cd67988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4f3cd667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp245f5j4u                        0x000055818664026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4f3d25c460 __libc_start_main + 245\n6    tmp245f5j4u                        0x000055818663fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp245f5j4u/tmp245f5j4u.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4f3d070c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4f3cd67b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4f3cd67988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4f3cd667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp245f5j4u                        0x000055818664026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4f3d25c460 __libc_start_main + 245\n6    tmp245f5j4u                        0x000055818663fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) * 0.5\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpi8bv0niv/tmpi8bv0niv.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad888843c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad88853ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad88853a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad8885397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi8bv0niv                        0x0000557d5c03526f <unavailable> + 4719\n5    libc.so.6                          0x00002ad888a2f460 __libc_start_main + 245\n6    tmpi8bv0niv                        0x0000557d5c034e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 2\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp28y472al/tmp28y472al.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9d7f67ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9d7f371b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9d7f371988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b9d7f3707b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp28y472al                        0x0000561175b5026f <unavailable> + 4719\n5    libc.so.6                          0x00002b9d7f866460 __libc_start_main + 245\n6    tmp28y472al                        0x0000561175b4fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    let area = Double(r * r * a) / 360\n    return area\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpmip2zxrc/tmpmip2zxrc.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4342fc7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4342cbeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4342cbe988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4342cbd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmip2zxrc                        0x00005560b2fcf26f <unavailable> + 4719\n5    libc.so.6                          0x00002b43431b3460 __libc_start_main + 245\n6    tmpmip2zxrc                        0x00005560b2fcee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpkli5_k3x/tmpkli5_k3x.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4b2ace0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4b2a9d7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4b2a9d7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4b2a9d67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpkli5_k3x                        0x0000559a2a6da26f <unavailable> + 4719\n5    libc.so.6                          0x00002b4b2aecc460 __libc_start_main + 245\n6    tmpkli5_k3x                        0x0000559a2a6d9e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmp245f5j4u/tmp245f5j4u.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4f3d070c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4f3cd67b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4f3cd67988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4f3cd667b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp245f5j4u                        0x000055818664026f <unavailable> + 4719\n5    libc.so.6                          0x00002b4f3d25c460 __libc_start_main + 245\n6    tmp245f5j4u                        0x000055818663fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmpvnkcnpvp/tmpvnkcnpvp.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b14192b6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1418fadb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1418fad988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1418fac7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvnkcnpvp                        0x00005598bbece26f <unavailable> + 4719\n5    libc.so.6                          0x00002b14194a2460 __libc_start_main + 245\n6    tmpvnkcnpvp                        0x00005598bbecde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(r * r * a) / 360.0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1665517225,
      "stdout": "",
      "stderr": "tmppcm2x90q/tmppcm2x90q.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b091ce75c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b091cb6cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b091cb6c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b091cb6b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppcm2x90q                        0x000055749dde526f <unavailable> + 4719\n5    libc.so.6                          0x00002b091d061460 __libc_start_main + 245\n6    tmppcm2x90q                        0x000055749dde4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    }\n    return Double(a) * Double(r) * Double(r) / 360\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpjsbya3xt/tmpjsbya3xt.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b668879ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6688491b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6688491988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b66884907b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjsbya3xt                        0x0000556d234c426f <unavailable> + 4719\n5    libc.so.6                          0x00002b6688986460 __libc_start_main + 245\n6    tmpjsbya3xt                        0x0000556d234c3e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return nil if the angle is larger than 360 degrees.\nfunc sector_area(r: Int, a: Int) -> Double? {\n    if a > 360 {\n        return nil\n    } else {\n        return Double(r * r * a) / 360\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sector_area(r: 4, a: 45) == 6.283185307179586)\nassert(sector_area(r: 9, a: 45) == 31.808625617596654)\nassert(sector_area(r: 9, a: 361) == nil)",
      "timestamp": 1666122497,
      "stdout": "",
      "stderr": "tmpayx_ji2_/tmpayx_ji2_.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b58dfc2ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b58df925b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b58df925988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b58df9247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpayx_ji2_                        0x000056339c78a26f <unavailable> + 4719\n5    libc.so.6                          0x00002b58dfe1a460 __libc_start_main + 245\n6    tmpayx_ji2_                        0x000056339c789e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
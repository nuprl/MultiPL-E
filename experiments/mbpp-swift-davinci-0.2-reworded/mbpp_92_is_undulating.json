{
  "name": "mbpp_92_is_undulating",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether the given number is undulating or not.\nfunc is_undulating(n: Int) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_92_is_undulating.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_undulating(n: 1212121) == true)\nassert(is_undulating(n: 1991) == false)\nassert(is_undulating(n: 121) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 1 {\n        if digits[i] == digits[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        last_digit = digit\n        n /= 10\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var str = String(n)\n    var i = 0\n    while i < str.count - 1 {\n        if str[i] == str[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && last_digit < current_digit {\n            return false\n        }\n        if !is_increasing && last_digit > current_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var current_digit = 0\n    var is_increasing = true\n    while n > 0 {\n        n /= 10\n        current_digit = n % 10\n        if current_digit == last_digit {\n            return false\n        }\n        if is_increasing && current_digit > last_digit {\n            return false\n        }\n        if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n        last_digit = current_digit\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let a = s.map { Int(String($0))! }\n    let b = zip(a, a.dropFirst())\n    return b.allSatisfy { $0.0 != $1.0 }",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if last_digit == current_digit {\n            return false\n        }\n        if is_increasing && last_digit < current_digit {\n            return false\n        }\n        if !is_increasing && last_digit > current_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let digits = n.digits()\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing && digit > last_digit {\n            return false\n        } else if !is_increasing && digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    var current = n % 10\n    n /= 10\n    while n > 0 {\n        if last == current {\n            return false\n        }\n        last = current\n        current = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    let digits = n.digits\n    var last_digit = digits[0]\n    var is_increasing = true\n    for digit in digits[1..<digits.count] {\n        if digit == last_digit {\n            return false\n        }\n        if is_increasing {\n            if digit < last_digit {\n                is_increasing = false\n            }\n        } else {\n            if digit > last_digit {\n                return false\n            }\n        }\n        last_digit = digit\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var is_undulating = true\n    while n > 0 {\n        n /= 10\n        let digit = n % 10\n        if last_digit == digit {\n            is_undulating = false\n            break\n        }\n        last_digit = digit\n    }\n    return is_undulating",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if prev_digit == curr_digit {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = n.digits()\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        last_digit = digit\n        is_increasing = !is_increasing\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if increasing && current_digit > last_digit {\n            return false\n        }\n        if !increasing && current_digit < last_digit {\n            return false\n        }\n        increasing = !increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    return false",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev != curr {\n            n /= 10\n            prev = curr\n            continue\n        }\n        let next = n / 10 % 10\n        if prev != next {\n            n /= 10\n            prev = next\n            continue\n        }\n        return false\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_undulating = true\n    for i in 0..<digits.count - 1 {\n        if digits[i] == digits[i + 1] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    var is_increasing = prev_digit > curr_digit\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if prev_digit < curr_digit {\n                return false\n            }\n        } else {\n            if prev_digit > curr_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    digits.reverse()\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    var current = n % 10\n    n /= 10\n    while n > 0 {\n        if last == current {\n            return false\n        }\n        last = current\n        current = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_odd = true\n    for i in 0..<digits.count-1 {\n        if is_odd && digits[i] > digits[i+1] {\n            return false\n        }\n        if !is_odd && digits[i] < digits[i+1] {\n            return false\n        }\n        is_odd = !is_odd\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    digits.reverse()\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 1] || digits[i + 1] == digits[i + 2] {\n            return false\n        }\n    }\n    return true",
    "    return false",
    "    var n = n\n    var last_digit = n % 10\n    var is_increasing = true\n    while n > 0 {\n        n /= 10\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n    }\n    return true",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    var current = n % 10\n    n /= 10\n    while n > 0 {\n        if last == current {\n            return false\n        }\n        last = current\n        current = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        }\n        if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if current_digit == last_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_undulating = true\n    for i in 1..<digits.count - 1 {\n        if digits[i - 1] == digits[i + 1] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        } else if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit > second_last_digit\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > second_last_digit {\n                return false\n            }\n        } else {\n            if digit < second_last_digit {\n                return false\n            }\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if current_digit > last_digit {\n                return false\n            }\n        } else {\n            if current_digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let c = s.characters\n    var i = 0\n    while i < c.count - 2 {\n        if c[i] == c[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).compactMap { Int(String($0)) }\n    var is_increasing = true\n    var is_decreasing = true\n    for i in 0..<digits.count - 1 {\n        if digits[i] < digits[i + 1] {\n            is_decreasing = false\n        }\n        if digits[i] > digits[i + 1] {\n            is_increasing = false\n        }\n    }\n    return is_increasing || is_decreasing",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let c = s.characters\n    for i in 0..<c.count-2 {\n        if c[i] == c[i+2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = (last_digit < current_digit)\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if last_digit < current_digit {\n                return false\n            }\n        } else {\n            if last_digit > current_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        n /= 10\n        last_digit = second_last_digit\n        second_last_digit = digit\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    var is_increasing = curr_digit > prev_digit\n    while n > 0 {\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if curr_digit > prev_digit {\n                return false\n            }\n        } else {\n            if curr_digit < prev_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        }\n        if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let d = n % 10\n        if is_increasing {\n            if d > last {\n                return false\n            }\n        } else {\n            if d < last {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last = d\n        n /= 10\n    }\n    return true",
    "    var s = String(n)\n    var i = 0\n    while i < s.count - 2 {\n        let a = s[s.index(s.startIndex, offsetBy: i)]\n        let b = s[s.index(s.startIndex, offsetBy: i + 1)]\n        let c = s[s.index(s.startIndex, offsetBy: i + 2)]\n        if a == c {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    var is_increasing = last_digit > second_last_digit\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        is_increasing = !is_increasing\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] != digits[i+2] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    var last_digit = -1\n    var last_digit_was_odd = false\n    for c in s {\n        let digit = Int(String(c))!\n        if last_digit != -1 {\n            if last_digit_was_odd && digit % 2 == 0 {\n                return false\n            }\n            if !last_digit_was_odd && digit % 2 == 1 {\n                return false\n            }\n        }\n        last_digit = digit\n        last_digit_was_odd = digit % 2 == 1\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = n.digits\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit && digit != second_last_digit {\n            return false\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    while n > 0 {\n        if last_digit == second_last_digit {\n            return false\n        }\n        n /= 10\n        second_last_digit = last_digit\n        last_digit = n % 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 1] {\n            return false\n        }\n        i += 2\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var previous = digits[0]\n    var is_increasing = true\n    for digit in digits[1..<digits.count] {\n        if digit == previous {\n            return false\n        }\n        if digit < previous && is_increasing {\n            is_increasing = false\n        } else if digit > previous && !is_increasing {\n            return false\n        }\n        previous = digit\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if prev_digit == curr_digit {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit != next_digit {\n            return false\n        }\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 1] {\n            return false\n        }\n        i += 2\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        }\n        if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_undulating = true\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 1] || digits[i + 1] == digits[i + 2] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var previous_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == previous_digit {\n            return false\n        }\n        previous_digit = digit\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if curr == prev {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_ascending = true\n    while n > 0 {\n        let digit = n % 10\n        if is_ascending {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_ascending = !is_ascending\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] < digits[i - 1] {\n                is_increasing = false\n            }\n        } else {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        }\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing {\n            if current_digit > last_digit {\n                return false\n            }\n        } else {\n            if current_digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var lastDigit = n % 10\n    n /= 10\n    var secondLastDigit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != lastDigit && digit != secondLastDigit {\n            return false\n        }\n        secondLastDigit = lastDigit\n        lastDigit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        last_digit = next_digit\n        n /= 10\n        next_digit = n % 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var str = String(n)\n    var is_undulating = true\n    var i = 0\n    while i < str.count - 1 {\n        if str[i] == str[i + 1] {\n            is_undulating = false\n            break\n        }\n        i += 1\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if last_digit == digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_increasing = true\n    for i in 0..<digits.count - 1 {\n        if is_increasing {\n            if digits[i] > digits[i + 1] {\n                is_increasing = false\n            } else {\n                return false\n            }\n        } else {\n            if digits[i] < digits[i + 1] {\n                is_increasing = true\n            } else {\n                return false\n            }\n        }\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing && digit > last_digit {\n            return false\n        }\n        if !is_increasing && digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var prev = 0\n    var curr = 0\n    var next = 0\n    var is_undulating = false\n    for i in 0..<digits.count {\n        prev = curr\n        curr = next\n        next = digits[i]\n        if prev == next {\n            is_undulating = true\n        } else if prev != 0 && next != 0 && prev != next {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_increasing = true\n    var is_decreasing = true\n    for i in 1..<digits.count {\n        if digits[i] > digits[i-1] {\n            is_decreasing = false\n        } else if digits[i] < digits[i-1] {\n            is_increasing = false\n        }\n    }\n    return is_increasing || is_decreasing",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && last_digit < current_digit {\n            return false\n        } else if !is_increasing && last_digit > current_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_undulating = false\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        is_undulating = !is_undulating\n        last_digit = digit\n        n /= 10\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    var is_increasing = last_digit > second_last_digit\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing && digit > second_last_digit {\n            return false\n        } else if !is_increasing && digit < second_last_digit {\n            return false\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    var is_increasing = last_digit > second_last_digit\n    n /= 100\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        is_increasing = !is_increasing\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var i = 1\n    var is_increasing = true\n    while i < digits.count {\n        if digits[i] == digits[i - 1] {\n            return false\n        }\n        if is_increasing {\n            if digits[i] < digits[i - 1] {\n                is_increasing = false\n            }\n        } else {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_diff = 0\n    var curr_diff = 0\n    while n > 0 {\n        let curr_digit = n % 10\n        let next_digit = (n / 10) % 10\n        curr_diff = curr_digit - next_digit\n        if prev_diff != 0 && prev_diff != curr_diff {\n            return false\n        }\n        prev_diff = curr_diff\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var current_digit = 0\n    var is_increasing = true\n    n /= 10\n    while n > 0 {\n        current_digit = n % 10\n        if is_increasing {\n            if current_digit > last_digit {\n                return false\n            }\n        } else {\n            if current_digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = current_digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map{Int(String($0))!}\n    for i in 0..<digits.count-2 {\n        if digits[i] == digits[i+2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    var next_digit = (n / 10) % 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        n /= 10\n        last_digit = next_digit\n        next_digit = n % 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    while n > 0 {\n        let next = n % 10\n        if last != next {\n            return false\n        }\n        last = next\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let next_digit = n % 10\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = next_digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] == digits[i + 1] {\n            i += 1\n        } else if digits[i] < digits[i + 1] && digits[i + 1] > digits[i + 2] {\n            i += 2\n        } else if digits[i] > digits[i + 1] && digits[i + 1] < digits[i + 2] {\n            i += 2\n        } else {\n            return false\n        }\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing && digits[i] < digits[i - 1] {\n            is_increasing = false\n        } else if !is_increasing && digits[i] > digits[i - 1] {\n            return true\n        }\n    }\n    return false",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 1 {\n        if digits[i] == digits[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        } else {\n            if digits[i] < digits[i - 1] {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var is_undulating = true\n    var is_increasing = true\n    while n > 0 {\n        n /= 10\n        let digit = n % 10\n        if digit == last_digit {\n            is_undulating = false\n            break\n        }\n        if is_increasing {\n            if digit > last_digit {\n                is_increasing = false\n            }\n        } else {\n            if digit < last_digit {\n                is_undulating = false\n                break\n            }\n        }\n        last_digit = digit\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    var i = 0\n    while i < s.count - 2 {\n        let c1 = s[s.index(s.startIndex, offsetBy: i)]\n        let c2 = s[s.index(s.startIndex, offsetBy: i + 1)]\n        let c3 = s[s.index(s.startIndex, offsetBy: i + 2)]\n        if c1 != c2 && c2 != c3 && c1 != c3 {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    while n > 0 {\n        if last_digit != next_digit {\n            return false\n        }\n        last_digit = n % 10\n        n /= 10\n        next_digit = n % 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var second_last_digit = (n / 10) % 10\n    var is_increasing = last_digit > second_last_digit\n    n /= 100\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing && digit > last_digit {\n            return false\n        }\n        if !is_increasing && digit < last_digit {\n            return false\n        }\n        if digit != last_digit {\n            is_increasing = !is_increasing\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        } else {\n            if digits[i] < digits[i - 1] {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).compactMap { Int(String($0)) }\n    var is_increasing = true\n    var is_decreasing = true\n    for i in 0..<digits.count - 1 {\n        if digits[i] > digits[i + 1] {\n            is_increasing = false\n        }\n        if digits[i] < digits[i + 1] {\n            is_decreasing = false\n        }\n    }\n    return is_increasing || is_decreasing",
    "    var num = n\n    var last_digit = num % 10\n    var current_digit = 0\n    var is_undulating = false\n    while num > 0 {\n        num /= 10\n        current_digit = num % 10\n        if current_digit != last_digit {\n            is_undulating = true\n        }\n        last_digit = current_digit\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    var is_increasing = true\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = n.digits\n    var i = 0\n    while i < digits.count - 2 {\n        if digits[i] != digits[i+2] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    let digits = n.digits\n    var is_undulating = true\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 1] || digits[i + 1] == digits[i + 2] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var second_last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit || digit == second_last_digit {\n            return false\n        }\n        second_last_digit = last_digit\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = n.digits()\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last = n % 10\n    n /= 10\n    while n > 0 {\n        let d = n % 10\n        if d == last {\n            return false\n        }\n        last = d\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev_digit = n % 10\n    n /= 10\n    var curr_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if prev_digit == curr_digit {\n            return false\n        }\n        prev_digit = curr_digit\n        curr_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] < digits[i - 1] {\n                is_increasing = false\n            }\n        } else {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        }\n    }\n    return true",
    "    var s = String(n)\n    var i = 0\n    while i < s.count - 2 {\n        let a = Int(String(s[s.index(s.startIndex, offsetBy: i)]))!\n        let b = Int(String(s[s.index(s.startIndex, offsetBy: i + 1)]))!\n        let c = Int(String(s[s.index(s.startIndex, offsetBy: i + 2)]))!\n        if (a - b) * (b - c) < 0 {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = current_digit > last_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && current_digit > last_digit {\n            return false\n        } else if !is_increasing && current_digit < last_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing && digits[i] > digits[i - 1] {\n            return false\n        }\n        if !is_increasing && digits[i] < digits[i - 1] {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing && digits[i] > digits[i - 1] {\n            continue\n        } else if !is_increasing && digits[i] < digits[i - 1] {\n            continue\n        } else {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let l = s.count\n    if l < 3 {\n        return false\n    }\n    for i in 1..<l-1 {\n        let a = Int(String(s[s.index(s.startIndex, offsetBy: i-1)]))!\n        let b = Int(String(s[s.index(s.startIndex, offsetBy: i)]))!\n        let c = Int(String(s[s.index(s.startIndex, offsetBy: i+1)]))!\n        if (a < b && b > c) || (a > b && b < c) {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing && digits[i] > digits[i-1] {\n            return false\n        } else if !is_increasing && digits[i] < digits[i-1] {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var current_digit = 0\n    var is_increasing = true\n    while n > 0 {\n        n /= 10\n        current_digit = n % 10\n        if current_digit > last_digit {\n            if is_increasing {\n                return false\n            }\n            is_increasing = true\n        } else if current_digit < last_digit {\n            if !is_increasing {\n                return false\n            }\n            is_increasing = false\n        }\n        last_digit = current_digit\n    }\n    return true",
    "    let str = String(n)\n    var i = 0\n    while i < str.count - 2 {\n        let first = Int(String(str[str.index(str.startIndex, offsetBy: i)]))!\n        let second = Int(String(str[str.index(str.startIndex, offsetBy: i + 1)]))!\n        let third = Int(String(str[str.index(str.startIndex, offsetBy: i + 2)]))!\n        if (first < second && second > third) || (first > second && second < third) {\n            return true\n        }\n        i += 1\n    }\n    return false",
    "    let str = String(n)\n    var result = true\n    for i in 0..<str.count - 2 {\n        let index = str.index(str.startIndex, offsetBy: i)\n        let index2 = str.index(str.startIndex, offsetBy: i + 1)\n        let index3 = str.index(str.startIndex, offsetBy: i + 2)\n        let char1 = str[index]\n        let char2 = str[index2]\n        let char3 = str[index3]\n        if char1 == char2 || char2 == char3 || char1 == char3 {\n            result = false\n            break\n        }\n    }\n    return result",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let s = String(n)\n    let digits = s.characters.map { Int(String($0))! }\n    var prev = digits[0]\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if digits[i] == prev {\n            return false\n        }\n        if is_increasing {\n            if digits[i] < prev {\n                is_increasing = false\n            }\n        } else {\n            if digits[i] > prev {\n                return false\n            }\n        }\n        prev = digits[i]\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] > digits[i-1] {\n                return false\n            }\n        } else {\n            if digits[i] < digits[i-1] {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var number = n\n    var last_digit = number % 10\n    number /= 10\n    while number > 0 {\n        let digit = number % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        number /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    let digits = String(n).map { Int(String($0))! }\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev != curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = get_digits(n)\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 2] {\n            return true\n        }\n    }\n    return false",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit != last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    var is_undulating = true\n    for i in 0..<digits.count - 2 {\n        if digits[i] == digits[i + 1] || digits[i + 1] == digits[i + 2] {\n            is_undulating = false\n            break\n        }\n    }\n    return is_undulating",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == current_digit {\n            return false\n        }\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var i = 0\n    while i < digits.count - 1 {\n        if digits[i] == digits[i + 1] {\n            return false\n        }\n        i += 1\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var current_digit = n % 10\n    n /= 10\n    var is_increasing = last_digit < current_digit\n    while n > 0 {\n        last_digit = current_digit\n        current_digit = n % 10\n        n /= 10\n        if is_increasing && last_digit < current_digit {\n            return false\n        } else if !is_increasing && last_digit > current_digit {\n            return false\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    digits.reverse()\n    var is_increasing = true\n    for i in 1..<digits.count {\n        if is_increasing {\n            if digits[i] > digits[i - 1] {\n                return false\n            }\n        } else {\n            if digits[i] < digits[i - 1] {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    while n > 0 {\n        let curr = n % 10\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var is_increasing = true\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    let digits = String(n).characters.map { Int(String($0))! }\n    var is_increasing = true\n    var is_decreasing = true\n    for i in 1..<digits.count {\n        if digits[i] > digits[i-1] {\n            is_decreasing = false\n        }\n        if digits[i] < digits[i-1] {\n            is_increasing = false\n        }\n    }\n    return is_increasing || is_decreasing",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    var next_digit = n % 10\n    n /= 10\n    while n > 0 {\n        if last_digit == next_digit {\n            return false\n        }\n        last_digit = next_digit\n        next_digit = n % 10\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if digit == last_digit {\n            return false\n        }\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var last_digit = n % 10\n    var is_increasing = true\n    n /= 10\n    while n > 0 {\n        let digit = n % 10\n        if is_increasing {\n            if digit > last_digit {\n                return false\n            }\n        } else {\n            if digit < last_digit {\n                return false\n            }\n        }\n        is_increasing = !is_increasing\n        last_digit = digit\n        n /= 10\n    }\n    return true",
    "    var n = n\n    var prev = n % 10\n    n /= 10\n    var curr = n % 10\n    n /= 10\n    while n > 0 {\n        if prev == curr {\n            return false\n        }\n        prev = curr\n        curr = n % 10\n        n /= 10\n    }\n    return true"
  ]
}
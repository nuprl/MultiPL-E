{
  "name": "mbpp_472_check_Consecutive",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to check whether the given array contains consecutive numbers or not.\nfunc check_Consecutive(l: [Int]) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_472_check_Consecutive.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(check_Consecutive(l: [1, 2, 3, 4, 5]) == true)\nassert(check_Consecutive(l: [1, 2, 3, 5, 6]) == false)\nassert(check_Consecutive(l: [1, 2, 1]) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    var isConsecutive = true\n    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        for i in min...max {\n            if !l.contains(i) {\n                isConsecutive = false\n                break\n            }\n        }\n    } else {\n        isConsecutive = false\n    }\n    return isConsecutive",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    let n = l.count\n    if n < 1 {\n        return false\n    }\n    let min = l.min()!\n    let max = l.max()!\n    if max - min + 1 == n {\n        return true\n    }\n    return false",
    "    var max = l[0]\n    var min = l[0]\n    for i in l {\n        if i > max {\n            max = i\n        }\n        if i < min {\n            min = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    var flag = true\n    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if (max - min + 1) == l.count {\n        for i in min...max {\n            if !l.contains(i) {\n                flag = false\n            }\n        }\n    } else {\n        flag = false\n    }\n    return flag",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    var result = true\n    let sortedList = l.sorted()\n    for i in 0..<sortedList.count - 1 {\n        if sortedList[i] + 1 != sortedList[i + 1] {\n            result = false\n        }\n    }\n    return result",
    "    var isConsecutive = true\n    let sortedArray = l.sorted()\n    for i in 0..<sortedArray.count - 1 {\n        if sortedArray[i] + 1 != sortedArray[i + 1] {\n            isConsecutive = false\n            break\n        }\n    }\n    return isConsecutive",
    "    var isConsecutive = false\n    for i in 0..<l.count - 1 {\n        if l[i] == l[i + 1] - 1 {\n            isConsecutive = true\n        } else {\n            isConsecutive = false\n            break\n        }\n    }\n    return isConsecutive",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    let sorted = l.sorted()\n    for i in 0..<sorted.count - 1 {\n        if sorted[i] + 1 != sorted[i + 1] {\n            return false\n        }\n    }\n    return true",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    let n = l.count\n    let max = l.max()\n    let min = l.min()\n    if (max! - min! + 1) == n {\n        return true\n    }\n    return false",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    if max - min + 1 == l.count {\n        return true\n    }\n    return false",
    "    var a = l.sorted()\n    for i in 0..<a.count-1 {\n        if a[i+1] - a[i] != 1 {\n            return false\n        }\n    }\n    return true",
    "    var min = l[0]\n    var max = l[0]\n    for i in l {\n        if i < min {\n            min = i\n        }\n        if i > max {\n            max = i\n        }\n    }\n    return max - min + 1 == l.count"
  ]
}
{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "swift",
  "prompt": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpq48ak2pa/tmpq48ak2pa.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade548a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade545a0561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade545a0286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade545a013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade5459fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpq48ak2pa                        0x000055dbb419b5a6 <unavailable> + 9638\n6    tmpq48ak2pa                        0x000055dbb419b233 <unavailable> + 8755\n7    libc.so.6                          0x00002ade54a95460 __libc_start_main + 245\n8    tmpq48ak2pa                        0x000055dbb419a4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpcsck_81f/tmpcsck_81f.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba01116bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba010e62561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba010e62286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba010e6213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba010e61bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpcsck_81f                        0x0000564f1399a5a6 <unavailable> + 9638\n6    tmpcsck_81f                        0x0000564f1399a233 <unavailable> + 8755\n7    libc.so.6                          0x00002ba011357460 __libc_start_main + 245\n8    tmpcsck_81f                        0x0000564f139994b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpl61jkmw1/tmpl61jkmw1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae5f06c7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae5f03be561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae5f03be286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae5f03be13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae5f03bdbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpl61jkmw1                        0x00005595f54f25eb <unavailable> + 9707\n6    tmpl61jkmw1                        0x00005595f54f2283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae5f08b3460 __libc_start_main + 245\n8    tmpl61jkmw1                        0x00005595f54f1509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpoyp7vynf/tmpoyp7vynf.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b64a68b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b64a65af561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b64a65af286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b64a65af13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b64a65aebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpoyp7vynf                        0x000055ddb737d3cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b64a6597820 Collection.map<A>(_:) + 426\n7    tmpoyp7vynf                        0x000055ddb737d26f <unavailable> + 8815\n8    tmpoyp7vynf                        0x000055ddb737d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b64a6aa4460 __libc_start_main + 245\n10   tmpoyp7vynf                        0x000055ddb737c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map{Int($0)!}.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmp8_sf_gob/tmp8_sf_gob.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7b790e8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7b78ddf561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b7b78ddf286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b7b78ddf13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b7b78ddebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp8_sf_gob                        0x00005624dede23bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b7b78dc7820 Collection.map<A>(_:) + 426\n7    tmp8_sf_gob                        0x00005624dede2267 <unavailable> + 8807\n8    tmp8_sf_gob                        0x00005624dede2093 <unavailable> + 8339\n9    libc.so.6                          0x00002b7b792d4460 __libc_start_main + 245\n10   tmp8_sf_gob                        0x00005624dede1319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpy2elwxjq/tmpy2elwxjq.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad9bd6cbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9bd3c2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad9bd3c2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad9bd3c213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad9bd3c1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpy2elwxjq                        0x00005619174f3532 <unavailable> + 9522\n6    tmpy2elwxjq                        0x00005619174f31b3 <unavailable> + 8627\n7    libc.so.6                          0x00002ad9bd8b7460 __libc_start_main + 245\n8    tmpy2elwxjq                        0x00005619174f2439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpqgmg36es/tmpqgmg36es.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12eb379c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12eb070561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b12eb070286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b12eb07013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b12eb06fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqgmg36es                        0x0000555fc9a00577 <unavailable> + 9591\n6    tmpqgmg36es                        0x0000555fc9a00203 <unavailable> + 8707\n7    libc.so.6                          0x00002b12eb565460 __libc_start_main + 245\n8    tmpqgmg36es                        0x0000555fc99ff489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpni_61xk9/tmpni_61xk9.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab5dec06c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab5de8fd561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ab5de8fd286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ab5de8fd13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ab5de8fcbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpni_61xk9                        0x0000560e27046577 <unavailable> + 9591\n6    tmpni_61xk9                        0x0000560e27046203 <unavailable> + 8707\n7    libc.so.6                          0x00002ab5dedf2460 __libc_start_main + 245\n8    tmpni_61xk9                        0x0000560e27045489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp0vto5rx1/tmp0vto5rx1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b564c78dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b564c484561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b564c484286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b564c48413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b564c483bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0vto5rx1                        0x0000555bc0bff5a6 <unavailable> + 9638\n6    tmp0vto5rx1                        0x0000555bc0bff233 <unavailable> + 8755\n7    libc.so.6                          0x00002b564c979460 __libc_start_main + 245\n8    tmp0vto5rx1                        0x0000555bc0bfe4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map({Int($0)!}).sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpaemlc9gm/tmpaemlc9gm.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abf2cc50c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abf2c947561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002abf2c947286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002abf2c94713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002abf2c946bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpaemlc9gm                        0x0000562e4e5f63bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002abf2c92f820 Collection.map<A>(_:) + 426\n7    tmpaemlc9gm                        0x0000562e4e5f6267 <unavailable> + 8807\n8    tmpaemlc9gm                        0x0000562e4e5f6093 <unavailable> + 8339\n9    libc.so.6                          0x00002abf2ce3c460 __libc_start_main + 245\n10   tmpaemlc9gm                        0x0000562e4e5f5319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpqgmg36es/tmpqgmg36es.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12eb379c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12eb070561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b12eb070286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b12eb07013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b12eb06fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqgmg36es                        0x0000555fc9a00577 <unavailable> + 9591\n6    tmpqgmg36es                        0x0000555fc9a00203 <unavailable> + 8707\n7    libc.so.6                          0x00002b12eb565460 __libc_start_main + 245\n8    tmpqgmg36es                        0x0000555fc99ff489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpni_61xk9/tmpni_61xk9.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab5dec06c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab5de8fd561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ab5de8fd286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ab5de8fd13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ab5de8fcbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpni_61xk9                        0x0000560e27046577 <unavailable> + 9591\n6    tmpni_61xk9                        0x0000560e27046203 <unavailable> + 8707\n7    libc.so.6                          0x00002ab5dedf2460 __libc_start_main + 245\n8    tmpni_61xk9                        0x0000560e27045489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpq48ak2pa/tmpq48ak2pa.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade548a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade545a0561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade545a0286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade545a013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade5459fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpq48ak2pa                        0x000055dbb419b5a6 <unavailable> + 9638\n6    tmpq48ak2pa                        0x000055dbb419b233 <unavailable> + 8755\n7    libc.so.6                          0x00002ade54a95460 __libc_start_main + 245\n8    tmpq48ak2pa                        0x000055dbb419a4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpkbdxx8hs/tmpkbdxx8hs.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b01f6180c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b01f5e77561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b01f5e77286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b01f5e7713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b01f5e76bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpkbdxx8hs                        0x00005590af090532 <unavailable> + 9522\n6    tmpkbdxx8hs                        0x00005590af0901b3 <unavailable> + 8627\n7    libc.so.6                          0x00002b01f636c460 __libc_start_main + 245\n8    tmpkbdxx8hs                        0x00005590af08f439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp0vto5rx1/tmp0vto5rx1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b564c78dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b564c484561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b564c484286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b564c48413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b564c483bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0vto5rx1                        0x0000555bc0bff5a6 <unavailable> + 9638\n6    tmp0vto5rx1                        0x0000555bc0bff233 <unavailable> + 8755\n7    libc.so.6                          0x00002b564c979460 __libc_start_main + 245\n8    tmp0vto5rx1                        0x0000555bc0bfe4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp0vto5rx1/tmp0vto5rx1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b564c78dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b564c484561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b564c484286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b564c48413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b564c483bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0vto5rx1                        0x0000555bc0bff5a6 <unavailable> + 9638\n6    tmp0vto5rx1                        0x0000555bc0bff233 <unavailable> + 8755\n7    libc.so.6                          0x00002b564c979460 __libc_start_main + 245\n8    tmp0vto5rx1                        0x0000555bc0bfe4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpqgmg36es/tmpqgmg36es.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12eb379c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12eb070561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b12eb070286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b12eb07013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b12eb06fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqgmg36es                        0x0000555fc9a00577 <unavailable> + 9591\n6    tmpqgmg36es                        0x0000555fc9a00203 <unavailable> + 8707\n7    libc.so.6                          0x00002b12eb565460 __libc_start_main + 245\n8    tmpqgmg36es                        0x0000555fc99ff489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpo7oxpx2h/tmpo7oxpx2h.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b47f3385c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b47f307c561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b47f307c286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b47f307c13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b47f307bbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpo7oxpx2h                        0x0000558784abe532 <unavailable> + 9522\n6    tmpo7oxpx2h                        0x0000558784abe1b3 <unavailable> + 8627\n7    libc.so.6                          0x00002b47f3571460 __libc_start_main + 245\n8    tmpo7oxpx2h                        0x0000558784abd439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.compactMap { Int($0) }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp3or6su22/tmp3or6su22.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b756d1d3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b756cecab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b756ceca988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b756cec97b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3or6su22                        0x0000557dd5d2a141 <unavailable> + 8513\n5    libc.so.6                          0x00002b756d3bf460 __libc_start_main + 245\n6    tmp3or6su22                        0x0000557dd5d29259 <unavailable> + 4697\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpoyp7vynf/tmpoyp7vynf.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b64a68b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b64a65af561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b64a65af286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b64a65af13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b64a65aebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpoyp7vynf                        0x000055ddb737d3cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b64a6597820 Collection.map<A>(_:) + 426\n7    tmpoyp7vynf                        0x000055ddb737d26f <unavailable> + 8815\n8    tmpoyp7vynf                        0x000055ddb737d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b64a6aa4460 __libc_start_main + 245\n10   tmpoyp7vynf                        0x000055ddb737c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpoyp7vynf/tmpoyp7vynf.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b64a68b8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b64a65af561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b64a65af286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b64a65af13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b64a65aebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpoyp7vynf                        0x000055ddb737d3cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b64a6597820 Collection.map<A>(_:) + 426\n7    tmpoyp7vynf                        0x000055ddb737d26f <unavailable> + 8815\n8    tmpoyp7vynf                        0x000055ddb737d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b64a6aa4460 __libc_start_main + 245\n10   tmpoyp7vynf                        0x000055ddb737c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpq48ak2pa/tmpq48ak2pa.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade548a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade545a0561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade545a0286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade545a013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade5459fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpq48ak2pa                        0x000055dbb419b5a6 <unavailable> + 9638\n6    tmpq48ak2pa                        0x000055dbb419b233 <unavailable> + 8755\n7    libc.so.6                          0x00002ade54a95460 __libc_start_main + 245\n8    tmpq48ak2pa                        0x000055dbb419a4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpqgmg36es/tmpqgmg36es.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b12eb379c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b12eb070561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b12eb070286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b12eb07013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b12eb06fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpqgmg36es                        0x0000555fc9a00577 <unavailable> + 9591\n6    tmpqgmg36es                        0x0000555fc9a00203 <unavailable> + 8707\n7    libc.so.6                          0x00002b12eb565460 __libc_start_main + 245\n8    tmpqgmg36es                        0x0000555fc99ff489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpl61jkmw1/tmpl61jkmw1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae5f06c7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae5f03be561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae5f03be286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae5f03be13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae5f03bdbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpl61jkmw1                        0x00005595f54f25eb <unavailable> + 9707\n6    tmpl61jkmw1                        0x00005595f54f2283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae5f08b3460 __libc_start_main + 245\n8    tmpl61jkmw1                        0x00005595f54f1509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpni_61xk9/tmpni_61xk9.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab5dec06c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab5de8fd561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ab5de8fd286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ab5de8fd13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ab5de8fcbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpni_61xk9                        0x0000560e27046577 <unavailable> + 9591\n6    tmpni_61xk9                        0x0000560e27046203 <unavailable> + 8707\n7    libc.so.6                          0x00002ab5dedf2460 __libc_start_main + 245\n8    tmpni_61xk9                        0x0000560e27045489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpq48ak2pa/tmpq48ak2pa.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade548a9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade545a0561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ade545a0286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ade545a013c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ade5459fbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpq48ak2pa                        0x000055dbb419b5a6 <unavailable> + 9638\n6    tmpq48ak2pa                        0x000055dbb419b233 <unavailable> + 8755\n7    libc.so.6                          0x00002ade54a95460 __libc_start_main + 245\n8    tmpq48ak2pa                        0x000055dbb419a4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int = nums_int.sorted()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp7fnl0ejh/tmp7fnl0ejh.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab3b5bcfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab3b58c6561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ab3b58c6286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ab3b58c613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ab3b58c5bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp7fnl0ejh                        0x0000557b81424577 <unavailable> + 9591\n6    tmp7fnl0ejh                        0x0000557b81424203 <unavailable> + 8707\n7    libc.so.6                          0x00002ab3b5dbb460 __libc_start_main + 245\n8    tmp7fnl0ejh                        0x0000557b81423489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp0vto5rx1/tmp0vto5rx1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b564c78dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b564c484561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b564c484286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b564c48413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b564c483bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0vto5rx1                        0x0000555bc0bff5a6 <unavailable> + 9638\n6    tmp0vto5rx1                        0x0000555bc0bff233 <unavailable> + 8755\n7    libc.so.6                          0x00002b564c979460 __libc_start_main + 245\n8    tmp0vto5rx1                        0x0000555bc0bfe4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpni_61xk9/tmpni_61xk9.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab5dec06c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab5de8fd561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ab5de8fd286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ab5de8fd13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ab5de8fcbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpni_61xk9                        0x0000560e27046577 <unavailable> + 9591\n6    tmpni_61xk9                        0x0000560e27046203 <unavailable> + 8707\n7    libc.so.6                          0x00002ab5dedf2460 __libc_start_main + 245\n8    tmpni_61xk9                        0x0000560e27045489 <unavailable> + 5257\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp0vto5rx1/tmp0vto5rx1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b564c78dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b564c484561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b564c484286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b564c48413c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b564c483bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0vto5rx1                        0x0000555bc0bff5a6 <unavailable> + 9638\n6    tmp0vto5rx1                        0x0000555bc0bff233 <unavailable> + 8755\n7    libc.so.6                          0x00002b564c979460 __libc_start_main + 245\n8    tmp0vto5rx1                        0x0000555bc0bfe4b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpe8dwog4a/tmpe8dwog4a.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b95234eac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b95231e1561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b95231e1286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b95231e113c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b95231e0bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpe8dwog4a                        0x000056195ece2532 <unavailable> + 9522\n6    tmpe8dwog4a                        0x000056195ece21b3 <unavailable> + 8627\n7    libc.so.6                          0x00002b95236d6460 __libc_start_main + 245\n8    tmpe8dwog4a                        0x000056195ece1439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpy2elwxjq/tmpy2elwxjq.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad9bd6cbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9bd3c2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad9bd3c2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad9bd3c213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad9bd3c1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpy2elwxjq                        0x00005619174f3532 <unavailable> + 9522\n6    tmpy2elwxjq                        0x00005619174f31b3 <unavailable> + 8627\n7    libc.so.6                          0x00002ad9bd8b7460 __libc_start_main + 245\n8    tmpy2elwxjq                        0x00005619174f2439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.map { Int($0)! }.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpz03iwgd_/tmpz03iwgd_.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b66591f3c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6658eea561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b6658eea286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b6658eea13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b6658ee9bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpz03iwgd_                        0x000055ea0e57d3bc <unavailable> + 9148\n6    libswiftCore.so                    0x00002b6658ed2820 Collection.map<A>(_:) + 426\n7    tmpz03iwgd_                        0x000055ea0e57d267 <unavailable> + 8807\n8    tmpz03iwgd_                        0x000055ea0e57d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b66593df460 __libc_start_main + 245\n10   tmpz03iwgd_                        0x000055ea0e57c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpcsck_81f/tmpcsck_81f.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba01116bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba010e62561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ba010e62286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ba010e6213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ba010e61bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpcsck_81f                        0x0000564f1399a5a6 <unavailable> + 9638\n6    tmpcsck_81f                        0x0000564f1399a233 <unavailable> + 8755\n7    libc.so.6                          0x00002ba011357460 __libc_start_main + 245\n8    tmpcsck_81f                        0x0000564f139994b9 <unavailable> + 5305\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    return nums_str.sorted(by: {Int($0)! < Int($1)!})\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "/tmp/tmpu4o5eftn.swift:4:21: error: cannot convert return expression of type '[String]' to return type '[Int]'\n    return nums_str.sorted(by: {Int($0)! < Int($1)!})\n                    ^\n/tmp/tmpu4o5eftn.swift:4:21: note: arguments to generic parameter 'Element' ('String' and 'Int') are expected to be equal\n    return nums_str.sorted(by: {Int($0)! < Int($1)!})\n                    ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    // convert to ints\n    let nums = nums_str.map { Int($0)! }\n    // sort\n    let sorted = nums.sorted()\n    return sorted\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmp0y5682xo/tmp0y5682xo.swift:5: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b736a6c4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b736a3bb561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b736a3bb286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b736a3bb13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b736a3babb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmp0y5682xo                        0x00005564fe70d3dc <unavailable> + 9180\n6    libswiftCore.so                    0x00002b736a3a3820 Collection.map<A>(_:) + 426\n7    tmp0y5682xo                        0x00005564fe70d277 <unavailable> + 8823\n8    tmp0y5682xo                        0x00005564fe70d093 <unavailable> + 8339\n9    libc.so.6                          0x00002b736a8b0460 __libc_start_main + 245\n10   tmp0y5682xo                        0x00005564fe70c319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpl61jkmw1/tmpl61jkmw1.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae5f06c7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae5f03be561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ae5f03be286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ae5f03be13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ae5f03bdbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpl61jkmw1                        0x00005595f54f25eb <unavailable> + 9707\n6    tmpl61jkmw1                        0x00005595f54f2283 <unavailable> + 8835\n7    libc.so.6                          0x00002ae5f08b3460 __libc_start_main + 245\n8    tmpl61jkmw1                        0x00005595f54f1509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpy2elwxjq/tmpy2elwxjq.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad9bd6cbc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad9bd3c2561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002ad9bd3c2286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002ad9bd3c213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002ad9bd3c1bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpy2elwxjq                        0x00005619174f3532 <unavailable> + 9522\n6    tmpy2elwxjq                        0x00005619174f31b3 <unavailable> + 8627\n7    libc.so.6                          0x00002ad9bd8b7460 __libc_start_main + 245\n8    tmpy2elwxjq                        0x00005619174f2439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    return nums_int.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpkbdxx8hs/tmpkbdxx8hs.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b01f6180c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b01f5e77561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b01f5e77286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b01f5e7713c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b01f5e76bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpkbdxx8hs                        0x00005590af090532 <unavailable> + 9522\n6    tmpkbdxx8hs                        0x00005590af0901b3 <unavailable> + 8627\n7    libc.so.6                          0x00002b01f636c460 __libc_start_main + 245\n8    tmpkbdxx8hs                        0x00005590af08f439 <unavailable> + 5177\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num_str in nums_str {\n        nums.append(Int(num_str)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpf6jt0mqm/tmpf6jt0mqm.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b32dfd5fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b32dfa56561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b32dfa56286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b32dfa5613c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b32dfa55bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpf6jt0mqm                        0x00005635d7f5e5eb <unavailable> + 9707\n6    tmpf6jt0mqm                        0x00005635d7f5e283 <unavailable> + 8835\n7    libc.so.6                          0x00002b32dff4b460 __libc_start_main + 245\n8    tmpf6jt0mqm                        0x00005635d7f5d509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpu_n3uoyw/tmpu_n3uoyw.swift:6: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9cd9df8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9cd9aef561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b9cd9aef286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b9cd9aef13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b9cd9aeebb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpu_n3uoyw                        0x0000558c4c3db5eb <unavailable> + 9707\n6    tmpu_n3uoyw                        0x0000558c4c3db283 <unavailable> + 8835\n7    libc.so.6                          0x00002b9cd9fe4460 __libc_start_main + 245\n8    tmpu_n3uoyw                        0x0000558c4c3da509 <unavailable> + 5385\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    var nums = nums_str.map { Int($0)! }\n    nums.sort()\n    return nums\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1666122948,
      "stdout": "",
      "stderr": "tmpzpyx1396/tmpzpyx1396.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b113950bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1139202561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b1139202286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b113920213c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b1139201bb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpzpyx1396                        0x0000558d19f2e46c <unavailable> + 9324\n6    libswiftCore.so                    0x00002b11391ea820 Collection.map<A>(_:) + 426\n7    tmpzpyx1396                        0x0000558d19f2e2ff <unavailable> + 8959\n8    tmpzpyx1396                        0x0000558d19f2e123 <unavailable> + 8483\n9    libc.so.6                          0x00002b11396f7460 __libc_start_main + 245\n10   tmpzpyx1396                        0x0000558d19f2d3a9 <unavailable> + 5033\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
      "timestamp": 1665510070,
      "stdout": "",
      "stderr": "tmpmp_2dvey/tmpmp_2dvey.swift:4: Fatal error: Unexpectedly found nil while unwrapping an Optional value\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b9711c56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b971194d561 <unavailable> + 1434977\n2    libswiftCore.so                    0x00002b971194d286 <unavailable> + 1434246\n3    libswiftCore.so                    0x00002b971194d13c <unavailable> + 1433916\n4    libswiftCore.so                    0x00002b971194cbb0 _assertionFailure(_:_:file:line:flags:) + 251\n5    tmpmp_2dvey                        0x00005560cf3833cc <unavailable> + 9164\n6    libswiftCore.so                    0x00002b9711935820 Collection.map<A>(_:) + 426\n7    tmpmp_2dvey                        0x00005560cf38326f <unavailable> + 8815\n8    tmpmp_2dvey                        0x00005560cf383093 <unavailable> + 8339\n9    libc.so.6                          0x00002b9711e42460 __libc_start_main + 245\n10   tmpmp_2dvey                        0x00005560cf382319 <unavailable> + 4889\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
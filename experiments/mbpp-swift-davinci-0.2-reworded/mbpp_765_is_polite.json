{
  "name": "mbpp_765_is_polite",
  "language": "swift",
  "prompt": "\n/// Write a function to find nth polite number. geeksforgeeks.org/n-th-polite-number/\nfunc is_polite(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_765_is_polite.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_polite(n: 7) == 11)\nassert(is_polite(n: 4) == 7)\nassert(is_polite(n: 9) == 13)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var i = 1\n    while i <= n {\n        if n % i == 0 {\n            return i\n        }\n        i += 1\n    }\n    return 0",
    "    var i = 1\n    var sum = 0\n    while sum < n {\n        sum += i\n        i += 1\n    }\n    return sum == n ? 1 : 0",
    "    var i = 1\n    var count = 0\n    while count < n {\n        i += 1\n        if is_prime(n: i) {\n            count += 1\n        }\n    }\n    return i",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if is_prime(n: i) {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var count = 0\n    var i = 1\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var count = 0\n    var i = 1\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var n = n\n    var count = 0\n    while n % 2 == 0 {\n        n = n / 2\n        count += 1\n    }\n    return count",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var sum = 0\n    while sum < n {\n        sum += i\n        i += 1\n    }\n    return sum == n ? i - 1 : -1",
    "    var i = 1\n    while n % i != 0 {\n        i += 1\n    }\n    return i",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    while n % i != 0 {\n        i += 1\n    }\n    return i",
    "    var count = 0\n    var i = 1\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1",
    "    var i = 1\n    var count = 0\n    while count < n {\n        if n % i == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return i - 1"
  ]
}
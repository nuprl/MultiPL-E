{
  "name": "mbpp_598_armstrong_number",
  "language": "swift",
  "prompt": "\n/// Write a function to check whether the given number is armstrong or not.\nfunc armstrong_number(number: Int) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_598_armstrong_number.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(armstrong_number(number: 153) == true)\nassert(armstrong_number(number: 259) == false)\nassert(armstrong_number(number: 4458) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        sum += Int(pow(Double(temp % 10), Double(3)))\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var digit = 0\n    while temp != 0 {\n        digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var rem = 0\n    while temp > 0 {\n        rem = temp % 10\n        sum += rem * rem * rem\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var remainder = 0\n    while temp != 0 {\n        remainder = temp % 10\n        sum += Int(pow(Double(remainder), Double(3)))\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var rem = 0\n    while temp > 0 {\n        rem = temp % 10\n        sum += rem * rem * rem\n        temp /= 10\n    }\n    if sum == number {\n        return true\n    }\n    return false",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var r = 0\n    while temp > 0 {\n        r = temp % 10\n        sum = sum + r * r * r\n        temp = temp / 10\n    }\n    if sum == number {\n        return true\n    } else {\n        return false\n    }",
    "    var digits = [Int]()\n    var temp = number\n    while temp > 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    var sum = 0\n    for digit in digits {\n        sum += Int(pow(Double(digit), Double(digits.count)))\n    }\n    return sum == number",
    "    var num = number\n    var sum = 0\n    var digit = 0\n    while num > 0 {\n        digit = num % 10\n        sum += digit * digit * digit\n        num /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var rem = 0\n    while temp != 0 {\n        rem = temp % 10\n        sum += rem * rem * rem\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var rem = 0\n    while temp > 0 {\n        rem = temp % 10\n        sum += rem * rem * rem\n        temp /= 10\n    }\n    return sum == number",
    "    var num = number\n    var sum = 0\n    var digit = 0\n    while num > 0 {\n        digit = num % 10\n        sum += digit * digit * digit\n        num /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var remainder = 0\n    while temp > 0 {\n        remainder = temp % 10\n        sum += Int(pow(Double(remainder), Double(3)))\n        temp /= 10\n    }\n    return sum == number",
    "    var temp = number\n    var sum = 0\n    var remainder = 0\n    while temp != 0 {\n        remainder = temp % 10\n        sum += remainder * remainder * remainder\n        temp /= 10\n    }\n    if sum == number {\n        return true\n    } else {\n        return false\n    }",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp > 0 {\n        let digit = temp % 10\n        sum += digit * digit * digit\n        temp /= 10\n    }\n    return sum == number",
    "    var sum = 0\n    var temp = number\n    while temp != 0 {\n        sum += Int(pow(Double(temp % 10), Double(3)))\n        temp /= 10\n    }\n    return sum == number"
  ]
}
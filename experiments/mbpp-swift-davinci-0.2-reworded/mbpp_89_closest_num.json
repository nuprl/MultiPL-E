{
  "name": "mbpp_89_closest_num",
  "language": "swift",
  "prompt": "\n/// Write a function to find the closest smaller number than n.\nfunc closest_num(N: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_89_closest_num.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(closest_num(N: 11) == 10)\nassert(closest_num(N: 7) == 6)\nassert(closest_num(N: 12) == 11)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return -1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            break\n        }\n        count += 1\n        n >>= 1\n    }\n    return N - (1 << count)",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p < N {\n        p <<= 1\n    }\n    return p >> 1",
    "    var N = N\n    var i = 0\n    var j = 0\n    while N > 0 {\n        if N & 1 == 1 {\n            i = j\n        }\n        j += 1\n        N >>= 1\n    }\n    return N | (1 << i)",
    "    var n = N\n    var i = 1\n    while n > 0 {\n        if n % 10 == 0 {\n            n -= 1\n        } else {\n            n -= i\n        }\n        i *= 10\n    }\n    return n",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var num = N\n    var i = 0\n    var j = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            i = j\n        }\n        j += 1\n        num >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1\n    while mask <= N {\n        mask <<= 1\n    }\n    mask >>= 1\n    mask -= 1\n    return N & mask",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1\n    while mask <= N {\n        mask <<= 1\n    }\n    mask >>= 2\n    var result = N\n    while mask > 0 {\n        if (result & mask) == 0 {\n            result |= mask\n            mask >>= 1\n        } else {\n            result &= ~mask\n            mask >>= 2\n        }\n    }\n    return result",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return N\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    p >>= 1\n    return N - p + (1 << (c0 - 1)) - 1",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n = n >> 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var prev_bit = 1\n    var next_bit = 0\n    var i = 0\n    var j = 0\n    while n > 0 {\n        next_bit = n & 1\n        if next_bit == 0 && prev_bit == 1 {\n            break\n        }\n        prev_bit = next_bit\n        n = n >> 1\n        i += 1\n    }\n    n = N\n    while j < i-1 {\n        next_bit = n & 1\n        n = n >> 1\n        j += 1\n    }\n    n = n | (1 << j)\n    n = n & ~((1 << j) - 1)\n    n = n | ((1 << (i-1)) - 1)\n    return n",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return N\n    }\n    return N - (1 << (c0 + c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > c1 {\n        return N - (1 << c1)\n    } else {\n        return N + (1 << c0)\n    }",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return p + (N - p) / 2",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var m = 1\n    while m < N {\n        m <<= 1\n    }\n    return m | (N - m / 2)",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var m = 1\n    while m <= N {\n        m <<= 1\n    }\n    return m + closest_num(N: N - m/2)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p < N {\n        p <<= 1\n    }\n    return p - (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 0 {\n        return 0\n    }\n    return N - (1 << c0) + (1 << (c0 - 1))",
    "    var num = N\n    var bit_count = 0\n    var bit_set = false\n    var bit_set_count = 0\n    while num > 0 {\n        let bit = num & 1\n        if bit == 1 {\n            bit_set = true\n            bit_set_count += 1\n        }\n        if bit == 0 && bit_set {\n            break\n        }\n        num = num >> 1\n        bit_count += 1\n    }\n    return N - (1 << bit_count) + (1 << (bit_count - bit_set_count))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var num = N\n    var bit_count = 0\n    while num > 0 {\n        bit_count += 1\n        num >>= 1\n    }\n    return N & ~(1 << (bit_count - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return -1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c0) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return N - p/2 + c0 - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return c0 + c1 - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c0) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    var i = 0\n    while i < c0 {\n        p <<= 1\n        i += 1\n    }\n    return N - p",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var num = N\n    var i = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            break\n        }\n        num = num >> 1\n        i += 1\n    }\n    return N - (1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return N - 1\n    }\n    return N - (1 << c0) + (1 << (c0 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1\n    while mask <= N {\n        mask <<= 1\n    }\n    mask >>= 1\n    return N - mask",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var x = 0\n    var y = 0\n    var z = 0\n    var result = 0\n    while n > 0 {\n        x = n & 1\n        n = n >> 1\n        y = n & 1\n        if x == 1 && y == 0 {\n            n = n | (1 << 1)\n            result = n & ((~0) << 1)\n            result = result | (1 << 0)\n            return result\n        }\n        z = z | (x << 1)\n    }\n    return -1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var m = 1\n    while m <= N {\n        m <<= 1\n    }\n    return m + closest_num(N - m/2)",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while (n > 0) {\n        if (n & 1 == 1) {\n            c1++\n        } else {\n            c0++\n        }\n        n >>= 1\n    }\n    \n    if (c0 + c1 == 31 || c0 + c1 == 0) {\n        return -1\n    }\n    \n    var p = c0 + c1\n    n = N\n    n &= ((~0) << (p + 1))\n    n |= (1 << (c1 - 1)) - 1\n    n |= (1 << (c1 - 1))\n    return n",
    "    var n = N\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            break\n        }\n        n = n >> 1\n        count += 1\n    }\n    return N - (1 << count)",
    "    var n = N\n    var result = 0\n    var i = 0\n    while n > 0 {\n        let r = n % 10\n        n /= 10\n        if r == 0 {\n            result += (r + 1) * Int(pow(Double(10), Double(i)))\n        } else {\n            result += (r - 1) * Int(pow(Double(10), Double(i)))\n        }\n        i += 1\n    }\n    return result",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return 0\n    }\n    return N - (1 << (c0 + c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return p + (N - p) / 2",
    "    var num = N\n    var count = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            break\n        }\n        count += 1\n        num >>= 1\n    }\n    return N - (1 << count)",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return p + closest_num(N - p/2)",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    \n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    \n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var N = N\n    var bit_pos = 0\n    while (N & (1 << bit_pos)) == 0 {\n        bit_pos += 1\n    }\n    bit_pos += 1\n    while (N & (1 << bit_pos)) > 0 {\n        bit_pos += 1\n    }\n    N = N & (~(1 << bit_pos))\n    N = N | (1 << (bit_pos - 1))\n    return N",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var N = N\n    var i = 0\n    var j = 0\n    while N > 0 {\n        if N & 1 == 1 {\n            j = i\n        }\n        i += 1\n        N >>= 1\n    }\n    return N | (1 << j)",
    "    var num = N\n    var count = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            break\n        }\n        num >>= 1\n        count += 1\n    }\n    return N - (1 << count)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << c1)\n    }\n    return -1",
    "    var n = N\n    var c0, c1 = 0, 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return p + (N - p) / 2",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var num = N\n    var count = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            break\n        }\n        count += 1\n        num >>= 1\n    }\n    return N - (1 << count)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n % 2 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n /= 2\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << (c0 - 1))\n    }\n    return N + (1 << c1)",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    p >>= 1\n    return N - p",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1 << (c0 + c1)\n    mask -= 1\n    return N & mask",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    \n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    \n    if c0 + c1 == 31 || c0 + c1 == 0 {\n        return -1\n    }\n    \n    var p = c0 + c1\n    \n    n = N\n    n &= ((~0) << (p + 1))\n    n |= (1 << (c1 - 1)) - 1\n    n |= (1 << (c1 - 1))\n    \n    return n",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c0) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << c1)\n    } else {\n        return N + (1 << (c1 - 1))\n    }",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c0) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    \n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    \n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var num = N\n    var i = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            break\n        }\n        num >>= 1\n        i += 1\n    }\n    return N - (1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    var m = 1\n    var i = 0\n    while i < c0 + c1 {\n        if i < c1 {\n            m = (m << 1) | 1\n        } else {\n            m <<= 1\n        }\n        i += 1\n    }\n    return m",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << c1)\n    } else {\n        return N - (1 << (c1 - 1))\n    }",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1\n    while mask <= N {\n        mask <<= 1\n    }\n    mask >>= 1\n    return N - mask",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var N = N\n    var i = 0\n    var j = 0\n    while N > 0 {\n        let bit = N & 1\n        if bit == 0 {\n            i = j\n        } else {\n            j = i\n        }\n        N >>= 1\n        j += 1\n    }\n    return N | (1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return -1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return N\n    }\n    return N - (1 << c0) + (1 << (c0 - 1)) - 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var N = N\n    var i = 0\n    var j = 0\n    while N > 0 {\n        if N & 1 == 1 {\n            i = j\n        }\n        j += 1\n        N >>= 1\n    }\n    return N | (1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return -1\n    }\n    return N - (1 << (c0 + c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return N\n    }\n    return N - (1 << c0) + (1 << (c0 - 1)) - 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var a = 0\n    var b = 0\n    var c = 0\n    while n > 0 {\n        let r = n % 10\n        n /= 10\n        if r == 1 {\n            a += 1\n        } else if r == 0 {\n            b += 1\n        } else {\n            c += 1\n        }\n    }\n    if a == 0 {\n        return N - 1\n    }\n    if b == 0 {\n        return N + 1\n    }\n    if c == 0 {\n        return N\n    }\n    return N - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var N = N\n    var count = 0\n    var prev_bit = 1\n    while N > 0 {\n        let curr_bit = N & 1\n        if curr_bit == 1 && prev_bit == 0 {\n            break\n        }\n        prev_bit = curr_bit\n        N >>= 1\n        count += 1\n    }\n    return N | (1 << count)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return -1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << c1)\n    }\n    return N + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return (1 << c0) + (1 << (c1 - 1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << c1)\n    }\n    return N + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1 << (c0 + c1)\n    mask -= 1\n    return N & mask",
    "    var n = N\n    var bit_count = 0\n    var bit_pos = 0\n    var bit_mask = 0\n    var bit_mask_2 = 0\n    var bit_mask_3 = 0\n    var bit_mask_4 = 0\n    \n    while n > 0 {\n        if n & 1 == 1 {\n            bit_count += 1\n            if bit_count == 1 {\n                bit_mask = 1 << bit_pos\n            } else if bit_count == 2 {\n                bit_mask_2 = 1 << bit_pos\n            } else if bit_count == 3 {\n                bit_mask_3 = 1 << bit_pos\n            } else if bit_count == 4 {\n                bit_mask_4 = 1 << bit_pos\n            }\n        }\n        bit_pos += 1\n        n >>= 1\n    }\n    \n    if bit_count == 1 {\n        return N - 1\n    } else if bit_count == 2 {\n        return N - bit_mask\n    } else if bit_count == 3 {\n        return N - bit_mask_2\n    } else if bit_count == 4 {\n        return N - bit_mask_3\n    }\n    \n    return 0",
    "    var num = N\n    var bit_count = 0\n    while num > 0 {\n        bit_count += 1\n        num = num >> 1\n    }\n    return N - (1 << (bit_count - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > c1 {\n        return N - (1 << c1)\n    } else {\n        return N + (1 << c0)\n    }",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1\n    while mask <= N {\n        mask <<= 1\n    }\n    mask >>= 1\n    return N - mask",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c0) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return p + (N - p/2)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << c1)\n    }\n    return N + (1 << c1)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N - (1 << i)",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 == 0 {\n        return N\n    }\n    return N - (1 << c0) + (1 << (c0 - 1)) - 1",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    p >>= 1\n    return N - p + (p >> 1)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1-1)) - 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1\n    while mask <= N {\n        mask <<= 1\n    }\n    mask >>= 1\n    return N - mask",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    var m = 1\n    var i = 0\n    while i < c0 + c1 {\n        if i < c1 {\n            m <<= 1\n            m |= 1\n        } else {\n            m <<= 1\n        }\n        i += 1\n    }\n    return m",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var mask = 1\n    while mask < N {\n        mask <<= 1\n    }\n    mask >>= 1\n    return N ^ mask",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return p + N",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if (n & 1) == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    return N + 1",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c0) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0, c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p <= N {\n        p <<= 1\n    }\n    return p + closest_num(N - p/2)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            c0 += 1\n        } else {\n            c1 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c1 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    return N - (1 << c1) + (1 << (c0 - 1))",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c0 > 0 {\n        return N - (1 << c1)\n    } else {\n        return N - (1 << (c1 - 1))\n    }",
    "    var n = N\n    var i = 0\n    var j = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            i = j\n        }\n        j += 1\n        n >>= 1\n    }\n    return N & ~(1 << i)",
    "    var n = N\n    var c0 = 0\n    var c1 = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            c1 += 1\n        } else {\n            c0 += 1\n        }\n        n >>= 1\n    }\n    if c1 == 1 {\n        return N - 1\n    }\n    var p = 1\n    while p < N {\n        p <<= 1\n    }\n    return p - (1 << c0)"
  ]
}
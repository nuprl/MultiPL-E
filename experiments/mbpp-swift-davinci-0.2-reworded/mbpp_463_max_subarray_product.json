{
  "name": "mbpp_463_max_subarray_product",
  "language": "swift",
  "prompt": "\n/// Write a function to find the maximum product subarray of the given array.\nfunc max_subarray_product(arr: [Int]) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_463_max_subarray_product.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(max_subarray_product(arr: [1, -2, -3, 0, 7, -8, -2]) == 112)\nassert(max_subarray_product(arr: [6, -3, -10, 0, 2]) == 180)\nassert(max_subarray_product(arr: [-2, -40, 0, -2, -3]) == 80)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for a in arr {\n        if a > 0 {\n            max_ending_here = max_ending_here * a\n            min_ending_here = min(min_ending_here * a, 1)\n            flag = 1\n        } else if a == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * a, 1)\n            min_ending_here = temp * a\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        }\n        else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        }\n        else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for a in arr {\n        if a > 0 {\n            max_ending_here = max_ending_here * a\n            min_ending_here = min(min_ending_here * a, 1)\n        } else if a == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * a, 1)\n            min_ending_here = temp * a\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var result = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        if min_so_far > min_ending_here {\n            min_so_far = min_ending_here\n        }\n        result = max(result, max_so_far)\n    }\n    return result",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_product = arr[0]\n    var min_product = arr[0]\n    var max_so_far = arr[0]\n    \n    for i in 1..<arr.count {\n        if arr[i] < 0 {\n            swap(&max_product, &min_product)\n        }\n        max_product = max(arr[i], max_product * arr[i])\n        min_product = min(arr[i], min_product * arr[i])\n        max_so_far = max(max_so_far, max_product)\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = arr[0]\n    var min_so_far = arr[0]\n    var max_ending_here = arr[0]\n    var min_ending_here = arr[0]\n    var result = arr[0]\n    for i in 1..<arr.count {\n        max_ending_here = max(max(max_ending_here * arr[i], min_ending_here * arr[i]), arr[i])\n        min_ending_here = min(min(max_so_far * arr[i], min_so_far * arr[i]), arr[i])\n        result = max(result, max_ending_here)\n    }\n    return result",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var result = Int.min\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        \n        if min_so_far > min_ending_here {\n            min_so_far = min_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        }\n        else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        }\n        else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here*arr[i]\n            min_ending_here = min(min_ending_here*arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here*arr[i], 1)\n            min_ending_here = temp*arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var result = Int.min\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        if min_so_far > min_ending_here {\n            min_so_far = min_ending_here\n        }\n        result = max(max_so_far, result)\n    }\n    return result",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_so_far = arr[0]\n    var min_so_far = arr[0]\n    var max_ending_here = arr[0]\n    var min_ending_here = arr[0]\n    var result = arr[0]\n    \n    for i in 1..<arr.count {\n        max_ending_here = max(max(max_ending_here * arr[i], min_ending_here * arr[i]), arr[i])\n        min_ending_here = min(min(max_so_far * arr[i], min_so_far * arr[i]), arr[i])\n        result = max(result, max_ending_here)\n        max_so_far = max_ending_here\n        min_so_far = min_ending_here\n    }\n    return result",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    if arr.count == 0 {\n        return 0\n    }\n    \n    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var result = Int.min\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        \n        if min_so_far > min_ending_here {\n            min_so_far = min_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1, min_so_far = 1, max_ending_here = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var max_product = Int.min\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_ending_here > max_product {\n            max_product = max_ending_here\n        }\n    }\n    return max_product",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var result = Int.min\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n        if min_so_far > min_ending_here {\n            min_so_far = min_ending_here\n        }\n        result = max(result, max_so_far)\n    }\n    return result",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for a in arr {\n        if a > 0 {\n            max_ending_here = max_ending_here * a\n            min_ending_here = min(min_ending_here * a, 1)\n        } else if a == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * a, 1)\n            min_ending_here = temp * a\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_product = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_ending_here > max_so_far {\n            max_so_far = max_ending_here\n        }\n        if min_ending_here < min_so_far {\n            min_so_far = min_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_so_far = arr[0]\n    var min_so_far = arr[0]\n    var result = arr[0]\n    for i in 1..<arr.count {\n        if arr[i] < 0 {\n            swap(&max_so_far, &min_so_far)\n        }\n        max_so_far = max(arr[i], max_so_far * arr[i])\n        min_so_far = min(arr[i], min_so_far * arr[i])\n        result = max(result, max_so_far)\n    }\n    return result",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = arr[0]\n    var min_so_far = arr[0]\n    var max_ending_here = arr[0]\n    var min_ending_here = arr[0]\n    \n    for i in 1..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max(max_ending_here * arr[i], arr[i])\n            min_ending_here = min(min_ending_here * arr[i], arr[i])\n        } else {\n            max_ending_here = max(min_ending_here * arr[i], arr[i])\n            min_ending_here = min(max_ending_here * arr[i], arr[i])\n        }\n        \n        max_so_far = max(max_so_far, max_ending_here)\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_product = Int.min\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_ending_here > max_so_far {\n            max_so_far = max_ending_here\n        }\n        \n        if min_ending_here < min_so_far {\n            min_so_far = min_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = arr[0]\n    var min_so_far = arr[0]\n    var max_ending_here = arr[0]\n    var min_ending_here = arr[0]\n    var max_product = arr[0]\n    \n    for i in 1..<arr.count {\n        max_ending_here = max(arr[i], max(max_ending_here * arr[i], min_ending_here * arr[i]))\n        min_ending_here = min(arr[i], min(max_so_far * arr[i], min_so_far * arr[i]))\n        max_product = max(max_product, max_ending_here)\n    }\n    return max_product",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for a in arr {\n        if a > 0 {\n            max_ending_here = max_ending_here * a\n            min_ending_here = min(min_ending_here * a, 1)\n        } else if a == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * a, 1)\n            min_ending_here = temp * a\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for a in arr {\n        if a > 0 {\n            max_ending_here = max_ending_here * a\n            min_ending_here = min(min_ending_here * a, 1)\n        } else if a == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * a, 1)\n            min_ending_here = temp * a\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for a in arr {\n        if a > 0 {\n            max_ending_here = max_ending_here * a\n            min_ending_here = min(min_ending_here * a, 1)\n        } else if a == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * a, 1)\n            min_ending_here = temp * a\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for a in arr {\n        if a > 0 {\n            max_ending_here = max_ending_here * a\n            min_ending_here = min(min_ending_here * a, 1)\n        } else if a == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * a, 1)\n            min_ending_here = temp * a\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var min_ending_here = 1\n    var flag = 0\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        }\n        else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        }\n        else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    return max_so_far",
    "    var max_ending_here = 1\n    var min_ending_here = 1\n    var max_so_far = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_ending_here = min(min_ending_here * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_ending_here = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_ending_here * arr[i], 1)\n            min_ending_here = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far",
    "    var max_so_far = 1\n    var min_so_far = 1\n    var max_ending_here = 1\n    var flag = 0\n    \n    for i in 0..<arr.count {\n        if arr[i] > 0 {\n            max_ending_here = max_ending_here * arr[i]\n            min_so_far = min(min_so_far * arr[i], 1)\n            flag = 1\n        } else if arr[i] == 0 {\n            max_ending_here = 1\n            min_so_far = 1\n        } else {\n            let temp = max_ending_here\n            max_ending_here = max(min_so_far * arr[i], 1)\n            min_so_far = temp * arr[i]\n        }\n        \n        if max_so_far < max_ending_here {\n            max_so_far = max_ending_here\n        }\n    }\n    \n    if flag == 0 && max_so_far == 1 {\n        return 0\n    }\n    \n    return max_so_far"
  ]
}
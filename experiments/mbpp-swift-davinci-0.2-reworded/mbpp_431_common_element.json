{
  "name": "mbpp_431_common_element",
  "language": "swift",
  "prompt": "\n/// Write a function that takes two arrays and returns true if they have at least one common element.\nfunc common_element(list1: AnyHashable, list2: AnyHashable) -> Bool? {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_431_common_element.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(common_element(list1: [1, 2, 3, 4, 5], list2: [5, 6, 7, 8, 9]) == true)\nassert(common_element(list1: [1, 2, 3, 4, 5], list2: [6, 7, 8, 9]) == nil)\nassert(common_element(list1: [\"a\", \"b\", \"c\"], list2: [\"d\", \"b\", \"e\"]) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return list1.intersection(list2).isEmpty",
    "    return nil",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    if list1 == list2 {\n        return true\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var set1 = Set<AnyHashable>()\n    var set2 = Set<AnyHashable>()\n    \n    if let list1 = list1 as? [AnyHashable] {\n        for item in list1 {\n            set1.insert(item)\n        }\n    } else {\n        return nil\n    }\n    \n    if let list2 = list2 as? [AnyHashable] {\n        for item in list2 {\n            set2.insert(item)\n        }\n    } else {\n        return nil\n    }\n    \n    return !set1.isDisjoint(with: set2)",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    let list1 = list1 as! [AnyHashable]\n    let list2 = list2 as! [AnyHashable]\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                return true\n            }\n        }\n    }\n    return false",
    "    var common = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? nil : true",
    "    if list1.count < list2.count {\n        for item in list1 {\n            if list2.contains(item) {\n                return true\n            }\n        }\n    } else {\n        for item in list2 {\n            if list1.contains(item) {\n                return true\n            }\n        }\n    }\n    return false",
    "    var set1 = Set<AnyHashable>()\n    var set2 = Set<AnyHashable>()\n    \n    if let list1 = list1 as? [AnyHashable] {\n        for item in list1 {\n            set1.insert(item)\n        }\n    } else {\n        return nil\n    }\n    \n    if let list2 = list2 as? [AnyHashable] {\n        for item in list2 {\n            set2.insert(item)\n        }\n    } else {\n        return nil\n    }\n    \n    return !set1.intersection(set2).isEmpty",
    "    if list1.count > list2.count {\n        for item in list1 {\n            if list2.contains(item) {\n                return true\n            }\n        }\n    } else {\n        for item in list2 {\n            if list1.contains(item) {\n                return true\n            }\n        }\n    }\n    return false",
    "    var common = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    var common: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return nil",
    "    if list1 == list2 {\n        return true\n    }\n    return false",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    for element in list1 {\n        for element2 in list2 {\n            if element == element2 {\n                return true\n            }\n        }\n    }\n    return false",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    var common = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1 == list2",
    "    var set1 = Set<AnyHashable>()\n    var set2 = Set<AnyHashable>()\n    \n    for element in list1 {\n        set1.insert(element)\n    }\n    \n    for element in list2 {\n        set2.insert(element)\n    }\n    \n    return set1.intersection(set2).isEmpty ? false : true",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    let intersection = set1.intersection(set2)\n    return intersection.isEmpty ? nil : true",
    "    return list1.contains(list2)",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    return list1.isEqual(list2)",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    return list1 == list2",
    "    return list1.intersection(list2).isEmpty",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var set1 = Set<AnyHashable>()\n    var set2 = Set<AnyHashable>()\n    for item in list1 {\n        set1.insert(item)\n    }\n    for item in list2 {\n        set2.insert(item)\n    }\n    return !set1.intersection(set2).isEmpty",
    "    var set1 = Set<AnyHashable>()\n    var set2 = Set<AnyHashable>()\n    for item in list1 {\n        set1.insert(item)\n    }\n    for item in list2 {\n        set2.insert(item)\n    }\n    return set1.intersection(set2).isEmpty ? false : true",
    "    var set1 = Set<AnyHashable>()\n    var set2 = Set<AnyHashable>()\n    \n    for item in list1 {\n        set1.insert(item)\n    }\n    for item in list2 {\n        set2.insert(item)\n    }\n    \n    return set1.intersection(set2).isEmpty ? false : true",
    "    return list1.isEqual(list2)",
    "    if list1.count > list2.count {\n        for element in list1 {\n            if list2.contains(element) {\n                return true\n            }\n        }\n    } else {\n        for element in list2 {\n            if list1.contains(element) {\n                return true\n            }\n        }\n    }\n    return false",
    "    return nil",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for element in list1 {\n        if list2.contains(element) {\n            return true\n        }\n    }\n    return false",
    "    return nil",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    if list1.count > list2.count {\n        for i in list1 {\n            if list2.contains(i) {\n                return true\n            }\n        }\n    } else {\n        for i in list2 {\n            if list1.contains(i) {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for i in 0..<list1.count {\n        for j in 0..<list2.count {\n            if list1[i] == list2[j] {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    var common = false\n    for element in list1 {\n        if list2.contains(element) {\n            common = true\n        }\n    }\n    return common",
    "    if list1.count > list2.count {\n        for i in list1 {\n            if list2.contains(i) {\n                return true\n            }\n        }\n    } else {\n        for i in list2 {\n            if list1.contains(i) {\n                return true\n            }\n        }\n    }\n    return false",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    var common: Bool?\n    if list1.contains(list2) {\n        common = true\n    } else {\n        common = false\n    }\n    return common",
    "    return nil",
    "    if list1.count < list2.count {\n        for i in list1 {\n            if list2.contains(i) {\n                return true\n            }\n        }\n    } else {\n        for i in list2 {\n            if list1.contains(i) {\n                return true\n            }\n        }\n    }\n    return false",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var common: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    return list1.contains(list2)",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return !set1.intersection(set2).isEmpty",
    "    return list1.intersection(list2).isEmpty ? nil : true",
    "    return list1.intersection(list2).isEmpty",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                return true\n            }\n        }\n    }\n    return false",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    if list1.count > list2.count {\n        for item in list1 {\n            if list2.contains(item) {\n                return true\n            }\n        }\n    } else {\n        for item in list2 {\n            if list1.contains(item) {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var common: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var result: Bool?\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                result = true\n            }\n        }\n    }\n    return result",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.count < list2.count {\n        for i in list1 {\n            if list2.contains(i) {\n                return true\n            }\n        }\n    } else {\n        for i in list2 {\n            if list1.contains(i) {\n                return true\n            }\n        }\n    }\n    return false",
    "    var common = false\n    for element in list1 {\n        for element2 in list2 {\n            if element == element2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    var common: Bool?\n    if list1.contains(list2) {\n        common = true\n    } else {\n        common = false\n    }\n    return common",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    var common: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return nil",
    "    var result: Bool?\n    if list1.contains(list2) {\n        result = true\n    } else {\n        result = false\n    }\n    return result",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    return list1.contains(list2)",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? nil : true",
    "    return nil",
    "    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                return true\n            }\n        }\n    }\n    return false",
    "    var result: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                result = true\n            }\n        }\n    }\n    return result",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    var result: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                result = true\n            }\n        }\n    }\n    return result",
    "    var result: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                result = true\n            }\n        }\n    }\n    return result",
    "    return list1.contains(list2)",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1.contains(list2)",
    "    return nil",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    return nil",
    "    return nil",
    "    var result: Bool?\n    for element in list1 {\n        for element2 in list2 {\n            if element == element2 {\n                result = true\n            }\n        }\n    }\n    return result",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    var common = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    var common = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.contains(list2)",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1 == list2",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for item in list1 {\n        if list2.contains(item) {\n            return true\n        }\n    }\n    return false",
    "    return list1.intersection(list2).count > 0",
    "    var result: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                result = true\n            }\n        }\n    }\n    return result",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? nil : true",
    "    return nil",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                return true\n            }\n        }\n    }\n    return false",
    "    return nil",
    "    if list1.count > list2.count {\n        for item in list1 {\n            if list2.contains(item) {\n                return true\n            }\n        }\n    } else {\n        for item in list2 {\n            if list1.contains(item) {\n                return true\n            }\n        }\n    }\n    return false",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return nil",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var common: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                return true\n            }\n        }\n    }\n    return false",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for item in list1 {\n        if list2.contains(item) {\n            return true\n        }\n    }\n    return false",
    "    return list1.isEqual(list2)",
    "    if list1 == list2 {\n        return true\n    }\n    return false",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for item in list1 {\n        if list2.contains(item) {\n            return true\n        }\n    }\n    return false",
    "    var result: Bool?\n    if list1.contains(list2) {\n        result = true\n    } else {\n        result = false\n    }\n    return result",
    "    var result: Bool?\n    if list1.contains(list2) {\n        result = true\n    } else {\n        result = false\n    }\n    return result",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.count > list2.count {\n        for i in list1 {\n            if list2.contains(i) {\n                return true\n            }\n        }\n    } else {\n        for i in list2 {\n            if list1.contains(i) {\n                return true\n            }\n        }\n    }\n    return nil",
    "    var result: Bool?\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                result = true\n            }\n        }\n    }\n    return result",
    "    var common: Bool?\n    for element in list1 {\n        for element2 in list2 {\n            if element == element2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    if list1.contains(list2) {\n        return true\n    }\n    return false",
    "    return list1 == list2",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    let intersection = set1.intersection(set2)\n    return intersection.count > 0",
    "    if list1.count == 0 || list2.count == 0 {\n        return nil\n    }\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    var list1 = list1\n    var list2 = list2\n    var common = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return nil",
    "    var result: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                result = true\n            }\n        }\n    }\n    return result",
    "    var set1 = Set<AnyHashable>()\n    var set2 = Set<AnyHashable>()\n    for element in list1 {\n        set1.insert(element)\n    }\n    for element in list2 {\n        set2.insert(element)\n    }\n    return !set1.intersection(set2).isEmpty",
    "    if list1.count > list2.count {\n        return list1.contains(where: list2.contains)\n    } else {\n        return list2.contains(where: list1.contains)\n    }",
    "    for i in list1 {\n        for j in list2 {\n            if i == j {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? false : true",
    "    var common = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.intersection(list2).isEmpty ? nil : true",
    "    var set = Set<AnyHashable>()\n    for item in list1 {\n        set.insert(item)\n    }\n    for item in list2 {\n        if set.contains(item) {\n            return true\n        }\n    }\n    return false",
    "    return list1.intersection(list2).count > 0",
    "    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                return true\n            }\n        }\n    }\n    return nil",
    "    return list1 == list2",
    "    var result: Bool?\n    for i in 0..<list1.count {\n        for j in 0..<list2.count {\n            if list1[i] == list2[j] {\n                result = true\n            }\n        }\n    }\n    return result",
    "    let set1 = Set(list1)\n    let set2 = Set(list2)\n    return set1.intersection(set2).isEmpty ? nil : true",
    "    var common: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                common = true\n            }\n        }\n    }\n    return common",
    "    return list1.isEqual(list2)",
    "    if list1.count > list2.count {\n        for i in list1 {\n            if list2.contains(i) {\n                return true\n            }\n        }\n    } else {\n        for i in list2 {\n            if list1.contains(i) {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    if list1.count > list2.count {\n        for i in list1 {\n            if list2.contains(i) {\n                return true\n            }\n        }\n    } else {\n        for i in list2 {\n            if list1.contains(i) {\n                return true\n            }\n        }\n    }\n    return false",
    "    var common = false\n    for element in list1 {\n        for element2 in list2 {\n            if element == element2 {\n                common = true\n            }\n        }\n    }\n    return common",
    "    if list1.contains(list2) {\n        return true\n    } else {\n        return false\n    }",
    "    if list1.count != list2.count {\n        return nil\n    }\n    for i in 0..<list1.count {\n        for j in 0..<list2.count {\n            if list1[i] == list2[j] {\n                return true\n            }\n        }\n    }\n    return false",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return list1 == list2",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    return nil",
    "    var result: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                result = true\n            }\n        }\n    }\n    return result",
    "    return list1.intersection(list2).isEmpty ? false : true",
    "    var result: Bool?\n    for i in list1 {\n        for j in list2 {\n            if i as? String == j as? String {\n                result = true\n            } else {\n                result = false\n            }\n        }\n    }\n    return result",
    "    var result: Bool? = false\n    for i in list1 {\n        for j in list2 {\n            if i == j {\n                result = true\n            }\n        }\n    }\n    return result",
    "    var common = false\n    for item in list1 {\n        for item2 in list2 {\n            if item == item2 {\n                common = true\n            }\n        }\n    }\n    return common"
  ]
}
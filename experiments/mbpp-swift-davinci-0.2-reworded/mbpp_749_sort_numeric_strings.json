{
  "name": "mbpp_749_sort_numeric_strings",
  "language": "swift",
  "prompt": "\n/// Write a function to sort a given array of strings of numbers numerically. https://www.geeksforgeeks.org/swiftthon-sort-numeric-strings-in-a-array/\nfunc sort_numeric_strings(nums_str: [String]) -> [Int] {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_749_sort_numeric_strings.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sort_numeric_strings(nums_str: [\"4\", \"12\", \"45\", \"7\", \"0\", \"100\", \"200\", \"-12\", \"-500\"]) == [-500, -12, 0, 4, 7, 12, 45, 100, 200])\nassert(sort_numeric_strings(nums_str: [\"2\", \"3\", \"8\", \"4\", \"7\", \"9\", \"8\", \"2\", \"6\", \"5\", \"1\", \"6\", \"1\", \"2\", \"3\", \"4\", \"6\", \"9\", \"1\", \"2\"]) == [1, 1, 1, 2, 2, 2, 2, 3, 3, 4, 4, 5, 6, 6, 6, 7, 8, 8, 9, 9])\nassert(sort_numeric_strings(nums_str: [\"1\", \"3\", \"5\", \"7\", \"1\", \"3\", \"13\", \"15\", \"17\", \"5\", \"7 \", \"9\", \"1\", \"11\"]) == [1, 1, 1, 3, 3, 5, 5, 7, 7, 9, 11, 13, 15, 17])",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    return nums_str.map { Int($0)! }.sorted()",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    var nums_int: [Int] = []\n    for num_str in nums_str {\n        nums_int.append(Int(num_str)!)\n    }\n    nums_int.sort()\n    return nums_int",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()",
    "    var nums: [Int] = []\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums",
    "    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums",
    "    var nums_int = [Int]()\n    for num in nums_str {\n        nums_int.append(Int(num)!)\n    }\n    nums_int.sort()\n    return nums_int",
    "    let nums_int = nums_str.map { Int($0)! }\n    return nums_int.sorted()",
    "    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    return nums_str.map{Int($0)!}.sorted()",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    return nums_str.map { Int($0)! }.sorted()",
    "    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()",
    "    let nums = nums_str.map { Int($0)! }\n    return nums.sorted()",
    "    var nums = [Int]()\n    for num in nums_str {\n        nums.append(Int(num)!)\n    }\n    nums.sort()\n    return nums"
  ]
}
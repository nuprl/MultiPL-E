{
  "name": "mbpp_281_all_unique",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to check if the elements of a given array are unique or not.\nfunc all_unique(test_list: [Int]) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_281_all_unique.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_unique(test_list: [1, 2, 3]) == true)\nassert(all_unique(test_list: [1, 2, 1, 2]) == false)\nassert(all_unique(test_list: [1, 2, 3, 4, 5]) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var unique_list = [Int]()\n    for element in test_list {\n        if unique_list.contains(element) {\n            return false\n        } else {\n            unique_list.append(element)\n        }\n    }\n    return true",
    "    var unique_list = [Int]()\n    for i in test_list {\n        if !unique_list.contains(i) {\n            unique_list.append(i)\n        }\n    }\n    return unique_list.count == test_list.count",
    "    var unique_list = [Int]()\n    for element in test_list {\n        if unique_list.contains(element) {\n            return false\n        } else {\n            unique_list.append(element)\n        }\n    }\n    return true",
    "    var unique_list = [Int]()\n    for i in test_list {\n        if unique_list.contains(i) {\n            return false\n        }\n        unique_list.append(i)\n    }\n    return true",
    "    var unique_list = [Int]()\n    for i in test_list {\n        if !unique_list.contains(i) {\n            unique_list.append(i)\n        }\n    }\n    return unique_list.count == test_list.count",
    "    var test_set: Set<Int> = []\n    for i in test_list {\n        if test_set.contains(i) {\n            return false\n        }\n        test_set.insert(i)\n    }\n    return true",
    "    var unique_list = [Int]()\n    for element in test_list {\n        if unique_list.contains(element) {\n            return false\n        } else {\n            unique_list.append(element)\n        }\n    }\n    return true",
    "    var unique_list: [Int] = []\n    for item in test_list {\n        if !unique_list.contains(item) {\n            unique_list.append(item)\n        }\n    }\n    return unique_list.count == test_list.count",
    "    var unique_list = [Int]()\n    for i in test_list {\n        if !unique_list.contains(i) {\n            unique_list.append(i)\n        }\n    }\n    return unique_list.count == test_list.count",
    "    var unique_list: [Int] = []\n    for i in test_list {\n        if unique_list.contains(i) {\n            return false\n        }\n        unique_list.append(i)\n    }\n    return true",
    "    var unique_list = [Int]()\n    for i in test_list {\n        if unique_list.contains(i) {\n            return false\n        } else {\n            unique_list.append(i)\n        }\n    }\n    return true",
    "    var unique_list = [Int]()\n    for item in test_list {\n        if unique_list.contains(item) {\n            return false\n        } else {\n            unique_list.append(item)\n        }\n    }\n    return true",
    "    var unique_list = [Int]()\n    for element in test_list {\n        if unique_list.contains(element) {\n            return false\n        }\n        unique_list.append(element)\n    }\n    return true",
    "    var set = Set<Int>()\n    for item in test_list {\n        if set.contains(item) {\n            return false\n        }\n        set.insert(item)\n    }\n    return true",
    "    var unique_list = [Int]()\n    for i in test_list {\n        if unique_list.contains(i) {\n            return false\n        }\n        unique_list.append(i)\n    }\n    return true",
    "    var unique_list = [Int]()\n    for element in test_list {\n        if unique_list.contains(element) {\n            return false\n        } else {\n            unique_list.append(element)\n        }\n    }\n    return true",
    "    var unique_list = [Int]()\n    for item in test_list {\n        if !unique_list.contains(item) {\n            unique_list.append(item)\n        }\n    }\n    return unique_list.count == test_list.count",
    "    var unique_list = [Int]()\n    for item in test_list {\n        if unique_list.contains(item) {\n            return false\n        } else {\n            unique_list.append(item)\n        }\n    }\n    return true",
    "    var unique_list = [Int]()\n    for num in test_list {\n        if unique_list.contains(num) {\n            return false\n        } else {\n            unique_list.append(num)\n        }\n    }\n    return true",
    "    var unique_list = [Int]()\n    for i in test_list {\n        if unique_list.contains(i) {\n            return false\n        }\n        unique_list.append(i)\n    }\n    return true"
  ]
}
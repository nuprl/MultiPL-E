{
  "name": "mbpp_283_validate",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\nfunc validate(n: Int) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(validate(n: 1234) == true)\nassert(validate(n: 51241) == false)\nassert(validate(n: 321) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](count: 10, repeatedValue: 0)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n = n / 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var num = n\n    while num > 0 {\n        digits.append(num % 10)\n        num /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for digit in digits {\n        if counts[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var count = [Int](repeating: 0, count: 10)\n    var temp = n\n    while temp > 0 {\n        count[temp % 10] += 1\n        temp /= 10\n    }\n    temp = n\n    while temp > 0 {\n        if count[temp % 10] > temp % 10 {\n            return false\n        }\n        temp /= 10\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var count = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        count[digit] += 1\n    }\n    for (digit, freq) in zip(digits, count) {\n        if freq > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var num = n\n    while num > 0 {\n        digits.append(num % 10)\n        num /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for (digit, count) in zip(digits, freq) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        num /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var frequency = [Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits.append(digit)\n        n /= 10\n    }\n    for i in digits {\n        frequency.append(digits.filter{$0 == i}.count)\n    }\n    for i in 0..<digits.count {\n        if frequency[i] > digits[i] {\n            return false\n        }\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    let counts = digits.reduce(into: [:]) { $0[$1, default: 0] += 1 }\n    return digits.allSatisfy { counts[$0]! <= $0 }",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        num /= 10\n    }\n    for (digit, freq) in digits {\n        if freq > digit {\n            return false\n        }\n    }\n    return true",
    "    let digits = String(n).compactMap { Int(String($0)) }\n    let freq = digits.reduce(into: [:]) { $0[$1, default: 0] += 1 }\n    return digits.allSatisfy { freq[$0, default: 0] <= $0 }",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        num /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 1..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var count = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        count[digit] += 1\n        n /= 10\n    }\n    for i in 0..<10 {\n        if count[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var freq = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits.append(digit)\n        freq[digit] += 1\n        n /= 10\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] += 1\n        n /= 10\n    }\n    for i in 1..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        if let count = digits[Int(String(digit))!] {\n            digits[Int(String(digit))!] = count + 1\n        } else {\n            digits[Int(String(digit))!] = 1\n        }\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var number = n\n    while number > 0 {\n        digits.append(number % 10)\n        number /= 10\n    }\n    var digitCounts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        digitCounts[digit] += 1\n    }\n    for i in 0..<10 {\n        if digitCounts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var num = n\n    while num > 0 {\n        digits[num % 10] += 1\n        num /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] += 1\n        n /= 10\n    }\n    for i in 1..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var frequency = [Int](repeating: 0, count: 10)\n    var temp = n\n    while temp > 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    for digit in digits {\n        frequency[digit] += 1\n    }\n    for i in 0..<10 {\n        if frequency[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        if let value = digits[Int(String(digit))!] {\n            digits[Int(String(digit))!] = value + 1\n        } else {\n            digits[Int(String(digit))!] = 1\n        }\n    }\n    for (key, value) in digits {\n        if value > key {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var count = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        count[digit] += 1\n    }\n    for i in 0..<10 {\n        if count[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        digits[Int(String(digit))!, default: 0] += 1\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if digit < count {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    let freq = digits.reduce(into: [:]) { $0[$1, default: 0] += 1 }\n    for digit in digits {\n        if freq[digit]! > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var frequency = [Int]()\n    var temp = n\n    while temp > 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    for i in 0..<digits.count {\n        frequency.append(0)\n        for j in 0..<digits.count {\n            if digits[i] == digits[j] {\n                frequency[i] += 1\n            }\n        }\n    }\n    for i in 0..<digits.count {\n        if frequency[i] > digits[i] {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var dict = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if let count = dict[digit] {\n            dict[digit] = count + 1\n        } else {\n            dict[digit] = 1\n        }\n        n /= 10\n    }\n    for (digit, count) in dict {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for d in digits {\n        counts[d] += 1\n    }\n    for i in 1...9 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var num = n\n    while num > 0 {\n        digits[num % 10] += 1\n        num /= 10\n    }\n    for i in 0..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<counts.count {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var freq = [Int]()\n    var temp = n\n    while temp != 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    for i in 0..<digits.count {\n        freq.append(0)\n        for j in 0..<digits.count {\n            if digits[i] == digits[j] {\n                freq[i] += 1\n            }\n        }\n    }\n    for i in 0..<digits.count {\n        if freq[i] > digits[i] {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digitCounts = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digitCounts[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<10 {\n        if digitCounts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](count: 10, repeatedValue: 0)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits: [Int] = []\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq: [Int] = Array(repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, freq) in digits {\n        if freq > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        num /= 10\n    }\n    for (digit, freq) in digits {\n        if freq > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n = n / 10\n    }\n    var freq = [Int](count: 10, repeatedValue: 0)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true",
    "    var freq = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if let f = freq[digit] {\n            freq[digit] = f + 1\n        } else {\n            freq[digit] = 1\n        }\n        n /= 10\n    }\n    for (digit, f) in freq {\n        if f > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] += 1\n        n /= 10\n    }\n    for i in 1..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var str = String(n)\n    var dict = [Character: Int]()\n    for c in str {\n        if let count = dict[c] {\n            dict[c] = count + 1\n        } else {\n            dict[c] = 1\n        }\n    }\n    for c in str {\n        if let count = dict[c] {\n            if count > Int(String(c)) {\n                return false\n            }\n        }\n    }\n    return true",
    "    var count = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        count[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<10 {\n        if count[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var num = n\n    while num > 0 {\n        digits.append(num % 10)\n        num /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    return digits.allSatisfy { $0.key >= $0.value }",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, freq) in digits {\n        if freq > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var frequency = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        frequency[digit] += 1\n    }\n    for digit in digits {\n        if frequency[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var n = n\n    var digits = [Int: Int]()\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, freq) in digits {\n        if freq > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](count: 10, repeatedValue: 0)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var count = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        count[digit] += 1\n    }\n    for i in 0..<10 {\n        if count[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var num = n\n    while num > 0 {\n        digits[num % 10] += 1\n        num /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var count = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        count[digit] = (count[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, freq) in count {\n        if freq > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](count: 10, repeatedValue: 0)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    return digits.allSatisfy { $0.key >= $0.value }",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] += 1\n        n /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    let counts = digits.reduce(into: [:]) { $0[$1, default: 0] += 1 }\n    return digits.allSatisfy { counts[$0]! <= $0 }",
    "    var digitCount = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digitCount[digit] = (digitCount[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digitCount {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        num /= 10\n    }\n    for (digit, count) in digits {\n        if digit < count {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var temp = n\n    while temp > 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    \n    var digitCount = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        digitCount[digit] += 1\n    }\n    \n    for i in 0...9 {\n        if digitCount[i] > i {\n            return false\n        }\n    }\n    \n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        if let count = digits[Int(String(digit))!] {\n            digits[Int(String(digit))!] = count + 1\n        } else {\n            digits[Int(String(digit))!] = 1\n        }\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        num /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        if let count = digits[Int(String(digit))!] {\n            digits[Int(String(digit))!] = count + 1\n        } else {\n            digits[Int(String(digit))!] = 1\n        }\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var temp = n\n    while temp > 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        if let count = digits[Int(String(digit))!] {\n            digits[Int(String(digit))!] = count + 1\n        } else {\n            digits[Int(String(digit))!] = 1\n        }\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 1..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits: [Int] = []\n    var num = n\n    while num > 0 {\n        digits.append(num % 10)\n        num /= 10\n    }\n    var counts: [Int: Int] = [:]\n    for digit in digits {\n        counts[digit] = (counts[digit] ?? 0) + 1\n    }\n    for (digit, count) in counts {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for (digit, count) in zip(digits, freq) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var n = n\n    var digits = [Int: Int]()\n    while n > 0 {\n        let digit = n % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in counts.enumerated() {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for d in digits {\n        counts[d] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 1..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var frequency = [Int: Int]()\n    for digit in String(n) {\n        frequency[Int(String(digit))!] = (frequency[Int(String(digit))!] ?? 0) + 1\n    }\n    for digit in String(n) {\n        if frequency[Int(String(digit))!]! > Int(String(digit))! {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var temp = n\n    while temp > 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var digitCounts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        digitCounts[digit] += 1\n    }\n    for (digit, count) in zip(digits, digitCounts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        if let count = digits[Int(String(digit))!] {\n            digits[Int(String(digit))!] = count + 1\n        } else {\n            digits[Int(String(digit))!] = 1\n        }\n    }\n    for (key, value) in digits {\n        if value > key {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    let freq = digits.reduce(into: [:]) { $0[$1, default: 0] += 1 }\n    for digit in digits {\n        if freq[digit]! > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    for digit in String(n) {\n        if let count = digits[Int(String(digit))!] {\n            digits[Int(String(digit))!] = count + 1\n        } else {\n            digits[Int(String(digit))!] = 1\n        }\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var dic = [Int: Int]()\n    for c in String(n) {\n        if let num = Int(String(c)) {\n            if let count = dic[num] {\n                dic[num] = count + 1\n            } else {\n                dic[num] = 1\n            }\n        }\n    }\n    for (key, value) in dic {\n        if value > key {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](count: 10, repeatedValue: 0)\n    for digit in digits {\n        freq[digit]++\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var frequency = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        frequency[digit] += 1\n    }\n    for digit in 0..<10 {\n        if frequency[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    let digits = String(n).map { Int(String($0))! }\n    let counts = digits.reduce(into: [:]) { counts, digit in counts[digit, default: 0] += 1 }\n    return counts.allSatisfy { $0.value <= $0.key }",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        digits[digit] += 1\n        num /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var num = n\n    while num > 0 {\n        digits[num % 10] += 1\n        num /= 10\n    }\n    for i in 0..<10 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var frequency = [Int]()\n    var temp = n\n    while temp > 0 {\n        digits.append(temp % 10)\n        temp /= 10\n    }\n    for i in 0..<digits.count {\n        var count = 0\n        for j in 0..<digits.count {\n            if digits[i] == digits[j] {\n                count += 1\n            }\n        }\n        frequency.append(count)\n    }\n    for i in 0..<frequency.count {\n        if frequency[i] > digits[i] {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var num = n\n    while num > 0 {\n        digits.append(num % 10)\n        num /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n = n / 10\n    }\n    var freq = [Int](count: 10, repeatedValue: 0)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for digit in digits {\n        if freq[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var num = n\n    while num > 0 {\n        digits[num % 10] += 1\n        num /= 10\n    }\n    for i in 0..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        num /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        digits[n % 10] += 1\n        n /= 10\n    }\n    for i in 1..<digits.count {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<counts.count {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, frequency) in digits {\n        if frequency > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var num = n\n    var digits = [Int]()\n    while num > 0 {\n        digits.append(num % 10)\n        num /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for i in 0..<freq.count {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for (digit, count) in zip(digits, counts) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int](repeating: 0, count: 10)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit] += 1\n        n /= 10\n    }\n    for i in 1...9 {\n        if digits[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var num = n\n    while num > 0 {\n        let digit = num % 10\n        digits[digit] = (digits[digit] ?? 0) + 1\n        num /= 10\n    }\n    for (digit, frequency) in digits {\n        if digit < frequency {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        freq[digit] += 1\n    }\n    for (digit, count) in zip(digits, freq) {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var frequency = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        frequency[digit] += 1\n    }\n    for digit in digits {\n        if frequency[digit] > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var frequency = [Int](count: 10, repeatedValue: 0)\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits.append(digit)\n        frequency[digit]++\n        n /= 10\n    }\n    for digit in digits {\n        if digit < frequency[digit] {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        digits[digit, default: 0] += 1\n        n /= 10\n    }\n    return digits.allSatisfy { $0.key >= $0.value }",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for i in 0..<10 {\n        if freq[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var n = n\n    while n > 0 {\n        let digit = n % 10\n        if digits[digit] == nil {\n            digits[digit] = 1\n        } else {\n            digits[digit]! += 1\n        }\n        n /= 10\n    }\n    for (digit, count) in digits {\n        if count > digit {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var counts = [Int](repeating: 0, count: 10)\n    for digit in digits {\n        counts[digit] += 1\n    }\n    for i in 0..<10 {\n        if counts[i] > i {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int: Int]()\n    var temp = n\n    while temp > 0 {\n        let digit = temp % 10\n        temp /= 10\n        if let count = digits[digit] {\n            digits[digit] = count + 1\n        } else {\n            digits[digit] = 1\n        }\n    }\n    for (digit, count) in digits {\n        if digit < count {\n            return false\n        }\n    }\n    return true",
    "    var digits = [Int]()\n    var n = n\n    while n > 0 {\n        digits.append(n % 10)\n        n /= 10\n    }\n    var freq = [Int](repeating: 0, count: 10)\n    for d in digits {\n        freq[d] += 1\n    }\n    for d in digits {\n        if freq[d] > d {\n            return false\n        }\n    }\n    return true"
  ]
}
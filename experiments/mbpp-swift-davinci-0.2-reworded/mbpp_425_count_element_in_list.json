{
  "name": "mbpp_425_count_element_in_list",
  "language": "swift",
  "prompt": "\n/// Write a function to count the number of subarrays containing a particular element.\nfunc count_element_in_list(list1: AnyHashable, x: AnyHashable) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_425_count_element_in_list.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(count_element_in_list(list1: [[1, 3], [5, 7], [1, 11], [1, 15, 7]], x: 1) == 3)\nassert(count_element_in_list(list1: [[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\", \"E\"], [\"B\", \"C\", \"D\"]], x: \"A\") == 3)\nassert(count_element_in_list(list1: [[\"A\", \"B\"], [\"A\", \"C\"], [\"A\", \"D\", \"E\"], [\"B\", \"C\", \"D\"]], x: \"E\") == 1)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        var j = i\n        while j < list1.count && list1[j] == x {\n            count += 1\n            j += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    var list = list1 as! [AnyHashable]\n    for i in 0..<list.count {\n        if list[i] == x {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i...j] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        if list1[i] == x {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        if list1[i] == x {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        if list1[i] == x {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    var list = list1 as! [AnyHashable]\n    for i in 0..<list.count {\n        if list[i] == x {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i..<j].contains(x) {\n                count += 1\n            }\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        if list1[i] == x {\n            count += 1\n        }\n    }\n    return count",
    "    var count = 0\n    for i in 0..<list1.count {\n        for j in i..<list1.count {\n            if list1[i] == x {\n                count += 1\n            }\n        }\n    }\n    return count"
  ]
}
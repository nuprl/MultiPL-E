{
  "name": "mbpp_784_mul_even_odd",
  "language": "swift",
  "prompt": "\n/// Write a function to find the product of first even and odd number of a given array.\nfunc mul_even_odd(list1: [Int]) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_784_mul_even_odd.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(mul_even_odd(list1: [1, 3, 5, 7, 4, 1, 6, 8]) == 4)\nassert(mul_even_odd(list1: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]) == 2)\nassert(mul_even_odd(list1: [1, 5, 7, 9, 10]) == 10)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var even = 0\n    var odd = 0\n    var count = 0\n    for i in list1 {\n        if i % 2 == 0 {\n            if even == 0 {\n                even = i\n                count += 1\n            }\n        }\n        else {\n            if odd == 0 {\n                odd = i\n                count += 1\n            }\n        }\n        if count == 2 {\n            break\n        }\n    }\n    return even * odd",
    "    var even_num = 0\n    var odd_num = 0\n    var count = 0\n    for i in list1 {\n        if i % 2 == 0 {\n            if count == 0 {\n                even_num = i\n                count += 1\n            }\n        }\n        else {\n            if count == 1 {\n                odd_num = i\n                count += 1\n            }\n        }\n    }\n    return even_num * odd_num",
    "    var even = 0\n    var odd = 0\n    var count = 0\n    for i in list1 {\n        if i % 2 == 0 {\n            if count == 0 {\n                even = i\n                count += 1\n            }\n        } else {\n            if count == 1 {\n                odd = i\n                count += 1\n            }\n        }\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 0\n    var odd = 0\n    var i = 0\n    while even == 0 || odd == 0 {\n        if list1[i] % 2 == 0 {\n            even = list1[i]\n        } else {\n            odd = list1[i]\n        }\n        i += 1\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    var i = 0\n    while i < list1.count {\n        if list1[i] % 2 == 0 {\n            even = even * list1[i]\n        } else {\n            odd = odd * list1[i]\n        }\n        i += 1\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 0\n    var odd = 0\n    var i = 0\n    while i < list1.count {\n        if list1[i] % 2 == 0 {\n            even = list1[i]\n            break\n        }\n        i += 1\n    }\n    i = 0\n    while i < list1.count {\n        if list1[i] % 2 != 0 {\n            odd = list1[i]\n            break\n        }\n        i += 1\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    var i = 0\n    while i < list1.count {\n        if list1[i] % 2 == 0 {\n            even = even * list1[i]\n        } else {\n            odd = odd * list1[i]\n        }\n        i = i + 1\n    }\n    return even * odd",
    "    var even = 0\n    var odd = 0\n    var count = 0\n    for i in list1 {\n        if i % 2 == 0 {\n            if count == 0 {\n                even = i\n                count += 1\n            }\n        } else {\n            if count == 1 {\n                odd = i\n                count += 1\n            }\n        }\n    }\n    return even * odd",
    "    var even_num = 0\n    var odd_num = 0\n    var count = 0\n    for i in list1 {\n        if i % 2 == 0 {\n            if count == 0 {\n                even_num = i\n                count += 1\n            }\n        }\n        else {\n            if count == 1 {\n                odd_num = i\n                break\n            }\n        }\n    }\n    return even_num * odd_num",
    "    var even = 0\n    var odd = 0\n    var i = 0\n    var j = 0\n    for i in list1 {\n        if i % 2 == 0 {\n            even = i\n            break\n        }\n    }\n    for j in list1 {\n        if j % 2 != 0 {\n            odd = j\n            break\n        }\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 0\n    var odd = 0\n    var i = 0\n    while i < list1.count {\n        if list1[i] % 2 == 0 {\n            even = list1[i]\n            break\n        }\n        i += 1\n    }\n    i = 0\n    while i < list1.count {\n        if list1[i] % 2 != 0 {\n            odd = list1[i]\n            break\n        }\n        i += 1\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd",
    "    var even = 1\n    var odd = 1\n    for i in 0..<list1.count {\n        if i % 2 == 0 {\n            even *= list1[i]\n        } else {\n            odd *= list1[i]\n        }\n    }\n    return even * odd"
  ]
}
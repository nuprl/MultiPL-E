{
  "name": "mbpp_398_sum_of_digits",
  "language": "swift",
  "prompt": "\n/// Write a function to compute the sum of digits of each number of a given array.\nfunc sum_of_digits(nums: AnyHashable) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_398_sum_of_digits.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(sum_of_digits(nums: [10, 2, 56]) == 14)\nassert(sum_of_digits(nums: [[10, 20, 4, 5, \"b\", 70, \"a\"]]) == 19)\nassert(sum_of_digits(nums: [10, 20, -4, 5, -70]) == 19)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums as! [Int] {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums as! [Int] {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums as! [Int] {\n        var num = num\n        while num > 0 {\n            sum += num % 10\n            num /= 10\n        }\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums as! [Int] {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for i in nums {\n        sum += i\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        let str = String(describing: num)\n        for char in str {\n            sum += Int(String(char))!\n        }\n    }\n    return sum",
    "    let nums = nums as! [Int]\n    var sum = 0\n    for num in nums {\n        var num = num\n        while num > 0 {\n            sum += num % 10\n            num /= 10\n        }\n    }\n    return sum",
    "    return 0",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum",
    "    var sum = 0\n    for num in nums {\n        sum += num\n    }\n    return sum"
  ]
}
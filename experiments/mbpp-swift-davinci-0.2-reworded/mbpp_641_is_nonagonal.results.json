{
  "name": "mbpp_641_is_nonagonal",
  "language": "swift",
  "prompt": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_641_is_nonagonal.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n*(3*n-2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpmi1t760e/tmpmi1t760e.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8832944c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b883263bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b883263b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b883263a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmi1t760e                        0x000055ae325bd1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002b8832b30460 __libc_start_main + 245\n6    tmpmi1t760e                        0x000055ae325bce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    let x = (sqrt(8 * Double(n) + 1) - 1) / 2\n    return Int(x)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "/tmp/tmpsie72xec.swift:4:14: error: cannot find 'sqrt' in scope\n    let x = (sqrt(8 * Double(n) + 1) - 1) / 2\n             ^~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (n + 1) * (n + 2)) / 6\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmp7yjxf7el/tmp7yjxf7el.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f28aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f287e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0f287e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0f287e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7yjxf7el                        0x000055909c032247 <unavailable> + 4679\n5    libc.so.6                          0x00002b0f28cd6460 __libc_start_main + 245\n6    tmp7yjxf7el                        0x000055909c031ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (n + 1) * (n + 2)) / 6\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmp7yjxf7el/tmp7yjxf7el.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f28aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f287e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0f287e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0f287e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7yjxf7el                        0x000055909c032247 <unavailable> + 4679\n5    libc.so.6                          0x00002b0f28cd6460 __libc_start_main + 245\n6    tmp7yjxf7el                        0x000055909c031ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (n + 1) * (n + 2)) / 6\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmp7yjxf7el/tmp7yjxf7el.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f28aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f287e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0f287e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0f287e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7yjxf7el                        0x000055909c032247 <unavailable> + 4679\n5    libc.so.6                          0x00002b0f28cd6460 __libc_start_main + 245\n6    tmp7yjxf7el                        0x000055909c031ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmp471qgm5z/tmp471qgm5z.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b543928cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5438f83b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5438f83988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5438f827b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp471qgm5z                        0x0000563edfb5a247 <unavailable> + 4679\n5    libc.so.6                          0x00002b5439478460 __libc_start_main + 245\n6    tmp471qgm5z                        0x0000563edfb59ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 2)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmpnqduzop3/tmpnqduzop3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1a8819cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1a87e93b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1a87e93988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1a87e927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnqduzop3                        0x0000563e2e375247 <unavailable> + 4679\n5    libc.so.6                          0x00002b1a88388460 __libc_start_main + 245\n6    tmpnqduzop3                        0x0000563e2e374ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    var i = 1\n    var sum = 0\n    while sum < n {\n        sum += i\n        i += 1\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmpncas1_cr/tmpncas1_cr.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade7deb5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade7dbacb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ade7dbac988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ade7dbab7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpncas1_cr                        0x00005615a9c321b7 <unavailable> + 4535\n5    libc.so.6                          0x00002ade7e0a1460 __libc_start_main + 245\n6    tmpncas1_cr                        0x00005615a9c31e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (n + 1) * (n + 2)) / 6\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmp7yjxf7el/tmp7yjxf7el.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0f28aeac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0f287e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0f287e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0f287e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7yjxf7el                        0x000055909c032247 <unavailable> + 4679\n5    libc.so.6                          0x00002b0f28cd6460 __libc_start_main + 245\n6    tmp7yjxf7el                        0x000055909c031ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return (n * (3 * n - 1)) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmph3ezo_qp/tmph3ezo_qp.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b286cad4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b286c7cbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b286c7cb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b286c7ca7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph3ezo_qp                        0x000055cf75d41247 <unavailable> + 4679\n5    libc.so.6                          0x00002b286ccc0460 __libc_start_main + 245\n6    tmph3ezo_qp                        0x000055cf75d40ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmpj0fvvcu6/tmpj0fvvcu6.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af01741bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af017112b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af017112988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af0171117b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj0fvvcu6                        0x000055a632bec337 <unavailable> + 4919\n5    libc.so.6                          0x00002af017607460 __libc_start_main + 245\n6    tmpj0fvvcu6                        0x000055a632bebfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    var i = 1\n    var sum = 0\n    while sum < n {\n        sum += i\n        i += 1\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmpncas1_cr/tmpncas1_cr.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ade7deb5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ade7dbacb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ade7dbac988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ade7dbab7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpncas1_cr                        0x00005615a9c321b7 <unavailable> + 4535\n5    libc.so.6                          0x00002ade7e0a1460 __libc_start_main + 245\n6    tmpncas1_cr                        0x00005615a9c31e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (n + 1) / 2\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1666122621,
      "stdout": "",
      "stderr": "tmphwonskdb/tmphwonskdb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab8eaa2ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab8ea725b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab8ea725988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab8ea7247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphwonskdb                        0x000055edc4e72247 <unavailable> + 4679\n5    libc.so.6                          0x00002ab8eac1a460 __libc_start_main + 245\n6    tmphwonskdb                        0x000055edc4e71ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a function to find the nth nonagonal number.\nfunc is_nonagonal(n: Int) -> Int {\n    return n * (3 * n - 2)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(is_nonagonal(n: 10) == 325)\nassert(is_nonagonal(n: 15) == 750)\nassert(is_nonagonal(n: 18) == 1089)",
      "timestamp": 1665509835,
      "stdout": "",
      "stderr": "tmp4fbx0mr3/tmp4fbx0mr3.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af170cdcc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af1709d3b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af1709d3988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af1709d27b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fbx0mr3                        0x000055e62096e1b7 <unavailable> + 4535\n5    libc.so.6                          0x00002af170ec8460 __libc_start_main + 245\n6    tmp4fbx0mr3                        0x000055e62096de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
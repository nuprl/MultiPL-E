{
  "name": "mbpp_228_all_Bits_Set_In_The_Given_Range",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_228_all_Bits_Set_In_The_Given_Range.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & (1 << l) == 0 {\n            flag = false\n            break\n        }\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmprowiqob_/tmprowiqob_.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afcf463cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afcf4333b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afcf4333988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afcf43327b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprowiqob_                        0x000055f3b44ff1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afcf4828460 __libc_start_main + 245\n6    tmprowiqob_                        0x000055f3b44fee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    let y = (n >> (l - 1)) & x\n    return y == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpi3niz94x/tmpi3niz94x.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aca75fb7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aca75caeb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aca75cae988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aca75cad7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpi3niz94x                        0x0000560f6f1a11b8 <unavailable> + 4536\n5    libc.so.6                          0x00002aca761a3460 __libc_start_main + 245\n6    tmpi3niz94x                        0x0000560f6f1a0e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = n >> l\n    let y = n << (32 - r)\n    let z = x & y\n    if z == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpn0x91lt6/tmpn0x91lt6.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b82759c5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b82756bcb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b82756bc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b82756bb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpn0x91lt6                        0x0000556a1a5422be <unavailable> + 4798\n5    libc.so.6                          0x00002b8275bb1460 __libc_start_main + 245\n6    tmpn0x91lt6                        0x0000556a1a541e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    for i in l...r {\n        temp = temp & ~(1 << i)\n    }\n    return temp == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp4fvrvr6r/tmp4fvrvr6r.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b57106cac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b57103c1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b57103c1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b57103c07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fvrvr6r                        0x0000558a0c5fa3b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b57108b6460 __libc_start_main + 245\n6    tmp4fvrvr6r                        0x0000558a0c5f9fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpcwhvdzn4/tmpcwhvdzn4.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b16dd950c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b16dd647b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b16dd647988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b16dd6467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcwhvdzn4                        0x000055ee47190338 <unavailable> + 4920\n5    libc.so.6                          0x00002b16ddb3c460 __libc_start_main + 245\n6    tmpcwhvdzn4                        0x000055ee4718ffe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n != 0 {\n        let rem = n % 2\n        if rem == 0 {\n            count += 1\n        }\n        n = n / 2\n    }\n    if count == r - l + 1 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpml1emtm4/tmpml1emtm4.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abdd7d6bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abdd7a62b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abdd7a62988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abdd7a617b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpml1emtm4                        0x000055af70a3c338 <unavailable> + 4920\n5    libc.so.6                          0x00002abdd7f57460 __libc_start_main + 245\n6    tmpml1emtm4                        0x000055af70a3bfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == mask << l\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpnm_ulf8q/tmpnm_ulf8q.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6d1d28fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6d1cf86b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6d1cf86988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6d1cf857b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnm_ulf8q                        0x000055f50b5271b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b6d1d47b460 __libc_start_main + 245\n6    tmpnm_ulf8q                        0x000055f50b526e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == (r - l + 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpap26013g/tmpap26013g.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b28059e0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b28056d7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b28056d7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b28056d67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpap26013g                        0x000055a4122ab338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2805bcc460 __libc_start_main + 245\n6    tmpap26013g                        0x000055a4122aafe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var res = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            res = false\n            break\n        }\n    }\n    return res\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpxor6qq5s/tmpxor6qq5s.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b05094b0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b05091a7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b05091a7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b05091a67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxor6qq5s                        0x000055633e3ee338 <unavailable> + 4920\n5    libc.so.6                          0x00002b050969c460 __libc_start_main + 245\n6    tmpxor6qq5s                        0x000055633e3edfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n >>= 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmppubbp35n/tmppubbp35n.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b534df5cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b534dc53b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b534dc53988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b534dc527b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmppubbp35n                        0x00005597858281b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b534e148460 __libc_start_main + 245\n6    tmppubbp35n                        0x0000559785827e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << r) - 1\n    let num = n & mask\n    return num == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpgdd9j442/tmpgdd9j442.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ae7544f4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ae7541ebb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ae7541eb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ae7541ea7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgdd9j442                        0x00005603204611b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ae7546e0460 __libc_start_main + 245\n6    tmpgdd9j442                        0x0000560320460e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var i = l\n    while i <= r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    if count == r - l + 1 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpp9u35xkb/tmpp9u35xkb.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aacc340bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aacc3102b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aacc3102988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aacc31017b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp9u35xkb                        0x00005590905d91b8 <unavailable> + 4536\n5    libc.so.6                          0x00002aacc35f7460 __libc_start_main + 245\n6    tmpp9u35xkb                        0x00005590905d8e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    if n == 0 {\n        return false\n    }\n    var n = n\n    var l = l\n    var r = r\n    while l <= r {\n        if n & 1 == 0 {\n            return false\n        }\n        n = n >> 1\n        l += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpq6qzfwav/tmpq6qzfwav.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7756aaec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b77567a5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b77567a5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b77567a47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq6qzfwav                        0x00005590feb811b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b7756c9a460 __libc_start_main + 245\n6    tmpq6qzfwav                        0x00005590feb80e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    let mask = (1 << (r - l + 1)) - 1\n    n = n >> l\n    n = n & mask\n    return n == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp3oh2slsp/tmp3oh2slsp.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adfadc37c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adfad92eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adfad92e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adfad92d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3oh2slsp                        0x000055cbeab751b8 <unavailable> + 4536\n5    libc.so.6                          0x00002adfade23460 __libc_start_main + 245\n6    tmp3oh2slsp                        0x000055cbeab74e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    // Write your code here\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmphk116hcx/tmphk116hcx.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0644fbac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0644cb1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0644cb1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0644cb07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphk116hcx                        0x00005586ef73d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b06451a6460 __libc_start_main + 245\n6    tmphk116hcx                        0x00005586ef73cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp9geoepjg/tmp9geoepjg.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3bbc6ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3bb965b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3bb965988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3bb9647b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9geoepjg                        0x0000561d0bfb1338 <unavailable> + 4920\n5    libc.so.6                          0x00002af3bbe5a460 __libc_start_main + 245\n6    tmp9geoepjg                        0x0000561d0bfb0fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    if l == r {\n        return n & (1 << l) == 0\n    }\n    var count = 0\n    while n > 0 {\n        if n & 1 == 0 {\n            count += 1\n        }\n        n >>= 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    var count = 0\n    while temp != 0 {\n        if temp & 1 == 1 {\n            count += 1\n        }\n        temp = temp >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpta1tqvek/tmpta1tqvek.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7860650c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7860347b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7860347988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b78603467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpta1tqvek                        0x0000563feac8d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b786083c460 __libc_start_main + 245\n6    tmpta1tqvek                        0x0000563feac8ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var mask = 0\n    for _ in l...r {\n        mask = mask | 1\n        mask = mask << 1\n    }\n    mask = mask << (l - 1)\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp0tgoy8j8/tmp0tgoy8j8.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afb06758c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afb0644fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afb0644f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afb0644e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp0tgoy8j8                        0x0000560181c9e338 <unavailable> + 4920\n5    libc.so.6                          0x00002afb06944460 __libc_start_main + 245\n6    tmp0tgoy8j8                        0x0000560181c9dfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    let y = x << l\n    return (n & y) == y\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpp_m9u6ls/tmpp_m9u6ls.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afad0012c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afacfd09b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afacfd09988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afacfd087b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_m9u6ls                        0x0000556bd55c31b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afad01fe460 __libc_start_main + 245\n6    tmpp_m9u6ls                        0x0000556bd55c2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpuaiq313j/tmpuaiq313j.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8441743c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b844143ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b844143a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84414397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaiq313j                        0x00005612b8708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b844192f460 __libc_start_main + 245\n6    tmpuaiq313j                        0x00005612b8707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpc54b25ei/tmpc54b25ei.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b77391c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b77088b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b77088988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b770877b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc54b25ei                        0x0000558a2149c338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b7757d460 __libc_start_main + 245\n6    tmpc54b25ei                        0x0000558a2149bfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpuaiq313j/tmpuaiq313j.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8441743c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b844143ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b844143a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84414397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaiq313j                        0x00005612b8708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b844192f460 __libc_start_main + 245\n6    tmpuaiq313j                        0x00005612b8707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp5ipvo5hs/tmp5ipvo5hs.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1aa5b33c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1aa582ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1aa582a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1aa58297b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5ipvo5hs                        0x000055da2c7771b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b1aa5d1f460 __libc_start_main + 245\n6    tmp5ipvo5hs                        0x000055da2c776e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpdjwatcgy/tmpdjwatcgy.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abc0a38dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abc0a084b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abc0a084988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abc0a0837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdjwatcgy                        0x00005615e01cf1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002abc0a579460 __libc_start_main + 245\n6    tmpdjwatcgy                        0x00005615e01cee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    let mask = (1 << (r - l + 1)) - 1\n    n = n >> l\n    return n & mask == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpbmc57nn4/tmpbmc57nn4.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4c90497c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4c9018eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4c9018e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4c9018d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbmc57nn4                        0x0000560596f961b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4c90683460 __libc_start_main + 245\n6    tmpbmc57nn4                        0x0000560596f95e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpsflec3ke/tmpsflec3ke.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b899409bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8993d92b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8993d92988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8993d917b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsflec3ke                        0x000055c8bd783338 <unavailable> + 4920\n5    libc.so.6                          0x00002b8994287460 __libc_start_main + 245\n6    tmpsflec3ke                        0x000055c8bd782fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmphorft65w/tmphorft65w.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b355178cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3551483b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3551483988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b35514827b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphorft65w                        0x000055c33aa211b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3551978460 __libc_start_main + 245\n6    tmphorft65w                        0x000055c33aa20e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for _ in l...r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpjx1j3hz1/tmpjx1j3hz1.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b75e1d22c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b75e1a19b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b75e1a19988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b75e1a187b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjx1j3hz1                        0x0000557fba8b2338 <unavailable> + 4920\n5    libc.so.6                          0x00002b75e1f0e460 __libc_start_main + 245\n6    tmpjx1j3hz1                        0x0000557fba8b1fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp7zhrzi4y/tmp7zhrzi4y.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4dae14cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4dade43b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4dade43988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4dade427b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7zhrzi4y                        0x000055e87756e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4dae338460 __libc_start_main + 245\n6    tmp7zhrzi4y                        0x000055e87756de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp9geoepjg/tmp9geoepjg.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3bbc6ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3bb965b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3bb965988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3bb9647b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9geoepjg                        0x0000561d0bfb1338 <unavailable> + 4920\n5    libc.so.6                          0x00002af3bbe5a460 __libc_start_main + 245\n6    tmp9geoepjg                        0x0000561d0bfb0fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpqo28e9ke/tmpqo28e9ke.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4025435c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b402512cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b402512c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b402512b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqo28e9ke                        0x000055cf8cf261b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4025621460 __libc_start_main + 245\n6    tmpqo28e9ke                        0x000055cf8cf25e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp91_b7zyc/tmp91_b7zyc.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0d314dfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0d311d6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0d311d6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0d311d57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp91_b7zyc                        0x0000560a77cf62be <unavailable> + 4798\n5    libc.so.6                          0x00002b0d316cb460 __libc_start_main + 245\n6    tmp91_b7zyc                        0x0000560a77cf5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpouqk9rg5/tmpouqk9rg5.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acde6aa9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acde67a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acde67a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acde679f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpouqk9rg5                        0x000055a82b66a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acde6c95460 __libc_start_main + 245\n6    tmpouqk9rg5                        0x000055a82b669e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpdjwatcgy/tmpdjwatcgy.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abc0a38dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abc0a084b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abc0a084988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abc0a0837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdjwatcgy                        0x00005615e01cf1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002abc0a579460 __libc_start_main + 245\n6    tmpdjwatcgy                        0x00005615e01cee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpc54b25ei/tmpc54b25ei.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3b77391c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3b77088b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3b77088988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3b770877b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc54b25ei                        0x0000558a2149c338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3b7757d460 __libc_start_main + 245\n6    tmpc54b25ei                        0x0000558a2149bfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpouqk9rg5/tmpouqk9rg5.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acde6aa9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acde67a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acde67a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acde679f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpouqk9rg5                        0x000055a82b66a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acde6c95460 __libc_start_main + 245\n6    tmpouqk9rg5                        0x000055a82b669e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            flag = false\n            break\n        }\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpvpc3vw9w/tmpvpc3vw9w.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b780f897c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b780f58eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b780f58e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b780f58d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvpc3vw9w                        0x000055b07c230338 <unavailable> + 4920\n5    libc.so.6                          0x00002b780fa83460 __libc_start_main + 245\n6    tmpvpc3vw9w                        0x000055b07c22ffe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let x = n >> l\n    return (x & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpv75_9h5a/tmpv75_9h5a.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b55ec251c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b55ebf48b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b55ebf48988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b55ebf477b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpv75_9h5a                        0x00005621cdabd1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b55ec43d460 __libc_start_main + 245\n6    tmpv75_9h5a                        0x00005621cdabce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpikolbjrd/tmpikolbjrd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af53b3a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af53b09db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af53b09d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af53b09c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpikolbjrd                        0x0000562792b621b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af53b592460 __libc_start_main + 245\n6    tmpikolbjrd                        0x0000562792b61e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpwf3zq8q0/tmpwf3zq8q0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac26cfaac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac26cca1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac26cca1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac26cca07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwf3zq8q0                        0x00005627f4845338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac26d196460 __libc_start_main + 245\n6    tmpwf3zq8q0                        0x00005627f4844fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for _ in l...r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpjx1j3hz1/tmpjx1j3hz1.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b75e1d22c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b75e1a19b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b75e1a19988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b75e1a187b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjx1j3hz1                        0x0000557fba8b2338 <unavailable> + 4920\n5    libc.so.6                          0x00002b75e1f0e460 __libc_start_main + 245\n6    tmpjx1j3hz1                        0x0000557fba8b1fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmphorft65w/tmphorft65w.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b355178cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3551483b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3551483988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b35514827b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphorft65w                        0x000055c33aa211b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3551978460 __libc_start_main + 245\n6    tmphorft65w                        0x000055c33aa20e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp7l7z11tv/tmp7l7z11tv.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b84e1f56c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b84e1c4db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b84e1c4d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84e1c4c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7l7z11tv                        0x0000558fe60951b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b84e2142460 __libc_start_main + 245\n6    tmp7l7z11tv                        0x0000558fe6094e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpnsq38r9j/tmpnsq38r9j.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b89e1fb9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b89e1cb0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b89e1cb0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b89e1caf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnsq38r9j                        0x000055f233ae4338 <unavailable> + 4920\n5    libc.so.6                          0x00002b89e21a5460 __libc_start_main + 245\n6    tmpnsq38r9j                        0x000055f233ae3fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp9geoepjg/tmp9geoepjg.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af3bbc6ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af3bb965b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af3bb965988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af3bb9647b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp9geoepjg                        0x0000561d0bfb1338 <unavailable> + 4920\n5    libc.so.6                          0x00002af3bbe5a460 __libc_start_main + 245\n6    tmp9geoepjg                        0x0000561d0bfb0fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n >>= 1\n        l -= 1\n        r -= 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp_s0leozb/tmp_s0leozb.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba746262c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba745f59b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba745f59988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba745f587b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_s0leozb                        0x00005604b39fb1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba74644e460 __libc_start_main + 245\n6    tmp_s0leozb                        0x00005604b39fae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let rem = n % 2\n        if rem == 0 {\n            flag = false\n        }\n        n = n / 2\n        l -= 1\n        r -= 1\n        if l == 0 && r == 0 {\n            break\n        }\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpqcjbz1ew/tmpqcjbz1ew.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2e1c80fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2e1c506b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2e1c506988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2e1c5057b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqcjbz1ew                        0x00005576b9ebe248 <unavailable> + 4680\n5    libc.so.6                          0x00002b2e1c9fb460 __libc_start_main + 245\n6    tmpqcjbz1ew                        0x00005576b9ebdef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpdhpdgp33/tmpdhpdgp33.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b491acb2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b491a9a9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b491a9a9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b491a9a87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdhpdgp33                        0x000055df2d634338 <unavailable> + 4920\n5    libc.so.6                          0x00002b491ae9e460 __libc_start_main + 245\n6    tmpdhpdgp33                        0x000055df2d633fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & 1 << i == 0 {\n            count += 1\n        }\n    }\n    if count == 0 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpz7u9puel/tmpz7u9puel.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b81327adc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b81324a4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b81324a4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b81324a37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz7u9puel                        0x000055a6e6830338 <unavailable> + 4920\n5    libc.so.6                          0x00002b8132999460 __libc_start_main + 245\n6    tmpz7u9puel                        0x000055a6e682ffe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var x = n\n    for i in l...r {\n        x = x & (1 << i)\n    }\n    return x == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpe0bf995c/tmpe0bf995c.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aca4eff9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aca4ecf0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aca4ecf0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aca4ecef7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe0bf995c                        0x000055cd2bdc843e <unavailable> + 5182\n5    libc.so.6                          0x00002aca4f1e5460 __libc_start_main + 245\n6    tmpe0bf995c                        0x000055cd2bdc7fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpqo28e9ke/tmpqo28e9ke.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4025435c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b402512cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b402512c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b402512b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqo28e9ke                        0x000055cf8cf261b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4025621460 __libc_start_main + 245\n6    tmpqo28e9ke                        0x000055cf8cf25e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        result = result && ((n & (1 << i)) != 0)\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpsz0zv1_i/tmpsz0zv1_i.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002abc5bc78c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002abc5b96fb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002abc5b96f988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002abc5b96e7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsz0zv1_i                        0x00005571ae519338 <unavailable> + 4920\n5    libc.so.6                          0x00002abc5be64460 __libc_start_main + 245\n6    tmpsz0zv1_i                        0x00005571ae518fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpd2l708y8/tmpd2l708y8.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b910532ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b9105025b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b9105025988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b91050247b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpd2l708y8                        0x0000558c73a8d338 <unavailable> + 4920\n5    libc.so.6                          0x00002b910551a460 __libc_start_main + 245\n6    tmpd2l708y8                        0x0000558c73a8cfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpuaiq313j/tmpuaiq313j.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8441743c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b844143ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b844143a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84414397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaiq313j                        0x00005612b8708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b844192f460 __libc_start_main + 245\n6    tmpuaiq313j                        0x00005612b8707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpz2otzo6q/tmpz2otzo6q.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b013145fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0131156b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0131156988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b01311557b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpz2otzo6q                        0x0000557af6d4e338 <unavailable> + 4920\n5    libc.so.6                          0x00002b013164b460 __libc_start_main + 245\n6    tmpz2otzo6q                        0x0000557af6d4dfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    var count = 0\n    while temp > 0 {\n        if temp & 1 == 1 {\n            count += 1\n        }\n        temp = temp >> 1\n    }\n    return count == (r - l + 1)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpu_ibzndd/tmpu_ibzndd.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23aa16bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b23a9e62b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b23a9e62988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b23a9e617b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpu_ibzndd                        0x0000556c8b6be1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b23aa357460 __libc_start_main + 245\n6    tmpu_ibzndd                        0x0000556c8b6bde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpqo28e9ke/tmpqo28e9ke.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4025435c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b402512cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b402512c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b402512b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqo28e9ke                        0x000055cf8cf261b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4025621460 __libc_start_main + 245\n6    tmpqo28e9ke                        0x000055cf8cf25e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpouqk9rg5/tmpouqk9rg5.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acde6aa9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acde67a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acde67a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acde679f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpouqk9rg5                        0x000055a82b66a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acde6c95460 __libc_start_main + 245\n6    tmpouqk9rg5                        0x000055a82b669e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpuaiq313j/tmpuaiq313j.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8441743c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b844143ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b844143a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84414397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaiq313j                        0x00005612b8708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b844192f460 __libc_start_main + 245\n6    tmpuaiq313j                        0x00005612b8707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var i = 0\n    while i < r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        i += 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmptk1ybwc1/tmptk1ybwc1.swift:35: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b94e6f8ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b94e6c85b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b94e6c85988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b94e6c847b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmptk1ybwc1                        0x0000562586e181b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b94e717a460 __libc_start_main + 245\n6    tmptk1ybwc1                        0x0000562586e17e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if n & (1 << l) == 0 {\n            flag = false\n            break\n        }\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmprowiqob_/tmprowiqob_.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afcf463cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afcf4333b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afcf4333988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afcf43327b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmprowiqob_                        0x000055f3b44ff1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afcf4828460 __libc_start_main + 245\n6    tmprowiqob_                        0x000055f3b44fee69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var mask = 0\n    for i in l...r {\n        mask = mask | (1 << i)\n    }\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpvxc99q5y/tmpvxc99q5y.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aab31f32c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aab31c29b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aab31c29988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aab31c287b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpvxc99q5y                        0x000055b686157338 <unavailable> + 4920\n5    libc.so.6                          0x00002aab3211e460 __libc_start_main + 245\n6    tmpvxc99q5y                        0x000055b686156fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var temp = n\n    while temp != 0 {\n        count += 1\n        temp = temp / 2\n    }\n    if count < r {\n        return false\n    }\n    var mask = (1 << r) - 1\n    mask = mask - ((1 << l) - 1)\n    if (n & mask) == mask {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp48uvi2av/tmp48uvi2av.swift:37: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad4b66c2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad4b63b9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad4b63b9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad4b63b87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp48uvi2av                        0x00005557b1747248 <unavailable> + 4680\n5    libc.so.6                          0x00002ad4b68ae460 __libc_start_main + 245\n6    tmp48uvi2av                        0x00005557b1746ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n % 2 == 0 {\n            count += 1\n        }\n        n /= 2\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpprpjs5j5/tmpprpjs5j5.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23f7fb9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b23f7cb0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b23f7cb0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b23f7caf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpprpjs5j5                        0x000056423339e338 <unavailable> + 4920\n5    libc.so.6                          0x00002b23f81a5460 __libc_start_main + 245\n6    tmpprpjs5j5                        0x000056423339dfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpikolbjrd/tmpikolbjrd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af53b3a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af53b09db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af53b09d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af53b09c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpikolbjrd                        0x0000562792b621b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af53b592460 __libc_start_main + 245\n6    tmpikolbjrd                        0x0000562792b61e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpad3ghcok/tmpad3ghcok.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba078223c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba077f1ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba077f1a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba077f197b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpad3ghcok                        0x00005652824cd1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba07840f460 __libc_start_main + 245\n6    tmpad3ghcok                        0x00005652824cce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    let y = x << l\n    return (n & y) == y\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpp_m9u6ls/tmpp_m9u6ls.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afad0012c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afacfd09b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afacfd09988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afacfd087b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_m9u6ls                        0x0000556bd55c31b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afad01fe460 __libc_start_main + 245\n6    tmpp_m9u6ls                        0x0000556bd55c2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = false\n    let num = String(n, radix: 2)\n    let count = num.count\n    if count < l || count < r {\n        return result\n    }\n    let start = count - l\n    let end = count - r\n    let sub = num[start...end]\n    if sub.contains(\"0\") {\n        result = false\n    } else {\n        result = true\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmppkapu4t5.swift:12:15: error: 'subscript(_:)' is unavailable: cannot subscript String with an integer range, use a String.Index range instead.\n    let sub = num[start...end]\n              ^~~~~~~~~~~~~~~~\nSwift.String:5:12: note: 'subscript(_:)' has been explicitly marked unavailable here\n    public subscript<R>(bounds: R) -> String where R : RangeExpression, R.Bound == Int { get }\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp7zhrzi4y/tmp7zhrzi4y.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4dae14cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4dade43b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4dade43988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4dade427b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7zhrzi4y                        0x000055e87756e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4dae338460 __libc_start_main + 245\n6    tmp7zhrzi4y                        0x000055e87756de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    var count = 0\n    while temp > 0 {\n        if temp & 1 == 1 {\n            count += 1\n        }\n        temp = temp >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpgv_8mxbb/tmpgv_8mxbb.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6c4f12fc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6c4ee26b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6c4ee26988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6c4ee257b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpgv_8mxbb                        0x000055c2670041b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b6c4f31b460 __libc_start_main + 245\n6    tmpgv_8mxbb                        0x000055c267003e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpuaiq313j/tmpuaiq313j.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8441743c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b844143ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b844143a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84414397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaiq313j                        0x00005612b8708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b844192f460 __libc_start_main + 245\n6    tmpuaiq313j                        0x00005612b8707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for _ in 0..<r {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n        l -= 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpq6bpv068/tmpq6bpv068.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1c50e71c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1c50b68b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1c50b68988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1c50b677b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpq6bpv068                        0x0000561455a07338 <unavailable> + 4920\n5    libc.so.6                          0x00002b1c5105d460 __libc_start_main + 245\n6    tmpq6bpv068                        0x0000561455a06fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpuaiq313j/tmpuaiq313j.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8441743c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b844143ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b844143a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84414397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaiq313j                        0x00005612b8708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b844192f460 __libc_start_main + 245\n6    tmpuaiq313j                        0x00005612b8707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp7zhrzi4y/tmp7zhrzi4y.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4dae14cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4dade43b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4dade43988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4dade427b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7zhrzi4y                        0x000055e87756e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4dae338460 __libc_start_main + 245\n6    tmp7zhrzi4y                        0x000055e87756de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l..<r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpj_90830f/tmpj_90830f.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5dc5366c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5dc505db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5dc505d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5dc505c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpj_90830f                        0x00005621b97f2338 <unavailable> + 4920\n5    libc.so.6                          0x00002b5dc5552460 __libc_start_main + 245\n6    tmpj_90830f                        0x00005621b97f1fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let last_bit = n & 1\n        if last_bit == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n        l -= 1\n        r -= 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpa95yz4ib/tmpa95yz4ib.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b40bf7e9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b40bf4e0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b40bf4e0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b40bf4df7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa95yz4ib                        0x0000561610a731b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b40bf9d5460 __libc_start_main + 245\n6    tmpa95yz4ib                        0x0000561610a72e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpuaiq313j/tmpuaiq313j.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8441743c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b844143ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b844143a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b84414397b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuaiq313j                        0x00005612b8708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b844192f460 __libc_start_main + 245\n6    tmpuaiq313j                        0x00005612b8707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var number = n\n    for i in l...r {\n        number = number & ~(1 << i)\n    }\n    return number == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpew9nty4t/tmpew9nty4t.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b864eb7cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b864e873b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b864e873988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b864e8727b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpew9nty4t                        0x0000560dde4da3b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b864ed68460 __libc_start_main + 245\n6    tmpew9nty4t                        0x0000560dde4d9fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    var count = 0\n    while temp != 0 {\n        if temp & 1 == 1 {\n            count += 1\n        }\n        temp = temp >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpta1tqvek/tmpta1tqvek.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7860650c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7860347b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7860347988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b78603467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpta1tqvek                        0x0000563feac8d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b786083c460 __libc_start_main + 245\n6    tmpta1tqvek                        0x0000563feac8ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var check = 0\n    while n > 0 {\n        if n % 2 == 0 {\n            check += 1\n        }\n        n /= 2\n    }\n    if check == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let range = r - l + 1\n    let x = (1 << range) - 1\n    let y = x << l\n    return (n & y) == y\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp_zy9t28r/tmp_zy9t28r.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aca4f2b5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aca4efacb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aca4efac988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aca4efab7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp_zy9t28r                        0x000055ea02ba01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002aca4f4a1460 __libc_start_main + 245\n6    tmp_zy9t28r                        0x000055ea02b9fe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var x = n\n    x = x >> (l - 1)\n    x = x << (r - l + 1)\n    return x == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp42fs7b5z/tmp42fs7b5z.swift:23: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3064729c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3064420b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3064420988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b306441f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp42fs7b5z                        0x0000556097b9e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3064915460 __libc_start_main + 245\n6    tmp42fs7b5z                        0x0000556097b9de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n        i += 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpho2dn3wq/tmpho2dn3wq.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad623056c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad622d4db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad622d4d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad622d4c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpho2dn3wq                        0x0000556b512331b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad623242460 __libc_start_main + 245\n6    tmpho2dn3wq                        0x0000556b51232e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp91_b7zyc/tmp91_b7zyc.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0d314dfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0d311d6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0d311d6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0d311d57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp91_b7zyc                        0x0000560a77cf62be <unavailable> + 4798\n5    libc.so.6                          0x00002b0d316cb460 __libc_start_main + 245\n6    tmp91_b7zyc                        0x0000560a77cf5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpe888i3vr/tmpe888i3vr.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4825dd5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4825accb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4825acc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4825acb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe888i3vr                        0x000055d24fb791b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4825fc1460 __libc_start_main + 245\n6    tmpe888i3vr                        0x000055d24fb78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var temp = n\n    while temp > 0 {\n        if temp & 1 == 1 {\n            count += 1\n        }\n        temp = temp >> 1\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp660r7z8n/tmp660r7z8n.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac5cc81ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac5cc511b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac5cc511988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5cc5107b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp660r7z8n                        0x000055f6caed21b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ac5cca06460 __libc_start_main + 245\n6    tmp660r7z8n                        0x000055f6caed1e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    let y = x << l\n    return (n & y) == y\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpp_m9u6ls/tmpp_m9u6ls.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afad0012c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afacfd09b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afacfd09988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afacfd087b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpp_m9u6ls                        0x0000556bd55c31b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afad01fe460 __libc_start_main + 245\n6    tmpp_m9u6ls                        0x0000556bd55c2e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n != 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpio__l5_e/tmpio__l5_e.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acdd220ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acdd1f05b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acdd1f05988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acdd1f047b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpio__l5_e                        0x000055e79a1151b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acdd23fa460 __libc_start_main + 245\n6    tmpio__l5_e                        0x000055e79a114e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmphorft65w/tmphorft65w.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b355178cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3551483b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3551483988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b35514827b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphorft65w                        0x000055c33aa211b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b3551978460 __libc_start_main + 245\n6    tmphorft65w                        0x000055c33aa20e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpikolbjrd/tmpikolbjrd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af53b3a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af53b09db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af53b09d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af53b09c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpikolbjrd                        0x0000562792b621b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af53b592460 __libc_start_main + 245\n6    tmpikolbjrd                        0x0000562792b61e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == (r - l + 1) {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp7zhrzi4y/tmp7zhrzi4y.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4dae14cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4dade43b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4dade43988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4dade427b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7zhrzi4y                        0x000055e87756e1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4dae338460 __libc_start_main + 245\n6    tmp7zhrzi4y                        0x000055e87756de69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpe888i3vr/tmpe888i3vr.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4825dd5c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4825accb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4825acc988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4825acb7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpe888i3vr                        0x000055d24fb791b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4825fc1460 __libc_start_main + 245\n6    tmpe888i3vr                        0x000055d24fb78e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpqo28e9ke/tmpqo28e9ke.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4025435c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b402512cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b402512c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b402512b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqo28e9ke                        0x000055cf8cf261b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4025621460 __libc_start_main + 245\n6    tmpqo28e9ke                        0x000055cf8cf25e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if !is_Bit_Set(n: n, pos: i) {\n            result = false\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmpp0tin8qt.swift:6:13: error: cannot find 'is_Bit_Set' in scope\n        if !is_Bit_Set(n: n, pos: i) {\n            ^~~~~~~~~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    for _ in l...r {\n        if n & 1 == 0 {\n            flag = false\n            break\n        }\n        n = n >> 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpnsq38r9j/tmpnsq38r9j.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b89e1fb9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b89e1cb0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b89e1cb0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b89e1caf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpnsq38r9j                        0x000055f233ae4338 <unavailable> + 4920\n5    libc.so.6                          0x00002b89e21a5460 __libc_start_main + 245\n6    tmpnsq38r9j                        0x000055f233ae3fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp5ipvo5hs/tmp5ipvo5hs.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1aa5b33c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b1aa582ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b1aa582a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b1aa58297b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5ipvo5hs                        0x000055da2c7771b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b1aa5d1f460 __libc_start_main + 245\n6    tmp5ipvo5hs                        0x000055da2c776e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpwf3zq8q0/tmpwf3zq8q0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac26cfaac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac26cca1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac26cca1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac26cca07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwf3zq8q0                        0x00005627f4845338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac26d196460 __libc_start_main + 245\n6    tmpwf3zq8q0                        0x00005627f4844fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n % 2 == 1 {\n            count += 1\n        }\n        n /= 2\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp5g9y1me_/tmp5g9y1me_.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad19fe01c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad19faf8b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad19faf8988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad19faf77b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5g9y1me_                        0x000055d2feb53248 <unavailable> + 4680\n5    libc.so.6                          0x00002ad19ffed460 __libc_start_main + 245\n6    tmp5g9y1me_                        0x000055d2feb52ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return (n & (1 << l) - 1) == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp7k3509sb/tmp7k3509sb.swift:20: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6ce4b07c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6ce47feb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6ce47fe988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6ce47fd7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp7k3509sb                        0x00005607df0021b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b6ce4cf3460 __libc_start_main + 245\n6    tmp7k3509sb                        0x00005607df001e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        let bit = n % 2\n        if bit == 1 {\n            count += 1\n        }\n        n /= 2\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpa7wib_e_/tmpa7wib_e_.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8ff798dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8ff7684b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8ff7684988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8ff76837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpa7wib_e_                        0x00005590cbbcf248 <unavailable> + 4680\n5    libc.so.6                          0x00002b8ff7b79460 __libc_start_main + 245\n6    tmpa7wib_e_                        0x00005590cbbceef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var i = l\n    while i <= r {\n        if n & (1 << i) == 0 {\n            return false\n        }\n        i += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpad3ghcok/tmpad3ghcok.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ba078223c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ba077f1ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ba077f1a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ba077f197b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpad3ghcok                        0x00005652824cd1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ba07840f460 __libc_start_main + 245\n6    tmpad3ghcok                        0x00005652824cce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    var count = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            count += 1\n        }\n        num = num >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpdk4xqav9/tmpdk4xqav9.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b86e36e4c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b86e33dbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b86e33db988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b86e33da7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpdk4xqav9                        0x00005617c7a121b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b86e38d0460 __libc_start_main + 245\n6    tmpdk4xqav9                        0x00005617c7a11e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpwf3zq8q0/tmpwf3zq8q0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac26cfaac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac26cca1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac26cca1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac26cca07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwf3zq8q0                        0x00005627f4845338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac26d196460 __libc_start_main + 245\n6    tmpwf3zq8q0                        0x00005627f4844fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    var count = 0\n    while temp != 0 {\n        if temp & 1 == 1 {\n            count += 1\n        }\n        temp = temp >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpta1tqvek/tmpta1tqvek.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7860650c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b7860347b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b7860347988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b78603467b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpta1tqvek                        0x0000563feac8d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b786083c460 __libc_start_main + 245\n6    tmpta1tqvek                        0x0000563feac8ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let last_bit = n & 1\n        if last_bit == 0 {\n            flag = false\n        }\n        n = n >> 1\n        l -= 1\n        r -= 1\n        if l == 0 {\n            break\n        }\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmphn38m9bw/tmphn38m9bw.swift:36: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b187f6fdc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b187f3f4b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b187f3f4988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b187f3f37b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmphn38m9bw                        0x0000557df7c311b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b187f8e9460 __libc_start_main + 245\n6    tmphn38m9bw                        0x0000557df7c30e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for i in l...r {\n        if (n & (1 << i)) != 0 {\n            count += 1\n        }\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmplpdx6jl7/tmplpdx6jl7.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3e605f6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3e602edb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3e602ed988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3e602ec7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplpdx6jl7                        0x0000560bd10c5338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3e607e2460 __libc_start_main + 245\n6    tmplpdx6jl7                        0x0000560bd10c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    while n > 0 {\n        if n & 1 == 1 {\n            count += 1\n        }\n        n = n >> 1\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpikolbjrd/tmpikolbjrd.swift:33: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002af53b3a6c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002af53b09db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002af53b09d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002af53b09c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpikolbjrd                        0x0000562792b621b8 <unavailable> + 4536\n5    libc.so.6                          0x00002af53b592460 __libc_start_main + 245\n6    tmpikolbjrd                        0x0000562792b61e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpouqk9rg5/tmpouqk9rg5.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acde6aa9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acde67a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acde67a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acde679f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpouqk9rg5                        0x000055a82b66a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acde6c95460 __libc_start_main + 245\n6    tmpouqk9rg5                        0x000055a82b669e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = false\n    var temp = n\n    var count = 0\n    while temp != 0 {\n        if temp & 1 == 0 {\n            count += 1\n        }\n        temp = temp >> 1\n    }\n    if count == r - l + 1 {\n        result = true\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while l <= r {\n        if (n & (1 << l)) == 0 {\n            flag = false\n            break\n        }\n        l += 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpfe6ozyih/tmpfe6ozyih.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afc9c1ffc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afc9bef6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afc9bef6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afc9bef57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfe6ozyih                        0x000055840fb8c1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afc9c3eb460 __libc_start_main + 245\n6    tmpfe6ozyih                        0x000055840fb8be69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    var count = 0\n    for i in l...r {\n        if num & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    if count == 0 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpjc2gxyiz/tmpjc2gxyiz.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2a51d30c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2a51a27b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2a51a27988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2a51a267b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjc2gxyiz                        0x0000558cbbdba338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2a51f1c460 __libc_start_main + 245\n6    tmpjc2gxyiz                        0x0000558cbbdb9fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpouqk9rg5/tmpouqk9rg5.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acde6aa9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acde67a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acde67a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acde679f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpouqk9rg5                        0x000055a82b66a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acde6c95460 __libc_start_main + 245\n6    tmpouqk9rg5                        0x000055a82b669e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    var count = 0\n    while num > 0 {\n        if num & 1 == 1 {\n            count += 1\n        }\n        num = num >> 1\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp3xv7m8y4/tmp3xv7m8y4.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6c84675c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6c8436cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6c8436c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6c8436b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp3xv7m8y4                        0x000055a28d3c01b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b6c84861460 __libc_start_main + 245\n6    tmp3xv7m8y4                        0x000055a28d3bfe69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let mask = mask << l\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp_p2m5b7e.swift:5:9: error: invalid redeclaration of 'mask'\n    let mask = mask << l\n        ^\n/tmp/tmp_p2m5b7e.swift:4:9: note: 'mask' previously declared here\n    let mask = (1 << (r - l + 1)) - 1\n        ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpqo28e9ke/tmpqo28e9ke.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4025435c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b402512cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b402512c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b402512b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpqo28e9ke                        0x000055cf8cf261b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b4025621460 __libc_start_main + 245\n6    tmpqo28e9ke                        0x000055cf8cf25e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let allSet = (1 << (r - l + 1)) - 1\n    let mask = allSet << l\n    return (n & mask) == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpny30bw2i/tmpny30bw2i.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b8df7dd2c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8df7ac9b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8df7ac9988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8df7ac87b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpny30bw2i                        0x00005603255ed1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b8df7fbe460 __libc_start_main + 245\n6    tmpny30bw2i                        0x00005603255ece69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    while l <= r {\n        if n & (1 << l) == 0 {\n            return false\n        }\n        l += 1\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpcalews44/tmpcalews44.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002adf5f45dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002adf5f154b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002adf5f154988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002adf5f1537b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcalews44                        0x0000557739eb51b8 <unavailable> + 4536\n5    libc.so.6                          0x00002adf5f649460 __libc_start_main + 245\n6    tmpcalews44                        0x0000557739eb4e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp5ubm3uie/tmp5ubm3uie.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5fbd63ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5fbd331b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5fbd331988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5fbd3307b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp5ubm3uie                        0x0000563527a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b5fbd826460 __libc_start_main + 245\n6    tmp5ubm3uie                        0x0000563527a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp91_b7zyc/tmp91_b7zyc.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0d314dfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0d311d6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0d311d6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0d311d57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp91_b7zyc                        0x0000560a77cf62be <unavailable> + 4798\n5    libc.so.6                          0x00002b0d316cb460 __libc_start_main + 245\n6    tmp91_b7zyc                        0x0000560a77cf5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    if count == (r - l + 1) {\n        return true\n    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpihdocab5/tmpihdocab5.swift:30: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4bf9a04c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4bf96fbb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4bf96fb988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4bf96fa7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpihdocab5                        0x000056017c22b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b4bf9bf0460 __libc_start_main + 245\n6    tmpihdocab5                        0x000056017c22afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    let x = n >> l\n    return x & mask == mask\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpyz0sujeb/tmpyz0sujeb.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad2b2acec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad2b27c5b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad2b27c5988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad2b27c47b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyz0sujeb                        0x000055b64fd941b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ad2b2cba460 __libc_start_main + 245\n6    tmpyz0sujeb                        0x000055b64fd93e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    for i in l...r {\n        num = num & ~(1 << i)\n    }\n    return num == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpeiycsqme/tmpeiycsqme.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a810e8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a80ddfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a80ddf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a80dde7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeiycsqme                        0x00005590934693b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b4a812d4460 __libc_start_main + 245\n6    tmpeiycsqme                        0x0000559093468fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var result = true\n    while l <= r {\n        if n & 1 == 0 {\n            result = false\n            break\n        }\n        n = n >> 1\n        l += 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp10yf7dnk/tmp10yf7dnk.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b341ede9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b341eae0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b341eae0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b341eadf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp10yf7dnk                        0x0000555b0022b1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b341efd5460 __libc_start_main + 245\n6    tmp10yf7dnk                        0x0000555b0022ae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    for i in l...r {\n        if (temp & (1 << i)) == 0 {\n            return false\n        }\n    }\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmph53kys54/tmph53kys54.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b40c9a33c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b40c972ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b40c972a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b40c97297b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmph53kys54                        0x0000559cc2729338 <unavailable> + 4920\n5    libc.so.6                          0x00002b40c9c1f460 __libc_start_main + 245\n6    tmph53kys54                        0x0000559cc2728fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpl5_eljgv/tmpl5_eljgv.swift:32: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3ab2a87c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3ab277eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3ab277e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3ab277d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpl5_eljgv                        0x0000560ce04c9338 <unavailable> + 4920\n5    libc.so.6                          0x00002b3ab2c73460 __libc_start_main + 245\n6    tmpl5_eljgv                        0x0000560ce04c8fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var flag = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            flag = false\n            break\n        }\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmplsy5ma7a/tmplsy5ma7a.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b465d313c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b465d00ab6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b465d00a988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b465d0097b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmplsy5ma7a                        0x000055ac8f844338 <unavailable> + 4920\n5    libc.so.6                          0x00002b465d4ff460 __libc_start_main + 245\n6    tmplsy5ma7a                        0x000055ac8f843fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmp1wzrpd03/tmp1wzrpd03.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b7023ceac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b70239e1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b70239e1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b70239e07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp1wzrpd03                        0x00005645d9708338 <unavailable> + 4920\n5    libc.so.6                          0x00002b7023ed6460 __libc_start_main + 245\n6    tmp1wzrpd03                        0x00005645d9707fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp91_b7zyc/tmp91_b7zyc.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0d314dfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0d311d6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0d311d6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0d311d57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp91_b7zyc                        0x0000560a77cf62be <unavailable> + 4798\n5    libc.so.6                          0x00002b0d316cb460 __libc_start_main + 245\n6    tmp91_b7zyc                        0x0000560a77cf5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << l) - 1\n    let y = (1 << r) - 1\n    return ((n & x) == x) && ((n & y) == y)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpyu0jfr1t/tmpyu0jfr1t.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b651a10ac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6519e01b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6519e01988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b6519e007b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpyu0jfr1t                        0x000055bfdc8bb1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b651a2f6460 __libc_start_main + 245\n6    tmpyu0jfr1t                        0x000055bfdc8bae69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var result = true\n    while n > 0 {\n        let bit = n % 2\n        if bit == 0 {\n            result = false\n            break\n        }\n        n /= 2\n        l -= 1\n        r -= 1\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpc5wv0f4a/tmpc5wv0f4a.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b5c1308dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b5c12d84b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b5c12d84988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b5c12d837b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpc5wv0f4a                        0x000055db9a3e1248 <unavailable> + 4680\n5    libc.so.6                          0x00002b5c13279460 __libc_start_main + 245\n6    tmpc5wv0f4a                        0x000055db9a3e0ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var flag = true\n    while n > 0 {\n        let temp = n % 2\n        if temp == 0 {\n            flag = false\n            break\n        }\n        n = n / 2\n        l -= 1\n        r -= 1\n    }\n    return flag\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpuzscoab1/tmpuzscoab1.swift:34: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b95b4910c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b95b4607b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b95b4607988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b95b46067b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpuzscoab1                        0x000055d83fcf6248 <unavailable> + 4680\n5    libc.so.6                          0x00002b95b4afc460 __libc_start_main + 245\n6    tmpuzscoab1                        0x000055d83fcf5ef9 <unavailable> + 3833\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    let mask = (1 << (r - l + 1)) - 1\n    let temp = n & mask\n    if temp == mask {\n        result = true\n    } else {\n        result = false\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpmvdqlpbw/tmpmvdqlpbw.swift:28: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002afe964e0c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002afe961d7b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002afe961d7988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002afe961d67b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmvdqlpbw                        0x000056395bfde1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002afe966cc460 __libc_start_main + 245\n6    tmpmvdqlpbw                        0x000056395bfdde69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    for i in l...r {\n        num = num & ~(1 << i)\n    }\n    return num == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpeiycsqme/tmpeiycsqme.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a810e8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a80ddfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a80ddf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a80dde7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeiycsqme                        0x00005590934693b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b4a812d4460 __libc_start_main + 245\n6    tmpeiycsqme                        0x0000559093468fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp54zpcl_9/tmp54zpcl_9.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2740e94c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2740b8bb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2740b8b988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2740b8a7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp54zpcl_9                        0x00005556c9a5b338 <unavailable> + 4920\n5    libc.so.6                          0x00002b2741080460 __libc_start_main + 245\n6    tmp54zpcl_9                        0x00005556c9a5afe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n            break\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpo7rbzwka/tmpo7rbzwka.swift:27: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac4f9756c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac4f944db6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac4f944d988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac4f944c7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpo7rbzwka                        0x0000556aa04f7338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac4f9942460 __libc_start_main + 245\n6    tmpo7rbzwka                        0x0000556aa04f6fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpsflec3ke/tmpsflec3ke.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b899409bc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b8993d92b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b8993d92988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b8993d917b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpsflec3ke                        0x000055c8bd783338 <unavailable> + 4920\n5    libc.so.6                          0x00002b8994287460 __libc_start_main + 245\n6    tmpsflec3ke                        0x000055c8bd782fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpxqkv_y40/tmpxqkv_y40.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab1a2b0dc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab1a2804b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab1a2804988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab1a28037b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpxqkv_y40                        0x000055ec82c61338 <unavailable> + 4920\n5    libc.so.6                          0x00002ab1a2cf9460 __libc_start_main + 245\n6    tmpxqkv_y40                        0x000055ec82c60fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var m = n\n    for i in l...r {\n        m = m & ~(1 << i)\n    }\n    return m == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpbxpxdz9r/tmpbxpxdz9r.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002aeec82a7c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002aeec7f9eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002aeec7f9e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002aeec7f9d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpbxpxdz9r                        0x000055b3da6733b6 <unavailable> + 5046\n5    libc.so.6                          0x00002aeec8493460 __libc_start_main + 245\n6    tmpbxpxdz9r                        0x000055b3da672fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let mask = (1 << (r - l + 1)) - 1\n    return (n & (mask << l)) == (mask << l)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmpjjv4wfox/tmpjjv4wfox.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ab4d0945c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ab4d063cb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ab4d063c988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ab4d063b7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpjjv4wfox                        0x000055ab778131b8 <unavailable> + 4536\n5    libc.so.6                          0x00002ab4d0b31460 __libc_start_main + 245\n6    tmpjjv4wfox                        0x000055ab77812e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpouqk9rg5/tmpouqk9rg5.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acde6aa9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acde67a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acde67a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acde679f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpouqk9rg5                        0x000055a82b66a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acde6c95460 __libc_start_main + 245\n6    tmpouqk9rg5                        0x000055a82b669e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var count = 0\n    for i in l...r {\n        if (n & (1 << i)) == 0 {\n            count += 1\n        }\n    }\n    if count == r - l + 1 {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpprpjs5j5/tmpprpjs5j5.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b23f7fb9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b23f7cb0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b23f7cb0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b23f7caf7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpprpjs5j5                        0x000056423339e338 <unavailable> + 4920\n5    libc.so.6                          0x00002b23f81a5460 __libc_start_main + 245\n6    tmpprpjs5j5                        0x000056423339dfe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmp91_b7zyc/tmp91_b7zyc.swift:22: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b0d314dfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b0d311d6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b0d311d6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b0d311d57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp91_b7zyc                        0x0000560a77cf62be <unavailable> + 4798\n5    libc.so.6                          0x00002b0d316cb460 __libc_start_main + 245\n6    tmp91_b7zyc                        0x0000560a77cf5e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var temp = n\n    for i in l...r {\n        temp = temp & ~(1 << i)\n    }\n    return temp == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1665510499,
      "stdout": "",
      "stderr": "tmp4fvrvr6r/tmp4fvrvr6r.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b57106cac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b57103c1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b57103c1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b57103c07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp4fvrvr6r                        0x0000558a0c5fa3b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b57108b6460 __libc_start_main + 245\n6    tmp4fvrvr6r                        0x0000558a0c5f9fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            result = false\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpwf3zq8q0/tmpwf3zq8q0.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac26cfaac80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac26cca1b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac26cca1988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac26cca07b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwf3zq8q0                        0x00005627f4845338 <unavailable> + 4920\n5    libc.so.6                          0x00002ac26d196460 __libc_start_main + 245\n6    tmpwf3zq8q0                        0x00005627f4844fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var num = n\n    for i in l...r {\n        num = num & ~(1 << i)\n    }\n    return num == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "tmpeiycsqme/tmpeiycsqme.swift:25: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b4a810e8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b4a80ddfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b4a80ddf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b4a80dde7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpeiycsqme                        0x00005590934693b6 <unavailable> + 5046\n5    libc.so.6                          0x00002b4a812d4460 __libc_start_main + 245\n6    tmpeiycsqme                        0x0000559093468fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    for i in l...r {\n        if n & (1 << i) == 0 {\n            count += 1\n        }\n    }\n    return count == r - l + 1\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmp769gslqh/tmp769gslqh.swift:29: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad76d0e8c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad76cddfb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad76cddf988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad76cdde7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmp769gslqh                        0x00005581d680f338 <unavailable> + 4920\n5    libc.so.6                          0x00002ad76d2d4460 __libc_start_main + 245\n6    tmp769gslqh                        0x00005581d680efe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    let x = (1 << (r - l + 1)) - 1\n    return (n & x) == x\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123372,
      "stdout": "",
      "stderr": "tmpouqk9rg5/tmpouqk9rg5.swift:21: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002acde6aa9c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002acde67a0b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002acde67a0988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002acde679f7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpouqk9rg5                        0x000055a82b66a1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002acde6c95460 __libc_start_main + 245\n6    tmpouqk9rg5                        0x000055a82b669e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var n = n\n    var l = l\n    var r = r\n    var count = 0\n    var i = l\n    while i <= r {\n        if n & (1 << i) != 0 {\n            count += 1\n        }\n        i += 1\n    }\n    return count == 0\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123374,
      "stdout": "",
      "stderr": "tmpwuf3xv96/tmpwuf3xv96.swift:31: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b1960267c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b195ff5eb6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b195ff5e988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b195ff5d7b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpwuf3xv96                        0x000055601085d1b8 <unavailable> + 4536\n5    libc.so.6                          0x00002b1960453460 __libc_start_main + 245\n6    tmpwuf3xv96                        0x000055601085ce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function to check whether all the bits are unset in the given range or not.\nfunc all_Bits_Set_In_The_Given_Range(n: Int, l: Int, r: Int) -> Bool {\n    var result = true\n    for i in l...r {\n        if !(n & (1 << i)) != 0 {\n            result = false\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(all_Bits_Set_In_The_Given_Range(n: 4, l: 1, r: 2) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 17, l: 2, r: 4) == true)\nassert(all_Bits_Set_In_The_Given_Range(n: 39, l: 4, r: 6) == false)",
      "timestamp": 1666123373,
      "stdout": "",
      "stderr": "/tmp/tmp7fgbu1f0.swift:6:16: error: type 'Int' cannot be used as a boolean; test for '== 0' instead\n        if !(n & (1 << i)) != 0 {\n           ~   ^\n            (              == 0)\n/tmp/tmp7fgbu1f0.swift:6:12: error: cannot convert value of type 'Bool' to expected argument type 'Int'\n        if !(n & (1 << i)) != 0 {\n           ^\n",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
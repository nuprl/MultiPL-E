{
  "name": "mbpp_790_even_position",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function to check whether every even index contains even numbers of a given array.\nfunc even_position(nums: [Int]) -> Bool {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(even_position(nums: [3, 2, 1]) == false)\nassert(even_position(nums: [1, 2, 3]) == false)\nassert(even_position(nums: [2, 1, 4]) == true)",
  "stop_tokens": [
    "\n}"
  ],
  "completions": [
    "    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    var even_pos = true\n    for i in 0..<nums.count {\n        if i % 2 == 0 {\n            if nums[i] % 2 != 0 {\n                even_pos = false\n                break\n            }\n        }\n    }\n    return even_pos",
    "    var result = true\n    for i in 0..<nums.count {\n        if i % 2 == 0 {\n            if nums[i] % 2 != 0 {\n                result = false\n                break\n            }\n        }\n    }\n    return result",
    "    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    var result = true\n    for (index, num) in nums.enumerated() {\n        if index % 2 == 0 && num % 2 != 0 {\n            result = false\n            break\n        }\n    }\n    return result",
    "    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    var result = true\n    for (index, num) in nums.enumerated() {\n        if index % 2 == 0 {\n            if num % 2 != 0 {\n                result = false\n                break\n            }\n        }\n    }\n    return result",
    "    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    var even_nums = [Int]()\n    for (index, num) in nums.enumerated() {\n        if index % 2 == 0 {\n            even_nums.append(num)\n        }\n    }\n    for num in even_nums {\n        if num % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    for (index, num) in nums.enumerated() {\n        if index % 2 == 0 && num % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    var result = true\n    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            result = false\n        }\n    }\n    return result",
    "    var even_index = true\n    for i in 0..<nums.count {\n        if i % 2 == 0 {\n            if nums[i] % 2 != 0 {\n                even_index = false\n            }\n        }\n    }\n    return even_index",
    "    var even_position = true\n    for (index, value) in nums.enumerated() {\n        if index % 2 == 0 {\n            if value % 2 != 0 {\n                even_position = false\n            }\n        }\n    }\n    return even_position",
    "    var even_index = true\n    for (index, num) in nums.enumerated() {\n        if index % 2 == 0 {\n            if num % 2 != 0 {\n                even_index = false\n                break\n            }\n        }\n    }\n    return even_index",
    "    for i in stride(from: 0, to: nums.count, by: 2) {\n        if nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    var result = true\n    for (index, num) in nums.enumerated() {\n        if index % 2 == 0 {\n            if num % 2 != 0 {\n                result = false\n                break\n            }\n        }\n    }\n    return result",
    "    for i in 0..<nums.count {\n        if i % 2 == 0 && nums[i] % 2 != 0 {\n            return false\n        }\n    }\n    return true",
    "    for (index, num) in nums.enumerated() {\n        if index % 2 == 0 && num % 2 != 0 {\n            return false\n        }\n    }\n    return true"
  ]
}
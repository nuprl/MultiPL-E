{
  "name": "mbpp_267_square_Sum",
  "language": "swift",
  "prompt": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_267_square_Sum.py",
  "prompt_terminology": "reworded",
  "tests": "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
  "stop_tokens": [
    "\n}"
  ],
  "results": [
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    var i = 1\n    while i <= n {\n        sum += i * i\n        i += 2\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpmfi2fnbe/tmpmfi2fnbe.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b41d6a4cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b41d6743b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b41d6743988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b41d67427b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmfi2fnbe                        0x00005594ba2531b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b41d6c38460 __libc_start_main + 245\n6    tmpmfi2fnbe                        0x00005594ba252e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i*i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "tmpcge38ot5/tmpcge38ot5.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b2eb9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b2e893b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b2e893988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b2e8927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcge38ot5                        0x0000556fe77b8335 <unavailable> + 4917\n5    libc.so.6                          0x00002b2b2ed88460 __libc_start_main + 245\n6    tmpcge38ot5                        0x0000556fe77b7fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    var i = 1\n    while i <= n {\n        sum += i*i\n        i += 2\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "tmpiuiqp0uj/tmpiuiqp0uj.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b6741691c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b6741388b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b6741388988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b67413877b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpiuiqp0uj                        0x0000561b8ccbd1b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b674187d460 __libc_start_main + 245\n6    tmpiuiqp0uj                        0x0000561b8ccbce69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "tmpfbzv2wwp/tmpfbzv2wwp.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b427ee90c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b427eb87b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b427eb87988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b427eb867b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpfbzv2wwp                        0x0000559fe8098335 <unavailable> + 4917\n5    libc.so.6                          0x00002b427f07c460 __libc_start_main + 245\n6    tmpfbzv2wwp                        0x0000559fe8097fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2*i - 1) * (2*i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2*i-1) * (2*i-1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2*i - 1) * (2*i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2*i - 1) * (2*i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    var i = 1\n    while i <= n {\n        sum += i * i\n        i += 2\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpmfi2fnbe/tmpmfi2fnbe.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b41d6a4cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b41d6743b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b41d6743988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b41d67427b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmfi2fnbe                        0x00005594ba2531b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b41d6c38460 __libc_start_main + 245\n6    tmpmfi2fnbe                        0x00005594ba252e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    var i = 1\n    while i <= n {\n        sum += i * i\n        i += 2\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpmfi2fnbe/tmpmfi2fnbe.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b41d6a4cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b41d6743b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b41d6743988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b41d67427b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpmfi2fnbe                        0x00005594ba2531b5 <unavailable> + 4533\n5    libc.so.6                          0x00002b41d6c38460 __libc_start_main + 245\n6    tmpmfi2fnbe                        0x00005594ba252e69 <unavailable> + 3689\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2*i - 1) * (2*i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += Int(pow(Double(i), 2))\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122994,
      "stdout": "",
      "stderr": "/tmp/tmpfjjjopky.swift:6:20: error: cannot find 'pow' in scope\n        sum += Int(pow(Double(i), 2))\n                   ^~~\n",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2*i-1)*(2*i-1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 != 0 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpls38xmoo/tmpls38xmoo.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ac52841ec80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ac528115b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ac528115988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ac5281147b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpls38xmoo                        0x00005641d67c5335 <unavailable> + 4917\n5    libc.so.6                          0x00002ac52860a460 __libc_start_main + 245\n6    tmpls38xmoo                        0x00005641d67c4fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        if i % 2 == 1 {\n            sum += i * i\n        }\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpzig3bgma/tmpzig3bgma.swift:26: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002ad96f121c80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002ad96ee18b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002ad96ee18988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002ad96ee177b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpzig3bgma                        0x0000561b6723a335 <unavailable> + 4917\n5    libc.so.6                          0x00002ad96f30d460 __libc_start_main + 245\n6    tmpzig3bgma                        0x0000561b67239fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i * i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "tmpezzms4sa/tmpezzms4sa.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b3f999bfc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b3f996b6b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b3f996b6988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b3f996b57b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpezzms4sa                        0x00005588ba83a335 <unavailable> + 4917\n5    libc.so.6                          0x00002b3f99bab460 __libc_start_main + 245\n6    tmpezzms4sa                        0x00005588ba839fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += (2 * i - 1) * (2 * i - 1)\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1665510371,
      "stdout": "",
      "stderr": "",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "\n/// Write a swiftthon function that takes in an integer n and returns the sum of the squares of the first n odd natural numbers.\nfunc square_Sum(n: Int) -> Int {\n    var sum = 0\n    for i in 1...n {\n        sum += i*i\n    }\n    return sum\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n        }\n    }\n    return true\n}\n            \nassert(square_Sum(n: 2) == 10)\nassert(square_Sum(n: 3) == 35)\nassert(square_Sum(n: 4) == 84)",
      "timestamp": 1666122995,
      "stdout": "",
      "stderr": "tmpcge38ot5/tmpcge38ot5.swift:24: Assertion failed\nCurrent stack trace:\n0    libswiftCore.so                    0x00002b2b2eb9cc80 _swift_stdlib_reportFatalErrorInFile + 112\n1    libswiftCore.so                    0x00002b2b2e893b6c <unavailable> + 1436524\n2    libswiftCore.so                    0x00002b2b2e893988 <unavailable> + 1436040\n3    libswiftCore.so                    0x00002b2b2e8927b0 _assertionFailure(_:_:file:line:flags:) + 699\n4    tmpcge38ot5                        0x0000556fe77b8335 <unavailable> + 4917\n5    libc.so.6                          0x00002b2b2ed88460 __libc_start_main + 245\n6    tmpcge38ot5                        0x0000556fe77b7fe9 <unavailable> + 4073\n",
      "exit_code": -4,
      "status": "Exception"
    }
  ]
}
language: rs
name: HumanEval_96_count_up_to
results:
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        let mut is_prime = true;\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main() {\n  \
    \  let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n \
    \   assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 2..n {\n        if is_prime(i) {\n            v.push(i);\n     \
    \   }\n    }\n    v\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpwg4j0fgm.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut vec =\
    \ Vec::new();\n    for i in 0..n {\n        vec.push(i);\n    }\n    vec\n}\n\n\
    fn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2,\
    \ 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmphrhemq7b.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 2..n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpziw_y8aj.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 2..n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpziw_y8aj.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    let mut i = 2;\n    while i < n {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n        i += 1;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpngnapu0a.rs:8:12\n\
    \  |\n8 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    let mut is_prime = vec![true; n as usize];\n    for i in 2..n\
    \ {\n        if is_prime[i as usize] {\n            primes.push(i);\n        \
    \    for j in 2..(n / i) {\n                is_prime[(i * j) as usize] = false;\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmpn501jaha.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        if is_prime(i) {\n            result.push(i);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp4ccqyiec.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 1..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpmr1i1975.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    let mut i = 2;\n    while i < n {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n        i += 1;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpngnapu0a.rs:8:12\n\
    \  |\n8 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 0..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp520qdezb.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 0..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp520qdezb.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        let mut is_prime = true;\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main() {\n  \
    \  let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n \
    \   assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 0..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp520qdezb.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        let mut is_prime = true;\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main() {\n  \
    \  let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n \
    \   assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        let mut is_prime = true;\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main() {\n  \
    \  let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n \
    \   assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![2];\n    let mut i = 3;\n    while i < n {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n        i += 1;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpjpmqtky8.rs:8:12\n\
    \  |\n8 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        let mut is_prime = true;\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main() {\n  \
    \  let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n \
    \   assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 1..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpmr1i1975.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    let mut is_prime = vec![true; n as usize];\n    for i in 2..n\
    \ {\n        if is_prime[i as usize] {\n            primes.push(i);\n        \
    \    let mut j = i * i;\n            while j < n {\n                is_prime[j\
    \ as usize] = false;\n                j += i;\n            }\n        }\n    }\n\
    \    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n + 1 {\n        result.push(i);\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[2, 3]`', /tmp/tmpc5ze7rfn.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut vec =\
    \ Vec::new();\n    for i in 0..n {\n        vec.push(i);\n    }\n    vec\n}\n\n\
    fn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2,\
    \ 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmphrhemq7b.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut vec =\
    \ Vec::new();\n    for i in 0..n {\n        vec.push(i);\n    }\n    vec\n}\n\n\
    fn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2,\
    \ 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmphrhemq7b.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut vec =\
    \ Vec::new();\n    for i in 0..n {\n        vec.push(i);\n    }\n    vec\n}\n\n\
    fn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2,\
    \ 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmphrhemq7b.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        let mut is_prime = true;\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main() {\n  \
    \  let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n \
    \   assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 0
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        let mut is_prime = true;\n        for\
    \ j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main() {\n  \
    \  let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n \
    \   assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 1..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmph4yz_6q8.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut v = Vec::new();\n\
    \    for i in 0..n {\n        v.push(i);\n    }\n    v\n}\n\nfn main() {\n   \
    \ let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n  \
    \  assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8j7tgcfd.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpju0u1hy7.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 1..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp0patj17y.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 101
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut result\
    \ = Vec::new();\n    for i in 0..n {\n        result.push(i);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[0, 1, 2, 3, 4]`,\n right: `[2, 3]`', /tmp/tmp8lg3atv7.rs:14:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749415
- exit_code: 1
  program: "/// Implement a function that takes an non-negative integer and returns\
    \ an array of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\nfn count_up_to(n: isize) -> Vec<isize> {\n    let mut primes\
    \ = vec![];\n    let mut i = 2;\n    while i < n {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n        i += 1;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpngnapu0a.rs:8:12\n\
    \  |\n8 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749415

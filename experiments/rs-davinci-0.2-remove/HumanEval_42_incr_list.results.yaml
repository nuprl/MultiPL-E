language: rs
name: HumanEval_42_incr_list
results:
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for e in l {\n        res.push(e\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|&x| x + 1).collect()\n}\n\nfn main() {\n\
    \    let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut ret = Vec::new();\n    for i in l {\n        ret.push(i\
    \ + 1);\n    }\n    ret\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|&x| x + 1).collect()\n}\n\nfn main() {\n\
    \    let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|&x| x + 1).collect()\n}\n\nfn main() {\n\
    \    let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for e in l {\n      \
    \  result.push(e + 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5,\
    \ 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for i in l {\n        res.push(i\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().map(|x| x + 1).collect()\n}\n\nfn main() {\n \
    \   let candidate = incr_list;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![3, 2, 1]), vec![4, 3, 2]);\n\
    \    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9, 0, 123]), vec![6, 3, 6, 3,\
    \ 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929
- exit_code: 0
  program: "/// Return list with elements incremented by 1.\nfn incr_list(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut res = Vec::new();\n    for x in l {\n        res.push(x\
    \ + 1);\n    }\n    res\n}\n\nfn main() {\n    let candidate = incr_list;\n  \
    \  assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![3,\
    \ 2, 1]), vec![4, 3, 2]);\n    assert_eq!(candidate(vec![5, 2, 5, 2, 3, 3, 9,\
    \ 0, 123]), vec![6, 3, 6, 3, 4, 4, 10, 1, 124]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747929

language: rs
name: HumanEval_139_special_factorial
results:
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!(\"\
    special_factorial({})\", n)\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: special_factorial(4)'',
    /tmp/tmpgzva8xd_.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp4qjbm19b.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n+1 {\n        factorial *= i;\n    }\n\
    \    factorial\n}\n\nfn main() {\n    let candidate = special_factorial;\n   \
    \ assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmpnnl5o1pt.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpayqcox9p.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 0
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut factorial = 1;\n    for i in\
    \ 1..n + 1 {\n        factorial *= i;\n    }\n    factorial * special_factorial(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= factorial(i);\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n \
    \   assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n   \
    \ assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyvbf7a3p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= factorial(i);\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n \
    \   assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n   \
    \ assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyvbf7a3p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!(\"\
    special_factorial({})\", n)\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: special_factorial(4)'',
    /tmp/tmpgzva8xd_.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 0
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut factorial = 1;\n    for i in\
    \ 1..n + 1 {\n        factorial *= i;\n    }\n    factorial * special_factorial(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i;\n        result\
    \ *= i - 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmp99fyselc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= factorial(i);\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n \
    \   assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n   \
    \ assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyvbf7a3p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp5b650b4f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpayqcox9p.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i * factorial;\n\
    \    }\n    factorial\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpgm7pbcsj.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..=n {\n        result *= factorial(i);\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n  \
    \  assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9qf_t78p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    //\
    \ TODO: Implement the function here\n    unimplemented!();\n}\n\nfn main() {\n\
    \    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpl2g751v1.rs:9:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 0
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   for j in 1..i {\n            factorial *= j;\n        }\n    }\n    factorial\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp4qjbm19b.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp5b650b4f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp2k6p0yns.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i;\n        result\
    \ *= i - 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmp99fyselc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!(\"\
    special_factorial({})\", n)\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: special_factorial(4)'',
    /tmp/tmpgzva8xd_.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= factorial(i);\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n \
    \   assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n   \
    \ assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyvbf7a3p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..=n {\n        result *= factorial(i);\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n  \
    \  assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9qf_t78p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * special_factorial(i - 1);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpmt6qiypp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= i;\n    }\n    for i in 1..n {\n        result *= i;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `288`', /tmp/tmp3v2jzd5o.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..=n {\n        result *= factorial(i);\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n  \
    \  assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9qf_t78p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * special_factorial(i - 1);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpmt6qiypp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n\
    \    for i in 1..n {\n        factorial *= i;\n    }\n    factorial\n}\n\nfn main()\
    \ {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `288`', /tmp/tmpoxuajw2j.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= i;\n    }\n    for i in 1..n {\n        result *= i;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `144`,\n right: `288`', /tmp/tmp3v2jzd5o.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * factorial(i - 1);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp67exs9ja.rs:13:23\n\
    \   |\n13 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp5b650b4f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i;\n        result\
    \ *= i - 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmp99fyselc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!(\"\
    special_factorial({})\", n)\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: special_factorial(4)'',
    /tmp/tmpgzva8xd_.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * factorial(i - 1);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp67exs9ja.rs:13:23\n\
    \   |\n13 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!(\"\
    special_factorial({})\", n)\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: special_factorial(4)'',
    /tmp/tmpgzva8xd_.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp4qjbm19b.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp2k6p0yns.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= i;\n        result\
    \ *= i-1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpsyvscfzb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmpols9n793.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n+1\
    \ {\n        result *= i;\n        result *= i-1;\n    }\n    result\n}\n\nfn\
    \ main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpdpabyupm.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmpols9n793.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..=n {\n        result *= factorial(i);\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n  \
    \  assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9qf_t78p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n < 0 {\n        panic!(\"n must be greater than 0\");\n    }\n    let mut factorial\
    \ = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n        factorial *=\
    \ i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpdn6k1hpi.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp4qjbm19b.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp2k6p0yns.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp4qjbm19b.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmpols9n793.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..=n {\n        result *= factorial(i);\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n  \
    \  assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9qf_t78p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp5b650b4f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..=n {\n        result *= factorial(i);\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n  \
    \  assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9qf_t78p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= factorial(i);\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n \
    \   assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n   \
    \ assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyvbf7a3p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmpols9n793.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp5b650b4f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp2k6p0yns.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp2k6p0yns.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp2k6p0yns.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * factorial(i - 1);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp67exs9ja.rs:13:23\n\
    \   |\n13 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n     \
    \   factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let candidate\
    \ = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpelvyq5r_.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..=n {\n        result *= factorial(i);\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n  \
    \  assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp9qf_t78p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!(\"\
    The special factorial of {}\", n);\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: The special factorial of
    4'', /tmp/tmp0rfz3o6p.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * special_factorial(i - 1);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpmt6qiypp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * factorial(i - 1);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp67exs9ja.rs:13:23\n\
    \   |\n13 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!(\"\
    special_factorial({})\", n)\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented: special_factorial(4)'',
    /tmp/tmpgzva8xd_.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= factorial(i);\n  \
    \  }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n \
    \   assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n   \
    \ assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpyvbf7a3p.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!()\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmplfxse99r.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= i;\n        result\
    \ *= i;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpd7i7g2jm.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * special_factorial(i - 1);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpmt6qiypp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= i;\n        result *= special_factorial(i - 1);\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpd59zg8al.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    let mut i = n;\n    while i > 0 {\n        result *= factorial(i);\n\
    \        i -= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpir_wo6vb.rs:11:19\n\
    \   |\n11 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * special_factorial(i - 1);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpmt6qiypp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp5b650b4f.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial: isize = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n\
    \        factorial *= i - 1;\n    }\n    factorial\n}\n\nfn main() {\n    let\
    \ candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5),\
    \ 34560);\n    assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1),\
    \ 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmplh3v2pwz.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        1\n    } else {\n        n * special_factorial(n - 1)\n  \
    \  }\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp2k6p0yns.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n <= 1 {\n        return 1;\n    }\n    n * special_factorial(n - 1)\n}\n\n\
    fn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmp3srcxq18.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    let mut i = n;\n    while i > 0 {\n        result *= factorial(i);\n\
    \        i -= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpir_wo6vb.rs:11:19\n\
    \   |\n11 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    let mut i = n;\n    while i > 0 {\n        result *= factorial(i);\n\
    \        i -= 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpir_wo6vb.rs:11:19\n\
    \   |\n11 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n\
    \    factorial\n}\n\nfn main() {\n    let candidate = special_factorial;\n   \
    \ assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmptpck8eb4.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 0
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut factorial = 1;\n    for i in\
    \ 1..n + 1 {\n        factorial *= i;\n    }\n    factorial * special_factorial(n\
    \ - 1)\n}\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * special_factorial(i - 1);\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `576`,\n right: `288`', /tmp/tmpmt6qiypp.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i * factorial(i\
    \ - 1);\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpmpcuroao.rs:10:23\n\
    \   |\n10 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..=n\
    \ {\n        result *= factorial(i);\n    }\n    result\n}\n\nfn main() {\n  \
    \  let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n  \
    \  assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp0ke7mw2r.rs:13:19\n\
    \   |\n13 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut factorial = 1;\n    for i in 1..n + 1 {\n        factorial *= i;\n    }\n\
    \    factorial\n}\n\nfn main() {\n    let candidate = special_factorial;\n   \
    \ assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7),\
    \ 125411328000);\n    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `24`,\n right: `288`', /tmp/tmptpck8eb4.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    unimplemented!();\n\
    }\n\nfn main() {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4),\
    \ 288);\n    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''not implemented'', /tmp/tmpb14m2g4l.rs:8:5

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    if\
    \ n == 0 {\n        return 1;\n    }\n    let mut result = 1;\n    for i in 1..n\
    \ + 1 {\n        result *= i * factorial(i - 1);\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = special_factorial;\n    assert_eq!(candidate(4), 288);\n\
    \    assert_eq!(candidate(5), 34560);\n    assert_eq!(candidate(7), 125411328000);\n\
    \    assert_eq!(candidate(1), 1);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmp67exs9ja.rs:13:23\n\
    \   |\n13 |         result *= i * factorial(i - 1);\n   |                    \
    \   ^^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= i;\n        result\
    \ *= i - 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmp99fyselc.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 101
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n+1 {\n        result *= i;\n        result\
    \ *= i-1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `288`', /tmp/tmpsyvscfzb.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008881
- exit_code: 1
  program: "/// The Brazilian factorial is defined as:\n/// brazilian_factorial(n)\
    \ = n! * (n-1)! * (n-2)! * ... * 1!\n/// where n > 0\n/// For example:\n/// The\
    \ function will receive an integer as input and should return the special\n///\
    \ factorial of this integer.\nfn special_factorial(n: isize) -> isize {\n    let\
    \ mut result = 1;\n    for i in 1..n + 1 {\n        result *= factorial(i);\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = special_factorial;\n\
    \    assert_eq!(candidate(4), 288);\n    assert_eq!(candidate(5), 34560);\n  \
    \  assert_eq!(candidate(7), 125411328000);\n    assert_eq!(candidate(1), 1);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `factorial` in this scope\n  --> /tmp/tmpai86tkge.rs:10:19\n\
    \   |\n10 |         result *= factorial(i);\n   |                   ^^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008881

language: rs
name: HumanEval_94_skjkasdkd
results:
- exit_code: 0
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        let\
    \ mut j = 2;\n        while j < i {\n            if i % j == 0 {\n           \
    \     break;\n            }\n            j += 1;\n        }\n        if j == i\
    \ {\n            if i > max {\n                max = i;\n            }\n     \
    \   }\n    }\n    let mut sum = 0;\n    let mut max = max;\n    while max > 0\
    \ {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ prime_lst = vec![];\n    for i in lst.iter() {\n        if is_prime(*i) {\n\
    \            prime_lst.push(*i);\n        }\n    }\n    let mut sum = 0;\n   \
    \ let mut num = prime_lst[prime_lst.len() - 1];\n    while num > 0 {\n       \
    \ sum += num % 10;\n        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n   \
    \ let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpfltepeps.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max_prime = 0;\n    for i in lst {\n   \
    \     if is_prime(i) {\n            if i > max_prime {\n                max_prime\
    \ = i;\n            }\n        }\n    }\n    let mut sum = 0;\n    let mut max_prime_string\
    \ = max_prime.to_string();\n    for i in max_prime_string.chars() {\n        sum\
    \ += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn main() {\n   \
    \ let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmprq7gturx.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if is_prime(*i) {\n            if *i > max {\n  \
    \              max = *i;\n            }\n        }\n    }\n    let mut res = 0;\n\
    \    while max > 0 {\n        res += max % 10;\n        max /= 10;\n    }\n  \
    \  res\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpg3hi3i_0.rs:8:12\n\
    \  |\n8 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes: Vec<isize> = Vec::new();\n    for\
    \ i in lst {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \    }\n    let mut largest = 0;\n    for i in primes {\n        if i > largest\
    \ {\n            largest = i;\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut num = largest;\n    while num > 0 {\n        sum += num % 10;\n        num\
    \ /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp93o9n4lp.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ is_prime(i) && i > max {\n            max = i;\n        }\n    }\n    return\
    \ sum_digits(max);\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpqv1kxqjp.rs:7:12\n\
    \  |\n7 |         if is_prime(i) && i > max {\n  |            ^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n\
    \  --> /tmp/tmpqv1kxqjp.rs:11:12\n   |\n11 |     return sum_digits(max);\n   |\
    \            ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.into_iter().rev();\n    let mut res = 0;\n    let mut cur = 0;\n \
    \   while let Some(x) = lst.next() {\n        if x == cur {\n            continue;\n\
    \        }\n        if is_prime(x) {\n            res += x;\n            break;\n\
    \        }\n        cur = x;\n    }\n    res\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpobmz4pi3.rs:14:12\n\
    \   |\n14 |         if is_prime(x) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgh7t4hrk.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if is_prime(*i) && *i > max {\n            max =\
    \ *i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpcmb02x4u.rs:8:12\n\
    \  |\n8 |         if is_prime(*i) && *i > max {\n  |            ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut res = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    res = i;\n            break;\n        }\n    }\n    let mut res = res.to_string();\n\
    \    let mut res = res.chars().map(|x| x.to_digit(10).unwrap()).collect::<Vec<u32>>();\n\
    \    res.iter().sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4_3rw6w6.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0277]: the trait bound `isize: Sum<&u32>` is not satisfied\n\
    \  --> /tmp/tmp4_3rw6w6.rs:17:16\n   |\n17 |     res.iter().sum()\n   |      \
    \          ^^^ the trait `Sum<&u32>` is not implemented for `isize`\n   |\n  \
    \ = help: the following implementations were found:\n             <isize as Sum<&'a\
    \ isize>>\n             <isize as Sum>\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpkwg26fpn.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut prime = 0;\n    for i in lst {\n        if is_prime(i) {\n      \
    \      prime = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    for i in prime.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpe_ob6v9r.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    for i in max_prime.to_string().chars() {\n \
    \       sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmp7o5p72qh.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ is_prime(i) && i > max {\n            max = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut num = max;\n    while num > 0 {\n        sum += num %\
    \ 10;\n        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp0pc1vq2w.rs:7:12\n\
    \  |\n7 |         if is_prime(i) && i > max {\n  |            ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut prime = lst.next().unwrap();\n    while\
    \ !is_prime(*prime) {\n        prime = lst.next().unwrap();\n    }\n    let mut\
    \ sum = 0;\n    while *prime > 0 {\n        sum += *prime % 10;\n        *prime\
    \ /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpmj2tgguf.rs:9:12\n\
    \  |\n9 |     while !is_prime(*prime) {\n  |            ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max_prime = 0;\n    for i in primes {\n       \
    \ if i > max_prime {\n            max_prime = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut num = max_prime;\n    while num > 0 {\n        sum +=\
    \ num % 10;\n        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpksfkfj3q.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes: Vec<isize> = Vec::new();\n    for\
    \ i in lst {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \    }\n    let mut max = 0;\n    for i in primes {\n        if i > max {\n  \
    \          max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut max_str\
    \ = max.to_string();\n    for i in max_str.chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp1qw60vzk.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if is_prime(*i) {\n            if *i > max {\n  \
    \              max = *i;\n            }\n        }\n    }\n    let mut sum = 0;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp4ax8xctf.rs:8:12\n\
    \  |\n8 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut res = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    res = i;\n            break;\n        }\n    }\n    let mut res = res.to_string();\n\
    \    let mut res = res.chars().map(|x| x.to_digit(10).unwrap()).collect::<Vec<u32>>();\n\
    \    res.iter().sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4_3rw6w6.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0277]: the trait bound `isize: Sum<&u32>` is not satisfied\n\
    \  --> /tmp/tmp4_3rw6w6.rs:17:16\n   |\n17 |     res.iter().sum()\n   |      \
    \          ^^^ the trait `Sum<&u32>` is not implemented for `isize`\n   |\n  \
    \ = help: the following implementations were found:\n             <isize as Sum<&'a\
    \ isize>>\n             <isize as Sum>\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp6pv18jek.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut sum = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpodf5vsgf.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut result = 0;\n    for i in lst {\n        if is_prime(i) {\n     \
    \       result = i;\n            break;\n        }\n    }\n    result\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp418azi4g.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ primes = vec![];\n    for i in lst.iter() {\n        if is_prime(*i) {\n   \
    \         primes.push(*i);\n        }\n    }\n    let mut sum = 0;\n    for i\
    \ in primes.iter().rev() {\n        let mut i = *i;\n        while i > 0 {\n \
    \           sum += i % 10;\n            i /= 10;\n        }\n        break;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpkvsjy_bh.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst2 = lst.clone();\n    let mut lst3 = lst.clone();\n    lst.reverse();\n \
    \   lst2.reverse();\n    lst3.reverse();\n    let mut lst4 = lst.clone();\n  \
    \  let mut lst5 = lst.clone();\n    let mut lst6 = lst.clone();\n    let mut lst7\
    \ = lst.clone();\n    let mut lst8 = lst.clone();\n    let mut lst9 = lst.clone();\n\
    \    let mut lst10 = lst.clone();\n    let mut lst11 = lst.clone();\n    let mut\
    \ lst12 = lst.clone();\n    let mut lst13 = lst.clone();\n    let mut lst14 =\
    \ lst.clone();\n    let mut lst15 = lst.clone();\n    let mut lst16 = lst.clone();\n\
    \    let mut lst17 = lst.clone();\n    let mut lst18 = lst.clone();\n    let mut\
    \ lst19 = lst.clone();\n    let mut lst20 = lst.clone();\n    let mut lst21 =\
    \ lst.clone();\n    let mut lst22 = lst.clone();\n    let mut lst23 = lst.clone();\n\
    \    let mut lst24 = lst.clone();\n    let mut lst25 = lst.clone();\n    let mut\
    \ lst26 = lst.clone();\n    let mut lst27 = lst.clone();\n    let mut lst28 =\
    \ lst.clone();\n    let mut lst29 = lst.clone();\n    let mut lst30 = lst.clone();\n\
    \    let mut lst31 = lst.clone();\n    let mut lst32 = lst.clone();\n    let mut\
    \ lst33 = lst.clone();\n    let mut lst34 = lst.clone();\n    let mut lst35 =\
    \ lst.clone();\n    let mut lst36 = lst.clone();\n    let mut lst37 = lst.clone();\n\
    \    let mut\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpn3dlx0h5.rs:47:1\n\
    \   |\n47 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  for i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpnttovb35.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut i = max;\n    while i > 0 {\n        sum += i % 10;\n        i /= 10;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpwvjfom1g.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n   \
    \     sum += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmph3sbf43k.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut largest_prime = 0;\n    for i in lst {\n\
    \        if i > largest_prime && is_prime(i) {\n            largest_prime = i;\n\
    \        }\n    }\n    largest_prime.to_string().chars().map(|c| c.to_digit(10).unwrap()\
    \ as isize).sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpw8uvnno3.rs:7:33\n\
    \  |\n7 |         if i > largest_prime && is_prime(i) {\n  |                 \
    \                ^^^^^^^^ not found in this scope\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if is_prime(*i) && *i > max {\n            max =\
    \ *i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpcmb02x4u.rs:8:12\n\
    \  |\n8 |         if is_prime(*i) && *i > max {\n  |            ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max_prime = 0;\n    for i in lst {\n   \
    \     if i > max_prime && is_prime(i) {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut n = max_prime;\n    while n > 0 {\n\
    \        sum += n % 10;\n        n /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp0fdcjd8n.rs:7:29\n\
    \  |\n7 |         if i > max_prime && is_prime(i) {\n  |                     \
    \        ^^^^^^^^ not found in this scope\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut result = 0;\n\
    \    for i in 0..max {\n        if is_prime(i) {\n            result = i;\n  \
    \      }\n    }\n    let mut sum = 0;\n    while result > 0 {\n        sum +=\
    \ result % 10;\n        result /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpn1x_6kd4.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    if primes.len() == 0 {\n\
    \        return 0;\n    }\n    let mut sum = 0;\n    let mut num = primes[0];\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpqynqabi6.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ is_prime(i) && i > max {\n            max = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut n = max;\n    while n > 0 {\n        sum += n % 10;\n\
    \        n /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp0q_gxoft.rs:7:12\n\
    \  |\n7 |         if is_prime(i) && i > max {\n  |            ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 0
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        let\
    \ mut is_prime = true;\n        for j in 2..i {\n            if i % j == 0 {\n\
    \                is_prime = false;\n                break;\n            }\n  \
    \      }\n        if is_prime && i > max {\n            max = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut n = max;\n    while n > 0 {\n      \
    \  sum += n % 10;\n        n /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut num = max;\n    while num > 0 {\n        sum += num % 10;\n       \
    \ num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpt8hfjlxl.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes: Vec<isize> = Vec::new();\n    let\
    \ mut largest_prime = 0;\n    for i in lst {\n        if is_prime(i) {\n     \
    \       primes.push(i);\n        }\n    }\n    for i in primes {\n        if i\
    \ > largest_prime {\n            largest_prime = i;\n        }\n    }\n    let\
    \ mut sum = 0;\n    let mut num = largest_prime;\n    while num > 0 {\n      \
    \  sum += num % 10;\n        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpqktv4g38.rs:8:12\n\
    \  |\n8 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    while let Some(x) = lst.next()\
    \ {\n        if is_prime(*x) {\n            res = x.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n            break;\n        }\n  \
    \  }\n    res\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp679p9z44.rs:10:12\n\
    \   |\n10 |         if is_prime(*x) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut prime_numbers: Vec<isize> = Vec::new();\n\
    \    for i in lst {\n        if is_prime(i) {\n            prime_numbers.push(i);\n\
    \        }\n    }\n    let mut max_prime = 0;\n    for i in prime_numbers {\n\
    \        if i > max_prime {\n            max_prime = i;\n        }\n    }\n  \
    \  let mut sum = 0;\n    let mut max_prime_str = max_prime.to_string();\n    for\
    \ i in max_prime_str.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp0hiuusgd.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes: Vec<isize> = vec![];\n    let mut\
    \ max_prime = 0;\n    for i in lst {\n        if is_prime(i) {\n            primes.push(i);\n\
    \            if i > max_prime {\n                max_prime = i;\n            }\n\
    \        }\n    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum\
    \ += max_prime % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp00j9qtc9.rs:8:12\n\
    \  |\n8 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return sum_digits(i);\n\
    \        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmphe7pwyrr.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n  -->\
    \ /tmp/tmphe7pwyrr.rs:10:20\n   |\n10 |             return sum_digits(i);\n  \
    \ |                    ^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ res = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n     \
    \       res = *i;\n            break;\n        }\n    }\n    res.to_string()\n\
    \        .chars()\n        .map(|x| x.to_digit(10).unwrap() as isize)\n      \
    \  .sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmprfzq24wp.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![2];\n\
    \    for i in 3..max {\n        let mut is_prime = true;\n        for j in primes.iter()\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ lst {\n        if primes.contains(&i) && i > max_prime {\n            max_prime\
    \ = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max_prime.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0382]: use of moved value: `lst`\n   --> /tmp/tmpbvb35idg.rs:25:14\n\
    \    |\n4   | fn skjkasdkd(lst: Vec<isize>) -> isize {\n    |              ---\
    \ move occurs because `lst` has type `Vec<isize>`, which does not implement the\
    \ `Copy` trait\n5   |     let mut max = 0;\n6   |     for i in lst {\n    |  \
    \            ---\n    |              |\n    |              `lst` moved due to\
    \ this implicit call to `.into_iter()`\n    |              help: consider borrowing\
    \ to avoid moving into the for loop: `&lst`\n...\n25  |     for i in lst {\n \
    \   |              ^^^ value used here after move\n    |\nnote: this function\
    \ takes ownership of the receiver `self`, which moves `lst`\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0382`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    let mut primes = vec![];\n    for i in 2..max {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    let mut\
    \ max_prime = 0;\n    for i in lst.iter() {\n        for j in primes.iter() {\n\
    \            if *i == *j {\n                if *i > max_prime {\n            \
    \        max_prime = *i;\n                }\n            }\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut max_prime = max_prime.to_string();\n    for\
    \ i in max_prime.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `25`', /tmp/tmpqprj59yj.rs:46:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max_prime = 0;\n    for i in lst {\n   \
    \     if is_prime(i) && i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut i = max_prime;\n    while i > 0 {\n\
    \        sum += i % 10;\n        i /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp01c99ufq.rs:7:12\n\
    \  |\n7 |         if is_prime(i) && i > max_prime {\n  |            ^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp6pv18jek.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    let mut cur = lst.next().unwrap();\n\
    \    let mut cnt = 1;\n    for i in lst {\n        if *i == *cur {\n         \
    \   cnt += 1;\n        } else {\n            if cnt % 2 == 1 {\n             \
    \   res += *cur;\n            }\n            cur = i;\n            cnt = 1;\n\
    \        }\n    }\n    if cnt % 2 == 1 {\n        res += *cur;\n    }\n    res\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `551`,\n right: `10`', /tmp/tmpg6_6jwx6.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp6pv18jek.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    let mut flag = true;\n  \
    \  while flag {\n        let mut num = *lst.next().unwrap();\n        while num\
    \ > 1 {\n            if num % 2 == 0 {\n                num /= 2;\n          \
    \  } else if num % 3 == 0 {\n                num /= 3;\n            } else if\
    \ num % 5 == 0 {\n                num /= 5;\n            } else if num % 7 ==\
    \ 0 {\n                num /= 7;\n            } else {\n                flag =\
    \ false;\n                break;\n            }\n        }\n        if flag {\n\
    \            res = num;\n        }\n    }\n    res\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `10`', /tmp/tmpb9cxogm1.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 1..max {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    let mut max_prime = 0;\n    for i in primes {\n       \
    \ if i > max_prime {\n            max_prime = i;\n        }\n    }\n    let mut\
    \ sum = 0;\n    let mut num = max_prime;\n    while num > 0 {\n        sum +=\
    \ num % 10;\n        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpy74hk0pl.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut prime = 0;\n    for i in lst {\n       \
    \ if is_prime(i) {\n            if i > prime {\n                prime = i;\n \
    \           }\n        }\n    }\n    return sum_digits(prime);\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmprud3bsj2.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n  -->\
    \ /tmp/tmprud3bsj2.rs:13:12\n   |\n13 |     return sum_digits(prime);\n   |  \
    \          ^^^^^^^^^^ not found in this scope\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgh7t4hrk.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ if *i > max {\n                max = *i;\n            }\n        }\n    }\n\
    \    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n       \
    \ max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp72nbkugv.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpkwg26fpn.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max_prime = 0;\n    for i in lst {\n   \
    \     if is_prime(i) {\n            if i > max_prime {\n                max_prime\
    \ = i;\n            }\n        }\n    }\n    let mut sum = 0;\n    let mut num\
    \ = max_prime;\n    while num > 0 {\n        sum += num % 10;\n        num /=\
    \ 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpjqoyrw2m.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    for i in max_prime.to_string().chars() {\n \
    \       sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmp7o5p72qh.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut result = 0;\n    for i in lst {\n        if is_prime(i) {\n     \
    \       result = i;\n            break;\n        }\n    }\n    let mut result_str\
    \ = result.to_string();\n    let mut sum = 0;\n    for i in result_str.chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvbs5iqlf.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num\
    \ = max;\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmptq8sr5ac.rs:10:23\n\
    \   |\n10 |         if i > max && is_prime(i) {\n   |                       ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut largest = lst.next().unwrap();\n    for\
    \ i in lst {\n        if is_prime(*i) {\n            largest = i;\n          \
    \  break;\n        }\n    }\n    let mut sum = 0;\n    for i in largest.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpy0udvuit.rs:10:12\n\
    \   |\n10 |         if is_prime(*i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if i > &max {\n            max = *i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n\
    \        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpewvxj8ou.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut sum = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpodf5vsgf.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut result = 0;\n    for i in lst {\n        if is_prime(i) {\n     \
    \       result = i;\n            break;\n        }\n    }\n    result\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp418azi4g.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n   \
    \ for i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpys2zxsw7.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut i = 0;\n    while i < lst.len() {\n        if is_prime(lst[i]) {\n\
    \            return sum_digits(lst[i]);\n        }\n        i += 1;\n    }\n \
    \   return 0;\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpuddhk9ml.rs:10:12\n\
    \   |\n10 |         if is_prime(lst[i]) {\n   |            ^^^^^^^^ not found\
    \ in this scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n\
    \  --> /tmp/tmpuddhk9ml.rs:11:20\n   |\n11 |             return sum_digits(lst[i]);\n\
    \   |                    ^^^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    let mut prime = false;\n    let mut sum = 0;\n    while !prime {\n\
    \        let mut count = 0;\n        for i in 1..max {\n            if max % i\
    \ == 0 {\n                count += 1;\n            }\n        }\n        if count\
    \ == 2 {\n            prime = true;\n            let mut temp = max;\n       \
    \     while temp > 0 {\n                sum += temp % 10;\n                temp\
    \ /= 10;\n            }\n        }\n        max -= 1;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `19`,\n right: `10`', /tmp/tmpyurlo0km.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut i = max;\n  \
    \  while i > 0 {\n        if is_prime(i) {\n            return sum_digits(i);\n\
    \        }\n        i -= 1;\n    }\n    0\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpqd8krq5t.rs:13:12\n\
    \   |\n13 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n  -->\
    \ /tmp/tmpqd8krq5t.rs:14:20\n   |\n14 |             return sum_digits(i);\n  \
    \ |                    ^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![2];\n\
    \    for i in 3..max + 1 {\n        let mut is_prime = true;\n        for j in\
    \ primes.iter() {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for\
    \ i in primes {\n        if i > max_prime {\n            max_prime = i;\n    \
    \    }\n    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum +=\
    \ max_prime % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmp1wepuq9p.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ m = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n       \
    \     m = *i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  while m > 0 {\n        sum += m % 10;\n        m /= 10;\n    }\n    sum\n}\n\
    \nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpdeuluu6g.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmprer3j7b5.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes = vec![2];\n    let mut i = 3;\n\
    \    while primes.len() < lst.len() {\n        let mut is_prime = true;\n    \
    \    for p in &primes {\n            if i % p == 0 {\n                is_prime\
    \ = false;\n                break;\n            }\n        }\n        if is_prime\
    \ {\n            primes.push(i);\n        }\n        i += 1;\n    }\n    primes.sort();\n\
    \    primes.reverse();\n    let mut sum = 0;\n    for c in primes[0].to_string().chars()\
    \ {\n        sum += c.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `10`', /tmp/tmp6kn2xhhx.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut temp = max;\n    while temp > 0 {\n        sum += temp % 10;\n    \
    \    temp /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpu44x7ayj.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut val = lst.next().unwrap();\n    let mut\
    \ sum = 0;\n    while val > &1 {\n        if val % 2 == 0 {\n            val /=\
    \ 2;\n        } else if val % 3 == 0 {\n            val /= 3;\n        } else\
    \ if val % 5 == 0 {\n            val /= 5;\n        } else if val % 7 == 0 {\n\
    \            val /= 7;\n        } else {\n            break;\n        }\n    }\n\
    \    while val > 0 {\n        sum += val % 10;\n        val /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0368]: binary assignment operation `/=` cannot be applied to type\
    \ `&isize`\n  --> /tmp/tmpyq2sy15m.rs:12:13\n   |\n12 |             val /= 2;\n\
    \   |             ---^^^^^\n   |             |\n   |             cannot use `/=`\
    \ on type `&isize`\n   |\nhelp: `/=` can be used on `isize`, you can dereference\
    \ `val`\n   |\n12 |             *val /= 2;\n   |             +\n\nerror[E0368]:\
    \ binary assignment operation `/=` cannot be applied to type `&isize`\n  --> /tmp/tmpyq2sy15m.rs:14:13\n\
    \   |\n14 |             val /= 3;\n   |             ---^^^^^\n   |           \
    \  |\n   |             cannot use `/=` on type `&isize`\n   |\nhelp: `/=` can\
    \ be used on `isize`, you can dereference `val`\n   |\n14 |             *val /=\
    \ 3;\n   |             +\n\nerror[E0368]: binary assignment operation `/=` cannot\
    \ be applied to type `&isize`\n  --> /tmp/tmpyq2sy15m.rs:16:13\n   |\n16 |   \
    \          val /= 5;\n   |             ---^^^^^\n   |             |\n   |    \
    \         cannot use `/=` on type `&isize`\n   |\nhelp: `/=` can be used on `isize`,\
    \ you can dereference `val`\n   |\n16 |             *val /= 5;\n   |         \
    \    +\n\nerror[E0368]: binary assignment operation `/=` cannot be applied to\
    \ type `&isize`\n  --> /tmp/tmpyq2sy15m.rs:18:13\n   |\n18 |             val /=\
    \ 7;\n   |             ---^^^^^\n   |             |\n   |             cannot use\
    \ `/=` on type `&isize`\n   |\nhelp: `/=` can be used on `isize`, you can dereference\
    \ `val`\n   |\n18 |             *val /= 7;\n   |             +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpyq2sy15m.rs:23:17\n   |\n23 |     while val\
    \ > 0 {\n   |                 ^\n   |                 |\n   |                \
    \ expected `&isize`, found integer\n   |                 help: consider borrowing\
    \ here: `&0`\n\nerror[E0368]: binary assignment operation `/=` cannot be applied\
    \ to type `&isize`\n  --> /tmp/tmpyq2sy15m.rs:25:9\n   |\n25 |         val /=\
    \ 10;\n   |         ---^^^^^^\n   |         |\n   |         cannot use `/=` on\
    \ type `&isize`\n   |\nhelp: `/=` can be used on `isize`, you can dereference\
    \ `val`\n   |\n25 |         *val /= 10;\n   |         +\n\nerror: aborting due"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  for i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpcn768tje.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: -1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        let\
    \ mut num = i;\n        while num % 2 == 0 {\n            num /= 2;\n        }\n\
    \        let mut j = 3;\n        while j <= (num as f64).sqrt() as isize {\n \
    \           while num % j == 0 {\n                num /= j;\n            }\n \
    \           j += 2;\n        }\n        if num > max {\n            max = num;\n\
    \        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum += max\
    \ % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659749606
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ largest = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n \
    \           largest = *i;\n            break;\n        }\n    }\n    let mut sum\
    \ = 0;\n    for i in largest.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpv9vb9cy9.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes: Vec<isize> = Vec::new();\n    let\
    \ mut lst_iter = lst.iter();\n    let mut max_prime = 0;\n    while let Some(x)\
    \ = lst_iter.next() {\n        if is_prime(*x) {\n            primes.push(*x);\n\
    \            if *x > max_prime {\n                max_prime = *x;\n          \
    \  }\n        }\n    }\n    let mut max_prime_iter = max_prime.to_string().chars();\n\
    \    let mut sum = 0;\n    while let Some(x) = max_prime_iter.next() {\n     \
    \   sum += x.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp85mbpbzv.rs:9:12\n\
    \  |\n9 |         if is_prime(*x) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut res = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    res = i;\n            break;\n        }\n    }\n    res\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpeylf8hqn.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut prime_list: Vec<isize> = Vec::new();\n \
    \   let mut prime_list_2: Vec<isize> = Vec::new();\n    let mut prime_list_3:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_4: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_5: Vec<isize> = Vec::new();\n    let mut prime_list_6:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_7: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_8: Vec<isize> = Vec::new();\n    let mut prime_list_9:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_10: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_11: Vec<isize> = Vec::new();\n    let mut prime_list_12:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_13: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_14: Vec<isize> = Vec::new();\n    let mut prime_list_15:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_16: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_17: Vec<isize> = Vec::new();\n    let mut prime_list_18:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_19: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_20: Vec<isize> = Vec::new();\n    let mut prime_list_21:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_22: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_23: Vec<isize> = Vec::new();\n    let mut prime_list_24:\
    \ Vec<isize> = Vec::new();\n    let mut prime_list_25: Vec<isize> = Vec::new();\n\
    \    let mut prime_list_26: Vec<isize\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `!`, `(`, `+`, `,`, `::`, `:`, `<`, `=`, or `>`,\
    \ found `}`\n  --> /tmp/tmp4wevs0ef.rs:31:1\n   |\n30 |     let mut prime_list_26:\
    \ Vec<isize\n   |         ------------------          - expected one of 9 possible\
    \ tokens\n   |         |                |\n   |         |                help:\
    \ use `=` if you meant to assign\n   |         while parsing the type for `mut\
    \ prime_list_26`\n31 | }\n   | ^ unexpected token\n\nerror: expected `;`, found\
    \ `}`\n  --> /tmp/tmp4wevs0ef.rs:30:37\n   |\n30 |     let mut prime_list_26:\
    \ Vec<isize\n   |                                     ^ help: add `;` here\n31\
    \ | }\n   | - unexpected token\n\nerror[E0423]: expected value, found struct `Vec`\n\
    \   --> /tmp/tmp4wevs0ef.rs:30:28\n    |\n30  |       let mut prime_list_26: Vec<isize\n\
    \    |                              ^^^ help: use struct literal syntax instead:\
    \ `Vec { buf: val, len: val }`\n\nerror[E0423]: expected value, found builtin\
    \ type `isize`\n  --> /tmp/tmp4wevs0ef.rs:30:32\n   |\n30 |     let mut prime_list_26:\
    \ Vec<isize\n   |                                ^^^^^ not a value\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmp4wevs0ef.rs:4:34\n  |\n4 | fn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n  |    ---------                     ^^^^^ expected\
    \ `isize`, found `()`\n  |    |\n  |    implicitly returns `()` as its body has\
    \ no tail or `return` expression\n\nerror: aborting due to 5 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0423.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut prime = 0;\n    for i in lst {\n        if is_prime(i) {\n      \
    \      prime = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    let mut prime = prime;\n    while prime > 0 {\n        sum += prime % 10;\n\
    \        prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_82h40ts.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    while let Some(x) = lst.next()\
    \ {\n        if is_prime(*x) {\n            res = *x;\n            break;\n  \
    \      }\n    }\n    res\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpmevcg_i1.rs:10:12\n\
    \   |\n10 |         if is_prime(*x) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.into_iter().rev();\n    let mut prime = lst.next().unwrap();\n   \
    \ let mut sum = 0;\n    while prime > 1 {\n        let mut i = 2;\n        while\
    \ i < prime {\n            if prime % i == 0 {\n                prime /= i;\n\
    \                break;\n            }\n            i += 1;\n        }\n     \
    \   if i == prime {\n            break;\n        }\n    }\n    while prime > 0\
    \ {\n        sum += prime % 10;\n        prime /= 10;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `10`', /tmp/tmpt19daloy.rs:32:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n       \
    \ max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpybz8f_fg.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgh7t4hrk.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgh7t4hrk.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ if *i > max {\n                max = *i;\n            }\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut max = max;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpqy26_iwv.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut res = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    res = i;\n            break;\n        }\n    }\n    let mut res = res.to_string();\n\
    \    let mut res = res.chars().map(|x| x.to_digit(10).unwrap()).collect::<Vec<u32>>();\n\
    \    res.iter().sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4_3rw6w6.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0277]: the trait bound `isize: Sum<&u32>` is not satisfied\n\
    \  --> /tmp/tmp4_3rw6w6.rs:17:16\n   |\n17 |     res.iter().sum()\n   |      \
    \          ^^^ the trait `Sum<&u32>` is not implemented for `isize`\n   |\n  \
    \ = help: the following implementations were found:\n             <isize as Sum<&'a\
    \ isize>>\n             <isize as Sum>\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut i = 2;\n    while i <= max {\n        let mut j = 2;\n        while\
    \ j <= i / j {\n            if i % j == 0 {\n                break;\n        \
    \    }\n            j += 1;\n        }\n        if j > i / j {\n            sum\
    \ += i;\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9523`,\n right: `10`', /tmp/tmpp8ahzf1t.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp5l1vc9q7.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes = vec![];\n    for i in lst {\n \
    \       if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let\
    \ mut max = primes[0];\n    for i in primes {\n        if i > max {\n        \
    \    max = i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpoz8nucz0.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmprer3j7b5.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    let mut primes = vec![];\n    for i in 2..max {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    let mut\
    \ max_prime = 0;\n    for i in lst.iter() {\n        for j in primes.iter() {\n\
    \            if *i == *j {\n                if *i > max_prime {\n            \
    \        max_prime = *i;\n                }\n            }\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut max_prime = max_prime.to_string();\n    for\
    \ i in max_prime.chars() {\n        sum += i.to_digit(10).unwrap() as isize;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `5`,\n right: `25`', /tmp/tmpqprj59yj.rs:46:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 0
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut n = *lst.next().unwrap();\n    while n\
    \ > 0 {\n        let mut is_prime = true;\n        for i in 2..n {\n         \
    \   if n % i == 0 {\n                is_prime = false;\n                break;\n\
    \            }\n        }\n        if is_prime {\n            break;\n       \
    \ }\n        n = *lst.next().unwrap();\n    }\n    let mut sum = 0;\n    while\
    \ n > 0 {\n        sum += n % 10;\n        n /= 10;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|d|\
    \ d.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpet67jk0w.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut num = max;\n    while num > 0 {\n        sum += num % 10;\n       \
    \ num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpw_d03_cg.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut sum = 0;\n    let mut max = 0;\n    for\
    \ i in lst {\n        if is_prime(i) {\n            if i > max {\n           \
    \     max = i;\n            }\n        }\n    }\n    while max > 0 {\n       \
    \ sum += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n   \
    \ let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpt1q8eboc.rs:8:12\n\
    \  |\n8 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![2];\n\
    \    for i in 3..max {\n        let mut is_prime = true;\n        for j in primes.iter()\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    for i in max_prime.to_string().chars() {\n \
    \       sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmp9agjxkx0.rs:39:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    while let Some(x) = lst.next()\
    \ {\n        if is_prime(*x) {\n            res = *x;\n            break;\n  \
    \      }\n    }\n    res.to_string().chars().map(|x| x.to_digit(10).unwrap() as\
    \ isize).sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpz_9s29je.rs:10:12\n\
    \   |\n10 |         if is_prime(*x) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes {\n        let mut i = i;\n        while i > 0 {\n            sum\
    \ += i % 10;\n            i /= 10;\n        }\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpo_utjnhh.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp6pv18jek.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n   \
    \ for i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpys2zxsw7.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut i = 2;\n    while i <= max {\n        if max % i == 0 {\n         \
    \   max /= i;\n            sum += i;\n        } else {\n            i += 1;\n\
    \        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `16`,\n right: `10`', /tmp/tmpbwgnz0a8.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    let\
    \ mut max_index = 0;\n    for i in 0..lst.len() {\n        if lst[i] > max {\n\
    \            max = lst[i];\n            max_index = i;\n        }\n    }\n   \
    \ let mut sum = 0;\n    let mut n = max;\n    while n > 0 {\n        sum += n\
    \ % 10;\n        n /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmplo_ub7i8.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut max_prime = 0;\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ max_prime = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num = max_prime;\n\
    \    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpeckcu94j.rs:35:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes = vec![];\n    for i in lst {\n \
    \       if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    let\
    \ mut max = 0;\n    for i in primes {\n        if i > max {\n            max =\
    \ i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp3woimbf8.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ sum = 0;\n    let mut i = lst.len() - 1;\n    while i >= 0 {\n        let mut\
    \ j = i - 1;\n        while j >= 0 {\n            if lst[i] % lst[j] == 0 {\n\
    \                break;\n            }\n            j -= 1;\n        }\n     \
    \   if j == -1 {\n            break;\n        }\n        i -= 1;\n    }\n    let\
    \ mut n = lst[i];\n    while n > 0 {\n        sum += n % 10;\n        n /= 10;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0600]: cannot apply unary operator `-` to type `usize`\n  --> /tmp/tmp6hx_fuu2.rs:17:17\n\
    \   |\n17 |         if j == -1 {\n   |                 ^^\n   |              \
    \   |\n   |                 cannot apply unary operator `-`\n   |            \
    \     help: you may have meant the maximum value of `usize`: `usize::MAX`\n  \
    \ |\n   = note: unsigned values cannot be negated\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0600`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return sum_digits(i);\n\
    \        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmphe7pwyrr.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n  -->\
    \ /tmp/tmphe7pwyrr.rs:10:20\n   |\n10 |             return sum_digits(i);\n  \
    \ |                    ^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut i = lst.next().unwrap();\n    while i %\
    \ 2 == 0 {\n        i = lst.next().unwrap();\n    }\n    let mut i = *i;\n   \
    \ let mut j = 3;\n    while j * j <= i {\n        if i % j == 0 {\n          \
    \  i = lst.next().unwrap();\n            j = 3;\n        } else {\n          \
    \  j += 2;\n        }\n    }\n    let mut sum = 0;\n    while i > 0 {\n      \
    \  sum += i % 10;\n        i /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpf130mdo2.rs:16:17\n   |\n\
    16 |             i = lst.next().unwrap();\n   |                 ^^^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n\
    \   |\n16 |             i = *lst.next().unwrap();\n   |                 +\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp5l1vc9q7.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    let mut i = 0;\n    while\
    \ i < lst.len() {\n        if is_prime(*lst.nth(i).unwrap()) {\n            res\
    \ = *lst.nth(i).unwrap();\n            break;\n        }\n        i += 1;\n  \
    \  }\n    res\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_evhmx4o.rs:11:12\n\
    \   |\n11 |         if is_prime(*lst.nth(i).unwrap()) {\n   |            ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut largest_prime = 0;\n    for i in lst {\n\
    \        if is_prime(i) && i > largest_prime {\n            largest_prime = i;\n\
    \        }\n    }\n    let mut sum = 0;\n    let mut num = largest_prime;\n  \
    \  while num > 0 {\n        sum += num % 10;\n        num /= 10;\n    }\n    sum\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp2rgqorym.rs:7:12\n\
    \  |\n7 |         if is_prime(i) && i > largest_prime {\n  |            ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ primes = vec![];\n    for i in lst.iter() {\n        if is_prime(*i) {\n   \
    \         primes.push(*i);\n        }\n    }\n    let mut sum = 0;\n    let mut\
    \ num = primes[primes.len() - 1];\n    while num > 0 {\n        sum += num % 10;\n\
    \        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpodm3a5pd.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    while let Some(x) = lst.next()\
    \ {\n        if is_prime(*x) {\n            res = *x;\n            break;\n  \
    \      }\n    }\n    res.to_string().chars().map(|x| x.to_digit(10).unwrap() as\
    \ isize).sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpz_9s29je.rs:10:12\n\
    \   |\n10 |         if is_prime(*x) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ primes = vec![];\n    for i in lst.iter() {\n        if is_prime(*i) {\n   \
    \         primes.push(*i);\n        }\n    }\n    let mut sum = 0;\n    let mut\
    \ num = primes[primes.len() - 1];\n    while num > 0 {\n        sum += num % 10;\n\
    \        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpodm3a5pd.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgh7t4hrk.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    max = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut max = max;\n    while max > 0 {\n        sum += max % 10;\n       \
    \ max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpybz8f_fg.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut n = max;\n    while n > 0 {\n        sum += n % 10;\n        n /= 10;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpyyd79081.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut max = 0;\n    for i in lst {\n        if i > max && is_prime(i) {\n\
    \            max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut i =\
    \ max;\n    while i > 0 {\n        sum += i % 10;\n        i /= 10;\n    }\n \
    \   sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpxyjagj6y.rs:10:23\n\
    \   |\n10 |         if i > max && is_prime(i) {\n   |                       ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  for i in max.to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `10`', /tmp/tmpcn768tje.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut res = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    res = i;\n            break;\n        }\n    }\n    res\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpeylf8hqn.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = Vec::new();\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpg4brd662.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgh7t4hrk.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.into_iter().rev();\n    let mut prime = lst.next().unwrap();\n   \
    \ while !is_prime(prime) {\n        prime = lst.next().unwrap();\n    }\n    prime.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum()\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpz5yvqdko.rs:9:12\n\
    \  |\n9 |     while !is_prime(prime) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut prime = lst.next().unwrap();\n    while\
    \ !is_prime(*prime) {\n        prime = lst.next().unwrap();\n    }\n    let mut\
    \ sum = 0;\n    while *prime > 0 {\n        sum += *prime % 10;\n        *prime\
    \ /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpmj2tgguf.rs:9:12\n\
    \  |\n9 |     while !is_prime(*prime) {\n  |            ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if i > &max {\n            max = *i;\n        }\n\
    \    }\n    let mut max = max;\n    let mut is_prime = true;\n    while is_prime\
    \ {\n        for i in 2..max {\n            if max % i == 0 {\n              \
    \  is_prime = false;\n                break;\n            }\n        }\n     \
    \   if is_prime {\n            break;\n        }\n        max -= 1;\n    }\n \
    \   let mut sum = 0;\n    while max > 0 {\n        sum += max % 10;\n        max\
    \ /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `8`,\n right: `10`', /tmp/tmpthfzvpam.rs:36:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max_prime = 0;\n    for i in lst {\n   \
    \     if is_prime(i) && i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut n = max_prime;\n    while n > 0 {\n\
    \        sum += n % 10;\n        n /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp03w2_07o.rs:7:12\n\
    \  |\n7 |         if is_prime(i) && i > max_prime {\n  |            ^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 0
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut res = 0;\n    for i in lst {\n        if i > 1 {\n            let\
    \ mut is_prime = true;\n            for j in 2..i {\n                if i % j\
    \ == 0 {\n                    is_prime = false;\n                    break;\n\
    \                }\n            }\n            if is_prime {\n               \
    \ res = i;\n                break;\n            }\n        }\n    }\n    let mut\
    \ res_str = res.to_string();\n    let mut res_sum = 0;\n    for i in res_str.chars()\
    \ {\n        res_sum += i.to_digit(10).unwrap() as isize;\n    }\n    res_sum\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: -1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        let\
    \ mut n = i;\n        let mut cnt = 0;\n        while n % 2 == 0 {\n         \
    \   cnt += 1;\n            n /= 2;\n        }\n        if cnt > max {\n      \
    \      max = cnt;\n        }\n    }\n    max\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659749606
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut num = primes[0];\n    while num > 0 {\n        sum += num % 10;\n      \
    \  num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmppz_acnok.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![2];\n\
    \    for i in 3..max + 1 {\n        let mut is_prime = true;\n        for j in\
    \ primes.iter() {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for\
    \ i in primes {\n        if i > max_prime {\n            max_prime = i;\n    \
    \    }\n    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum +=\
    \ max_prime % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmp1wepuq9p.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    let mut n = lst.next().unwrap();\n\
    \    while n > &1 {\n        if is_prime(*n) {\n            res += n.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum::<isize>();\n            break;\n    \
    \    }\n        n = lst.next().unwrap();\n    }\n    res\n}\n\nfn main() {\n \
    \   let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp23e_378g.rs:11:12\n\
    \   |\n11 |         if is_prime(*n) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if *i > max {\n            max = *i;\n        }\n\
    \    }\n    let mut primes = vec![];\n    for i in 2..max {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    let mut\
    \ max_prime = 0;\n    for i in primes.iter() {\n        if *i > max_prime {\n\
    \            max_prime = *i;\n        }\n    }\n    let mut sum = 0;\n    while\
    \ max_prime > 0 {\n        sum += max_prime % 10;\n        max_prime /= 10;\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmp149el49p.rs:41:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|c|\
    \ c.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpguhuyz5l.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut prime = 0;\n    for i in lst {\n        if is_prime(i) {\n      \
    \      prime = i;\n            break;\n        }\n    }\n    prime.to_string()\n\
    \        .chars()\n        .map(|x| x.to_digit(10).unwrap() as isize)\n      \
    \  .sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpn0baemc5.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut prime = 0;\n    for i in lst {\n        if is_prime(i) {\n      \
    \      prime = i;\n            break;\n        }\n    }\n    let mut sum = 0;\n\
    \    let mut prime = prime;\n    while prime > 0 {\n        sum += prime % 10;\n\
    \        prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_82h40ts.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut num = *lst.next().unwrap();\n    while\
    \ !is_prime(num) {\n        num = *lst.next().unwrap();\n    }\n    let mut sum\
    \ = 0;\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n  \
    \  }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmprvpgaxxc.rs:9:12\n\
    \  |\n9 |     while !is_prime(num) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return i.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum();\n        }\n    }\n    0\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgh7t4hrk.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut sum = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpodf5vsgf.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n   \
    \     sum += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmph3sbf43k.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 101
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut primes = vec![];\n\
    \    for i in 2..max {\n        let mut is_prime = true;\n        for j in 2..i\
    \ {\n            if i % j == 0 {\n                is_prime = false;\n        \
    \        break;\n            }\n        }\n        if is_prime {\n           \
    \ primes.push(i);\n        }\n    }\n    let mut max_prime = 0;\n    for i in\
    \ primes {\n        if i > max_prime {\n            max_prime = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    while max_prime > 0 {\n        sum += max_prime\
    \ % 10;\n        max_prime /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `11`,\n right: `10`', /tmp/tmpcdbedk_a.rs:40:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = Vec::new();\n    for i in lst {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n   \
    \ for i in primes {\n        let mut i = i;\n        while i > 0 {\n         \
    \   sum += i % 10;\n            i /= 10;\n        }\n    }\n    sum\n}\n\nfn main()\
    \ {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1,\
    \ 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpn05hzq4v.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ primes = vec![];\n    for i in lst.iter() {\n        if is_prime(i) {\n    \
    \        primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    if primes.len()\
    \ > 0 {\n        let mut prime = primes[primes.len() - 1];\n        while prime\
    \ > 0 {\n            sum += prime % 10;\n            prime /= 10;\n        }\n\
    \    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpj5dvozmg.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpj5dvozmg.rs:16:23\n \
    \  |\n16 |         while prime > 0 {\n   |                       ^\n   |     \
    \                  |\n   |                       expected `&isize`, found integer\n\
    \   |                       help: consider borrowing here: `&0`\n\nerror[E0368]:\
    \ binary assignment operation `/=` cannot be applied to type `&isize`\n  --> /tmp/tmpj5dvozmg.rs:18:13\n\
    \   |\n18 |             prime /= 10;\n   |             -----^^^^^^\n   |     \
    \        |\n   |             cannot use `/=` on type `&isize`\n   |\nhelp: `/=`\
    \ can be used on `isize`, you can dereference `prime`\n   |\n18 |            \
    \ *prime /= 10;\n   |             +\n\nerror: aborting due to 3 previous errors\n\
    \nSome errors have detailed explanations: E0308, E0368, E0425.\nFor more information\
    \ about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 0
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes: Vec<isize> = vec![];\n    let mut\
    \ max_prime = 0;\n    for i in lst {\n        let mut is_prime = true;\n     \
    \   for j in 2..i {\n            if i % j == 0 {\n                is_prime = false;\n\
    \                break;\n            }\n        }\n        if is_prime {\n   \
    \         primes.push(i);\n            if i > max_prime {\n                max_prime\
    \ = i;\n            }\n        }\n    }\n    let mut sum = 0;\n    let mut num\
    \ = max_prime;\n    while num > 0 {\n        sum += num % 10;\n        num /=\
    \ 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749602
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut sum = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpodf5vsgf.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut res = 0;\n    while let Some(x) = lst.next()\
    \ {\n        if is_prime(*x) {\n            res = *x;\n            break;\n  \
    \      }\n    }\n    res.to_string().chars().map(|x| x.to_digit(10).unwrap() as\
    \ isize).sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpz_9s29je.rs:10:12\n\
    \   |\n10 |         if is_prime(*x) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    for\
    \ i in primes[0].to_string().chars() {\n        sum += i.to_digit(10).unwrap()\
    \ as isize;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_jcq2hpx.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ largest = 0;\n    for i in lst.iter().rev() {\n        if is_prime(*i) {\n \
    \           largest = *i;\n            break;\n        }\n    }\n    largest.to_string()\n\
    \        .chars()\n        .map(|x| x.to_digit(10).unwrap() as isize)\n      \
    \  .sum()\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpfd_acwyu.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    let mut max = max;\n\
    \    while max > 0 {\n        sum += max % 10;\n        max /= 10;\n    }\n  \
    \  sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpp23gxk3l.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ sum = 0;\n    let mut i = lst.len() - 1;\n    while i >= 0 {\n        if is_prime(lst[i])\
    \ {\n            let mut n = lst[i];\n            while n > 0 {\n            \
    \    sum += n % 10;\n                n /= 10;\n            }\n            return\
    \ sum;\n        }\n        i -= 1;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsisg3ict.rs:10:12\n\
    \   |\n10 |         if is_prime(lst[i]) {\n   |            ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut primes = vec![];\n    for i in lst {\n        if is_prime(i) {\n\
    \            primes.push(i);\n        }\n    }\n    let mut sum = 0;\n    let\
    \ mut num = primes[0];\n    while num > 0 {\n        sum += num % 10;\n      \
    \  num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmppz_acnok.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n   \
    \     sum += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmph3sbf43k.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 0
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        let\
    \ mut is_prime = true;\n        for j in 2..i {\n            if i % j == 0 {\n\
    \                is_prime = false;\n                break;\n            }\n  \
    \      }\n        if is_prime && i > max {\n            max = i;\n        }\n\
    \    }\n    let mut sum = 0;\n    let mut n = max;\n    while n > 0 {\n      \
    \  sum += n % 10;\n        n /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    let mut max = 0;\n    for\
    \ i in lst.iter() {\n        if is_prime(*i) && *i > max {\n            max =\
    \ *i;\n        }\n    }\n    let mut sum = 0;\n    while max > 0 {\n        sum\
    \ += max % 10;\n        max /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpcmb02x4u.rs:8:12\n\
    \  |\n8 |         if is_prime(*i) && *i > max {\n  |            ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ primes = vec![];\n    for i in lst.iter() {\n        if is_prime(*i) {\n   \
    \         primes.push(*i);\n        }\n    }\n    let mut sum = 0;\n    let mut\
    \ num = primes[primes.len() - 1];\n    while num > 0 {\n        sum += num % 10;\n\
    \        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n\
    \    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpodm3a5pd.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    for i in lst {\n        if is_prime(i) {\n            return sum_digits(i);\n\
    \        }\n    }\n    0\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n \
    \   assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4,\
    \ 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1, 0, 1, 8, 2,\
    \ 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmphe7pwyrr.rs:9:12\n\
    \  |\n9 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror[E0425]: cannot find function `sum_digits` in this scope\n  -->\
    \ /tmp/tmphe7pwyrr.rs:10:20\n   |\n10 |             return sum_digits(i);\n  \
    \ |                    ^^^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ max = *i;\n        }\n    }\n    let mut sum = 0;\n    for i in max.to_string().chars()\
    \ {\n        sum += i.to_digit(10).unwrap() as isize;\n    }\n    sum\n}\n\nfn\
    \ main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3,\
    \ 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp5l1vc9q7.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ max = 0;\n    for i in lst.iter() {\n        if is_prime(*i) {\n           \
    \ if *i > max {\n                max = *i;\n            }\n        }\n    }\n\
    \    let mut sum = 0;\n    let mut num = max;\n    while num > 0 {\n        sum\
    \ += num % 10;\n        num /= 10;\n    }\n    sum\n}\n\nfn main() {\n    let\
    \ candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4,\
    \ 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp6qrqpn1p.rs:9:12\n\
    \  |\n9 |         if is_prime(*i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ prime = lst.last().unwrap();\n    while !is_prime(*prime) {\n        prime =\
    \ &lst[lst.iter().position(|&x| x == *prime).unwrap() - 1];\n    }\n    prime.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum()\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmptvywhvnd.rs:8:12\n\
    \  |\n8 |     while !is_prime(*prime) {\n  |            ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut primes: Vec<isize> = Vec::new();\n    for\
    \ i in lst {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \    }\n    let mut max = 0;\n    for i in primes {\n        if i > max {\n  \
    \          max = i;\n        }\n    }\n    let mut sum = 0;\n    let mut num =\
    \ max;\n    while num > 0 {\n        sum += num % 10;\n        num /= 10;\n  \
    \  }\n    sum\n}\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmpgaeb56lj.rs:7:12\n\
    \  |\n7 |         if is_prime(i) {\n  |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    lst.reverse();\n\
    \    let mut sum = 0;\n    for i in lst {\n        if is_prime(i) {\n        \
    \    sum += i;\n        }\n    }\n    sum\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpodf5vsgf.rs:10:12\n\
    \   |\n10 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659749600
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut max = 0;\n    for i in lst {\n        if\
    \ i > max {\n            max = i;\n        }\n    }\n    let mut sum = 0;\n  \
    \  let mut i = 2;\n    while i < max {\n        let mut j = 2;\n        while\
    \ j <= (i / j) {\n            if !(i % j) {\n                break;\n        \
    \    }\n            j += 1;\n        }\n        if j > (i / j) {\n           \
    \ sum += i;\n        }\n        i += 1;\n    }\n    sum\n}\n\nfn main() {\n  \
    \  let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5,\
    \ 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmplnlr9r03.rs:16:16\n   |\n\
    16 |             if !(i % j) {\n   |                ^^^^^^^^ expected `bool`,\
    \ found `isize`\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.into_iter().rev();\n    let mut lst = lst.filter(|&x| is_prime(x));\n\
    \    let mut lst = lst.map(|x| x.to_string());\n    let mut lst = lst.map(|x|\
    \ x.chars());\n    let mut lst = lst.map(|x| x.map(|x| x.to_digit(10).unwrap()\
    \ as isize));\n    let mut lst = lst.map(|x| x.sum());\n    lst.next().unwrap()\n\
    }\n\nfn main() {\n    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0,\
    \ 3, 2, 1, 3, 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n\
    \    assert_eq!(candidate(vec![1, 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4,\
    \ 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1, 3, 1, 32, 5107, 34, 83278,\
    \ 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n    assert_eq!(candidate(vec![0,\
    \ 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]), 11);\n    assert_eq!(candidate(vec![0,\
    \ 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0, 8, 1, 2, 1, 7]), 7);\n\
    \    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n --> /tmp/tmp6eyzw2so.rs:8:35\n\
    \  |\n8 |     let mut lst = lst.filter(|&x| is_prime(x));\n  |               \
    \                    ^^^^^^^^ not found in this scope\n\nerror: aborting due to\
    \ previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut prime = 0;\n    let mut i = 0;\n    while\
    \ prime == 0 {\n        if is_prime(lst.nth(i).unwrap()) {\n            prime\
    \ = lst.nth(i).unwrap();\n        }\n        i += 1;\n    }\n    prime.to_string().chars().map(|x|\
    \ x.to_digit(10).unwrap() as isize).sum()\n}\n\nfn main() {\n    let candidate\
    \ = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3, 5, 7, 4, 5, 5, 5,\
    \ 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpx1ec2s5m.rs:11:12\n\
    \   |\n11 |         if is_prime(lst.nth(i).unwrap()) {\n   |            ^^^^^^^^\
    \ not found in this scope\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpx1ec2s5m.rs:12:21\n\
    \   |\n12 |             prime = lst.nth(i).unwrap();\n   |                   \
    \  ^^^^^^^^^^^^^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider\
    \ dereferencing the borrow\n   |\n12 |             prime = *lst.nth(i).unwrap();\n\
    \   |                     +\n\nerror: aborting due to 2 previous errors\n\nSome\
    \ errors have detailed explanations: E0308, E0425.\nFor more information about\
    \ an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749601
- exit_code: 1
  program: "/// You are given a list of integers.\n/// You need to find the largest\
    \ prime value and return the sum of its digits.\n/// Examples:\nfn skjkasdkd(lst:\
    \ Vec<isize>) -> isize {\n    let mut lst = lst;\n    lst.sort();\n    let mut\
    \ lst = lst.iter().rev();\n    let mut x = lst.next().unwrap();\n    while x %\
    \ 2 == 0 {\n        x = lst.next().unwrap();\n    }\n    x\n}\n\nfn main() {\n\
    \    let candidate = skjkasdkd;\n    assert_eq!(candidate(vec![0, 3, 2, 1, 3,\
    \ 5, 7, 4, 5, 5, 5, 2, 181, 32, 4, 32, 3, 2, 32, 324, 4, 3]), 10);\n    assert_eq!(candidate(vec![1,\
    \ 0, 1, 8, 2, 4597, 2, 1, 3, 40, 1, 2, 1, 2, 4, 2, 5, 1]), 25);\n    assert_eq!(candidate(vec![1,\
    \ 3, 1, 32, 5107, 34, 83278, 109, 163, 23, 2323, 32, 30, 1, 9, 3]), 13);\n   \
    \ assert_eq!(candidate(vec![0, 724, 32, 71, 99, 32, 6, 0, 5, 91, 83, 0, 5, 6]),\
    \ 11);\n    assert_eq!(candidate(vec![0, 81, 12, 3, 1, 21]), 3);\n    assert_eq!(candidate(vec![0,\
    \ 8, 1, 2, 1, 7]), 7);\n    assert_eq!(candidate(vec![8191]), 19);\n    assert_eq!(candidate(vec![8191,\
    \ 123456, 127, 7]), 19);\n    assert_eq!(candidate(vec![127, 97, 8192]), 10);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpsxyf5zv_.rs:12:5\n   |\n\
    4  | fn skjkasdkd(lst: Vec<isize>) -> isize {\n   |                          \
    \        ----- expected `isize` because of return type\n...\n12 |     x\n   |\
    \     ^ expected `isize`, found `&isize`\n   |\nhelp: consider dereferencing the\
    \ borrow\n   |\n12 |     *x\n   |     +\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659749601

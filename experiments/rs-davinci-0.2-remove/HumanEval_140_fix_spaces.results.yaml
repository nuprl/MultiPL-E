language: rs
name: HumanEval_140_fix_spaces
results:
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut count\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_char\
    \ == ' ' {\n                count += 1;\n            } else {\n              \
    \  count = 1;\n            }\n            if count > 2 {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            count = 0;\n            result.push(c);\n        }\n\
    \        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpgenfu4zt.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if last_char\
    \ == ' ' {\n                consecutive_spaces += 1;\n            } else {\n \
    \               consecutive_spaces = 1;\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        last_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmprnyfz5dx.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ == 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpd1qj8qnd.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces > 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    spaces = 0;\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpwsseuzrt.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut space_count\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            space_count\
    \ += 1;\n            if space_count > 2 {\n                continue;\n       \
    \     }\n        } else {\n            space_count = 0;\n        }\n        if\
    \ prev_char == ' ' && c == ' ' {\n            result.push('-');\n        } else\
    \ {\n            result.push(c);\n        }\n        prev_char = c;\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpf1pagvoc.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            result.push(c);\n        }\n \
    \       last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpd2ktmu3s.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' {\n            if last_char == ' ' {\n             \
    \   result.push('-');\n            } else {\n                result.push('_');\n\
    \            }\n        } else {\n            result.push(c);\n        }\n   \
    \     last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpsl6thupj.rs:35:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            if prev_char == ' ' {\n      \
    \          result.push('_');\n            }\n            result.push(c);\n   \
    \     }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"_Example\"`,\n right: `\"Example\"`', /tmp/tmpztevhk0l.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for ch in text.chars() {\n        if ch == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if ch == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(ch);\n        }\n        prev_char\
    \ = ch;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp32ndhdd1.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' {\n            if last_char == ' ' {\n             \
    \   result.push('-');\n            } else {\n                result.push('_');\n\
    \            }\n        } else {\n            result.push(c);\n        }\n   \
    \     last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpsl6thupj.rs:35:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut last_last_char\
    \ = ' ';\n    for c in text.chars() {\n        if c == ' ' {\n            if last_char\
    \ == ' ' && last_last_char == ' ' {\n                result.push('-');\n     \
    \       } else {\n                result.push('_');\n            }\n        }\
    \ else {\n            result.push(c);\n        }\n        last_last_char = last_char;\n\
    \        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpamhr5ngc.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = '\\0';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n            result.push('_');\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        prev_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp9st5aykg.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut previous_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && previous_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        previous_char\
    \ = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpi5cksog7.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            if prev_char == ' ' {\n      \
    \          result.push('_');\n            }\n            result.push(c);\n   \
    \     }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"_Example\"`,\n right: `\"Example\"`', /tmp/tmpztevhk0l.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_char\
    \ == ' ' {\n                consecutive_spaces += 1;\n            } else {\n \
    \               consecutive_spaces = 1;\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        prev_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpqd3zcjea.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp0fgztm33.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 1
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    text.replace(\"\
    \ \", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\"\
    )\n        .replace(\"__\", \"_\")\n        .replace(\"__\", \"_\")\n        .replace(\"\
    __\", \"_\")\n        .replace(\"__\", \"_\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0765]: unterminated double quote string\n  --> /tmp/tmphen84ddj.rs:70:91\n\
    \   |\n70 |       assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n   |  ___________________________________________________________________________________________^\n\
    71 | | }\n   | |__^\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0765`.\n"
  stdout: ''
  timestamp: 1659749228
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ == 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpd1qj8qnd.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut new_text = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    new_text.push('-');\n                }\n     \
    \       } else {\n                new_text.push('_');\n            }\n       \
    \ } else {\n            consecutive_spaces = 0;\n            new_text.push(c);\n\
    \        }\n        last_char = c;\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\"\
    )), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpp8jh0r5o.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut count_spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            count_spaces += 1;\n            if count_spaces\
    \ > 2 {\n                result.push('-');\n                count_spaces = 0;\n\
    \            }\n        } else {\n            if count_spaces > 0 {\n        \
    \        result.push('_');\n                count_spaces = 0;\n            }\n\
    \            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\"\
    )), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpw9n_m92k.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_space\
    \ {\n                consecutive_spaces += 1;\n            } else {\n        \
    \        consecutive_spaces = 1;\n            }\n            prev_space = true;\n\
    \        } else {\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \            } else {\n                for _ in 0..consecutive_spaces {\n    \
    \                result.push('_');\n                }\n            }\n       \
    \     result.push(c);\n            prev_space = false;\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_H_a_n_i_f\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp1yp3xjuf.rs:34:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_is_space = false;\n    let mut\
    \ consecutive_spaces = 0;\n    for c in text.chars() {\n        if c == ' ' {\n\
    \            if prev_is_space {\n                consecutive_spaces += 1;\n  \
    \          } else {\n                consecutive_spaces = 1;\n            }\n\
    \            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_is_space = true;\n        } else {\n            result.push(c);\n\
    \            prev_is_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpvav_vf8y.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if last_char\
    \ == ' ' {\n                consecutive_spaces += 1;\n            } else {\n \
    \               consecutive_spaces = 1;\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        last_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmprnyfz5dx.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            if prev_char == ' ' {\n      \
    \          result.push('_');\n            }\n            result.push(c);\n   \
    \     }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"_Example\"`,\n right: `\"Example\"`', /tmp/tmpztevhk0l.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces > 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    spaces = 0;\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpwsseuzrt.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for ch in text.chars()\
    \ {\n        if ch == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(ch);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpor4tibos.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' {\n            if last_char == ' ' {\n             \
    \   result.push('-');\n            } else {\n                result.push('_');\n\
    \            }\n        } else {\n            result.push(c);\n        }\n   \
    \     last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpsl6thupj.rs:35:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut last_was_space\
    \ = false;\n    for c in text.chars() {\n        if c == ' ' {\n            if\
    \ last_was_space {\n                result.push('-');\n            } else {\n\
    \                result.push('_');\n            }\n            last_was_space\
    \ = true;\n        } else {\n            result.push(c);\n            last_was_space\
    \ = false;\n        }\n        last_char = c;\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp1k603sl3.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_char\
    \ == ' ' {\n                consecutive_spaces += 1;\n            } else {\n \
    \               consecutive_spaces = 1;\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        prev_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpqd3zcjea.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces == 1 {\n                result.push('_');\n\
    \            } else if consecutive_spaces > 2 {\n                result.push('-');\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \      result.push(c);\n        }\n        prev_char = c;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpsj4u9u_a.rs:29:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && last_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        last_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpswerkhy6.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut prev_prev_char\
    \ = ' ';\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_char\
    \ == ' ' && prev_prev_char == ' ' {\n                result.push('-');\n     \
    \       } else {\n                result.push('_');\n            }\n        }\
    \ else {\n            result.push(c);\n        }\n        prev_prev_char = prev_char;\n\
    \        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp2nk9ksm0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces > 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    spaces = 0;\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpwsseuzrt.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if last_char\
    \ == ' ' {\n                consecutive_spaces += 1;\n            } else {\n \
    \               consecutive_spaces = 1;\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        last_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmprnyfz5dx.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            if prev_char == ' ' {\n      \
    \          result.push('_');\n            }\n            result.push(c);\n   \
    \     }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"_Example\"`,\n right: `\"Example\"`', /tmp/tmpztevhk0l.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp0fgztm33.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut prev_prev_char\
    \ = ' ';\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_char\
    \ == ' ' && prev_prev_char == ' ' {\n                result.push('-');\n     \
    \       } else {\n                result.push('_');\n            }\n        }\
    \ else {\n            result.push(c);\n        }\n        prev_prev_char = prev_char;\n\
    \        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp2nk9ksm0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ == 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpd1qj8qnd.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ == 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpd1qj8qnd.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut new_text = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && last_char == ' ' {\n            new_text.push('-');\n\
    \        } else {\n            new_text.push(c);\n        }\n        last_char\
    \ = c;\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpd_robrwk.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut new_text = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                new_text.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            if prev_char == ' ' {\n      \
    \          new_text.push('_');\n            }\n            new_text.push(c);\n\
    \        }\n        prev_char = c;\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\"\
    )), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"_Example\"`,\n right: `\"Example\"`', /tmp/tmp84fszz45.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces > 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    spaces = 0;\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpwsseuzrt.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut new_text = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                new_text.push('_');\n            } else if space_count\
    \ == 2 {\n                new_text.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            new_text.push(c);\n        }\n    }\n\
    \    new_text\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpykuqqc10.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push('_');\n\
    \                spaces = 0;\n            }\n            result.push(c);\n   \
    \     }\n    }\n    if spaces > 0 {\n        result.push('_');\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmphmufxkdf.rs:32:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = '\\0';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n            result.push('_');\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        prev_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp9st5aykg.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut num_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            num_spaces\
    \ += 1;\n            if num_spaces > 2 {\n                result.push('-');\n\
    \                num_spaces = 0;\n            }\n        } else {\n          \
    \  if num_spaces > 0 {\n                for _ in 0..num_spaces {\n           \
    \         result.push('_');\n                }\n                num_spaces = 0;\n\
    \            }\n            result.push(c);\n        }\n        prev_char = c;\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp6na9mezn.rs:32:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces == 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    spaces = 0;\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpwpf_rcc4.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            result.push(c);\n        }\n \
    \       last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpd2ktmu3s.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut counter\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_char\
    \ == ' ' {\n                counter += 1;\n                if counter > 2 {\n\
    \                    result.push('-');\n                } else {\n           \
    \         result.push('_');\n                }\n            } else {\n       \
    \         result.push('_');\n                counter = 1;\n            }\n   \
    \     } else {\n            result.push(c);\n            counter = 0;\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpy_8gutn2.rs:35:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp0fgztm33.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut count\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if last_char\
    \ == ' ' {\n                count += 1;\n            } else {\n              \
    \  count = 1;\n            }\n            if count > 2 {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            count = 0;\n            result.push(c);\n        }\n\
    \        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp90rv16rh.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces == 1 {\n                result.push('_');\n\
    \            } else if consecutive_spaces > 2 {\n                result.push('-');\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \      result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp4d4u4okk.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces <=\
    \ 2 {\n                result.push('_');\n            } else {\n             \
    \   result.push('-');\n            }\n        } else {\n            spaces = 0;\n\
    \            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\"\
    )), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp024h7405.rs:28:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            result.push(c);\n            spaces =\
    \ 0;\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmphzzx_stv.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                continue;\n   \
    \         }\n            result.push('_');\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpthot7cir.rs:27:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_is_space = false;\n    let mut\
    \ consecutive_spaces = 0;\n    for c in text.chars() {\n        if c == ' ' {\n\
    \            consecutive_spaces += 1;\n            if consecutive_spaces > 2 {\n\
    \                continue;\n            }\n            prev_is_space = true;\n\
    \            result.push('_');\n        } else {\n            consecutive_spaces\
    \ = 0;\n            prev_is_space = false;\n            result.push(c);\n    \
    \    }\n    }\n    if prev_is_space {\n        result.push('_');\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif__\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp3aao5hqd.rs:31:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir_Hanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp0fgztm33.rs:28:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && last_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        last_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpswerkhy6.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            result.push(c);\n        }\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpwjeqn8cr.rs:26:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces > 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    result.push(c);\n            spaces = 0;\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpq3two2t6.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = '\\0';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n            result.push('_');\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        prev_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp9st5aykg.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = '\\0';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            consecutive_spaces = 0;\n            result.push(c);\n\
    \        }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpkjondk0e.rs:30:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            result.push(c);\n        }\n \
    \       last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpd2ktmu3s.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for ch in text.chars() {\n        if ch == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            result.push(ch);\n        }\n\
    \        prev_char = ch;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp_lrbn3lx.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces > 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    spaces = 0;\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpwsseuzrt.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces ==\
    \ 1 {\n                result.push('_');\n            } else if spaces > 2 {\n\
    \                result.push('-');\n            }\n        } else {\n        \
    \    spaces = 0;\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpwsseuzrt.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for ch in text.chars() {\n        if ch == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if ch == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(ch);\n        }\n        prev_char\
    \ = ch;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmp32ndhdd1.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut space_count\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            space_count\
    \ += 1;\n            if space_count > 2 {\n                continue;\n       \
    \     }\n        } else {\n            space_count = 0;\n        }\n        if\
    \ prev_char == ' ' && c == ' ' {\n            result.push('-');\n        } else\
    \ {\n            result.push(c);\n        }\n        prev_char = c;\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpf1pagvoc.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut previous_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && previous_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        previous_char\
    \ = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpi5cksog7.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' {\n            if last_char == ' ' {\n             \
    \   result.push('-');\n            } else {\n                result.push('_');\n\
    \            }\n        } else {\n            result.push(c);\n        }\n   \
    \     last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpsl6thupj.rs:35:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_was_space = false;\n    let mut\
    \ consecutive_spaces = 0;\n    for c in text.chars() {\n        if c == ' ' {\n\
    \            if last_was_space {\n                consecutive_spaces += 1;\n \
    \           } else {\n                consecutive_spaces = 1;\n            }\n\
    \            last_was_space = true;\n        } else {\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     for _ in 0..consecutive_spaces {\n                    result.push('_');\n\
    \                }\n            }\n            consecutive_spaces = 0;\n     \
    \       last_was_space = false;\n            result.push(c);\n        }\n    }\n\
    \    if consecutive_spaces > 2 {\n        result.push('-');\n    } else {\n  \
    \      for _ in 0..consecutive_spaces {\n            result.push('_');\n     \
    \   }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if prev_char\
    \ == ' ' {\n                consecutive_spaces += 1;\n            } else {\n \
    \               consecutive_spaces = 1;\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n        prev_char = c;\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpqd3zcjea.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            spaces\
    \ += 1;\n            if spaces > 2 {\n                if last_char != '-' {\n\
    \                    result.push('-');\n                }\n            } else\
    \ {\n                result.push('_');\n            }\n        } else {\n    \
    \        spaces = 0;\n            result.push(c);\n        }\n        last_char\
    \ = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpxa1c7ane.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut count\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            if last_char\
    \ == ' ' {\n                count += 1;\n            } else {\n              \
    \  count = 1;\n            }\n            if count > 2 {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            count = 0;\n            result.push(c);\n        }\n\
    \        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp90rv16rh.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces_count += 1;\n            if spaces_count\
    \ > 2 {\n                result.push('-');\n                spaces_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            spaces_count = 0;\n            result.push(c);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp2amr76a_.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 0
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            if spaces > 0 {\n                result.push_str(&\"\
    _\".repeat(spaces));\n                spaces = 0;\n            }\n           \
    \ result.push(c);\n        }\n    }\n    if spaces > 0 {\n        result.push_str(&\"\
    _\".repeat(spaces));\n    }\n    result\n}\n\nfn main() {\n    let candidate =\
    \ fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for ch in text.chars() {\n        if ch == ' ' {\n            if last_char\
    \ == ' ' {\n                consecutive_spaces += 1;\n            } else {\n \
    \               consecutive_spaces = 1;\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result.push('-');\n            } else {\n           \
    \     result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(ch);\n        }\n        last_char = ch;\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpxlqylsed.rs:34:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                result.push('-');\n                space_count = 0;\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \    } else {\n            space_count = 0;\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmppf89n9ne.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ == 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpd1qj8qnd.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ == 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpd1qj8qnd.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut new_text = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ > 2 {\n                new_text.push('-');\n                space_count = 0;\n\
    \            }\n        } else {\n            if space_count > 0 {\n         \
    \       new_text.push('_');\n                space_count = 0;\n            }\n\
    \            new_text.push(c);\n        }\n    }\n    if space_count > 0 {\n \
    \       new_text.push('_');\n    }\n    new_text\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp8hcbneds.rs:32:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut space_count = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            space_count += 1;\n            if space_count\
    \ == 1 {\n                result.push('_');\n            } else if space_count\
    \ > 2 {\n                result.push('-');\n            }\n        } else {\n\
    \            space_count = 0;\n            result.push(c);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_Dirty_Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmp401q1tiq.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = '\\0';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            result.push(c);\n        }\n \
    \       last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmperxlhy97.rs:27:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            }\n        } else {\n  \
    \          consecutive_spaces = 0;\n            if prev_char == ' ' {\n      \
    \          result.push('_');\n            }\n            result.push(c);\n   \
    \     }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let\
    \ candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")),\
    \ String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir\
    \ Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"_Example\"`,\n right: `\"Example\"`', /tmp/tmpztevhk0l.rs:29:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                continue;\n\
    \            }\n        } else {\n            consecutive_spaces = 0;\n      \
    \  }\n        if c == ' ' && prev_char == ' ' {\n            result.push('-');\n\
    \        } else {\n            result.push(c);\n        }\n        prev_char =\
    \ c;\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n \
    \   assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Mudasir Hanif \"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpuq1rshya.rs:30:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if last_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        last_space = true;\n        } else {\n            result.push(c);\n \
    \           last_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmphq97n_7t.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749230
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut consecutive_spaces = 0;\n    for c\
    \ in text.chars() {\n        if c == ' ' {\n            consecutive_spaces +=\
    \ 1;\n            if consecutive_spaces > 2 {\n                result.push('-');\n\
    \                consecutive_spaces = 0;\n            } else {\n             \
    \   result.push('_');\n            }\n        } else {\n            consecutive_spaces\
    \ = 0;\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpjtei8y_0.rs:29:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut last_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if last_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        last_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmp425wllwo.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_char = ' ';\n    let mut consecutive_spaces\
    \ = 0;\n    for c in text.chars() {\n        if c == ' ' {\n            consecutive_spaces\
    \ += 1;\n            if consecutive_spaces > 2 {\n                if prev_char\
    \ != '-' {\n                    result.push('-');\n                }\n       \
    \     } else {\n                result.push('_');\n            }\n        } else\
    \ {\n            consecutive_spaces = 0;\n            result.push(c);\n      \
    \  }\n        prev_char = c;\n    }\n    result\n}\n\nfn main() {\n    let candidate\
    \ = fix_spaces;\n    assert_eq!(candidate(String::from(\"Example\")), String::from(\"\
    Example\"));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Exa__-mple\"`,\n right: `\"Exa-mple\"`', /tmp/tmpfekdqfdg.rs:32:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut spaces = 0;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            spaces += 1;\n            if spaces >\
    \ 2 {\n                result.push('-');\n                spaces = 0;\n      \
    \      }\n        } else {\n            spaces = 0;\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = fix_spaces;\n\
    \    assert_eq!(candidate(String::from(\"Example\")), String::from(\"Example\"\
    ));\n    assert_eq!(candidate(String::from(\"Mudasir Hanif \")), String::from(\"\
    Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"Yellow Yellow  Dirty\
    \  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"));\n    assert_eq!(candidate(String::from(\"\
    Exa   mple\")), String::from(\"Exa-mple\"));\n    assert_eq!(candidate(String::from(\"\
    \   Exa 1 2 2 mple\")), String::from(\"-Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"MudasirHanif\"`,\n right: `\"Mudasir_Hanif_\"`', /tmp/tmpkie7_vqc.rs:25:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229
- exit_code: 101
  program: "/// Given a string text, replace all spaces in it with underscores, \n\
    /// and if a string has more than 2 consecutive spaces, \n/// then replace all\
    \ consecutive spaces with -\nfn fix_spaces(text: String) -> String {\n    let\
    \ mut result = String::new();\n    let mut prev_space = false;\n    for c in text.chars()\
    \ {\n        if c == ' ' {\n            if prev_space {\n                result.push('-');\n\
    \            } else {\n                result.push('_');\n            }\n    \
    \        prev_space = true;\n        } else {\n            result.push(c);\n \
    \           prev_space = false;\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = fix_spaces;\n    assert_eq!(candidate(String::from(\"\
    Example\")), String::from(\"Example\"));\n    assert_eq!(candidate(String::from(\"\
    Mudasir Hanif \")), String::from(\"Mudasir_Hanif_\"));\n    assert_eq!(candidate(String::from(\"\
    Yellow Yellow  Dirty  Fellow\")), String::from(\"Yellow_Yellow__Dirty__Fellow\"\
    ));\n    assert_eq!(candidate(String::from(\"Exa   mple\")), String::from(\"Exa-mple\"\
    ));\n    assert_eq!(candidate(String::from(\"   Exa 1 2 2 mple\")), String::from(\"\
    -Exa_1_2_2_mple\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"Yellow_Yellow_-Dirty_-Fellow\"`,\n right: `\"Yellow_Yellow__Dirty__Fellow\"\
    `', /tmp/tmpf1xg9m25.rs:27:5\nnote: run with `RUST_BACKTRACE=1` environment variable\
    \ to display a backtrace\n"
  stdout: ''
  timestamp: 1659749229

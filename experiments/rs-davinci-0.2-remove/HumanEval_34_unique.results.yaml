language: rs
name: HumanEval_34_unique
results:
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut m = HashMap::new();\n    for i in l {\n       \
    \ m.insert(i, true);\n    }\n    let mut v = Vec::new();\n    for (k, _) in m\
    \ {\n        v.push(k);\n    }\n    v.sort();\n    v\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashMap`\n -->\
    \ /tmp/tmpbjr4p05_.rs:3:17\n  |\n3 |     let mut m = HashMap::new();\n  |    \
    \             ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this\
    \ struct\n  |\n1 | use std::collections::HashMap;\n  |\n\nerror: aborting due\
    \ to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut u = l.clone();\n    u.sort();\n    u.dedup();\n\
    \    u\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l;\n    v.sort();\n    v.dedup();\n    v\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut m = BTreeMap::new();\n    for i in l {\n      \
    \  *m.entry(i).or_insert(0) += 1;\n    }\n    m.keys().cloned().collect()\n}\n\
    \nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5, 3,\
    \ 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `BTreeMap`\n -->\
    \ /tmp/tmp9ecj7sxm.rs:3:17\n  |\n3 |     let mut m = BTreeMap::new();\n  |   \
    \              ^^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::BTreeMap;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l;\n    l.sort();\n    l.dedup();\n    l\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749228

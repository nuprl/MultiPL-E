name: HumanEval_88_sort_array
language: rs
prompt: "/// Given an array of non-negative integers, return a copy of the given array\
  \ after sorting,\n/// you will sort the given array in ascending order if the sum(\
  \ first index value, last index value) is odd,\n/// or sort it in descending order\
  \ if the sum( first index value, last index value) is even.\n/// Note:\n/// * don't\
  \ change the given array.\n/// Examples:\nfn sort_array(array: Vec<isize>) -> Vec<isize>\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = sort_array;\n    assert_eq!(candidate(Vec::<isize>::new()),\
  \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![5]), vec![5]);\n    assert_eq!(candidate(vec![2,\
  \ 4, 3, 0, 1, 5]), vec![0, 1, 2, 3, 4, 5]);\n    assert_eq!(candidate(vec![2, 4,\
  \ 3, 0, 1, 5, 6]), vec![6, 5, 4, 3, 2, 1, 0]);\n    assert_eq!(candidate(vec![2,\
  \ 1]), vec![1, 2]);\n    assert_eq!(candidate(vec![15, 42, 87, 32, 11, 0]), vec![0,\
  \ 11, 15, 32, 42, 87]);\n    assert_eq!(candidate(vec![21, 14, 23, 11]), vec![23,\
  \ 21, 14, 11]);\n}\n"
completions: ["    let mut array = array;\n    let mut sum = 0;\n    for i in 0..array.len()\
    \ {\n        sum += array[i];\n    }\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut index = 0;\n    let mut\
    \ is_odd = true;\n    let mut is_sorted = false;\n    while !is_sorted {\n   \
    \     is_sorted = true;\n        for i in index..array.len() - 1 {\n         \
    \   if is_odd {\n                if array[i] > array[i + 1] {\n              \
    \      array.swap(i, i + 1);\n                    is_sorted = false;\n       \
    \         }\n            } else {\n                if array[i] < array[i + 1]\
    \ {\n                    array.swap(i, i + 1);\n                    is_sorted\
    \ = false;\n                }\n            }\n        }\n        index += 1;\n\
    \        is_odd = !is_odd;\n    }\n    array", "    let mut array = array;\n \
    \   let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n    \
    \    if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n    \
    \    }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            let\
    \ tmp = array[i];\n            array[i] = array[j];\n            array[j] = tmp;\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        }\n    }\n    if array[0] % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n\
    \        while i < j {\n            if array[i] > array[j] {\n               \
    \ array.swap(i, j);\n                sorted = false;\n            }\n        \
    \    i += 1;\n            j -= 1;\n        }\n        i = 0;\n        j = array.len()\
    \ - 1;\n    }\n    array", "    let mut array = array;\n    if array.len() ==\
    \ 0 {\n        return array;\n    }\n    let mut index = 0;\n    while index <\
    \ array.len() - 1 {\n        if (array[index] + array[array.len() - 1]) % 2 ==\
    \ 0 {\n            if array[index] < array[index + 1] {\n                array.swap(index,\
    \ index + 1);\n                index = 0;\n            } else {\n            \
    \    index += 1;\n            }\n        } else {\n            if array[index]\
    \ > array[index + 1] {\n                array.swap(index, index + 1);\n      \
    \          index = 0;\n            } else {\n                index += 1;\n   \
    \         }\n        }\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let len = array.len();\n    let mut i = 0;\n    let mut\
    \ j = len - 1;\n    let mut temp = 0;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            temp = array[i];\n            array[i] =\
    \ array[j];\n            array[j] = temp;\n        }\n        i += 1;\n      \
    \  j -= 1;\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if array[i] % 2 == 0 && array[j] % 2 == 1 {\n  \
    \              array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            } else if array[i] % 2 == 1 {\n                i += 1;\n   \
    \         } else if array[j] % 2 == 0 {\n                j -= 1;\n           \
    \ } else {\n                i += 1;\n                j -= 1;\n            }\n\
    \        }\n        if array.len() % 2 == 1 {\n            array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array[i..].sort();\n        }\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j]) % 2 == 1;\n\
    \    while i < j {\n        if is_odd {\n            if array[i] % 2 == 0 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 1 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        } else\
    \ {\n            if array[i] % 2 == 1 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 0 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i, j);\n\
    \                sorted = false;\n            }\n            i += 1;\n       \
    \     j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n\
    \    array", "    let mut array = array;\n    if array.len() > 1 {\n        let\
    \ mut i = 0;\n        let mut j = array.len() - 1;\n        while i < j {\n  \
    \          if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n            }\n            i += 1;\n            j -= 1;\n        }\n  \
    \      array.sort();\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    let mut tmp = 0;\n    let\
    \ mut sum = array[i] + array[j];\n    while i < j {\n        if sum % 2 == 0 {\n\
    \            if array[i] > array[j] {\n                tmp = array[i];\n     \
    \           array[i] = array[j];\n                array[j] = tmp;\n          \
    \  }\n            i += 1;\n        } else {\n            if array[i] < array[j]\
    \ {\n                tmp = array[i];\n                array[i] = array[j];\n \
    \               array[j] = tmp;\n            }\n            j -= 1;\n        }\n\
    \        sum = array[i] + array[j];\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n   \
    \     }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let mut\
    \ j = array.len() - 1;\n        while i < j {\n            if array[i] % 2 ==\
    \ 0 && array[j] % 2 == 1 {\n                array.swap(i, j);\n              \
    \  i += 1;\n                j -= 1;\n            } else if array[i] % 2 == 1 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 0 {\n        \
    \        j -= 1;\n            } else {\n                i += 1;\n            \
    \    j -= 1;\n            }\n        }\n        if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n            array.reverse();\n        }\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   let mut sorted = false;\n    while !sorted {\n        sorted = true;\n   \
    \     while i < j {\n            if array[i] > array[j] {\n                sorted\
    \ = false;\n                array.swap(i, j);\n            }\n            i +=\
    \ 1;\n            j -= 1;\n        }\n        i = 0;\n        j = array.len()\
    \ - 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n \
    \   let mut j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j])\
    \ % 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n    \
    \    j -= 1;\n    }\n    array", "    let mut array = array;\n    let mut i =\
    \ 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sum = array[i] + array[j];\n    while i < j {\n        if sum % 2\
    \ == 0 {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n            }\n            j -= 1;\n        } else {\n            if array[i]\
    \ < array[j] {\n                array.swap(i, j);\n            }\n           \
    \ i += 1;\n        }\n        sum = array[i] + array[j];\n    }\n    array", " \
    \   let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n       \
    \     array.swap(i, j);\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut temp;\n\
    \    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n    \
    \        temp = array[i];\n            array[i] = array[j];\n            array[j]\
    \ = temp;\n            i += 1;\n            j -= 1;\n        } else if array[i]\
    \ % 2 == 1 && array[j] % 2 == 1 {\n            i += 1;\n        } else if array[i]\
    \ % 2 == 0 && array[j] % 2 == 0 {\n            j -= 1;\n        } else {\n   \
    \         i += 1;\n            j -= 1;\n        }\n    }\n    if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut temp = 0;\n    while i <\
    \ j {\n        if (array[i] + array[j]) % 2 == 0 {\n            temp = array[i];\n\
    \            array[i] = array[j];\n            array[j] = temp;\n        }\n \
    \       i += 1;\n        j -= 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i, j);\n\
    \                sorted = false;\n            }\n            i += 1;\n       \
    \     j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut is_odd = false;\n    if array[i] + array[j] %\
    \ 2 == 1 {\n        is_odd = true;\n    }\n    while i < j {\n        if is_odd\
    \ {\n            if array[i] % 2 == 0 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 1 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        } else {\n            if array[i] % 2 == 1 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 0 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    let mut sum = 0;\n    for i\
    \ in 0..array.len() {\n        sum += array[i];\n    }\n    if sum % 2 == 0 {\n\
    \        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i\
    \ += 1;\n        j -= 1;\n    }\n    array.sort();\n    array", "    let mut array\
    \ = array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let mut\
    \ j = array.len() - 1;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n            }\n            i\
    \ += 1;\n            j -= 1;\n        }\n        array.sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut tmp;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            tmp = array[i];\n            array[i] = array[j];\n\
    \            array[j] = tmp;\n            i += 1;\n            j -= 1;\n     \
    \   } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if array[i] > array[j]\
    \ {\n                array.swap(i, j);\n                sorted = false;\n    \
    \        }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j]) % 2 == 1;\n\
    \    while i < j {\n        if is_odd {\n            if array[i] % 2 == 0 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 1 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        } else\
    \ {\n            if array[i] % 2 == 1 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 0 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n\
    \    while !sorted {\n        sorted = true;\n        while i < j {\n        \
    \    if array[i] > array[j] {\n                sorted = false;\n             \
    \   array.swap(i, j);\n            }\n            i += 1;\n            j -= 1;\n\
    \        }\n        i = 0;\n        j = array.len() - 1;\n    }\n    array", " \
    \   let mut array = array;\n    let mut first = 0;\n    let mut last = array.len()\
    \ - 1;\n    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n\
    \        for i in first..last {\n            if (array[i] + array[array.len()\
    \ - 1 - i]) % 2 == 0 {\n                array.swap(i, array.len() - 1 - i);\n\
    \                sorted = false;\n            }\n        }\n        first += 1;\n\
    \        last -= 1;\n    }\n    array", "    let mut array = array;\n    let mut\
    \ i = 0;\n    let mut j = array.len() - 1;\n    let mut tmp;\n    while i < j\
    \ {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            tmp = array[i];\n\
    \            array[i] = array[j];\n            array[j] = tmp;\n            i\
    \ += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n        \
    \    i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n   \
    \     }\n    }\n    if (array[0] + array[array.len() - 1]) % 2 == 0 {\n      \
    \  array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n       \
    \ sorted = true;\n        while i < j {\n            if array[i] > array[j] {\n\
    \                array.swap(i, j);\n                sorted = false;\n        \
    \    }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n   \
    \     }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[j] {\n                let temp = array[i];\n\
    \                array[i] = array[j];\n                array[j] = temp;\n    \
    \            sorted = false;\n            }\n            i += 1;\n           \
    \ j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n  \
    \  array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j]) % 2 == 1;\n\
    \    while i < j {\n        if is_odd {\n            if array[i] % 2 == 0 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 1 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        } else\
    \ {\n            if array[i] % 2 == 1 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 0 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].reverse();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j]) %\
    \ 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n      \
    \  j -= 1;\n    }\n    array", "    let mut array = array;\n    let sum = array[0]\
    \ + array[array.len() - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n       \
    \ sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut res = array.clone();\n\
    \    if array.len() > 0 {\n        if (array[0] + array[array.len() - 1]) % 2\
    \ == 0 {\n            res.sort_by(|a, b| b.cmp(a));\n        } else {\n      \
    \      res.sort_by(|a, b| a.cmp(b));\n        }\n    }\n    res", "    let mut\
    \ array = array;\n    let mut sum = 0;\n    for i in 0..array.len() {\n      \
    \  sum += array[i];\n    }\n    if sum % 2 == 0 {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n \
    \   array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].reverse();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        while i < j {\n\
    \            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                let tmp = array[i];\n                array[i] =\
    \ array[j];\n                array[j] = tmp;\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        while i < j {\n\
    \            if array[i] > array[j] {\n                array.swap(i, j);\n   \
    \             sorted = false;\n            }\n            i += 1;\n          \
    \  j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n \
    \   array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    let mut tmp;\n    while i < j {\n        if (array[i] + array[j])\
    \ % 2 == 0 {\n            tmp = array[i];\n            array[i] = array[j];\n\
    \            array[j] = tmp;\n        }\n        i += 1;\n        j -= 1;\n  \
    \  }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        if (array[i] + array[j]) % 2 == 0 {\n          \
    \  if array[i] > array[j] {\n                let temp = array[i];\n          \
    \      array[i] = array[j];\n                array[j] = temp;\n              \
    \  sorted = false;\n            }\n            i += 1;\n        } else {\n   \
    \         if array[i] < array[j] {\n                let temp = array[i];\n   \
    \             array[i] = array[j];\n                array[j] = temp;\n       \
    \         sorted = false;\n            }\n            j -= 1;\n        }\n   \
    \ }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut is_odd = false;\n    if array[i] + array[j]\
    \ % 2 == 1 {\n        is_odd = true;\n    }\n    while i < j {\n        if is_odd\
    \ {\n            if array[i] % 2 == 0 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 1 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        } else {\n            if array[i] % 2 == 1 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 0 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i <\
    \ j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut sum = 0;\n    for i in 0..array.len() {\n\
    \        sum += array[i];\n    }\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let sum = array[0] + array[array.len() - 1];\n    if sum % 2 ==\
    \ 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut tmp;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            tmp = array[i];\n            array[i] =\
    \ array[j];\n            array[j] = tmp;\n        }\n        i += 1;\n       \
    \ j -= 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j])\
    \ % 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i] %\
    \ 2 == 0 {\n                i += 1;\n            } else if array[j] % 2 == 1 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut tmp;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n \
    \           tmp = array[i];\n            array[i] = array[j];\n            array[j]\
    \ = tmp;\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "  \
    \  let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut is_odd = (array[i] + array[j]) % 2 == 1;\n    while i < j {\n   \
    \     if is_odd {\n            if array[i] % 2 == 0 {\n                i += 1;\n\
    \            } else if array[j] % 2 == 1 {\n                j -= 1;\n        \
    \    } else {\n                array.swap(i, j);\n                i += 1;\n  \
    \              j -= 1;\n            }\n        } else {\n            if array[i]\
    \ % 2 == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0\
    \ {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n  \
    \  let mut j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted\
    \ {\n        sorted = true;\n        while i < j {\n            if (array[i] +\
    \ array[j]) % 2 == 0 {\n                array.swap(i, j);\n                sorted\
    \ = false;\n            }\n            i += 1;\n            j -= 1;\n        }\n\
    \        i = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut is_odd = (array[i] + array[j]) % 2 == 1;\n    while i < j {\n        if\
    \ is_odd {\n            if array[i] % 2 == 0 {\n                i += 1;\n    \
    \        } else if array[j] % 2 == 1 {\n                j -= 1;\n            }\
    \ else {\n                array.swap(i, j);\n                i += 1;\n       \
    \         j -= 1;\n            }\n        } else {\n            if array[i] %\
    \ 2 == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   }\n    }\n    if is_odd {\n        array[i..].sort();\n    } else {\n    \
    \    array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array.sort();\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n       \
    \ sorted = true;\n        while i < j {\n            if array[i] > array[j] {\n\
    \                array.swap(i, j);\n                sorted = false;\n        \
    \    }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n   \
    \     }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[0..i].sort_by(|a, b| b.cmp(a));\n    \
    \    array[i..].sort_by(|a, b| a.cmp(b));\n    } else {\n        array[0..i].sort_by(|a,\
    \ b| a.cmp(b));\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut temp = 0;\n    while i < j {\n        if (array[i] + array[j]) %\
    \ 2 == 0 {\n            temp = array[i];\n            array[i] = array[j];\n \
    \           array[j] = temp;\n        }\n        i += 1;\n        j -= 1;\n  \
    \  }\n    array", "    let mut array = array;\n    if array.len() == 0 {\n   \
    \     return array;\n    }\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n       \
    \     array.swap(i, j);\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut temp;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            temp = array[i];\n            array[i] =\
    \ array[j];\n            array[j] = temp;\n        }\n        i += 1;\n      \
    \  j -= 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j])\
    \ % 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n    \
    \    j -= 1;\n    }\n    array", "    let mut array = array;\n    let mut i =\
    \ 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n           \
    \ i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n      \
    \      i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n \
    \       }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut tmp;\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            tmp = array[i];\n            array[i] = array[j];\n       \
    \     array[j] = tmp;\n        }\n        i += 1;\n        j -= 1;\n    }\n  \
    \  array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].reverse();\n    }\n    array", "    let mut array =\
    \ array;\n    array.sort_by(|a, b| {\n        let sum = a + b;\n        if sum\
    \ % 2 == 0 {\n            b.cmp(a)\n        } else {\n            a.cmp(b)\n \
    \       }\n    });\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j])\
    \ % 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n    \
    \    j -= 1;\n    }\n    array.sort();\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].reverse();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        for k in i..j {\n            if array[k] > array[k\
    \ + 1] {\n                array.swap(k, k + 1);\n                sorted = false;\n\
    \            }\n        }\n        j -= 1;\n        for k in (i..j).rev() {\n\
    \            if array[k] > array[k + 1] {\n                array.swap(k, k + 1);\n\
    \                sorted = false;\n            }\n        }\n        i += 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd\
    \ = (array[i] + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n\
    \            if array[i] % 2 == 0 {\n                i += 1;\n            } else\
    \ if array[j] % 2 == 1 {\n                j -= 1;\n            } else {\n    \
    \            array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            }\n        } else {\n            if array[i] % 2 == 1 {\n  \
    \              i += 1;\n            } else if array[j] % 2 == 0 {\n          \
    \      j -= 1;\n            } else {\n                array.swap(i, j);\n    \
    \            i += 1;\n                j -= 1;\n            }\n        }\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n        j -=\
    \ 1;\n    }\n    array.sort();\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if\
    \ array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n  \
    \          i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n\
    \            i += 1;\n        } else if array[j] % 2 == 0 {\n            j -=\
    \ 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if (array[i] + array[j])\
    \ % 2 == 0 {\n                array.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut array =\
    \ array;\n    if array.len() == 0 {\n        return array;\n    }\n    let mut\
    \ i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n        if (array[i]\
    \ + array[j]) % 2 == 0 {\n            array.swap(i, j);\n        }\n        i\
    \ += 1;\n        j -= 1;\n    }\n    array", "    let mut result = array.clone();\n\
    \    if array.len() > 0 {\n        let first = array[0];\n        let last = array[array.len()\
    \ - 1];\n        if (first + last) % 2 == 0 {\n            result.sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            result.sort_by(|a, b| a.cmp(b));\n\
    \        }\n    }\n    result", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    while i < j {\n        if array[i] % 2\
    \ == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n            i +=\
    \ 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n           \
    \ i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n      \
    \  }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b|\
    \ b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array", " \
    \   let mut array = array;\n    let mut sum = 0;\n    for i in 0..array.len()\
    \ {\n        sum += array[i];\n    }\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut start = 0;\n    let mut\
    \ end = array.len() - 1;\n    let mut is_odd = (array[start] + array[end]) % 2\
    \ == 1;\n    while start < end {\n        if is_odd {\n            if array[start]\
    \ % 2 == 0 {\n                start += 1;\n            } else if array[end] %\
    \ 2 == 1 {\n                end -= 1;\n            } else {\n                array.swap(start,\
    \ end);\n                start += 1;\n                end -= 1;\n            }\n\
    \        } else {\n            if array[start] % 2 == 1 {\n                start\
    \ += 1;\n            } else if array[end] % 2 == 0 {\n                end -= 1;\n\
    \            } else {\n                array.swap(start, end);\n             \
    \   start += 1;\n                end -= 1;\n            }\n        }\n    }\n\
    \    if start == end && array[start] % 2 == 1 {\n        array.swap(start, end);\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if array[i] > array[j]\
    \ {\n                array.swap(i, j);\n                sorted = false;\n    \
    \        }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      for i in 0..array.len() - 1 {\n            if (array[0] + array[array.len()\
    \ - 1]) % 2 == 0 {\n                if array[i] < array[i + 1] {\n           \
    \         array.swap(i, i + 1);\n                    sorted = false;\n       \
    \         }\n            } else {\n                if array[i] > array[i + 1]\
    \ {\n                    array.swap(i, i + 1);\n                    sorted = false;\n\
    \                }\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut result = array.clone();\n    if array.len() >\
    \ 1 {\n        if (array[0] + array[array.len() - 1]) % 2 == 0 {\n           \
    \ result.sort_by(|a, b| b.cmp(a));\n        } else {\n            result.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    result", "    let mut array = array;\n\
    \    let sum = array[0] + array[array.len() - 1];\n    if sum % 2 == 0 {\n   \
    \     array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    if array.len()\
    \ > 1 {\n        let mut i = 0;\n        let mut j = array.len() - 1;\n      \
    \  while i < j {\n            if array[i] % 2 == 0 && array[j] % 2 == 1 {\n  \
    \              array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            } else if array[i] % 2 == 1 {\n                i += 1;\n   \
    \         } else if array[j] % 2 == 0 {\n                j -= 1;\n           \
    \ } else {\n                i += 1;\n                j -= 1;\n            }\n\
    \        }\n        if array.len() % 2 == 1 {\n            array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n        } else {\n            array[i..].sort();\n        }\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut temp = 0;\n    let mut is_odd = false;\n \
    \   if (array[i] + array[j]) % 2 == 1 {\n        is_odd = true;\n    }\n    while\
    \ i < j {\n        if is_odd {\n            if array[i] % 2 == 0 {\n         \
    \       while array[j] % 2 == 0 {\n                    j -= 1;\n             \
    \   }\n                temp = array[i];\n                array[i] = array[j];\n\
    \                array[j] = temp;\n            }\n        } else {\n         \
    \   if array[i] % 2 == 1 {\n                while array[j] % 2 == 1 {\n      \
    \              j -= 1;\n                }\n                temp = array[i];\n\
    \                array[i] = array[j];\n                array[j] = temp;\n    \
    \        }\n        }\n        i += 1;\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut tmp;\n    while i < j {\n        if array[i]\
    \ % 2 == 0 && array[j] % 2 == 1 {\n            tmp = array[i];\n            array[i]\
    \ = array[j];\n            array[j] = tmp;\n            i += 1;\n            j\
    \ -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n        }\
    \ else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array[0]\
    \ % 2 == 0 {\n        array.sort();\n    } else {\n        array.sort_by(|a, b|\
    \ b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i =\
    \ 0;\n    let mut j = array.len() - 1;\n    let mut temp;\n    while i < j {\n\
    \        if (array[i] + array[j]) % 2 == 0 {\n            temp = array[i];\n \
    \           array[i] = array[j];\n            array[j] = temp;\n        }\n  \
    \      i += 1;\n        j -= 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    if array.len() > 1 {\n        let (mut left, mut right)\
    \ = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        let mut k = 0;\n        while i < left.len()\
    \ && j < right.len() {\n            if (left[i] + right[j]) % 2 == 0 {\n     \
    \           array[k] = left[i];\n                i += 1;\n            } else {\n\
    \                array[k] = right[j];\n                j += 1;\n            }\n\
    \            k += 1;\n        }\n        while i < left.len() {\n            array[k]\
    \ = left[i];\n            i += 1;\n            k += 1;\n        }\n        while\
    \ j < right.len() {\n            array[k] = right[j];\n            j += 1;\n \
    \           k += 1;\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n\
    \            i += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1\
    \ {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n            j\
    \ -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if array[i] > array[j] {\n                let\
    \ tmp = array[i];\n                array[i] = array[j];\n                array[j]\
    \ = tmp;\n                sorted = false;\n            }\n            i += 1;\n\
    \            j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i <\
    \ j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sum\
    \ = array[i] + array[j];\n    while i < j {\n        if sum % 2 == 0 {\n     \
    \       if array[i] > array[j] {\n                let tmp = array[i];\n      \
    \          array[i] = array[j];\n                array[j] = tmp;\n           \
    \ }\n            i += 1;\n        } else {\n            if array[i] < array[j]\
    \ {\n                let tmp = array[i];\n                array[i] = array[j];\n\
    \                array[j] = tmp;\n            }\n            j -= 1;\n       \
    \ }\n        sum = array[i] + array[j];\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut left = 0;\n    let mut right = array.len() -\
    \ 1;\n    while left < right {\n        if (array[left] + array[right]) % 2 ==\
    \ 0 {\n            array.swap(left, right);\n        }\n        left += 1;\n \
    \       right -= 1;\n    }\n    array", "    let mut array = array;\n    let mut\
    \ i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n                sorted\
    \ = false;\n            }\n            i += 1;\n            j -= 1;\n        }\n\
    \        i = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut\
    \ result = array.clone();\n    if result.len() > 0 {\n        if (result[0] +\
    \ result[result.len() - 1]) % 2 == 0 {\n            result.sort_by(|a, b| b.cmp(a));\n\
    \        } else {\n            result.sort_by(|a, b| a.cmp(b));\n        }\n \
    \   }\n    result", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if array[i] > array[j]\
    \ {\n                array.swap(i, j);\n                sorted = false;\n    \
    \        }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n   \
    \     }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ is_odd = (array[i] + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd\
    \ {\n            if array[i] % 2 == 0 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 1 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        } else {\n            if array[i] % 2 == 1 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 0 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut temp;\n\
    \    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            temp\
    \ = array[i];\n            array[i] = array[j];\n            array[j] = temp;\n\
    \        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut\
    \ array = array;\n    let mut sum = array[0] + array[array.len() - 1];\n    array.sort_by(|a,\
    \ b| {\n        if sum % 2 == 0 {\n            b.cmp(a)\n        } else {\n  \
    \          a.cmp(b)\n        }\n    });\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i < j {\n   \
    \     if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i, j);\n   \
    \     }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut sorted = false;\n    while !sorted {\n        sorted = true;\n  \
    \      while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n      \
    \          array.swap(i, j);\n                sorted = false;\n            }\n\
    \            i += 1;\n            j -= 1;\n        }\n        i = 0;\n       \
    \ j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n    let\
    \ mut i = 0;\n    let mut j = array.len() - 1;\n    let mut temp = 0;\n    while\
    \ i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            temp = array[i];\n\
    \            array[i] = array[j];\n            array[j] = temp;\n        }\n \
    \       i += 1;\n        j -= 1;\n    }\n    array", "    let mut array = array;\n\
    \    array.sort_by(|a, b| {\n        if (a + b) % 2 == 0 {\n            b.cmp(a)\n\
    \        } else {\n            a.cmp(b)\n        }\n    });\n    array", "   \
    \ let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut temp;\n    while i < j {\n        if (array[i] + array[j]) % 2 ==\
    \ 0 {\n            temp = array[i];\n            array[i] = array[j];\n      \
    \      array[j] = temp;\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    array", "    let mut result = array.clone();\n    if array.len() == 0 {\n\
    \        return result;\n    }\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n     \
    \       result[i] = array[j];\n            result[j] = array[i];\n           \
    \ i += 1;\n            j -= 1;\n        } else {\n            i += 1;\n      \
    \  }\n    }\n    result", "    let mut array = array;\n    let mut i = 0;\n  \
    \  let mut j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 ==\
    \ 0 && array[j] % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n\
    \            j -= 1;\n        } else if array[i] % 2 == 1 {\n            i +=\
    \ 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n\
    \    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n\
    \    } else {\n        array[i..].sort();\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd\
    \ = (array[i] + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n\
    \            if array[i] % 2 == 0 {\n                i += 1;\n            } else\
    \ if array[j] % 2 == 1 {\n                j -= 1;\n            } else {\n    \
    \            array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            }\n        } else {\n            if array[i] % 2 == 1 {\n  \
    \              i += 1;\n            } else if array[j] % 2 == 0 {\n          \
    \      j -= 1;\n            } else {\n                array.swap(i, j);\n    \
    \            i += 1;\n                j -= 1;\n            }\n        }\n    }\n\
    \    if is_odd {\n        array[i..].sort();\n    } else {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut temp = 0;\n    while i <\
    \ j {\n        if (array[i] + array[j]) % 2 == 0 {\n            temp = array[i];\n\
    \            array[i] = array[j];\n            array[j] = temp;\n        }\n \
    \       i += 1;\n        j -= 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    if is_odd {\n     \
    \   array[i..].sort();\n    } else {\n        array[i..].sort_by(|a, b| b.cmp(a));\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j]) %\
    \ 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n      \
    \  j -= 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j])\
    \ % 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n    \
    \    j -= 1;\n    }\n    array", "    let mut array = array;\n    array.sort_by(|a,\
    \ b| {\n        let sum = a + b;\n        if sum % 2 == 0 {\n            b.cmp(a)\n\
    \        } else {\n            a.cmp(b)\n        }\n    });\n    array", "   \
    \ let mut array = array;\n    if array.len() > 0 {\n        let mut i = 0;\n \
    \       let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if array[i] > array[j]\
    \ {\n                array.swap(i, j);\n                sorted = false;\n    \
    \        }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n\
    \    if array.len() > 1 {\n        let mut i = 0;\n        let mut j = array.len()\
    \ - 1;\n        while i < j {\n            if (array[i] + array[j]) % 2 == 0 {\n\
    \                array.swap(i, j);\n            }\n            i += 1;\n     \
    \       j -= 1;\n        }\n        array.sort();\n    }\n    array", "    let\
    \ mut array = array;\n    if array.len() > 1 {\n        let (mut left, mut right)\
    \ = array.split_at_mut(array.len() / 2);\n        left = sort_array(left.to_vec()).as_mut_slice();\n\
    \        right = sort_array(right.to_vec()).as_mut_slice();\n        let mut i\
    \ = 0;\n        let mut j = 0;\n        let mut k = 0;\n        while i < left.len()\
    \ && j < right.len() {\n            if left[i] < right[j] {\n                array[k]\
    \ = left[i];\n                i += 1;\n            } else {\n                array[k]\
    \ = right[j];\n                j += 1;\n            }\n            k += 1;\n \
    \       }\n        while i < left.len() {\n            array[k] = left[i];\n \
    \           i += 1;\n            k += 1;\n        }\n        while j < right.len()\
    \ {\n            array[k] = right[j];\n            j += 1;\n            k += 1;\n\
    \        }\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    let mut tmp;\n    while i < j {\n     \
    \   if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            tmp = array[i];\n\
    \            array[i] = array[j];\n            array[j] = tmp;\n            i\
    \ += 1;\n            j -= 1;\n        } else if array[i] % 2 == 1 {\n        \
    \    i += 1;\n        } else if array[j] % 2 == 0 {\n            j -= 1;\n   \
    \     }\n    }\n    if (array[0] + array[array.len() - 1]) % 2 == 0 {\n      \
    \  array.sort();\n    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n\
    \    array", "    let mut array = array;\n    let mut sum = 0;\n    for i in 0..array.len()\
    \ {\n        sum += array[i];\n    }\n    if sum % 2 == 0 {\n        array.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut is_odd = (array[i] + array[j]) % 2 == 1;\n   \
    \ while i < j {\n        if is_odd {\n            if array[i] % 2 == 0 {\n   \
    \             i += 1;\n            } else if array[j] % 2 == 1 {\n           \
    \     j -= 1;\n            } else {\n                array.swap(i, j);\n     \
    \           i += 1;\n                j -= 1;\n            }\n        } else {\n\
    \            if array[i] % 2 == 1 {\n                i += 1;\n            } else\
    \ if array[j] % 2 == 0 {\n                j -= 1;\n            } else {\n    \
    \            array.swap(i, j);\n                i += 1;\n                j -=\
    \ 1;\n            }\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while\
    \ i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    let sum = array[0] + array[array.len()\
    \ - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       let tmp = array[i];\n            array[i] = array[j];\n            array[j]\
    \ = tmp;\n            i += 1;\n            j -= 1;\n        } else if array[i]\
    \ % 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n   \
    \         j -= 1;\n        }\n    }\n    if array[0] % 2 == 0 {\n        array.sort();\n\
    \    } else {\n        array.sort_by(|a, b| b.cmp(a));\n    }\n    array", " \
    \   let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    if array.len() > 1 {\n   \
    \     let (mut left, mut right) = array.split_at_mut(array.len() / 2);\n     \
    \   left = sort_array(left.to_vec()).as_mut_slice();\n        right = sort_array(right.to_vec()).as_mut_slice();\n\
    \        array = merge(left, right);\n    }\n    array", "    let mut array =\
    \ array;\n    if array.len() > 1 {\n        let sum = array[0] + array[array.len()\
    \ - 1];\n        if sum % 2 == 0 {\n            array.sort_by(|a, b| b.cmp(a));\n\
    \        } else {\n            array.sort_by(|a, b| a.cmp(b));\n        }\n  \
    \  }\n    array", "    let mut result = array.clone();\n    let mut i = 0;\n \
    \   let mut j = result.len() - 1;\n    let mut sorted = false;\n    while !sorted\
    \ {\n        sorted = true;\n        while i < j {\n            if result[i] >\
    \ result[j] {\n                result.swap(i, j);\n                sorted = false;\n\
    \            }\n            i += 1;\n            j -= 1;\n        }\n        i\
    \ = 0;\n        j = result.len() - 1;\n    }\n    result", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut\
    \ sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[j] {\n                let temp = array[i];\n\
    \                array[i] = array[j];\n                array[j] = temp;\n    \
    \            sorted = false;\n            }\n            i += 1;\n           \
    \ j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n  \
    \  array", "    let mut result = array.clone();\n    if array.len() > 1 {\n  \
    \      let sum = array[0] + array[array.len() - 1];\n        if sum % 2 == 0 {\n\
    \            result.sort_by(|a, b| b.cmp(a));\n        } else {\n            result.sort_by(|a,\
    \ b| a.cmp(b));\n        }\n    }\n    result", "    let mut array = array;\n\
    \    let mut sum = 0;\n    for i in 0..array.len() {\n        sum += array[i];\n\
    \    }\n    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   let mut sorted = false;\n    while !sorted {\n        sorted = true;\n   \
    \     while i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut is_odd = false;\n\
    \    if array.len() > 0 {\n        is_odd = (array[0] + array[array.len() - 1])\
    \ % 2 == 1;\n    }\n    if is_odd {\n        array.sort();\n    } else {\n   \
    \     array.sort_by(|a, b| b.cmp(a));\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i <\
    \ j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j]) % 2 == 1;\n\
    \    while i < j {\n        if is_odd {\n            if array[i] % 2 == 0 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 1 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        } else\
    \ {\n            if array[i] % 2 == 1 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 0 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        }\n    }\n    array", "    let mut array = array;\n\
    \    let mut start = 0;\n    let mut end = array.len() - 1;\n    while start <\
    \ end {\n        if (array[start] + array[end]) % 2 == 0 {\n            array.swap(start,\
    \ end);\n        }\n        start += 1;\n        end -= 1;\n    }\n    array",
  "    let mut array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n\
    \        let mut j = array.len() - 1;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n \
    \           i += 1;\n            j -= 1;\n        }\n        array.sort();\n \
    \   }\n    array", "    let mut array = array;\n    let sum = array[0] + array[array.len()\
    \ - 1];\n    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   let mut sorted = false;\n    while !sorted {\n        sorted = true;\n   \
    \     while i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        if (array[i] + array[j]) % 2 == 0 {\n          \
    \  if array[i] > array[j] {\n                array.swap(i, j);\n             \
    \   sorted = false;\n            }\n            i += 1;\n        } else {\n  \
    \          if array[i] < array[j] {\n                array.swap(i, j);\n     \
    \           sorted = false;\n            }\n            j -= 1;\n        }\n \
    \   }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i <\
    \ j {\n        if (array[i] + array[j]) % 2 == 0 {\n            array.swap(i,\
    \ j);\n        }\n        i += 1;\n        j -= 1;\n    }\n    array", "    let\
    \ mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n \
    \   while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n     \
    \       array.swap(i, j);\n            i += 1;\n            j -= 1;\n        }\
    \ else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j]) %\
    \ 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n      \
    \  j -= 1;\n    }\n    array", "    let mut res = array.clone();\n    let sum\
    \ = array[0] + array[array.len() - 1];\n    if sum % 2 == 0 {\n        res.sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        res.sort_by(|a, b| a.cmp(b));\n    }\n\
    \    res", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if (array[i] + array[j]) % 2 == 0 {\n     \
    \       array.swap(i, j);\n        }\n        i += 1;\n        j -= 1;\n    }\n\
    \    array", "    let mut array = array;\n    let mut i = 0;\n    let mut j =\
    \ array.len() - 1;\n    let mut is_odd = false;\n    if (array[i] + array[j])\
    \ % 2 == 1 {\n        is_odd = true;\n    }\n    while i < j {\n        if is_odd\
    \ {\n            if array[i] % 2 == 0 {\n                i += 1;\n           \
    \ } else if array[j] % 2 == 1 {\n                j -= 1;\n            } else {\n\
    \                array.swap(i, j);\n                i += 1;\n                j\
    \ -= 1;\n            }\n        } else {\n            if array[i] % 2 == 1 {\n\
    \                i += 1;\n            } else if array[j] % 2 == 0 {\n        \
    \        j -= 1;\n            } else {\n                array.swap(i, j);\n  \
    \              i += 1;\n                j -= 1;\n            }\n        }\n  \
    \  }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if (array[i] + array[j]) %\
    \ 2 == 0 {\n            array.swap(i, j);\n        }\n        i += 1;\n      \
    \  j -= 1;\n    }\n    array", "    let mut array = array;\n    let mut i = 0;\n\
    \    let mut j = array.len() - 1;\n    let mut is_odd = (array[i] + array[j])\
    \ % 2 == 1;\n    while i < j {\n        if is_odd {\n            if array[i] %\
    \ 2 == 0 {\n                i += 1;\n            } else if array[j] % 2 == 1 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut sorted = false;\n    while !sorted {\n        sorted = true;\n        while\
    \ i < j {\n            if array[i] > array[j] {\n                array.swap(i,\
    \ j);\n                sorted = false;\n            }\n            i += 1;\n \
    \           j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    let mut sorted = false;\n    while !sorted {\n   \
    \     sorted = true;\n        while i < j {\n            if array[i] > array[j]\
    \ {\n                array.swap(i, j);\n                sorted = false;\n    \
    \        }\n            i += 1;\n            j -= 1;\n        }\n        i = 0;\n\
    \        j = array.len() - 1;\n    }\n    array", "    let mut array = array;\n\
    \    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut is_odd = (array[i]\
    \ + array[j]) % 2 == 1;\n    while i < j {\n        if is_odd {\n            if\
    \ array[i] % 2 == 0 {\n                i += 1;\n            } else if array[j]\
    \ % 2 == 1 {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   } else {\n            if array[i] % 2 == 1 {\n                i += 1;\n  \
    \          } else if array[j] % 2 == 0 {\n                j -= 1;\n          \
    \  } else {\n                array.swap(i, j);\n                i += 1;\n    \
    \            j -= 1;\n            }\n        }\n    }\n    array", "    let mut\
    \ array = array;\n    if array.len() > 1 {\n        let mut i = 0;\n        let\
    \ mut j = array.len() - 1;\n        while i < j {\n            if (array[i] +\
    \ array[j]) % 2 == 0 {\n                array.swap(i, j);\n            }\n   \
    \         i += 1;\n            j -= 1;\n        }\n        array.sort();\n   \
    \ }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    }\
    \ else {\n        array[i..].sort();\n    }\n    array", "    let mut array =\
    \ array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let mut sorted\
    \ = false;\n    while !sorted {\n        sorted = true;\n        while i < j {\n\
    \            if array[i] > array[j] {\n                array.swap(i, j);\n   \
    \             sorted = false;\n            }\n            i += 1;\n          \
    \  j -= 1;\n        }\n        i = 0;\n        j = array.len() - 1;\n    }\n \
    \   array", "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len()\
    \ - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n\
    \            array.swap(i, j);\n            i += 1;\n            j -= 1;\n   \
    \     } else if array[i] % 2 == 1 {\n            i += 1;\n        } else if array[j]\
    \ % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if array.len() % 2 ==\
    \ 1 {\n        array[i..].sort_by(|a, b| b.cmp(a));\n    } else {\n        array[i..].sort();\n\
    \    }\n    array", "    let mut array = array;\n    let mut i = 0;\n    let mut\
    \ j = array.len() - 1;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            array.swap(i, j);\n            i += 1;\n           \
    \ j -= 1;\n        } else if array[i] % 2 == 1 {\n            i += 1;\n      \
    \  } else if array[j] % 2 == 0 {\n            j -= 1;\n        }\n    }\n    if\
    \ array.len() % 2 == 1 {\n        array[i..].reverse();\n    }\n    array", " \
    \   let mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let sum = array[0] + array[array.len() - 1];\n\
    \    if sum % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n\
    \        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", "    let mut array\
    \ = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    while i\
    \ < j {\n        if array[i] % 2 == 0 && array[j] % 2 == 1 {\n            array.swap(i,\
    \ j);\n            i += 1;\n            j -= 1;\n        } else if array[i] %\
    \ 2 == 1 {\n            i += 1;\n        } else if array[j] % 2 == 0 {\n     \
    \       j -= 1;\n        }\n    }\n    if array.len() % 2 == 1 {\n        array[i..].sort_by(|a,\
    \ b| b.cmp(a));\n    } else {\n        array[i..].sort();\n    }\n    array",
  "    let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n\
    \    let mut tmp = 0;\n    while i < j {\n        if array[i] % 2 == 0 && array[j]\
    \ % 2 == 1 {\n            tmp = array[i];\n            array[i] = array[j];\n\
    \            array[j] = tmp;\n            i += 1;\n            j -= 1;\n     \
    \   } else if array[i] % 2 == 1 && array[j] % 2 == 1 {\n            i += 1;\n\
    \        } else if array[i] % 2 == 0 && array[j] % 2 == 0 {\n            j -=\
    \ 1;\n        } else {\n            i += 1;\n            j -= 1;\n        }\n\
    \    }\n    if array[0] % 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n\
    \    } else {\n        array.sort_by(|a, b| a.cmp(b));\n    }\n    array", " \
    \   let mut array = array;\n    let mut i = 0;\n    let mut j = array.len() -\
    \ 1;\n    let mut is_odd = (array[i] + array[j]) % 2 == 1;\n    while i < j {\n\
    \        if is_odd {\n            if array[i] % 2 == 0 {\n                i +=\
    \ 1;\n            } else if array[j] % 2 == 1 {\n                j -= 1;\n   \
    \         } else {\n                array.swap(i, j);\n                i += 1;\n\
    \                j -= 1;\n            }\n        } else {\n            if array[i]\
    \ % 2 == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0\
    \ {\n                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   }\n    }\n    array", "    let mut array = array;\n    let mut sum = 0;\n\
    \    for i in 0..array.len() {\n        sum += array[i];\n    }\n    if sum %\
    \ 2 == 0 {\n        array.sort_by(|a, b| b.cmp(a));\n    } else {\n        array.sort_by(|a,\
    \ b| a.cmp(b));\n    }\n    array", "    let mut array = array;\n    let mut i\
    \ = 0;\n    let mut j = array.len() - 1;\n    let mut sorted = false;\n    while\
    \ !sorted {\n        sorted = true;\n        while i < j {\n            if (array[i]\
    \ + array[j]) % 2 == 0 {\n                array.swap(i, j);\n                sorted\
    \ = false;\n            }\n            i += 1;\n            j -= 1;\n        }\n\
    \        i = 0;\n        j = array.len() - 1;\n    }\n    array", "    let mut\
    \ array = array;\n    let mut i = 0;\n    let mut j = array.len() - 1;\n    let\
    \ mut is_odd = (array[i] + array[j]) % 2 == 1;\n    while i < j {\n        if\
    \ is_odd {\n            if array[i] % 2 == 0 {\n                i += 1;\n    \
    \        } else if array[j] % 2 == 1 {\n                j -= 1;\n            }\
    \ else {\n                array.swap(i, j);\n                i += 1;\n       \
    \         j -= 1;\n            }\n        } else {\n            if array[i] %\
    \ 2 == 1 {\n                i += 1;\n            } else if array[j] % 2 == 0 {\n\
    \                j -= 1;\n            } else {\n                array.swap(i,\
    \ j);\n                i += 1;\n                j -= 1;\n            }\n     \
    \   }\n    }\n    array"]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_51_remove_vowels
results:
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    text.chars()\n        .filter(|c| !vowels.contains(c))\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpjbcedmlg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ || !c.is_ascii_lowercase() || !c.is_ascii_uppercase() {\n            new_text.push(c);\n\
    \        } else if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' &&\
    \ c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U' {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp8_q8ix7g.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() {\n            result.push(c);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpydkgvnon.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() {\n            result.push(c);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpydkgvnon.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() {\n            result.push(c);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpydkgvnon.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(*c)).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpq_nrftan.rs:3:85\n\
    \  |\n3 |     text.chars().filter(|c| !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(*c)).collect()\n  |                                           \
    \                                          ^^^^^^^^ not found in this scope\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() || !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n\
    \            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpe7hx91vg.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || c != 'a' || c != 'e' || c != 'i' || c != 'o' || c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpy5xmqeg5.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut text = text;\n\
    \    text.retain(|c| !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || c\
    \ != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u');\n    text\n}\n\nfn\
    \ main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpllb2klgr.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            continue;\n        }\n        if c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            continue;\n\
    \        }\n        result.push(c);\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp21d5c0ml.rs:19:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmprnoy2gmk.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() {\n            result.push(c);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpydkgvnon.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_whitespace() || !c.is_digit(10) || !c.is_alphabetic() || !c.is_lowercase()\
    \ || !c.is_uppercase() || !c.is_whitespace() || !c.is_digit(10)).collect()\n}\n\
    \nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp6po8ij1k.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut text_without_vowels\
    \ = String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            text_without_vowels.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            text_without_vowels.push(c);\n        } else if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            text_without_vowels.push(c);\n\
    \        }\n    }\n    text_without_vowels\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpn0b41z_z.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_ascii_alphanumeric() || !c.is_ascii_digit() ||\
    \ !c.is_ascii_graphic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_whitespace() || !c.is_control() || !c.is_digit(10) || !c.is_graphic()\
    \ || !c.is_lowercase() || !c.is_numeric() || !c.is_uppercase() || !c.is_whitespace()).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `is_graphic` found for reference `&char`\
    \ in the current scope\n --> /tmp/tmpyleh0t_e.rs:3:506\n  |\n3 | ... !c.is_digit(10)\
    \ || !c.is_graphic() || !c.is_lowercase() || !c.is_numeric() || !c.is_uppercase()\
    \ || !c.is_whitespace()).collect()\n  |                           ^^^^^^^^^^ help:\
    \ there is an associated function with a similar name: `is_ascii_graphic`\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() {\n            result.push(c);\n        }\n    }\n   \
    \ result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpydkgvnon.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ || !c.is_ascii_lowercase() || !c.is_ascii_uppercase() {\n            new_text.push(c);\n\
    \        } else if !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n    \
    \        new_text.push(c);\n        } else if c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n    }\n\
    \    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpcdxm075r.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut text_without_vowels\
    \ = String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            text_without_vowels.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            text_without_vowels.push(c);\n        } else if !c.is_ascii_uppercase()\
    \ {\n            text_without_vowels.push(c);\n        } else if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            text_without_vowels.push(c);\n\
    \        }\n    }\n    text_without_vowels\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpcdzdda88.rs:21:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n    \
    \        result.push(c);\n        } else if !c.is_ascii_lowercase() && !c.is_ascii_uppercase()\
    \ {\n            result.push(c);\n        } else if !c.is_ascii_lowercase() &&\
    \ !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ && !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n    \
    \        result.push(c);\n        } else if !c.is_ascii_lowercase() && !c.is_ascii_uppercase()\
    \ {\n            result.push(c);\n        } else if !c.is_ascii_lowercase() &&\
    \ !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ && !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmpvbufjno6.rs:42:3\n\
    \   |\n2  | fn remove_vowels(text: String) -> String {\n   |                 \
    \                         - unclosed delimiter\n3  |     let mut result = String::new();\n\
    4  |     for c in text.chars() {\n   |                           - unclosed delimiter\n\
    ...\n27 |         } else if !c.is_ascii_lowercase() && !c.is_ascii_uppercase()\
    \ {\n   |                                                                    \
    \  - this delimiter might not be properly closed...\n28 |             result.push(c);\n\
    29 | }\n   | - ...as it matches this but it has different indentation\n...\n42\
    \ | }\n   |   ^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpvbufjno6.rs:4:5\n\
    \   |\n2  |   fn remove_vowels(text: String) -> String {\n   |               \
    \                      ------ expected `String` because of return type\n3  | \
    \      let mut result = String::new();\n4  | /     for c in text.chars() {\n5\
    \  | |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ {\n6  | |             result.push(c);\n7  | |         } else if !c.is_ascii_lowercase()\
    \ && !c.is_ascii_uppercase() {\n...  |\n41 | |     assert_eq!(candidate(String::from(\"\
    ybcd\")), String::from(\"ybcd\"));\n42 | | }\n   | |__^ expected struct `String`,\
    \ found `()`\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl2v6_6ce.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !\"aeiou\".contains(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpexqfqdrv.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if !c.is_ascii_lowercase() && c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' {\n            result.push(c);\n        } else if !c.is_ascii_uppercase()\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpx3b7ker4.rs:21:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c.is_ascii_alphanumeric() {\n            result.push(c);\n        }\n   \
    \ }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpopzjxymj.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmprnoy2gmk.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_lowercase() || !c.is_ascii_uppercase() || !c.is_alphabetic() ||\
    \ !c.is_alphanumeric() || !c.is_ascii() || !c.is_digit(10) || !c.is_digit(16)\
    \ || !c.is_digit(2) || !c.is_digit(8) || !c.is_lowercase() || !c.is_numeric()\
    \ || !c.is_uppercase()).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpsnao0y0h.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp7js324g0.rs:5:40\n\
    \  |\n5 |         if !c.is_ascii_lowercase() || !is_vowel(c) {\n  |          \
    \                              ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        match c {\n            'a' | 'e' | 'i' |\
    \ 'o' | 'u' => {}\n            _ => result.push(c),\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmphpbzqcxk.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            continue;\n        }\n        if c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            continue;\n\
    \        }\n        result.push(c);\n    }\n    result\n}\n\nfn main() {\n   \
    \ let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")),\
    \ String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp21d5c0ml.rs:19:5\nnote: run with\
    \ `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if !is_vowel(c) {\n       \
    \     new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n  \
    \  let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmptw_fpqfk.rs:9:20\n\
    \  |\n9 |         } else if !is_vowel(c) {\n  |                    ^^^^^^^^ not\
    \ found in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl2v6_6ce.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        match c {\n            'a' | 'e' | 'i' |\
    \ 'o' | 'u' => continue,\n            _ => result.push(c),\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpf9q4e0cv.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n\
    \            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl3iq6rlj.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_whitespace() || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase()).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpzekvliyc.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_whitespace() || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase()).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpzekvliyc.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_whitespace() || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase()).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpzekvliyc.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !\"aeiou\".contains(*c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpexqfqdrv.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !is_vowel(c)\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfr9i36bu.rs:5:41\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !is_vowel(c) {\n  |         \
    \                                ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmprnoy2gmk.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if !c.is_ascii_lowercase() && c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' {\n            result.push(c);\n        } else if !c.is_ascii_uppercase()\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpx3b7ker4.rs:21:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ || !c.is_ascii_lowercase() || !c.is_ascii_uppercase() {\n            new_text.push(c);\n\
    \        } else if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n\
    \            new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpw9338qyu.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl2v6_6ce.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n\
    \            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl3iq6rlj.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit() || !c.is_ascii_punctuation() || !c.is_ascii_whitespace()).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_o12q8fa.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if !c.is_ascii_lowercase() && c != 'a' && c != 'e' && c != 'i'\
    \ && c != 'o' && c != 'u' {\n            result.push(c);\n        } else if !c.is_ascii_uppercase()\
    \ && c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpx3b7ker4.rs:21:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !is_vowel(c) {\n   \
    \         new_text.push(c);\n        }\n    }\n    new_text\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp56a_z810.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp8x9zbwny.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp8x9zbwny.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        match c {\n            'a' | 'e' | 'i' |\
    \ 'o' | 'u' => continue,\n            _ => result.push(c),\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpf9q4e0cv.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c ==\
    \ 'u' {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpr_ddia4j.rs:15:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !is_vowel(c)\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfr9i36bu.rs:5:41\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !is_vowel(c) {\n  |         \
    \                                ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ || !c.is_ascii_lowercase() || !is_vowel(c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpmwi5fn54.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for ch in text.chars() {\n        if !is_vowel(ch) {\n            result.push(ch);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpn9mqvyyc.rs:5:13\n\
    \  |\n5 |         if !is_vowel(ch) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !is_vowel(c)\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfr9i36bu.rs:5:41\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !is_vowel(c) {\n  |         \
    \                                ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ || !c.is_ascii_lowercase() || !is_vowel(c) {\n            new_text.push(c);\n\
    \        }\n    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpmwi5fn54.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !is_vowel(c)\
    \ {\n            result.push(c);\n        }\n    }\n    result\n}\n\nfn main()\
    \ {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmpfr9i36bu.rs:5:41\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !is_vowel(c) {\n  |         \
    \                                ^^^^^^^^ not found in this scope\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp5pgb4keq.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit() || !c.is_ascii_punctuation() || !c.is_ascii_graphic()\
    \ || !c.is_ascii_whitespace()).collect()\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpov6xu1jc.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl2v6_6ce.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            new_text.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            new_text.push(c);\n        } else if c != 'a' && c != 'e' &&\
    \ c != 'i' && c != 'o' && c != 'u' {\n            new_text.push(c);\n        }\n\
    \    }\n    new_text\n}\n\nfn main() {\n    let candidate = remove_vowels;\n \
    \   assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpgspz0szz.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error: mismatched closing delimiter: `}`\n --> /tmp/tmpzud1vjuv.rs:3:24\n\
    \  |\n2 | fn remove_vowels(text: String) -> String {\n  |                    \
    \                      - closing delimiter possibly meant for this\n3 |     text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() || !c.is...\n  |                        ^ unclosed delimiter\n\
    4 | }\n  | ^ mismatched closing delimiter\n\nerror[E0615]: attempted to take value\
    \ of method `is_alphanumeric` on type `&char`\n --> /tmp/tmpzud1vjuv.rs:3:1122\n\
    \  |\n3 | ...ic() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric\n\
    \  |                                                     ^^^^^^^^^^^^^^^ method,\
    \ not a field\n  |\nhelp: use parentheses to call the method\n  |\n3 |     text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\
    \ || !c.is_alphabetic() || !c.is_lowercase() || !c.is_uppercase() || !c.is_whitespace()\
    \ || !c.is_alphanumeric() || !c.is_digit(10) || !c.is_numeric() || !c.is_alphanumeric()\n\
    \  |                                                                         \
    \                                                    "
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut text_without_vowels\
    \ = String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ {\n            text_without_vowels.push(c);\n        } else if !c.is_ascii_lowercase()\
    \ {\n            text_without_vowels.push(c);\n        } else if c != 'a' && c\
    \ != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            text_without_vowels.push(c);\n\
    \        }\n    }\n    text_without_vowels\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpn0b41z_z.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ !c.is_ascii_lowercase() && !c.is_ascii_uppercase() {\n            result.push(c);\n\
    \        } else if c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n\
    \            result.push(c);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\"\
    )), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl3iq6rlj.rs:19:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if c != 'a' && c != 'e' && c != 'i' && c\
    \ != 'o' && c != 'u' {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmprnoy2gmk.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_h292ydj.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl2v6_6ce.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit() || !c.is_ascii_punctuation() || !c.is_ascii_graphic()\
    \ || !c.is_ascii_whitespace()).collect()\n}\n\nfn main() {\n    let candidate\
    \ = remove_vowels;\n    assert_eq!(candidate(String::from(\"\")), String::from(\"\
    \"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\")), String::from(\"\
    bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"fedcba\")), String::from(\"\
    fdcb\"));\n    assert_eq!(candidate(String::from(\"eeeee\")), String::from(\"\"\
    ));\n    assert_eq!(candidate(String::from(\"acBAA\")), String::from(\"cB\"));\n\
    \    assert_eq!(candidate(String::from(\"EcBOO\")), String::from(\"cB\"));\n \
    \   assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpov6xu1jc.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !is_vowel(c) {\n            result.push(c);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp5k3h0de5.rs:5:13\n\
    \  |\n5 |         if !is_vowel(c) {\n  |             ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|c|\
    \ !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !c.is_ascii_uppercase()\
    \ || !c.is_ascii_digit() || !c.is_ascii_punctuation() || !c.is_ascii_whitespace()).collect()\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmp_o12q8fa.rs:9:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    text.chars().filter(|&c|\
    \ !\"aeiou\".contains(c)).collect()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmp0etetjm9.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !c.is_ascii_uppercase() {\n            result.push(c);\n        } else if\
    \ c != 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' && c != 'A' && c !=\
    \ 'E' && c != 'I' && c != 'O' && c != 'U' {\n            result.push(c);\n   \
    \     }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"abcdef\\nghijklm\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpl2v6_6ce.rs:17:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let vowels = vec!['a',\
    \ 'e', 'i', 'o', 'u'];\n    text.chars()\n        .filter(|c| !vowels.contains(c))\n\
    \        .collect::<String>()\n}\n\nfn main() {\n    let candidate = remove_vowels;\n\
    \    assert_eq!(candidate(String::from(\"\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"\
    abcdef\nghijklm\")), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"cBAA\"`,\n right: `\"cB\"`', /tmp/tmpjbcedmlg.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785
- exit_code: 1
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut result = String::new();\n\
    \    for c in text.chars() {\n        if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase()\
    \ || !is_vowel(c) {\n            result.push(c);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `is_vowel` in this scope\n --> /tmp/tmp2emr9gw5.rs:5:68\n\
    \  |\n5 |         if !c.is_ascii_alphabetic() || !c.is_ascii_lowercase() || !is_vowel(c)\
    \ {\n  |                                                                    ^^^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660015784
- exit_code: 101
  program: "/// remove_vowels is a function that takes string and returns string without\
    \ vowels.\nfn remove_vowels(text: String) -> String {\n    let mut new_text =\
    \ String::new();\n    for c in text.chars() {\n        if !c.is_ascii_alphabetic()\
    \ || !c.is_ascii_lowercase() || c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u' {\n            new_text.push(c);\n        }\n    }\n    new_text\n\
    }\n\nfn main() {\n    let candidate = remove_vowels;\n    assert_eq!(candidate(String::from(\"\
    \")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"abcdef\nghijklm\"\
    )), String::from(\"bcdf\nghjklm\"));\n    assert_eq!(candidate(String::from(\"\
    fedcba\")), String::from(\"fdcb\"));\n    assert_eq!(candidate(String::from(\"\
    eeeee\")), String::from(\"\"));\n    assert_eq!(candidate(String::from(\"acBAA\"\
    )), String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"EcBOO\")),\
    \ String::from(\"cB\"));\n    assert_eq!(candidate(String::from(\"ybcd\")), String::from(\"\
    ybcd\"));\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `\"ae\\ni\"`,\n right: `\"bcdf\\nghjklm\"`', /tmp/tmpoujs6tmj.rs:15:5\nnote:\
    \ run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660015785

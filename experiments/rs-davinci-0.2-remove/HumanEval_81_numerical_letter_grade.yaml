name: HumanEval_81_numerical_letter_grade
language: rs
prompt: "/// It is the last week of the semester and the teacher has to give the grades\n\
  /// to students. The teacher has been making her own algorithm for grading.\n///\
  \ The only problem is, she has lost the code she used for grading.\n/// She has\
  \ given you a list of GPAs for some students and you have to write \n/// a function\
  \ that can output a list of letter grades using the following table:\n/// GPA  \
  \     |    Letter grade\n/// 4.0                A+\n/// > 3.7                A \n\
  /// > 3.3                A- \n/// > 3.0                B+\n/// > 2.7           \
  \     B \n/// > 2.3                B-\n/// > 2.0                C+\n/// > 1.7  \
  \              C\n/// > 1.3                C-\n/// > 1.0                D+ \n///\
  \ > 0.7                D \n/// > 0.0                D-\n/// 0.0                E\n\
  /// Example:\nfn numerical_letter_grade(grades: Vec<f64>) -> Vec<String> {\n"
tests: "}\n\nfn main() {\n    let candidate = numerical_letter_grade;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n}\n"
completions: ["    let mut letter_grades = Vec::new();\n    for grade in grades {\n\
    \        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if *g >=\
    \ 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g >= 2.7 {\n            \"B\".to_string()\n        } else if *g >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g >= 1.0 {\n            \"D+\".to_string()\n        } else if *g >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade >= 4.0 {\n            letter_grade.push_str(\"A+\");\n       \
    \ } else if grade >= 3.7 {\n            letter_grade.push_str(\"A\");\n      \
    \  } else if grade >= 3.3 {\n            letter_grade.push_str(\"A-\");\n    \
    \    } else if grade >= 3.0 {\n            letter_grade.push_str(\"B+\");\n  \
    \      } else if grade >= 2.7 {\n            letter_grade.push_str(\"B\");\n \
    \       } else if grade >= 2.3 {\n            letter_grade.push_str(\"B-\");\n\
    \        } else if grade >= 2.0 {\n            letter_grade.push_str(\"C+\");\n\
    \        } else if grade >= 1.7 {\n            letter_grade.push_str(\"C\");\n\
    \        } else if grade >= 1.3 {\n            letter_grade.push_str(\"C-\");\n\
    \        } else if grade >= 1.0 {\n            letter_grade.push_str(\"D+\");\n\
    \        } else if grade >= 0.7 {\n            letter_grade.push_str(\"D\");\n\
    \        } else if grade >= 0.0 {\n            letter_grade.push_str(\"D-\");\n\
    \        } else {\n            letter_grade.push_str(\"E\");\n        }\n    \
    \    letter_grades.push(letter_grade);\n    }\n    letter_grades", "    let mut\
    \ letter_grades = Vec::new();\n    for grade in grades {\n        if grade >=\
    \ 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else if\
    \ grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n       \
    \ } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|&g| {\n       \
    \ if g >= 4.0 {\n            \"A+\".to_string()\n        } else if g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if g >= 3.3 {\n            \"A-\"\
    .to_string()\n        } else if g >= 3.0 {\n            \"B+\".to_string()\n \
    \       } else if g >= 2.7 {\n            \"B\".to_string()\n        } else if\
    \ g >= 2.3 {\n            \"B-\".to_string()\n        } else if g >= 2.0 {\n \
    \           \"C+\".to_string()\n        } else if g >= 1.7 {\n            \"C\"\
    .to_string()\n        } else if g >= 1.3 {\n            \"C-\".to_string()\n \
    \       } else if g >= 1.0 {\n            \"D+\".to_string()\n        } else if\
    \ g >= 0.7 {\n            \"D\".to_string()\n        } else if g >= 0.0 {\n  \
    \          \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        let letter = match grade {\n            4.0\
    \ => \"A+\",\n            x if x > 3.7 => \"A\",\n            x if x > 3.3 =>\
    \ \"A-\",\n            x if x > 3.0 => \"B+\",\n            x if x > 2.7 => \"\
    B\",\n            x if x > 2.3 => \"B-\",\n            x if x > 2.0 => \"C+\"\
    ,\n            x if x > 1.7 => \"C\",\n            x if x > 1.3 => \"C-\",\n \
    \           x if x > 1.0 => \"D+\",\n            x if x > 0.7 => \"D\",\n    \
    \        x if x > 0.0 => \"D-\",\n            _ => \"E\",\n        };\n      \
    \  letter_grades.push(letter.to_string());\n    }\n    letter_grades", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade == 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade > 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade > 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade > 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade > 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade > 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade > 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade > 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade > 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade > 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade > 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade > 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if\
    \ *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    grades.iter().map(|x| match *x {\n      \
    \  4.0 => \"A+\".to_string(),\n        x if x > 3.7 => \"A\".to_string(),\n  \
    \      x if x > 3.3 => \"A-\".to_string(),\n        x if x > 3.0 => \"B+\".to_string(),\n\
    \        x if x > 2.7 => \"B\".to_string(),\n        x if x > 2.3 => \"B-\".to_string(),\n\
    \        x if x > 2.0 => \"C+\".to_string(),\n        x if x > 1.7 => \"C\".to_string(),\n\
    \        x if x > 1.3 => \"C-\".to_string(),\n        x if x > 1.0 => \"D+\".to_string(),\n\
    \        x if x > 0.7 => \"D\".to_string(),\n        x if x > 0.0 => \"D-\".to_string(),\n\
    \        _ => \"E\".to_string(),\n    }).collect()", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      letter_grades.push(\"A+\".to_string());\n        } else if grade >= 3.7\
    \ {\n            letter_grades.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n        } else\
    \ if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n   \
    \     } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade == 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|grade| {\n    \
    \    match *grade {\n            4.0 => \"A+\".to_string(),\n            grade\
    \ if grade > 3.7 => \"A\".to_string(),\n            grade if grade > 3.3 => \"\
    A-\".to_string(),\n            grade if grade > 3.0 => \"B+\".to_string(),\n \
    \           grade if grade > 2.7 => \"B\".to_string(),\n            grade if grade\
    \ > 2.3 => \"B-\".to_string(),\n            grade if grade > 2.0 => \"C+\".to_string(),\n\
    \            grade if grade > 1.7 => \"C\".to_string(),\n            grade if\
    \ grade > 1.3 => \"C-\".to_string(),\n            grade if grade > 1.0 => \"D+\"\
    .to_string(),\n            grade if grade > 0.7 => \"D\".to_string(),\n      \
    \      grade if grade > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n\
    \        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if\
    \ *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        let letter_grade = match grade {\n       \
    \     4.0 => \"A+\",\n            grade if grade > 3.7 => \"A\",\n           \
    \ grade if grade > 3.3 => \"A-\",\n            grade if grade > 3.0 => \"B+\"\
    ,\n            grade if grade > 2.7 => \"B\",\n            grade if grade > 2.3\
    \ => \"B-\",\n            grade if grade > 2.0 => \"C+\",\n            grade if\
    \ grade > 1.7 => \"C\",\n            grade if grade > 1.3 => \"C-\",\n       \
    \     grade if grade > 1.0 => \"D+\",\n            grade if grade > 0.7 => \"\
    D\",\n            grade if grade > 0.0 => \"D-\",\n            _ => \"E\",\n \
    \       };\n        letter_grades.push(letter_grade.to_string());\n    }\n   \
    \ letter_grades", "    let mut letter_grades = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|&grade| {\n   \
    \     let grade = grade * 10.0;\n        match grade {\n            40..=100 =>\
    \ \"A+\".to_string(),\n            37..=39 => \"A\".to_string(),\n           \
    \ 33..=36 => \"A-\".to_string(),\n            30..=32 => \"B+\".to_string(),\n\
    \            27..=29 => \"B\".to_string(),\n            23..=26 => \"B-\".to_string(),\n\
    \            20..=22 => \"C+\".to_string(),\n            17..=19 => \"C\".to_string(),\n\
    \            13..=16 => \"C-\".to_string(),\n            10..=12 => \"D+\".to_string(),\n\
    \            7..=9 => \"D\".to_string(),\n            0..=6 => \"D-\".to_string(),\n\
    \            _ => \"E\".to_string(),\n        }\n    }).collect()", "    let mut\
    \ letter_grades = Vec::new();\n    for grade in grades {\n        if grade >=\
    \ 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else if\
    \ grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n       \
    \ } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        let letter_grade = match grade {\n         \
    \   4.0 => \"A+\",\n            _ if grade > 3.7 => \"A\",\n            _ if grade\
    \ > 3.3 => \"A-\",\n            _ if grade > 3.0 => \"B+\",\n            _ if\
    \ grade > 2.7 => \"B\",\n            _ if grade > 2.3 => \"B-\",\n           \
    \ _ if grade > 2.0 => \"C+\",\n            _ if grade > 1.7 => \"C\",\n      \
    \      _ if grade > 1.3 => \"C-\",\n            _ if grade > 1.0 => \"D+\",\n\
    \            _ if grade > 0.7 => \"D\",\n            _ if grade > 0.0 => \"D-\"\
    ,\n            _ => \"E\",\n        };\n        letter_grades.push(letter_grade.to_string());\n\
    \    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if\
    \ *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        let mut letter_grade = String::new();\n  \
    \      if grade == 4.0 {\n            letter_grade = \"A+\".to_string();\n   \
    \     } else if grade > 3.7 {\n            letter_grade = \"A\".to_string();\n\
    \        } else if grade > 3.3 {\n            letter_grade = \"A-\".to_string();\n\
    \        } else if grade > 3.0 {\n            letter_grade = \"B+\".to_string();\n\
    \        } else if grade > 2.7 {\n            letter_grade = \"B\".to_string();\n\
    \        } else if grade > 2.3 {\n            letter_grade = \"B-\".to_string();\n\
    \        } else if grade > 2.0 {\n            letter_grade = \"C+\".to_string();\n\
    \        } else if grade > 1.7 {\n            letter_grade = \"C\".to_string();\n\
    \        } else if grade > 1.3 {\n            letter_grade = \"C-\".to_string();\n\
    \        } else if grade > 1.0 {\n            letter_grade = \"D+\".to_string();\n\
    \        } else if grade > 0.7 {\n            letter_grade = \"D\".to_string();\n\
    \        } else if grade > 0.0 {\n            letter_grade = \"D-\".to_string();\n\
    \        } else {\n            letter_grade = \"E\".to_string();\n        }\n\
    \        letter_grades.push(letter_grade);\n    }\n    letter_grades", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        match\
    \ *g {\n            4.0 => \"A+\".to_string(),\n            g if g > 3.7 => \"\
    A\".to_string(),\n            g if g > 3.3 => \"A-\".to_string(),\n          \
    \  g if g > 3.0 => \"B+\".to_string(),\n            g if g > 2.7 => \"B\".to_string(),\n\
    \            g if g > 2.3 => \"B-\".to_string(),\n            g if g > 2.0 =>\
    \ \"C+\".to_string(),\n            g if g > 1.7 => \"C\".to_string(),\n      \
    \      g if g > 1.3 => \"C-\".to_string(),\n            g if g > 1.0 => \"D+\"\
    .to_string(),\n            g if g > 0.7 => \"D\".to_string(),\n            g if\
    \ g > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n      \
    \  }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if\
    \ *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade == 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut output = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            output.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            output.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            output.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            output.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            output.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            output.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            output.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            output.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            output.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            output.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            output.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            output.push(\"\
    D-\".to_string());\n        } else {\n            output.push(\"E\".to_string());\n\
    \        }\n    }\n    output", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|x| {\n        if\
    \ *x >= 4.0 {\n            \"A+\".to_string()\n        } else if *x >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *x >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *x >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *x >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *x >= 2.3 {\n            \"B-\".to_string()\n        } else if *x >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *x >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *x >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *x >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *x >= 0.7 {\n            \"D\".to_string()\n        } else if *x >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    grades.iter().map(|g| {\n        if *g ==\
    \ 4.0 {\n            \"A+\".to_string()\n        } else if *g > 3.7 {\n      \
    \      \"A\".to_string()\n        } else if *g > 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *g > 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *g > 2.7 {\n            \"B\".to_string()\n        } else if *g > 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *g > 2.0 {\n            \"\
    C+\".to_string()\n        } else if *g > 1.7 {\n            \"C\".to_string()\n\
    \        } else if *g > 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *g > 1.0 {\n            \"D+\".to_string()\n        } else if *g > 0.7 {\n\
    \            \"D\".to_string()\n        } else if *g > 0.0 {\n            \"D-\"\
    .to_string()\n        } else {\n            \"E\".to_string()\n        }\n   \
    \ }).collect()", "    let mut letter_grades = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result = Vec::new();\n    for grade in grades\
    \ {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade == 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|grade| {\n    \
    \    if *grade >= 4.0 {\n            \"A+\".to_string()\n        } else if *grade\
    \ >= 3.7 {\n            \"A\".to_string()\n        } else if *grade >= 3.3 {\n\
    \            \"A-\".to_string()\n        } else if *grade >= 3.0 {\n         \
    \   \"B+\".to_string()\n        } else if *grade >= 2.7 {\n            \"B\".to_string()\n\
    \        } else if *grade >= 2.3 {\n            \"B-\".to_string()\n        }\
    \ else if *grade >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade\
    \ >= 1.7 {\n            \"C\".to_string()\n        } else if *grade >= 1.3 {\n\
    \            \"C-\".to_string()\n        } else if *grade >= 1.0 {\n         \
    \   \"D+\".to_string()\n        } else if *grade >= 0.7 {\n            \"D\".to_string()\n\
    \        } else if *grade >= 0.0 {\n            \"D-\".to_string()\n        }\
    \ else {\n            \"E\".to_string()\n        }\n    }).collect()", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|grade| {\n    \
    \    if *grade >= 4.0 {\n            \"A+\".to_string()\n        } else if *grade\
    \ >= 3.7 {\n            \"A\".to_string()\n        } else if *grade >= 3.3 {\n\
    \            \"A-\".to_string()\n        } else if *grade >= 3.0 {\n         \
    \   \"B+\".to_string()\n        } else if *grade >= 2.7 {\n            \"B\".to_string()\n\
    \        } else if *grade >= 2.3 {\n            \"B-\".to_string()\n        }\
    \ else if *grade >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade\
    \ >= 1.7 {\n            \"C\".to_string()\n        } else if *grade >= 1.3 {\n\
    \            \"C-\".to_string()\n        } else if *grade >= 1.0 {\n         \
    \   \"D+\".to_string()\n        } else if *grade >= 0.7 {\n            \"D\".to_string()\n\
    \        } else if *grade >= 0.0 {\n            \"D-\".to_string()\n        }\
    \ else {\n            \"E\".to_string()\n        }\n    }).collect()", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if\
    \ *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    grades.iter().map(|x| {\n        if *x >=\
    \ 4.0 {\n            \"A+\".to_string()\n        } else if *x >= 3.7 {\n     \
    \       \"A\".to_string()\n        } else if *x >= 3.3 {\n            \"A-\".to_string()\n\
    \        } else if *x >= 3.0 {\n            \"B+\".to_string()\n        } else\
    \ if *x >= 2.7 {\n            \"B\".to_string()\n        } else if *x >= 2.3 {\n\
    \            \"B-\".to_string()\n        } else if *x >= 2.0 {\n            \"\
    C+\".to_string()\n        } else if *x >= 1.7 {\n            \"C\".to_string()\n\
    \        } else if *x >= 1.3 {\n            \"C-\".to_string()\n        } else\
    \ if *x >= 1.0 {\n            \"D+\".to_string()\n        } else if *x >= 0.7\
    \ {\n            \"D\".to_string()\n        } else if *x >= 0.0 {\n          \
    \  \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n     \
    \   }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        match\
    \ *g {\n            4.0 => \"A+\".to_string(),\n            g if g > 3.7 => \"\
    A\".to_string(),\n            g if g > 3.3 => \"A-\".to_string(),\n          \
    \  g if g > 3.0 => \"B+\".to_string(),\n            g if g > 2.7 => \"B\".to_string(),\n\
    \            g if g > 2.3 => \"B-\".to_string(),\n            g if g > 2.0 =>\
    \ \"C+\".to_string(),\n            g if g > 1.7 => \"C\".to_string(),\n      \
    \      g if g > 1.3 => \"C-\".to_string(),\n            g if g > 1.0 => \"D+\"\
    .to_string(),\n            g if g > 0.7 => \"D\".to_string(),\n            g if\
    \ g > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n      \
    \  }\n    }).collect()", "    let mut result: Vec<String> = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            result.push(\"A\"\
    .to_string());\n        } else if grade >= 3.3 {\n            result.push(\"A-\"\
    .to_string());\n        } else if grade >= 3.0 {\n            result.push(\"B+\"\
    .to_string());\n        } else if grade >= 2.7 {\n            result.push(\"B\"\
    .to_string());\n        } else if grade >= 2.3 {\n            result.push(\"B-\"\
    .to_string());\n        } else if grade >= 2.0 {\n            result.push(\"C+\"\
    .to_string());\n        } else if grade >= 1.7 {\n            result.push(\"C\"\
    .to_string());\n        } else if grade >= 1.3 {\n            result.push(\"C-\"\
    .to_string());\n        } else if grade >= 1.0 {\n            result.push(\"D+\"\
    .to_string());\n        } else if grade >= 0.7 {\n            result.push(\"D\"\
    .to_string());\n        } else if grade >= 0.0 {\n            result.push(\"D-\"\
    .to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        let letter_grade = match grade {\n       \
    \     4.0 => \"A+\",\n            x if x > 3.7 => \"A\",\n            x if x >\
    \ 3.3 => \"A-\",\n            x if x > 3.0 => \"B+\",\n            x if x > 2.7\
    \ => \"B\",\n            x if x > 2.3 => \"B-\",\n            x if x > 2.0 =>\
    \ \"C+\",\n            x if x > 1.7 => \"C\",\n            x if x > 1.3 => \"\
    C-\",\n            x if x > 1.0 => \"D+\",\n            x if x > 0.7 => \"D\"\
    ,\n            x if x > 0.0 => \"D-\",\n            _ => \"E\",\n        };\n\
    \        letter_grades.push(letter_grade.to_string());\n    }\n    letter_grades",
  "    let mut letter_grades = Vec::new();\n    for grade in grades {\n        if\
    \ grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n      \
    \  } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    grades.iter().map(|grade| {\n        if\
    \ *grade >= 4.0 {\n            \"A+\".to_string()\n        } else if *grade >=\
    \ 3.7 {\n            \"A\".to_string()\n        } else if *grade >= 3.3 {\n  \
    \          \"A-\".to_string()\n        } else if *grade >= 3.0 {\n           \
    \ \"B+\".to_string()\n        } else if *grade >= 2.7 {\n            \"B\".to_string()\n\
    \        } else if *grade >= 2.3 {\n            \"B-\".to_string()\n        }\
    \ else if *grade >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade\
    \ >= 1.7 {\n            \"C\".to_string()\n        } else if *grade >= 1.3 {\n\
    \            \"C-\".to_string()\n        } else if *grade >= 1.0 {\n         \
    \   \"D+\".to_string()\n        } else if *grade >= 0.7 {\n            \"D\".to_string()\n\
    \        } else if *grade >= 0.0 {\n            \"D-\".to_string()\n        }\
    \ else {\n            \"E\".to_string()\n        }\n    }).collect()", "    let\
    \ mut letter_grades = Vec::new();\n    for grade in grades {\n        if grade\
    \ >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else\
    \ if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n    \
    \    } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut output: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            output.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            output.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            output.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            output.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            output.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            output.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            output.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            output.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            output.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            output.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            output.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            output.push(\"\
    D-\".to_string());\n        } else {\n            output.push(\"E\".to_string());\n\
    \        }\n    }\n    output", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if\
    \ *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for\
    \ grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    let mut letter_grades = Vec::new();\n   \
    \ for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade == 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade > 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade > 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade > 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade > 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade > 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade > 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade > 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade > 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade > 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade > 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade > 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|&grade| {\n   \
    \     if grade >= 4.0 {\n            \"A+\".to_string()\n        } else if grade\
    \ >= 3.7 {\n            \"A\".to_string()\n        } else if grade >= 3.3 {\n\
    \            \"A-\".to_string()\n        } else if grade >= 3.0 {\n          \
    \  \"B+\".to_string()\n        } else if grade >= 2.7 {\n            \"B\".to_string()\n\
    \        } else if grade >= 2.3 {\n            \"B-\".to_string()\n        } else\
    \ if grade >= 2.0 {\n            \"C+\".to_string()\n        } else if grade >=\
    \ 1.7 {\n            \"C\".to_string()\n        } else if grade >= 1.3 {\n   \
    \         \"C-\".to_string()\n        } else if grade >= 1.0 {\n            \"\
    D+\".to_string()\n        } else if grade >= 0.7 {\n            \"D\".to_string()\n\
    \        } else if grade >= 0.0 {\n            \"D-\".to_string()\n        } else\
    \ {\n            \"E\".to_string()\n        }\n    }).collect()", "    let mut\
    \ letter_grades = Vec::new();\n    for grade in grades {\n        if grade >=\
    \ 4.0 {\n            letter_grades.push(\"A+\".to_string());\n        } else if\
    \ grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n       \
    \ } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut result = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    let mut result: Vec<String> = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            result.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            result.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            result.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            result.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            result.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            result.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            result.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            result.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            result.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            result.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            result.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            result.push(\"D-\".to_string());\n\
    \        } else {\n            result.push(\"E\".to_string());\n        }\n  \
    \  }\n    result", "    grades.iter().map(|&grade| {\n        match grade {\n\
    \            4.0 => \"A+\".to_string(),\n            grade if grade > 3.7 => \"\
    A\".to_string(),\n            grade if grade > 3.3 => \"A-\".to_string(),\n  \
    \          grade if grade > 3.0 => \"B+\".to_string(),\n            grade if grade\
    \ > 2.7 => \"B\".to_string(),\n            grade if grade > 2.3 => \"B-\".to_string(),\n\
    \            grade if grade > 2.0 => \"C+\".to_string(),\n            grade if\
    \ grade > 1.7 => \"C\".to_string(),\n            grade if grade > 1.3 => \"C-\"\
    .to_string(),\n            grade if grade > 1.0 => \"D+\".to_string(),\n     \
    \       grade if grade > 0.7 => \"D\".to_string(),\n            grade if grade\
    \ > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n        }\n\
    \    }).collect()", "    let mut letter_grades = Vec::new();\n    for grade in\
    \ grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\".to_string());\n\
    \        } else if grade >= 3.7 {\n            letter_grades.push(\"A\".to_string());\n\
    \        } else if grade >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n\
    \        } else if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n\
    \        } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut result: Vec<String> = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            result.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            result.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            result.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            result.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            result.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            result.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            result.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            result.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            result.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            result.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            result.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            result.push(\"\
    D-\".to_string());\n        } else {\n            result.push(\"E\".to_string());\n\
    \        }\n    }\n    result", "    grades.iter().map(|grade| {\n        if *grade\
    \ >= 4.0 {\n            \"A+\".to_string()\n        } else if *grade >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *grade >= 3.3 {\n          \
    \  \"A-\".to_string()\n        } else if *grade >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *grade >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *grade >= 2.3 {\n            \"B-\".to_string()\n        } else if *grade\
    \ >= 2.0 {\n            \"C+\".to_string()\n        } else if *grade >= 1.7 {\n\
    \            \"C\".to_string()\n        } else if *grade >= 1.3 {\n          \
    \  \"C-\".to_string()\n        } else if *grade >= 1.0 {\n            \"D+\".to_string()\n\
    \        } else if *grade >= 0.7 {\n            \"D\".to_string()\n        } else\
    \ if *grade >= 0.0 {\n            \"D-\".to_string()\n        } else {\n     \
    \       \"E\".to_string()\n        }\n    }).collect()", "    let mut letter_grades\
    \ = Vec::new();\n    for grade in grades {\n        if grade >= 4.0 {\n      \
    \      letter_grades.push(\"A+\".to_string());\n        } else if grade >= 3.7\
    \ {\n            letter_grades.push(\"A\".to_string());\n        } else if grade\
    \ >= 3.3 {\n            letter_grades.push(\"A-\".to_string());\n        } else\
    \ if grade >= 3.0 {\n            letter_grades.push(\"B+\".to_string());\n   \
    \     } else if grade >= 2.7 {\n            letter_grades.push(\"B\".to_string());\n\
    \        } else if grade >= 2.3 {\n            letter_grades.push(\"B-\".to_string());\n\
    \        } else if grade >= 2.0 {\n            letter_grades.push(\"C+\".to_string());\n\
    \        } else if grade >= 1.7 {\n            letter_grades.push(\"C\".to_string());\n\
    \        } else if grade >= 1.3 {\n            letter_grades.push(\"C-\".to_string());\n\
    \        } else if grade >= 1.0 {\n            letter_grades.push(\"D+\".to_string());\n\
    \        } else if grade >= 0.7 {\n            letter_grades.push(\"D\".to_string());\n\
    \        } else if grade >= 0.0 {\n            letter_grades.push(\"D-\".to_string());\n\
    \        } else {\n            letter_grades.push(\"E\".to_string());\n      \
    \  }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n  \
    \  for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    let mut letter_grades = Vec::new();\n\
    \    for grade in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"\
    A+\".to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades", "    grades.iter().map(|g| {\n        if\
    \ *g >= 4.0 {\n            \"A+\".to_string()\n        } else if *g >= 3.7 {\n\
    \            \"A\".to_string()\n        } else if *g >= 3.3 {\n            \"\
    A-\".to_string()\n        } else if *g >= 3.0 {\n            \"B+\".to_string()\n\
    \        } else if *g >= 2.7 {\n            \"B\".to_string()\n        } else\
    \ if *g >= 2.3 {\n            \"B-\".to_string()\n        } else if *g >= 2.0\
    \ {\n            \"C+\".to_string()\n        } else if *g >= 1.7 {\n         \
    \   \"C\".to_string()\n        } else if *g >= 1.3 {\n            \"C-\".to_string()\n\
    \        } else if *g >= 1.0 {\n            \"D+\".to_string()\n        } else\
    \ if *g >= 0.7 {\n            \"D\".to_string()\n        } else if *g >= 0.0 {\n\
    \            \"D-\".to_string()\n        } else {\n            \"E\".to_string()\n\
    \        }\n    }).collect()", "    grades.iter().map(|g| {\n        match *g\
    \ {\n            4.0 => \"A+\".to_string(),\n            g if g > 3.7 => \"A\"\
    .to_string(),\n            g if g > 3.3 => \"A-\".to_string(),\n            g\
    \ if g > 3.0 => \"B+\".to_string(),\n            g if g > 2.7 => \"B\".to_string(),\n\
    \            g if g > 2.3 => \"B-\".to_string(),\n            g if g > 2.0 =>\
    \ \"C+\".to_string(),\n            g if g > 1.7 => \"C\".to_string(),\n      \
    \      g if g > 1.3 => \"C-\".to_string(),\n            g if g > 1.0 => \"D+\"\
    .to_string(),\n            g if g > 0.7 => \"D\".to_string(),\n            g if\
    \ g > 0.0 => \"D-\".to_string(),\n            _ => \"E\".to_string(),\n      \
    \  }\n    }).collect()", "    let mut letter_grades = Vec::new();\n    for grade\
    \ in grades {\n        if grade >= 4.0 {\n            letter_grades.push(\"A+\"\
    .to_string());\n        } else if grade >= 3.7 {\n            letter_grades.push(\"\
    A\".to_string());\n        } else if grade >= 3.3 {\n            letter_grades.push(\"\
    A-\".to_string());\n        } else if grade >= 3.0 {\n            letter_grades.push(\"\
    B+\".to_string());\n        } else if grade >= 2.7 {\n            letter_grades.push(\"\
    B\".to_string());\n        } else if grade >= 2.3 {\n            letter_grades.push(\"\
    B-\".to_string());\n        } else if grade >= 2.0 {\n            letter_grades.push(\"\
    C+\".to_string());\n        } else if grade >= 1.7 {\n            letter_grades.push(\"\
    C\".to_string());\n        } else if grade >= 1.3 {\n            letter_grades.push(\"\
    C-\".to_string());\n        } else if grade >= 1.0 {\n            letter_grades.push(\"\
    D+\".to_string());\n        } else if grade >= 0.7 {\n            letter_grades.push(\"\
    D\".to_string());\n        } else if grade >= 0.0 {\n            letter_grades.push(\"\
    D-\".to_string());\n        } else {\n            letter_grades.push(\"E\".to_string());\n\
    \        }\n    }\n    letter_grades"]
stop_tokens:
- "\n}"

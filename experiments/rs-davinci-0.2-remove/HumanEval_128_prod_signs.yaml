name: HumanEval_128_prod_signs
language: rs
prompt: "/// You are given an array arr of integers and you need to return\n/// sum\
  \ of magnitudes of integers multiplied by product of all signs\n/// of each number\
  \ in the array, represented by 1, -1 or 0.\n/// Note: return None for empty arr.\n\
  /// Example:\nfn prod_signs(arr: Vec<isize>) -> Option<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = prod_signs;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  }\n"
completions: ["    if arr.is_empty() {\n        return None;\n    }\n    let mut prod\
    \ = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n       \
    \     prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n       \
    \ } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum\
    \ += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)", "  \
    \  if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else if i\
    \ > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)", "   \
    \ if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n  \
    \  let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut product = 1;\n\
    \    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            product\
    \ *= 1;\n        } else if i < 0 {\n            product *= -1;\n        } else\
    \ {\n            product *= 0;\n        }\n        sum += i.abs();\n    }\n  \
    \  Some(sum * product)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum\
    \ += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)", "  \
    \  if arr.is_empty() {\n        return None;\n    }\n    let mut sum = 0;\n  \
    \  let mut prod = 1;\n    for i in arr {\n        sum += i.abs();\n        prod\
    \ *= i.signum();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n   \
    \     return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for\
    \ i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n    }\n  \
    \  Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ > 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        prod *= i.signum();\n        sum += i.abs();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i == 0 {\n            continue;\n\
    \        }\n        prod *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum += i.abs();\n\
    \        prod *= i.signum();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    prod *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum += i.abs();\n\
    \        prod *= i.signum();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n    \
    \    sum += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i < 0 {\n            prod\
    \ *= -1;\n        } else if i > 0 {\n            sum += i;\n        }\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ == 0 {\n            continue;\n        }\n        prod *= i.signum();\n    \
    \    sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n\
    \        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n  \
    \  for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i < 0 {\n            prod\
    \ *= -1;\n        } else if i > 0 {\n            sum += i;\n        }\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum\
    \ += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)", "  \
    \  if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i == 0 {\n            continue;\n        }\n        prod *= i.signum();\n\
    \        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i < 0 {\n            prod *= -1;\n        } else if i > 0 {\n        \
    \    sum += i;\n        }\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum += i.abs();\n\
    \        prod *= i.signum();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for\
    \ i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n    }\n  \
    \  Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ > 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for\
    \ i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n    }\n  \
    \  Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ > 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        prod *= i.signum();\n        sum += i.abs();\n    }\n  \
    \  Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum\
    \ += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)", "  \
    \  if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    prod *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i == 0 {\n            continue;\n\
    \        }\n        prod *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        if i > 0 {\n            sum += i;\n        } else\
    \ if i < 0 {\n            sum -= i;\n            prod *= -1;\n        }\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ > 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n    \
    \    sum += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i == 0 {\n            continue;\n        }\n        prod\
    \ *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum * prod)", "   \
    \ if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n  \
    \  let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i < 0 {\n            prod *= -1;\n        } else if i > 0 {\n        \
    \    sum += i;\n        }\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i < 0 {\n            prod *= -1;\n        } else if i > 0 {\n        \
    \    sum += i;\n        }\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i == 0 {\n            continue;\n        }\n \
    \       prod *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for\
    \ i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n    }\n  \
    \  Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ > 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i < 0 {\n  \
    \          prod *= -1;\n        } else if i > 0 {\n            sum += i;\n   \
    \     }\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return\
    \ None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr\
    \ {\n        if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        if i != 0 {\n          \
    \  prod *= i.signum();\n        }\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i == 0 {\n            continue;\n        }\n \
    \       prod *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for n in arr {\n    \
    \    if n > 0 {\n            prod *= 1;\n        } else if n < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += n.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i == 0 {\n            continue;\n        }\n        if\
    \ i < 0 {\n            prod *= -1;\n        }\n        sum += i.abs();\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum\
    \ += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)", "  \
    \  if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i < 0 {\n            prod\
    \ *= -1;\n        } else if i > 0 {\n            sum += i;\n        }\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n        sum\
    \ += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)", "  \
    \  if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i < 0 {\n            prod\
    \ *= -1;\n        } else if i > 0 {\n            sum += i;\n        }\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ > 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n    \
    \    sum += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)",
  "    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i >\
    \ 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    if sum == 0 {\n        None\n    } else {\n        Some(sum * prod)\n\
    \    }", "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod\
    \ = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n       \
    \     prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n       \
    \ } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n    }\n\
    \    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n    }\n\
    \    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i\
    \ > 0 {\n            prod *= 1;\n        } else if i < 0 {\n            prod *=\
    \ -1;\n        } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i == 0 {\n            continue;\n        }\n        prod\
    \ *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum * prod)", "   \
    \ if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n  \
    \  let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod: isize =\
    \ 1;\n    let mut sum: isize = 0;\n    for i in arr {\n        if i == 0 {\n \
    \           continue;\n        }\n        prod *= i.signum();\n        sum +=\
    \ i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return\
    \ None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr\
    \ {\n        if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut product =\
    \ 1;\n    for i in arr {\n        sum += i.abs();\n        product *= i.signum();\n\
    \    }\n    Some(sum * product)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else if i\
    \ > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)", "   \
    \ if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n  \
    \  let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i == 0 {\n \
    \           continue;\n        }\n        prod *= i.signum();\n        sum +=\
    \ i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return\
    \ None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr\
    \ {\n        if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n \
    \           prod *= -1;\n        } else {\n            prod *= 0;\n        }\n\
    \        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut sum = 0;\n    let mut prod = 1;\n\
    \    for i in arr {\n        sum += i.abs();\n        prod *= i.signum();\n  \
    \  }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut sum = 0;\n    let mut prod = 1;\n    for i in arr {\n    \
    \    sum += i.abs();\n        prod *= i.signum();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut sum = 0;\n  \
    \  let mut prod = 1;\n    for i in arr {\n        sum += i.abs();\n        prod\
    \ *= i.signum();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n   \
    \     return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i < 0 {\n            prod *= -1;\n        } else\
    \ if i > 0 {\n            sum += i;\n        }\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for i in arr {\n    \
    \    if i > 0 {\n            prod *= 1;\n        } else if i < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i == 0 {\n            continue;\n        }\n \
    \       prod *= i.signum();\n        sum += i.abs();\n    }\n    Some(sum * prod)",
  "    if arr.is_empty() {\n        return None;\n    }\n    let mut prod = 1;\n \
    \   let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n            prod\
    \ *= 1;\n        } else if i < 0 {\n            prod *= -1;\n        } else {\n\
    \            prod *= 0;\n        }\n        sum += i.abs();\n    }\n    Some(sum\
    \ * prod)", "    if arr.is_empty() {\n        return None;\n    }\n    let mut\
    \ prod = 1;\n    let mut sum = 0;\n    for i in arr {\n        if i > 0 {\n  \
    \          prod *= 1;\n        } else if i < 0 {\n            prod *= -1;\n  \
    \      } else {\n            prod *= 0;\n        }\n        sum += i.abs();\n\
    \    }\n    Some(sum * prod)", "    if arr.is_empty() {\n        return None;\n\
    \    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for n in arr {\n    \
    \    if n > 0 {\n            prod *= 1;\n        } else if n < 0 {\n         \
    \   prod *= -1;\n        } else {\n            prod *= 0;\n        }\n       \
    \ sum += n.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty() {\n  \
    \      return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n    for\
    \ i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else if i\
    \ < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n \
    \       }\n        sum += i.abs();\n    }\n    Some(sum * prod)", "    if arr.is_empty()\
    \ {\n        return None;\n    }\n    let mut prod = 1;\n    let mut sum = 0;\n\
    \    for i in arr {\n        if i > 0 {\n            prod *= 1;\n        } else\
    \ if i < 0 {\n            prod *= -1;\n        } else {\n            prod *= 0;\n\
    \        }\n        sum += i.abs();\n    }\n    Some(sum * prod)"]
stop_tokens:
- "\n}"

language: rs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut a = a;\n    let mut b = b;\n    while\
    \ b != 0 {\n        let t = b;\n        b = a % b;\n        a = t;\n    }\n  \
    \  a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659747682

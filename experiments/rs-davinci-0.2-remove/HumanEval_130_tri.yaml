name: HumanEval_130_tri
language: rs
prompt: "/// Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n/// the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n/// Tribonacci sequence is defined by the recurrence:\n/// tri(1) =\
  \ 3\n/// tri(n) = 1 + n / 2, if n is even.\n/// tri(n) =  tri(n - 1) + tri(n - 2)\
  \ + tri(n + 1), if n is odd.\n/// For example:\n/// tri(2) = 1 + (2 / 2) = 2\n///\
  \ tri(4) = 3\n/// tri(3) = tri(2) + tri(1) + tri(4)\n/// = 2 + 3 + 3 = 8 \n/// You\
  \ are given a non-negative integer number n, you have to a return a list of the\
  \ \n/// first n + 1 numbers of the Tribonacci sequence.\n/// Examples:\nfn tri(n:\
  \ isize) -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = tri;\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n}\n"
completions: ["    let mut v = vec![3, 2, 1];\n    if n < 3 {\n        v.truncate(n\
    \ as usize);\n        return v;\n    }\n    for i in 3..n + 1 {\n        if i\
    \ % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[(i\
    \ - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]);\n        }\n  \
    \  }\n    v", "    let mut v: Vec<isize> = vec![3];\n    for i in 1..n + 1 {\n\
    \        if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n \
    \           v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n\
    \        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1\
    \ {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n\
    \            v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n     \
    \   });\n    }\n    v", "    let mut res = vec![3, 2, 1];\n    for i in 3..n +\
    \ 1 {\n        res.push(if i % 2 == 0 {\n            1 + i / 2\n        } else\
    \ {\n            res[i as usize - 1] + res[i as usize - 2] + res[i as usize +\
    \ 1]\n        });\n    }\n    res", "    let mut v = vec![3, 2, 1];\n    if n\
    \ == 0 {\n        return vec![];\n    }\n    if n == 1 {\n        return vec![3];\n\
    \    }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if n == 3 {\n\
    \        return vec![3, 2, 1];\n    }\n    for i in 4..n + 1 {\n        if i %\
    \ 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return vec![3];\n\
    \    }\n    if n == 1 {\n        return vec![3, 2];\n    }\n    if n == 2 {\n\
    \        return vec![3, 2, 1];\n    }\n    for i in 3..n + 1 {\n        if i %\
    \ 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 1, 2];\n    if n <= 2 {\n        return v;\n    }\n  \
    \  for i in 3..n + 1 {\n        let x = v[i as usize - 1] + v[i as usize - 2]\
    \ + v[i as usize - 3];\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    if n < 3 {\n        return v[0..n as usize + 1].to_vec();\n    }\n\
    \    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1 + i /\
    \ 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize -\
    \ 2] + v[i as usize + 1]);\n        }\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    if n <= 2 {\n        v.truncate(n as usize + 1);\n        return\
    \ v;\n    }\n    for _ in 3..=n {\n        let last = v.last().unwrap();\n   \
    \     let second_last = v.get(v.len() - 2).unwrap();\n        let third_last =\
    \ v.get(v.len() - 3).unwrap();\n        v.push(last + second_last + third_last);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return\
    \ vec![3];\n    }\n    if n == 1 {\n        return vec![3, 2];\n    }\n    if\
    \ n == 2 {\n        return vec![3, 2, 1];\n    }\n    for i in 3..n + 1 {\n  \
    \      if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n   \
    \         v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n\
    \        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <= 2 {\n\
    \        return v;\n    }\n    for i in 3..n + 1 {\n        let mut sum = 0;\n\
    \        if i % 2 == 0 {\n            sum = 1 + i / 2;\n        } else {\n   \
    \         sum = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize];\n\
    \        }\n        v.push(sum);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n        return\
    \ vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if\
    \ n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i in 4..n + 1 {\n  \
    \      if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n   \
    \         v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n\
    \        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n\
    \        return vec![];\n    }\n    if n == 1 {\n        return vec![3];\n   \
    \ }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if n == 3 {\n   \
    \     return vec![3, 2, 1];\n    }\n    for i in 4..n + 1 {\n        if i % 2\
    \ == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n        v.push(v[i-1]\
    \ + v[i-2] + v[i-3]);\n    }\n    v", "    if n == 0 {\n        return vec![];\n\
    \    }\n    if n == 1 {\n        return vec![3];\n    }\n    let mut v = vec![3,\
    \ 2, 8];\n    for i in 3..n {\n        let x = if i % 2 == 0 {\n            1\
    \ + i / 2\n        } else {\n            v[i as usize - 1] + v[i as usize - 2]\
    \ + v[i as usize + 1]\n        };\n        v.push(x);\n    }\n    v", "    let\
    \ mut v = vec![3, 1, 2];\n    for i in 3..n + 1 {\n        v.push(if i % 2 ==\
    \ 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1) as usize]\
    \ + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let x = if i\
    \ % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n     \
    \   v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n        \
    \    v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n      \
    \      v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n     \
    \   });\n    }\n    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n + 1\
    \ {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n\
    \            v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n\
    \        });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <= 2 {\n\
    \        return v;\n    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n\
    \            v.push(1 + i / 2);\n        } else {\n            v.push(v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]);\n        }\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize - 2] + v[i as usize\
    \ + 1] });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n\
    \        return vec![];\n    }\n    if n == 1 {\n        return vec![3];\n   \
    \ }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if n == 3 {\n   \
    \     return vec![3, 2, 1];\n    }\n    for i in 4..n + 1 {\n        if i % 2\
    \ == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 2] + v[i as usize - 3] + v[i as usize - 4]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3];\n    for i in 1..n+1 {\n        if i % 2 ==\
    \ 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return vec![3];\n   \
    \ }\n    if n == 1 {\n        return vec![3, 2];\n    }\n    if n == 2 {\n   \
    \     return vec![3, 2, 1];\n    }\n    for i in 3..n + 1 {\n        if i % 2\
    \ == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 1, 2];\n    if n <= 2 {\n        return v;\n\
    \    }\n    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1\
    \ + i / 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize]\
    \ + v[(i + 1) as usize]\n        });\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 { 1 + i / 2 }\
    \ else { v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1] });\n    }\n\
    \    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n + 1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1)\
    \ as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n\
    \    v", "    let mut v = vec![3, 1, 2];\n    if n <= 2 {\n        return v;\n\
    \    }\n    for i in 3..n + 1 {\n        let mut t = v[i - 1] + v[i - 2] + v[i\
    \ - 3];\n        if i % 2 == 0 {\n            t = 1 + i / 2;\n        }\n    \
    \    v.push(t);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in\
    \ 3..n+1 {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else\
    \ {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n \
    \       });\n    }\n    v", "    let mut v = vec![3, 1, 2];\n    if n == 0 {\n\
    \        return vec![];\n    }\n    if n == 1 {\n        return vec![3];\n   \
    \ }\n    if n == 2 {\n        return vec![3, 1];\n    }\n    if n == 3 {\n   \
    \     return vec![3, 1, 2];\n    }\n    for i in 3..n {\n        if i % 2 == 0\
    \ {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n+1 {\n        let x\
    \ = if i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[(i\
    \ - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n        };\n   \
    \     v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in\
    \ 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n        }\
    \ else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as\
    \ usize]\n        });\n    }\n    v", "    if n == 0 {\n        return vec![];\n\
    \    }\n    let mut v = vec![3, 2, 1];\n    for i in 3..=n {\n        if i % 2\
    \ == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if\
    \ i % 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize - 2] + v[i\
    \ as usize + 1] });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i\
    \ in 3..n + 1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n    \
    \    } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i +\
    \ 1) as usize]\n        };\n        v.push(x);\n    }\n    v", "    let mut v\
    \ = vec![3, 2, 1];\n    if n < 3 {\n        v.truncate(n as usize);\n        return\
    \ v;\n    }\n    for i in 3..=n {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[(i - 1) as usize] + v[(i -\
    \ 2) as usize] + v[(i + 1) as usize]);\n        }\n    }\n    v", "    let mut\
    \ v = vec![];\n    for i in 0..n + 1 {\n        if i == 0 {\n            v.push(0);\n\
    \        } else if i == 1 {\n            v.push(1);\n        } else if i == 2\
    \ {\n            v.push(1);\n        } else {\n            v.push(v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    if n <= 3 {\n        return v;\n    }\n  \
    \  for i in 3..n {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n \
    \       } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as usize\
    \ + 1]\n        };\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 1, 2];\n    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n          \
    \  1 + i / 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as\
    \ usize] + v[(i + 1) as usize]\n        });\n    }\n    v", "    let mut result\
    \ = vec![3];\n    if n == 0 {\n        return result;\n    }\n    result.push(2);\n\
    \    if n == 1 {\n        return result;\n    }\n    result.push(8);\n    if n\
    \ == 2 {\n        return result;\n    }\n    for i in 3..n + 1 {\n        let\
    \ t = result[i as usize - 1] + result[i as usize - 2] + result[i as usize - 3];\n\
    \        result.push(t);\n    }\n    result", "    let mut v = vec![3, 2, 1];\n\
    \    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i /\
    \ 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] +\
    \ v[(i + 1) as usize]\n        });\n    }\n    v", "    if n == 0 {\n        return\
    \ vec![];\n    }\n    let mut v = vec![3, 2, 1];\n    if n <= 3 {\n        v.truncate(n\
    \ as usize);\n        return v;\n    }\n    for i in 3..n {\n        let x = v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n      \
    \      v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n     \
    \   });\n    }\n    v", "    let mut res = vec![3, 2, 1];\n    if n <= 2 {\n \
    \       return res;\n    }\n    for i in 3..n + 1 {\n        let mut sum = 0;\n\
    \        if i % 2 == 0 {\n            sum = 1 + i / 2;\n        } else {\n   \
    \         sum = res[i as usize - 1] + res[i as usize - 2] + res[i as usize + 1];\n\
    \        }\n        res.push(sum);\n    }\n    res", "    let mut v = vec![3,\
    \ 1, 2];\n    for i in 3..n+1 {\n        let mut x = v[i-1] + v[i-2] + v[i-3];\n\
    \        if i % 2 == 0 {\n            x = 1 + i / 2;\n        }\n        v.push(x);\n\
    \    }\n    v", "    let mut tri = vec![3, 2, 1];\n    for i in 3..n + 1 {\n \
    \       tri.push(if i % 2 == 0 {\n            i / 2\n        } else {\n      \
    \      tri[i as usize - 1] + tri[i as usize - 2] + tri[i as usize - 3]\n     \
    \   });\n    }\n    tri", "    if n == 0 {\n        return vec![];\n    }\n  \
    \  if n == 1 {\n        return vec![3];\n    }\n    let mut v = vec![3, 2, 1];\n\
    \    for i in 3..n {\n        let x = v[i - 1] + v[i - 2] + v[i - 3];\n      \
    \  v.push(x);\n    }\n    v", "    if n == 0 {\n        return vec![];\n    }\n\
    \    let mut v = vec![3, 2, 1];\n    if n == 1 {\n        return vec![3];\n  \
    \  }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    for _ in 3..n +\
    \ 1 {\n        v.push(v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3]);\n   \
    \ }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <= 2 {\n        return\
    \ v;\n    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1]);\n        }\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for i in 3..n+1 {\n        v.push(if i % 2 == 0 { 1 + i / 2 } else\
    \ { v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1] });\n    }\n   \
    \ v", "    let mut v = vec![3, 1, 2];\n    if n <= 3 {\n        return v[0..(n\
    \ as usize)].to_vec();\n    }\n    for i in 3..n {\n        let x = v[(i - 1)\
    \ as usize] + v[(i - 2) as usize] + v[(i - 3) as usize];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n + 1 {\n   \
    \     let x = if i % 2 == 0 {\n            1 + i / 2\n        } else {\n     \
    \       v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n    \
    \    };\n        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1] });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n        let x = v[i as\
    \ usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n  \
    \  }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n     \
    \   v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n        \
    \    v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     let x = if i % 2 == 0 {\n            1 + i / 2\n        } else {\n     \
    \       v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n    \
    \    };\n        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n        return\
    \ vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if\
    \ n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i in 4..n + 1 {\n  \
    \      if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n   \
    \         v.push(v[i as usize - 2] + v[i as usize - 3] + v[i as usize - 4]);\n\
    \        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n < 3 {\n \
    \       v.truncate(n as usize);\n        return v;\n    }\n    for i in 3..=n\
    \ {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n\
    \            v.push(v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]);\n\
    \        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n < 3 {\n \
    \       v.truncate(n as usize);\n        return v;\n    }\n    for i in 3..n +\
    \ 1 {\n        let mut x = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i -\
    \ 3) as usize];\n        if i % 2 == 0 {\n            x += i / 2;\n        }\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n\
    \ < 3 {\n        return v[0..n as usize + 1].to_vec();\n    }\n    for i in 3..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else\
    \ {\n            v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize +\
    \ 1]);\n        }\n    }\n    v", "    let mut v = vec![3];\n    for i in 1..n+1\
    \ {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n\
    \            v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n\
    \        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1\
    \ {\n        let x = v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n\
    \ <= 2 {\n        return v;\n    }\n    for i in 3..n + 1 {\n        let t = if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize - 3]\n        };\n        v.push(t);\n\
    \    }\n    v", "    let mut v: Vec<isize> = vec![];\n    for i in 0..n + 1 {\n\
    \        if i == 0 {\n            v.push(0);\n        } else if i == 1 {\n   \
    \         v.push(1);\n        } else if i == 2 {\n            v.push(1);\n   \
    \     } else {\n            v.push(v[i as usize - 1] + v[i as usize - 2] + v[i\
    \ as usize - 3]);\n        }\n    }\n    v", "    let mut v = vec![3, 1, 2];\n\
    \    if n <= 2 {\n        return v;\n    }\n    for i in 3..n + 1 {\n        let\
    \ x = if i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <= 2 {\n        return\
    \ v;\n    }\n    for i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n      \
    \      1 + i / 2\n        } else {\n            v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize - 3]\n        };\n        v.push(x);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1) as\
    \ usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n   \
    \ v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return vec![];\n\
    \    }\n    if n == 1 {\n        return vec![3];\n    }\n    if n == 2 {\n   \
    \     return vec![3, 2];\n    }\n    if n == 3 {\n        return vec![3, 2, 1];\n\
    \    }\n    for i in 4..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[i as usize - 2] + v[i as usize\
    \ - 3] + v[i as usize - 4]);\n        }\n    }\n    v", "    let mut v: Vec<isize>\
    \ = vec![3, 2, 1];\n    let mut i = 3;\n    while i <= n {\n        let x = if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        };\n        v.push(x);\n\
    \        i += 1;\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <=\
    \ 3 {\n        return v[0..(n as usize)].to_vec();\n    }\n    for i in 3..n {\n\
    \        let x = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i - 3) as usize];\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n\
    \ == 0 {\n        return vec![];\n    }\n    if n == 1 {\n        return vec![3];\n\
    \    }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if n == 3 {\n\
    \        return vec![3, 2, 1];\n    }\n    for i in 4..n+1 {\n        let mut\
    \ x = v[i as usize - 4] + v[i as usize - 3] + v[i as usize - 2];\n        if i\
    \ % 2 == 0 {\n            x = 1 + i / 2;\n        }\n        v.push(x);\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        v.push(v[v.len()\
    \ - 1] + v[v.len() - 2] + v[v.len() - 3]);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for i in 3..n+1 {\n        let x = if i % 2 == 0 {\n           \
    \ 1 + i / 2\n        } else {\n            v[i as usize - 1] + v[i as usize -\
    \ 2] + v[i as usize + 1]\n        };\n        v.push(x);\n    }\n    v", "   \
    \ let mut v = vec![3, 2, 1];\n    if n <= 2 {\n        return v;\n    }\n    for\
    \ i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n  \
    \      } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as usize\
    \ - 3]\n        };\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for i in 3..n+1 {\n        v.push(if i % 2 == 0 { 1 + i / 2 } else\
    \ { v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1] });\n    }\n   \
    \ v", "    let mut v = vec![3, 1, 2];\n    if n <= 3 {\n        v.truncate(n as\
    \ usize);\n        return v;\n    }\n    for i in 3..n {\n        let x = v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return\
    \ vec![];\n    }\n    if n == 1 {\n        return vec![3];\n    }\n    if n ==\
    \ 2 {\n        return vec![3, 2];\n    }\n    for i in 3..n + 1 {\n        if\
    \ i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n           \
    \ v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n       \
    \ }\n    }\n    v", "    let mut v = vec![3];\n    for i in 1..n+1 {\n       \
    \ if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n        \
    \    v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n    \
    \    }\n    }\n    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n + 1\
    \ {\n        let x = v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n\
    \        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n\
    \ < 3 {\n        v.truncate(n as usize);\n        return v;\n    }\n    for i\
    \ in 3..n+1 {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n     \
    \   } else {\n            v.push(v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i\
    \ + 1) as usize]);\n        }\n    }\n    v", "    let mut v = vec![3, 1, 2];\n\
    \    if n <= 2 {\n        return v;\n    }\n    for i in 3..n + 1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n        v.push(if i % 2\
    \ == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize -\
    \ 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", "  \
    \  let mut v = vec![3, 1, 2];\n    if n <= 2 {\n        return v;\n    }\n   \
    \ for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n\
    \        } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as\
    \ usize + 1]\n        });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n  \
    \  for i in 3..n+1 {\n        v.push(v[i-1] + v[i-2] + v[i-3]);\n    }\n    v",
  "    let mut v = vec![];\n    for i in 0..n + 1 {\n        if i == 0 {\n       \
    \     v.push(1);\n        } else if i == 1 {\n            v.push(1);\n       \
    \ } else if i == 2 {\n            v.push(1);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let\
    \ x = v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n      \
    \      v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n\
    \    }\n    v", "    let mut result = vec![3, 2, 1];\n    if n < 3 {\n       \
    \ return result[0..(n as usize + 1)].to_vec();\n    }\n    for i in 3..(n + 1)\
    \ {\n        let next = if i % 2 == 0 {\n            1 + i / 2\n        } else\
    \ {\n            result[(i - 1) as usize] + result[(i - 2) as usize] + result[(i\
    \ + 1) as usize]\n        };\n        result.push(next);\n    }\n    result",
  "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize - 2] + v[i as usize\
    \ + 1] });\n    }\n    v", "    if n == 0 {\n        return vec![0];\n    }\n\
    \    if n == 1 {\n        return vec![0, 3];\n    }\n    let mut v = vec![0, 3,\
    \ 3];\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1]);\n        }\n    }\n    v", "    // TODO\n    vec![]",
  "    let mut v = vec![3, 2, 1];\n    if n <= 2 {\n        return v;\n    }\n   \
    \ for i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n\
    \        } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as\
    \ usize - 3]\n        };\n        v.push(x);\n    }\n    v", "    let mut v =\
    \ vec![3, 2, 1];\n    if n < 3 {\n        return v[0..(n as usize + 1)].to_vec();\n\
    \    }\n    for i in 3..(n + 1) {\n        let x = if i % 2 == 0 {\n         \
    \   1 + i / 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as\
    \ usize] + v[(i + 1) as usize]\n        };\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![3, 1, 2];\n    if n <= 2 {\n        return v;\n    }\n   \
    \ for i in 3..n+1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n\
    \        } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as\
    \ usize + 1]\n        };\n        v.push(x);\n    }\n    v", "    let mut v =\
    \ vec![3, 2, 1];\n    if n <= 2 {\n        return v;\n    }\n    for i in 3..n\
    \ + 1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n        } else\
    \ {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3]\n \
    \       };\n        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    if n < 3 {\n        return v[0..(n as usize + 1)].to_vec();\n    }\n    for\
    \ i in 3..(n + 1) {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n\
    \        } else {\n            v.push(v[(i - 1) as usize] + v[(i - 2) as usize]\
    \ + v[(i + 1) as usize]);\n        }\n    }\n    v", "    if n == 0 {\n      \
    \  return vec![];\n    }\n    let mut v = vec![3, 2, 1];\n    for _ in 3..n +\
    \ 1 {\n        let x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n   \
    \     v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <=\
    \ 2 {\n        return v;\n    }\n    for i in 3..n + 1 {\n        let x = v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n      \
    \      v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n < 3 {\n        return\
    \ v[0..(n as usize + 1)].to_vec();\n    }\n    for i in 3..(n as usize + 1) {\n\
    \        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n   \
    \         v[i - 1] + v[i - 2] + v[i - 3]\n        });\n    }\n    v", "    let\
    \ mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let x = if i % 2 ==\
    \ 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1) as usize]\
    \ + v[(i - 2) as usize] + v[(i + 1) as usize]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1] });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n        return\
    \ vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if\
    \ n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i in 4..n + 1 {\n  \
    \      if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n   \
    \         v.push(v[i as usize - 2] + v[i as usize - 3] + v[i as usize - 4]);\n\
    \        }\n    }\n    v", "    if n == 0 {\n        return vec![];\n    }\n \
    \   let mut v = vec![3, 2, 1];\n    if n <= 3 {\n        return v[0..n as usize].to_vec();\n\
    \    }\n    for i in 3..n {\n        let x = if i % 2 == 0 {\n            1 +\
    \ i / 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize]\
    \ + v[(i + 1) as usize]\n        };\n        v.push(x);\n    }\n    v", "    let\
    \ mut v = vec![3, 1, 2];\n    if n < 3 {\n        return v[0..(n + 1)].to_vec();\n\
    \    }\n    for i in 3..(n + 1) {\n        let x = v[i - 1] + v[i - 2] + v[i -\
    \ 3];\n        v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n  \
    \  for i in 3..n + 1 {\n        v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1] });\n    }\n    v", " \
    \   let mut v = vec![3, 1, 2];\n    if n < 3 {\n        return v[0..n as usize].to_vec();\n\
    \    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[(i - 1) as usize] + v[(i -\
    \ 2) as usize] + v[(i + 1) as usize]);\n        }\n    }\n    v", "    let mut\
    \ v = vec![3, 2, 1];\n    if n <= 3 {\n        v.truncate(n as usize);\n     \
    \   return v;\n    }\n    for i in 3..n {\n        let x = v[i as usize - 1] +\
    \ v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let x = if i\
    \ % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 1, 2];\n    if n < 3 {\n        return\
    \ v[0..n as usize + 1].to_vec();\n    }\n    for i in 3..n + 1 {\n        if i\
    \ % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[(i\
    \ - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]);\n        }\n  \
    \  }\n    v", "    let mut v = vec![3, 2, 1];\n    if n < 3 {\n        return\
    \ v[0..(n + 1)].to_vec();\n    }\n    for i in 3..(n + 1) {\n        let x = if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize - 3]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3];\n    for i in 1..n {\n        if i %\
    \ 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 1, 2];\n    if n < 3 {\n        return v[0..n\
    \ as usize + 1].to_vec();\n    }\n    for i in 3..n + 1 {\n        if i % 2 ==\
    \ 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[(i\
    \ - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]);\n        }\n  \
    \  }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n     \
    \   v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1] });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i /\
    \ 2\n        } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i\
    \ as usize + 1]\n        });\n    }\n    v", "    let mut v = vec![3, 1, 2];\n\
    \    if n <= 3 {\n        return v[0..(n as usize)].to_vec();\n    }\n    for\
    \ i in 3..n {\n        let x = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i\
    \ - 3) as usize];\n        v.push(x);\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    if n == 0 {\n        return vec![3];\n    }\n    if n == 1 {\n \
    \       return vec![3, 2];\n    }\n    if n == 2 {\n        return vec![3, 2,\
    \ 1];\n    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize - 3]);\n        }\n    }\n    v", "    let mut v = vec![3,\
    \ 1, 2];\n    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n          \
    \  1 + i / 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as\
    \ usize] + v[(i + 1) as usize]\n        });\n    }\n    v", "    if n == 0 {\n\
    \        return vec![0];\n    }\n    if n == 1 {\n        return vec![0, 1];\n\
    \    }\n    if n == 2 {\n        return vec![0, 1, 1];\n    }\n    let mut result\
    \ = vec![0, 1, 1];\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n       \
    \     result.push(1 + i / 2);\n        } else {\n            result.push(result[i\
    \ as usize - 1] + result[i as usize - 2] + result[i as usize + 1]);\n        }\n\
    \    }\n    result", "    if n == 0 {\n        return vec![];\n    }\n    if n\
    \ == 1 {\n        return vec![3];\n    }\n    let mut v = vec![3, 1, 2];\n   \
    \ for i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n\
    \        } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as\
    \ usize - 3]\n        };\n        v.push(x);\n    }\n    v", "    let mut v =\
    \ vec![3, 2, 1];\n    if n == 0 {\n        return vec![];\n    }\n    if n ==\
    \ 1 {\n        return vec![3];\n    }\n    if n == 2 {\n        return vec![3,\
    \ 2];\n    }\n    if n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i\
    \ in 4..n + 1 {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n   \
    \     } else {\n            v.push(v[i as usize - 2] + v[i as usize - 3] + v[i\
    \ as usize - 4]);\n        }\n    }\n    v", "    let mut res = vec![3, 2, 1];\n\
    \    for i in 3..n + 1 {\n        res.push(if i % 2 == 0 {\n            1 + i\
    \ / 2\n        } else {\n            res[i as usize - 1] + res[i as usize - 2]\
    \ + res[i as usize + 1]\n        });\n    }\n    res", "    let mut v = vec![3,\
    \ 2, 1];\n    if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n  \
    \      return vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n \
    \   }\n    if n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i in 4..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else\
    \ {\n            v.push(v[i as usize - 2] + v[i as usize - 3] + v[i as usize -\
    \ 4]);\n        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <\
    \ 3 {\n        v.truncate(n as usize);\n        return v;\n    }\n    for i in\
    \ 3..n+1 {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n        }\
    \ else {\n            v.push(v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i\
    \ + 1) as usize]);\n        }\n    }\n    v", "    let mut v = vec![3, 1, 2];\n\
    \    if n <= 2 {\n        return v;\n    }\n    for i in 3..n + 1 {\n        let\
    \ t = v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(t);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n     \
    \   let mut x = v[i-1] + v[i-2] + v[i-3];\n        if i % 2 == 0 {\n         \
    \   x += i / 2;\n        }\n        v.push(x);\n    }\n    v", "    let mut v\
    \ = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n\
    \            1 + i / 2\n        } else {\n            v[i as usize - 1] + v[i\
    \ as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", "    let mut\
    \ res = vec![3, 2, 1];\n    if n <= 2 {\n        return res;\n    }\n    for i\
    \ in 3..n + 1 {\n        let mut cur = 0;\n        if i % 2 == 0 {\n         \
    \   cur = 1 + i / 2;\n        } else {\n            cur = res[i as usize - 1]\
    \ + res[i as usize - 2] + res[i as usize - 3];\n        }\n        res.push(cur);\n\
    \    }\n    res", "    let mut v: Vec<isize> = vec![0; (n + 1) as usize];\n  \
    \  v[0] = 3;\n    v[1] = 3;\n    v[2] = 8;\n    for i in 3..n+1 {\n        if\
    \ i % 2 == 0 {\n            v[i as usize] = 1 + i / 2;\n        } else {\n   \
    \         v[i as usize] = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1)\
    \ as usize];\n        }\n    }\n    v", "    if n == 0 {\n        return vec![0];\n\
    \    }\n    if n == 1 {\n        return vec![0, 1];\n    }\n    if n == 2 {\n\
    \        return vec![0, 1, 1];\n    }\n    let mut v = vec![0, 1, 1];\n    for\
    \ i in 3..n + 1 {\n        let mut t = v[i - 1] + v[i - 2] + v[i - 3];\n     \
    \   if i % 2 == 0 {\n            t += i / 2;\n        }\n        v.push(t);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n      \
    \      v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n\
    \    }\n    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n+1 {\n     \
    \   v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1] });\n    }\n    v", "    if n == 0 {\n        return\
    \ vec![];\n    }\n    let mut v = vec![3];\n    for i in 1..n {\n        if i\
    \ % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n+1 {\n        let x\
    \ = if i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 { i / 2 } else { v[i as usize - 1] + v[i as usize -\
    \ 2] + v[i as usize - 3] });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for i in 3..=n {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n\
    \        } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i\
    \ + 1) as usize]\n        });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    if n <= 3 {\n        return v[0..(n as usize)].to_vec();\n    }\n    for\
    \ i in 3..n {\n        let t = v[i as usize - 1] + v[i as usize - 2] + v[i as\
    \ usize - 3];\n        v.push(t);\n    }\n    v", "    let mut v = vec![3, 2,\
    \ 1];\n    if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n     \
    \   return vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n    }\n\
    \    if n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i in 4..n + 1\
    \ {\n        let mut sum = 0;\n        if i % 2 == 0 {\n            sum = 1 +\
    \ i / 2;\n        } else {\n            sum = v[(i - 1) as usize] + v[(i - 2)\
    \ as usize] + v[(i - 3) as usize];\n        }\n        v.push(sum);\n    }\n \
    \   v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let\
    \ x = v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n   \
    \     v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1] });\n    }\n    v", "    let mut v = vec![3, 1, 2];\n\
    \    for i in 3..n+1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n\
    \        } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as\
    \ usize + 1]\n        };\n        v.push(x);\n    }\n    v", "    let mut v =\
    \ vec![3, 2, 1];\n    if n == 0 {\n        return vec![3];\n    }\n    if n ==\
    \ 1 {\n        return vec![3, 2];\n    }\n    if n == 2 {\n        return vec![3,\
    \ 2, 1];\n    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n          \
    \  v.push(1 + i / 2);\n        } else {\n            v.push(v[i as usize - 1]\
    \ + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n    v", "    let\
    \ mut v = vec![3, 1, 2];\n    for i in 3..n + 1 {\n        v.push(if i % 2 ==\
    \ 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1) as usize]\
    \ + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return vec![3];\n   \
    \ }\n    if n == 1 {\n        return vec![3, 2];\n    }\n    if n == 2 {\n   \
    \     return vec![3, 2, 1];\n    }\n    for i in 3..n + 1 {\n        if i % 2\
    \ == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for _ in 3..n + 1 {\n        let\
    \ x = v[v.len() - 1] + v[v.len() - 2] + v[v.len() - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return\
    \ vec![];\n    }\n    if n == 1 {\n        return vec![3];\n    }\n    if n ==\
    \ 2 {\n        return vec![3, 2];\n    }\n    for i in 3..n + 1 {\n        if\
    \ i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n           \
    \ v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n       \
    \ }\n    }\n    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n + 1 {\n\
    \        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n   \
    \         v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n  \
    \      });\n    }\n    v", "    let mut v = vec![3, 1, 2];\n    if n < 3 {\n \
    \       v.truncate(n as usize);\n        return v;\n    }\n    for i in 3..n {\n\
    \        let x = v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i - 3) as usize];\n\
    \        v.push(x);\n    }\n    v", "    if n == 0 {\n        return vec![];\n\
    \    }\n    let mut v = vec![3];\n    for i in 1..n {\n        if i % 2 == 0 {\n\
    \            v.push(1 + i / 2);\n        } else {\n            v.push(v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]);\n        }\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let x = v[i as\
    \ usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n  \
    \  }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <= 2 {\n        return\
    \ v;\n    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize + 1]);\n        }\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    if n < 3 {\n        return v[0..n as usize + 1].to_vec();\n    }\n\
    \    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1 + i /\
    \ 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize -\
    \ 2] + v[i as usize + 1]);\n        }\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n  \
    \      return vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n \
    \   }\n    if n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i in 4..n\
    \ + 1 {\n        let mut sum = 0;\n        if i % 2 == 0 {\n            sum =\
    \ 1 + i / 2;\n        } else {\n            sum = v[i as usize - 2] + v[i as usize\
    \ - 3] + v[i as usize - 4];\n        }\n        v.push(sum);\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for _ in 0..n {\n        let last = v.len()\
    \ - 1;\n        let next = v[last] + v[last - 1] + v[last - 2];\n        v.push(next);\n\
    \    }\n    v", "    let mut result = vec![3, 2, 1];\n    for i in 3..n + 1 {\n\
    \        let mut num = 0;\n        if i % 2 == 0 {\n            num = 1 + i /\
    \ 2;\n        } else {\n            num = result[i as usize - 1] + result[i as\
    \ usize - 2] + result[i as usize + 1];\n        }\n        result.push(num);\n\
    \    }\n    result", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n\
    \        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else {\n   \
    \         v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n\
    \    }\n    v", "    let mut v: Vec<isize> = vec![3, 2, 1];\n    if n < 3 {\n\
    \        return v.iter().take(n as usize).cloned().collect();\n    }\n    for\
    \ i in 3..n+1 {\n        let x = if i % 2 == 0 {\n            1 + i / 2\n    \
    \    } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] + v[(i +\
    \ 1) as usize]\n        };\n        v.push(x);\n    }\n    v", "    let mut v\
    \ = vec![3, 2, 1];\n    if n == 0 {\n        return vec![];\n    }\n    if n ==\
    \ 1 {\n        return vec![3];\n    }\n    if n == 2 {\n        return vec![3,\
    \ 2];\n    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize - 3]);\n        }\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 { 1 + i / 2 }\
    \ else { v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1] });\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   if n == 0 {\n        return vec![];\n    }\n    let mut v = vec![3];\n   \
    \ for i in 1..n {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n \
    \       } else {\n            v.push(v[i as usize - 1] + v[i as usize - 2] + v[i\
    \ as usize + 1]);\n        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n\
    \    for i in 3..n + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i /\
    \ 2\n        } else {\n            v[i as usize - 1] + v[i as usize - 2] + v[i\
    \ as usize + 1]\n        });\n    }\n    v", "    let mut v = vec![3, 1, 2];\n\
    \    for i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n            1 + i /\
    \ 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as usize] +\
    \ v[(i + 1) as usize]\n        };\n        v.push(x);\n    }\n    v", "    let\
    \ mut v = vec![3, 1, 2];\n    for i in 3..n + 1 {\n        v.push(if i % 2 ==\
    \ 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i as usize - 2] + v[i as usize\
    \ + 1] });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n\
    \ + 1 {\n        v.push(if i % 2 == 0 {\n            1 + i / 2\n        } else\
    \ {\n            v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n \
    \       });\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n < 3 {\n\
    \        v.truncate(n as usize);\n        return v;\n    }\n    for i in 3..n\
    \ + 1 {\n        let mut x = v[i as usize - 1] + v[i as usize - 2] + v[i as usize\
    \ - 3];\n        if i % 2 == 0 {\n            x += i / 2;\n        }\n       \
    \ v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n\
    \ + 1 {\n        v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] +\
    \ v[i as usize - 2] + v[i as usize + 1] });\n    }\n    v", "    if n == 0 {\n\
    \        return vec![];\n    }\n    if n == 1 {\n        return vec![3];\n   \
    \ }\n    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let x =\
    \ v[i - 3] + v[i - 2] + v[i - 1];\n        v.push(x);\n    }\n    v", "    let\
    \ mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n        v.push(v[i-1] + v[i-2]\
    \ + v[i-3]);\n    }\n    v", "    let mut v = vec![3];\n    if n == 0 {\n    \
    \    return v;\n    }\n    v.push(2);\n    if n == 1 {\n        return v;\n  \
    \  }\n    v.push(8);\n    for i in 3..n + 1 {\n        let x = if i % 2 == 0 {\n\
    \            1 + i / 2\n        } else {\n            v[i as usize - 1] + v[i\
    \ as usize - 2] + v[i as usize + 1]\n        };\n        v.push(x);\n    }\n \
    \   v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let\
    \ x = if i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize + 1]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n <= 3 {\n        v.truncate(n\
    \ as usize);\n        return v;\n    }\n    for i in 3..n {\n        let x = v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return\
    \ vec![3];\n    }\n    if n == 1 {\n        return vec![3, 2];\n    }\n    if\
    \ n == 2 {\n        return vec![3, 2, 1];\n    }\n    for i in 3..n + 1 {\n  \
    \      if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n   \
    \         v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3]);\n\
    \        }\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n\
    \        return vec![];\n    }\n    if n == 1 {\n        return vec![3];\n   \
    \ }\n    if n == 2 {\n        return vec![3, 2];\n    }\n    if n == 3 {\n   \
    \     return vec![3, 2, 1];\n    }\n    for i in 4..n + 1 {\n        if i % 2\
    \ == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[i\
    \ as usize - 2] + v[i as usize - 3] + v[i as usize - 4]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    if n == 0 {\n        return vec![];\n\
    \    }\n    if n == 1 {\n        return vec![3];\n    }\n    if n == 2 {\n   \
    \     return vec![3, 2];\n    }\n    if n == 3 {\n        return vec![3, 2, 1];\n\
    \    }\n    for i in 4..n + 1 {\n        if i % 2 == 0 {\n            v.push(1\
    \ + i / 2);\n        } else {\n            v.push(v[i as usize - 1] + v[i as usize\
    \ - 2] + v[i as usize - 3]);\n        }\n    }\n    v", "    let mut v = vec![3,\
    \ 2, 1];\n    if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n  \
    \      return vec![3];\n    }\n    if n == 2 {\n        return vec![3, 2];\n \
    \   }\n    if n == 3 {\n        return vec![3, 2, 1];\n    }\n    for i in 4..n\
    \ + 1 {\n        if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else\
    \ {\n            v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize -\
    \ 3]);\n        }\n    }\n    v", "    if n == 0 {\n        return vec![];\n \
    \   }\n    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        let x\
    \ = if i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i\
    \ as usize - 1] + v[i as usize - 2] + v[i as usize - 3]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut res = vec![3, 2, 1];\n    for i in 3..n + 1 {\n \
    \       let mut tmp = res[i - 1] + res[i - 2] + res[i - 3];\n        if i % 2\
    \ == 0 {\n            tmp += i / 2;\n        }\n        res.push(tmp);\n    }\n\
    \    res", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   if n == 0 {\n        return vec![];\n    }\n    if n == 1 {\n        return\
    \ vec![3];\n    }\n    let mut v = vec![3, 2, 8];\n    for i in 3..n {\n     \
    \   if i % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n      \
    \      v.push(v[i as usize - 1] + v[i as usize - 2] + v[i as usize + 1]);\n  \
    \      }\n    }\n    v", "    let mut v = vec![3, 1, 2];\n    for i in 3..n +\
    \ 1 {\n        v.push(v[i - 1] + v[i - 2] + v[i - 3]);\n    }\n    v", "    let\
    \ mut v = vec![3, 2, 1];\n    if n <= 2 {\n        v.truncate(n as usize + 1);\n\
    \        return v;\n    }\n    for i in 3..n + 1 {\n        if i % 2 == 0 {\n\
    \            v.push(1 + i / 2);\n        } else {\n            v.push(v[(i - 1)\
    \ as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]);\n        }\n    }\n\
    \    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1) as\
    \ usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n   \
    \ v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1 {\n        v.push(if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[i as usize\
    \ - 1] + v[i as usize - 2] + v[i as usize + 1]\n        });\n    }\n    v", " \
    \   let mut v = vec![0, 3, 2, 8];\n    if n <= 3 {\n        v.truncate(n as usize\
    \ + 1);\n        return v;\n    }\n    for i in 4..n + 1 {\n        let x = if\
    \ i % 2 == 0 {\n            1 + i / 2\n        } else {\n            v[(i - 1)\
    \ as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n        };\n        v.push(x);\n\
    \    }\n    v", "    let mut v = vec![3, 2, 1];\n    if n < 3 {\n        return\
    \ v[0..n as usize + 1].to_vec();\n    }\n    for i in 3..n + 1 {\n        if i\
    \ % 2 == 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[(i\
    \ - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]);\n        }\n  \
    \  }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n     \
    \   let x = v[i as usize - 1] + v[i as usize - 2] + v[i as usize - 3];\n     \
    \   v.push(x);\n    }\n    v", "    let mut v = vec![3, 2, 1];\n    for i in 3..n+1\
    \ {\n        v.push(if i % 2 == 0 { 1 + i / 2 } else { v[i as usize - 1] + v[i\
    \ as usize - 2] + v[i as usize + 1] });\n    }\n    v", "    let mut v = vec![];\n\
    \    for i in 0..n + 1 {\n        if i == 0 {\n            v.push(0);\n      \
    \  } else if i == 1 {\n            v.push(1);\n        } else if i == 2 {\n  \
    \          v.push(1);\n        } else {\n            v.push(v[i as usize - 1]\
    \ + v[i as usize - 2] + v[i as usize - 3]);\n        }\n    }\n    v", "    let\
    \ mut v = vec![3, 2, 1];\n    if n < 3 {\n        return v[0..(n as usize + 1)].to_vec();\n\
    \    }\n    for i in 3..(n + 1) {\n        let x = if i % 2 == 0 {\n         \
    \   1 + i / 2\n        } else {\n            v[(i - 1) as usize] + v[(i - 2) as\
    \ usize] + v[(i + 1) as usize]\n        };\n        v.push(x);\n    }\n    v",
  "    let mut v = vec![3, 2, 1];\n    for i in 3..n + 1 {\n        v.push(if i %\
    \ 2 == 0 {\n            i / 2 + 1\n        } else {\n            v[(i - 1) as\
    \ usize] + v[(i - 2) as usize] + v[(i + 1) as usize]\n        });\n    }\n   \
    \ v", "    let mut v = vec![3, 2, 1];\n    if n < 3 {\n        v.truncate(n as\
    \ usize);\n        return v;\n    }\n    for i in 3..=n {\n        if i % 2 ==\
    \ 0 {\n            v.push(1 + i / 2);\n        } else {\n            v.push(v[(i\
    \ - 1) as usize] + v[(i - 2) as usize] + v[(i + 1) as usize]);\n        }\n  \
    \  }\n    v", "    let mut v = vec![3, 2, 1];\n    for _ in 3..n + 1 {\n     \
    \   let l = v.len();\n        v.push(v[l - 1] + v[l - 2] + v[l - 3]);\n    }\n\
    \    v"]
stop_tokens:
- "\n}"

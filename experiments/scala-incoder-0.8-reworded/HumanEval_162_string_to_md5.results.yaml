language: scala
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.length == 0) {\n           \
    \ None\n        } else {\n            val hmac : MessageDigest = MessageDigest.getInstance(\"\
    MD5\")\n            hmac.reset()\n            hmac.update(text.getBytes)\n   \
    \         val md5 = hmac.digest()\n            val hashInBase64 = Base64.getEncoder.encodeToString(md5)\n\
    \            Option(hashInBase64)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe12mouv.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mhmac\e[0m : \e[35mMessageDigest\e\
    [0m = MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \  Not found: type MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpwe12mouv.scala:12:39 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m            \e[33mval\e[0m \e[36mhmac\e[0m : \e[35mMessageDigest\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                                     \
    \  ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                       Not\
    \ found: MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe12mouv.scala:16:31\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mhashInBase64\e[0m = Base64.getEncoder.encodeToString(md5)\n\e[31m\e[31m\
    \   |\e[0m                               ^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                       Not found: Base64\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ {\n            val bytes = MessageDigest.getInstance(\"MD5\").digest(text.getBytes)\n\
    \            val hexString = bytes.map(\"%02X\" format _).mkString\n         \
    \   Some(\"\\\"\"+hexString+\"\\\"\")\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjngek2f2.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mbytes\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(text.getBytes)\n\e[31m\e[31m   |\e[0m               \
    \         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not found:\
    \ MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.trim.isEmpty) None else Some(DigestUtils.md5Hex(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn8qw879d.scala:9:45 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m(text.trim.isEmpty) None \e[33melse\e\
    [0m Some(DigestUtils.md5Hex(text))\n\e[31m\e[31m  |\e[0m                     \
    \                        ^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                    \
    \                         Not found: DigestUtils\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None else Some(md5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp91wb5xzv.scala:9:39 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text == \e[31m\"\"\e[0m) None \e\
    [33melse\e[0m Some(md5(text))\n\e[31m\e[31m  |\e[0m                          \
    \             ^^^\e[0m\n\e[31m  |\e[0m                                       Not\
    \ found: md5\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009478
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val digest = MessageDigest.getInstance(\"\
    MD5\")\n        digest.reset()\n        val buffer = new Array[Byte](digest.digest(text.getBytes))\n\
    \        val md5 = Base64.getEncoder.encodeToString(buffer)\n        val digestBase64\
    \ = Base64.getEncoder.encodeToString(digest.digest(text.getBytes))\n        Option(md5).filter(_.equals(digestBase64))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8rj9cdl9.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdigest\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                     Not found: MessageDigest\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp8rj9cdl9.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = Base64.getEncoder.encodeToString(buffer)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \        Not found: Base64\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp8rj9cdl9.scala:13:27 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36mdigestBase64\e[0m = Base64.getEncoder.encodeToString(digest.digest(text.getBytes))\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                          Not found: Base64\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes(\"UTF-8\"))\n        val md5 = Array[Byte](md5).map(\"\
    %02x\".format(_)).mkString(\"\")\n        Some(md5)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpu3pxkiiu.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = Array[\e[35mByte\e\
    [0m](md5).map(\e[31m\"%02x\"\e[0m.format(_)).mkString(\e[31m\"\"\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpu3pxkiiu.scala:9:18 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e[31m\"\
    MD5\"\e[0m).digest(text.getBytes(\e[31m\"UTF-8\"\e[0m))\n\e[31m\e[31m  |\e[0m\
    \                  ^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                  Not found:\
    \ MessageDigest\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.length == 0) None\n        else\
    \ Some(text.md5())\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu8b79569.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(text.md5())\n\e[31m\e[31m\
    \   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ md5 is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1660009482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length <= 0) {\n          \
    \  None\n        } else {\n            val a = text.split(\" \").map(x=>x.toChar)\n\
    \            val h = a.map(c => (c.map(_.toInt).reduceLeft(_+_))) //get the sum\
    \ of the ascii values\n            val s = h.reduceLeft(_+_)//get the sum\n  \
    \          val md5 = (s%10000).toString.toLowerCase + s.toString.toLowerCase +\
    \ h.reduceLeft(_+_)//convert to md5 string\n            Some(md5)\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcek3cmv5.scala:12:45 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36ma\e[0m = text.split(\e\
    [31m\" \"\e[0m).map(\e[36mx\e[0m=>x.toChar)\n\e[31m\e[31m   |\e[0m           \
    \                                ^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \                    value toChar is not a member of String\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpcek3cmv5.scala:12:52 -----------------------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36ma\e[0m = text.split(\e[31m\"\
    \ \"\e[0m).map(\e[36mx\e[0m=>x.toChar)\n\e[31m\e[31m   |\e[0m                \
    \                                    ^\e[0m\n\e[31m   |\e[0m                 \
    \                         No ClassTag available for B\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m                                          where:    B is a type variable\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty){\n            None\n\
    \        }\n        else{\n            val hash = MD5Hash.getInstance\n      \
    \      hash.update(text.getBytes)\n            val digest = hash.digest()\n  \
    \          val builder = StringBuilder(digest.length * 2)\n            digest.forEach\
    \ {\n                builder.append(Integer.toHexString((it & 0xff) + 0x100))\n\
    \            }\n            Some(builder.toString)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb6s4prrz.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mhash\e[0m = MD5Hash.getInstance\n\
    \e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                   Not found: MD5Hash\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None\n        else\
    \ text -> md5(text)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp87mfoogq.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m text -> md5(text)\n\e[31m\e[31m\
    \   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: md5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.trim.isEmpty) None else Some(md5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph0g7o1f8.scala:9:46 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.trim.isEmpty) None \e[33melse\e\
    [0m Some(md5(text))\n\e[31m\e[31m  |\e[0m                                    \
    \          ^^^\e[0m\n\e[31m  |\e[0m                                          \
    \    Not found: md5\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None\n        else\
    \ Some(Digest.md5Hex(text))\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8xxsbrku.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(Digest.md5Hex(text))\n\e\
    [31m\e[31m   |\e[0m                  ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \      Not found: Digest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) {\n            None\n\
    \        }\n        else {\n            val data = text.asInstanceOf[String]\n\
    \            val md5 = java.security.MessageDigest.getInstance(\"MD5\")\n    \
    \        val digest = md5.digest(data.asInstanceOf[Array[Byte]])\n           \
    \ val sb = new StringBuilder()\n            for (i <- digest) {\n            \
    \    sb.append(Integer.toHexString(i&0xff))\n            }\n            Some(sb.toString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ClassCastException: class java.lang.String cannot be cast to\
    \ class [B (java.lang.String and [B are in module java.base of loader 'bootstrap')\n\
    \tat Problem$.stringToMd5(tmpz2fo6i6a.scala:15)\n\tat Problem$.main(tmpz2fo6i6a.scala:24)\n\
    \tat Problem.main(tmpz2fo6i6a.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) return None\n\
    \        val digest = java.security.MessageDigest.getInstance(\"MD5\");\n    \
    \    val bos = new java.io.ByteArrayOutputStream();\n        val bw = new java.io.BufferedWriter(new\
    \ java.io.OutputStream(bos));\n        digest.update(text.getBytes(), 0, text.length());\n\
    \        bw.write(digest.digest());\n        bw.close();\n        val hash = java.util.Base64.getEncoder.encodeToString(bos.toByteArray);\n\
    \        Some(hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpw17xoxyj.scala:12:69 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mbw\e[0m = \e[33mnew\e[0m\
    \ java.io.BufferedWriter(\e[33mnew\e[0m java.io.OutputStream(bos));\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \     ^^^\e[0m\n\e[31m   |\e[0mtoo many arguments for \e[33mconstructor\e[0m \e\
    [35mOutputStream\e[0m in \e[33mclass\e[0m \e[35mOutputStream\e[0m: (): java.io.OutputStream\n\
    \e[31m\e[31m-- [E134] Type Error: /tmp/tmpw17xoxyj.scala:14:11 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        bw.write(digest.digest());\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives of\
    \ \e[33mmethod\e[0m \e[35mwrite\e[0m in \e[33mclass\e[0m \e[35mBufferedWriter\e\
    [0m with types\n\e[31m   |\e[0m (x$0: String, x$1: Int, x$2: Int): Unit\n\e[31m\
    \   |\e[0m (x$0: Array[Char], x$1: Int, x$2: Int): Unit\n\e[31m   |\e[0m (x$0:\
    \ Int): Unit\n\e[31m   |\e[0m (x$0: String): Unit\n\e[31m   |\e[0m (x$0: Array[Char]):\
    \ Unit\n\e[31m   |\e[0mmatch arguments (Array[Byte])\n2 errors found\n"
  stdout: ''
  timestamp: 1660009481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        val md = md5.digest(text.getBytes)\n        val sb = new StringBuilder()\n\
    \        for ((c, i) in md.zipWithIndex) {\n            if (i > 0) sb.append(\"\
    :\")\n            val hex = Integer.toHexString(c)\n            if (hex.length\
    \ < 2) {\n                sb.append(Integer.toHexString(c))\n            } else\
    \ {\n                sb.append(hex)\n            }\n        }\n        sb.toString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvpum3vs8.scala:12:40 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mfor\e[0m ((c, i) in md.zipWithIndex) {\n\
    \e[31m\e[31m   |\e[0m                                        ^\e[0m\n\e[31m  \
    \ |\e[0m                                        '<-' expected, but '{' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvpum3vs8.scala:22:4 ----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '<-' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvpum3vs8.scala:20:9\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        }\n\e[31m\e[31m\
    \   |\e[0m         ^\e[0m\n\e[31m   |\e[0mvalue withFilter is not a member of\
    \ Null, but could be made available as an extension method.\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties\
    \ AsScalaMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration\
    \ AsScalaIterator\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator\
    \ asScala\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.map\
    \ AsScalaConcurrentMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.set\
    \ asScala\n\e[31m   |\e[0m\n3 errors found\n"
  stdout: ''
  timestamp: 1660009484
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.size == 0) {\n            None\n\
    \        } else {\n            val md5 = new java.security.MessageDigest(java.security.MessageDigest.getInstance(\"\
    MD5\"))\n            val buffer = new Array[Byte](16)\n            val digest\
    \ = md5.digest(buffer)\n            val hexValues = digest.map { x => (Integer.toHexString(0xFF\
    \ & x).toLowerCase) }\n            val result = hexValues.mkString(\":\")\n  \
    \          println(result)\n            Some(result)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpnc0amkka.scala:12:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(java.security.MessageDigest.getInstance(\e[31m\"\
    MD5\"\e[0m))\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009480
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val newMap = new mutable.HashMap[String,String]\n\
    \        for (i <- 0 until text.length()) {\n          val char = text.charAt(i)\n\
    \          val hash = digest(char.getBytes(\"utf-8\"))\n          newMap += char\
    \ -> hash\n        }\n        newMap.toList match {\n          case list if list.nonEmpty\
    \ =>\n            val md5 = list.last\n            Some(md5)\n          case _\
    \ => None\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9fwark4k.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mnewMap\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mString\e[0m,\e[35mString\e[0m]\n\e[31m\e[31m  |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m  |\e[0m                       \
    \  Not found: mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9fwark4k.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m          \e[33mval\e[0m\
    \ \e[36mhash\e[0m = digest(char.getBytes(\e[31m\"utf-8\"\e[0m))\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \   Not found: digest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9fwark4k.scala:12:33\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m          \e[33mval\e[0m\
    \ \e[36mhash\e[0m = digest(char.getBytes(\e[31m\"utf-8\"\e[0m))\n\e[31m\e[31m\
    \   |\e[0m                            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                        value getBytes is not a member of Char\n3 errors found\n"
  stdout: ''
  timestamp: 1660009482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text != \"\") Option(text.md5).toOption\n\
    \        else None\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5ou69fee.scala:9:35 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m(text != \e[31m\"\"\e[0m) Option(text.md5).toOption\n\
    \e[31m\e[31m  |\e[0m                              ^^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                              value md5 is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1660009482
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None\n        else\
    \ {\n            val cipher = new Md5\n            val encrypted = cipher.doFinal(text.getBytes)\n\
    \            val hash = new String(encrypted)\n            Some(hash)\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk1v0dw3n.scala:11:29 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mcipher\e[0m = \e[33mnew\e\
    [0m \e[35mMd5\e[0m\n\e[31m\e[31m   |\e[0m                             ^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: type Md5\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\") return None\n     \
    \   val md5 = MessageDigest.getInstance(\"MD5\")\n        val digest = md5.digest(text.getBytes)\n\
    \        Some(digest.toString)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkissvlln.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                  Not found: MessageDigest\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) {\n            None\n\
    \        }\n        else {\n            val chars = text.toCharArray\n       \
    \     var ret = \"\"\n            for( i <- 0 until chars.length ) {\n       \
    \         val b = chars(i)\n                ret += Integer.toHexString(b.toInt)\n\
    \            }\n            Some(ret)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpx9xq41qk.scala:23)\n\tat Problem.main(tmpx9xq41qk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009483
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text.isEmpty match {\n            case\
    \ true => None\n            case false => Some(scala.util.Hashing.md5(text.getBytes).take(32).mkString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbfmej231.scala:11:42 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mcase\e[0m \e[31mfalse\e[0m => Some(scala.util.Hashing.md5(text.getBytes).take(\e\
    [31m32\e[0m).mkString)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m      value Hashing is not a member of util - did you mean\
    \ util.hashing?\n1 error found\n"
  stdout: ''
  timestamp: 1660009481
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.length == 0) None\n        else\
    \ {\n            val md5 = new MessageDigest.getInstance(\"MD5\")\n          \
    \  val digest = md5.digest(text.getBytes)\n            val result = digest.reduce(_\
    \ + _)\n            val sb = new StringBuilder\n            for (byte <- digest)\
    \ sb.append(Integer.toHexString(byte & 0xFF))\n            Some(sb.toString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbj14mbhj.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                     ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \      Not found: MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009479
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        // The MD5 hash is always 40 characters\
    \ long.\n        val hash = scala.util.Digest.md5(stringToByteArray(text))\n \
    \       // We only care about the lowest 32 bits.\n        Some(hash.take(32).toString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6q4720in.scala:10:30 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mhash\e[0m = scala.util.Digest.md5(stringToByteArray(text))\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value Digest is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n      if (text.nonEmpty) {\n        val digest\
    \ = MessageDigest.getInstance(\"MD5\")\n        digest.update(text.getBytes)\n\
    \        val hashValue = digest.digest()\n        val convertedHashValue = hashValue.toString.\n\
    \          substring(0, 8) + hashValue.toString.\n          substring((8 + hashValue.length))\n\
    \        Option(convertedHashValue)\n      } else {\n        None\n      }\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp77x0g2xu.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdigest\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                     Not found: MessageDigest\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text match {\n            case \"\"\
    \ => None\n            case x => Some(scala.util.Hashing.md5Hex(x))\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6pjqx9_q.scala:11:38 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mcase\e[0m x => Some(scala.util.Hashing.md5Hex(x))\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m      value Hashing is not a member of util - did you mean util.hashing?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = scala.util.Digest.md5\n  \
    \      val charBuffer = charArrayBuffer(text.mkString)\n        md5.update(charBuffer)\n\
    \        md5.digest\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr63we8eu.scala:9:29 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = scala.util.Digest.md5\n\
    \e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m \
    \                 value Digest is not a member of util\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpr63we8eu.scala:10:25 ------------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mcharBuffer\e[0m = charArrayBuffer(text.mkString)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: charArrayBuffer\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val hash = new MessageDigest.getInstance(\"\
    MD5\")\n        val bytes = text.getBytes(\"UTF-8\")\n        hash.update(bytes)\n\
    \        val md5 = hash.digest()\n        val hex = md5.toString(\"HEX\")\n  \
    \      return Some(hex)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptca_kh2o.scala:9:23 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mhash\e[0m = \e[33mnew\e[0m\
    \ MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m        \
    \               ^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                       Not found:\
    \ MessageDigest\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Option(text.md5())\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1pi2ue5a.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Option(text.md5())\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \      value md5 is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1660009489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5: mutable.HashMap[String, String]\
    \ = mutable.HashMap()\n        val splitted: Array[String] = text.split(\" \"\
    ).map(x => x.toLowerCase).toList\n        splitted.foreach(x => md5(x.toLowerCase\
    \ -> x))\n        if (md5.isEmpty) None\n        else Some(md5.mapValues(x =>\
    \ x.hashCode).mkString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14dmb4za.scala:9:17 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m: mutable.HashMap[\e\
    [35mString\e[0m, \e[35mString\e[0m] = mutable.HashMap()\n\e[31m\e[31m  |\e[0m\
    \                 ^^^^^^^\e[0m\n\e[31m  |\e[0m                 Not found: mutable\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp14dmb4za.scala:9:51\
    \ -------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e\
    [36mmd5\e[0m: mutable.HashMap[\e[35mString\e[0m, \e[35mString\e[0m] = mutable.HashMap()\n\
    \e[31m\e[31m  |\e[0m                                                   ^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                                   Not found:\
    \ mutable\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp14dmb4za.scala:10:78\
    \ --------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msplitted\e\
    [0m: \e[35mArray\e[0m[\e[35mString\e[0m] = text.split(\e[31m\" \"\e[0m).map(\e\
    [36mx\e[0m => x.toLowerCase).toList\n\e[31m\e[31m   |\e[0m                   \
    \                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                      Found:    \e[1m\e[31mList\e[0m[String]\n\
    \e[31m   |\e[0m                                      Required: \e[1m\e[32mArray\e\
    [0m[String]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None \n        else\
    \ Some(scala.util.hashing.MD5Hash.digest(text.getBytes))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj1j2_kvf.scala:10:37 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(scala.util.hashing.MD5Hash.digest(text.getBytes))\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  value MD5Hash is not a member of scala.util.hashing\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ md5(text).getOrElse(None)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfdw_iuz6.scala:10:13 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m md5(text).getOrElse(None)\n\e\
    [31m\e[31m   |\e[0m             ^^^\e[0m\n\e[31m   |\e[0m             Not found:\
    \ md5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5Hash = Digest.getInstance(\"\
    MD5\")\n        val result = new mutable.StringBuilder\n        md5Hash.update(text.getBytes)\n\
    \        val digest = md5Hash.digest()\n        val hashedText = digest.getBytes\n\
    \        val hashCode = hashedText.mkString(\":\")\n        val md5 = hashCode.slice(0,8)\n\
    \        return Some(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt3jsve7j.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5Hash\e[0m = Digest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                      ^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                      Not found: Digest\n\e[31m  |\e[0m\n\e[31m  |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpt3jsve7j.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty)\n            None\n\
    \        else\n            // Convert to a byte array first.\n            val\
    \ bytes : Array[Byte] = text.getBytes(\"UTF-8\")\n            // Convert to an\
    \ MD5 hash\n            val md : MD5 = MD5.getInstance\n            val mdBytes\
    \ : Array[Byte] = md.digest(bytes)\n            // Convert the MD5 hash back to\
    \ a string\n            val hashString : String = Hex.encodeHexString(mdBytes)\n\
    \            // Return the MD5 hash string for the empty string or a non-empty\
    \ string\n            Some(hashString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx2yatxrf.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mmd\e[0m : \e[35mMD5\e\
    [0m = MD5.getInstance\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e\
    [31m   |\e[0m                     Not found: type MD5\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpx2yatxrf.scala:15:27 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mmd\e[0m : \e[35mMD5\e\
    [0m = MD5.getInstance\n\e[31m\e[31m   |\e[0m                           ^^^\e[0m\n\
    \e[31m   |\e[0m                           Not found: MD5\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpx2yatxrf.scala:18:38 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mval\e[0m \e[36mhashString\e[0m : \e\
    [35mString\e[0m = Hex.encodeHexString(mdBytes)\n\e[31m\e[31m   |\e[0m        \
    \                              ^^^\e[0m\n\e[31m   |\e[0m                     \
    \                 Not found: Hex\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0)\n            None\n\
    \        else\n            val md5 = MD5.getInstance()\n            md5.update(text.getBytes)\n\
    \            md5.digest\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnki4zwtp.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MD5.getInstance()\n\
    \e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m         \
    \             Not found: MD5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009486
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length > 0) {\n           \
    \ val digest = scala.util.Digest.md5()\n            digest.update(text.getBytes(\"\
    UTF-8\"))\n            val result = digest.digest().toHexString\n            Some(result)\n\
    \        } else {\n            None\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjufvk5ac.scala:10:36 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mdigest\e[0m = scala.util.Digest.md5()\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                         value Digest is not a member of util\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var md5 : Option[String] = None\n  \
    \      text match {\n            case \"\"  => md5 = None // Empty string\n  \
    \          case x => md5 = md5Hash(text) // Non-empty string\n        }\n    \
    \    md5\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplfm6r1u8.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mcase\e[0m x => md5 = md5Hash(text)\
    \ \e[34m// Non-empty string\e[0m\n\e[31m\e[31m   |\e[0m                      \
    \      ^^^^^^^\e[0m\n\e[31m   |\e[0m                            Not found: md5Hash\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009487
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None\n        else\
    \ {\n            val hashed = text.map(s => s.map(c => (c % 16).map(b => (b +\
    \ 87) % (16 + 87)).getOrElse(b)).sum)\n            val hashedString = hashed.foldLeft(\"\
    \") { (a, x) => (a + \"%\" + x).toUpperCase }\n            Some(hashedString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpke8ef7jw.scala:11:41 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mhashed\e[0m = text.map(\e\
    [36ms\e[0m => s.map(\e[36mc\e[0m => (c % \e[31m16\e[0m).map(\e[36mb\e[0m => (b\
    \ + \e[31m87\e[0m) % (\e[31m16\e[0m + \e[31m87\e[0m)).getOrElse(b)).sum)\n\e[31m\e\
    [31m   |\e[0m                                       ^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                       value map is not a member of Char\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty)\n            None\n\
    \        else\n            Some(text.toHexString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp21tvv18.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(text.toHexString)\n\e[31m\e[31m   |\e\
    [0m                 ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toHexString is\
    \ not a member of String - did you mean text.toString?\n1 error found\n"
  stdout: ''
  timestamp: 1660009492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.nonEmpty) text.toMD5\n    \
    \    else None \n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0ww56rbh.scala:9:32 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.nonEmpty) text.toMD5\n\e[31m\e\
    [31m  |\e[0m                           ^^^^^^^^^^\e[0m\n\e[31m  |\e[0m       \
    \                    value toMD5 is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1660009491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None else Some(md5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg6krbki2.scala:9:41 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.isEmpty) None \e[33melse\e\
    [0m Some(md5(text))\n\e[31m\e[31m  |\e[0m                                    \
    \     ^^^\e[0m\n\e[31m  |\e[0m                                         Not found:\
    \ md5\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009488
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Some(MD5.digest(text.getBytes))\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0tl4h186.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(MD5.digest(text.getBytes))\n\
    \e[31m\e[31m   |\e[0m                  ^^^\e[0m\n\e[31m   |\e[0m             \
    \     Not found: MD5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009489
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) return None\n    \
    \    val digest = scala.security.MessageDigest.getInstance(\"MD5\")\n        digest.update(text.getBytes)\n\
    \        Some(digest.digest().map(hex).mkString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp52xg87to.scala:10:27 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdigest\e[0m = scala.security.MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     value security is not a member of scala\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var hashText : String = \"\";\n    \
    \    var hash : Int = 0;\n        for (ch <- text) {\n            val val = ch\
    \ - 'a';\n            val rem = val % 26;\n            val temp = val - rem;\n\
    \            val rem = temp % 26;\n            val temp = temp - rem;\n      \
    \      hashText = hashText + (char('a' + rem) + char('a' + temp))\n        }\n\
    \        return Some(hashText);\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp4gmz1jr3.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[33mval\e[0m = ch - \e[31m'a'\e\
    [0m;\n\e[31m\e[31m   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m         \
    \       pattern expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error:\
    \ /tmp/tmp4gmz1jr3.scala:13:22 ---------------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m            \e[33mval\e[0m \e[36mrem\e[0m = \e[33mval\e[0m % \e[31m26\e\
    [0m;\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m   \
    \                   expression expected but \e[31mval\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4gmz1jr3.scala:14:23 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e[0m \e[36mtemp\e[0m = \e[33mval\e\
    [0m - rem;\n\e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e\
    [0m                       expression expected but \e[31mval\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4gmz1jr3.scala:15:16 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mrem\e[0m = temp % \e\
    [31m26\e[0m;\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mrem is already defined as \e[33mvalue\e[0m \e[35mrem\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp4gmz1jr3.scala:16:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e\
    [0m \e[36mtemp\e[0m = temp - rem;\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtemp is already defined as \e[33mvalue\e[0m \e[35mtemp\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp4gmz1jr3.scala:17:35 ------------------------\e[0m\e[0m\n"
  stdout: ''
  timestamp: 1660009491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ (MD5.getInstance().hashString(text) map {_ => (text.length, text.length)})\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp22u8t9y2.scala:10:14 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m (MD5.getInstance().hashString(text)\
    \ map {_ => (text.length, text.length)})\n\e[31m\e[31m   |\e[0m              ^^^\e\
    [0m\n\e[31m   |\e[0m              Not found: MD5\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009490
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else {\n            val bytes: Array[Byte] = text.getBytes(\"UTF-8\")\n    \
    \        val md5: MessageDigest = MessageDigest.getInstance(\"MD5\")\n       \
    \     md5.update(bytes)\n            val hashCode: Int = md5.getDigest.length\n\
    \            val hexValue: String = Integer.toHexString(hashCode)\n          \
    \  Some(hexValue)\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp77155qc3.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m: \e[35mMessageDigest\e\
    [0m = MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                  ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not\
    \ found: type MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp77155qc3.scala:12:37 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m            \e[33mval\e[0m \e[36mmd5\e[0m: \e[35mMessageDigest\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                                     ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                     Not found: MessageDigest\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009491
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None\n        else\
    \ Some(Digest.md5(new StringBuffer(text).mkString))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzi272ztb.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(Digest.md5(\e[33mnew\e[0m\
    \ StringBuffer(text).mkString))\n\e[31m\e[31m   |\e[0m                  ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: Digest\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.nonEmpty) {\n            Some(md5(text))\n\
    \        } else {\n            None\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb5jkdts9.scala:10:17 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            Some(md5(text))\n\e[31m\e[31m   |\e[0m  \
    \               ^^^\e[0m\n\e[31m   |\e[0m                 Not found: md5\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009493
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var result = scala.collection.mutable.ListBuffer[String]()\n\
    \        var md5 = new scala.collection.mutable.HashMap[String, String]()\n  \
    \      var textToAppend = \"0000000000\"\n        text.foreach(x => {\n      \
    \      md5 += (x -> textToAppend)\n            result += (x -> textToAppend)\n\
    \        })\n        val finalString = new scala.collection.mutable.HashMap[String,\
    \ String]()\n        md5.foreach(x => {\n            finalString += (x._1 -> md5(x._2))\n\
    \        })\n        return Some(finalString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpeanvktam.scala:13:20\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m            md5 += (x -> textToAppend)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                    Found:    (\e[1m\e[31mChar\e[0m, String)\n\e[31m   |\e\
    [0m                    Required: (\e[1m\e[32mString\e[0m, String)\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpeanvktam.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            result += (x -> textToAppend)\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                  Found:    \e[1m\e[31m(\e[0m\e[1m\e[31mChar\e[0m\e[1m\e[31m,\e\
    [0m\e[1m\e[31m \e[0mString\e[1m\e[31m)\e[0m\n\e[31m   |\e[0m                 \
    \      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpeanvktam.scala:20:20\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mreturn\e[0m Some(finalString)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mFound:\
    \    (finalString : scala.collection.mutable.HashMap[String, String])\n\e[31m\
    \   |\e[0mRequired: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009498
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty)\n            None\n\
    \        else\n            Some(scala.util.crypto.Md5.digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphfv5wfxz.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(scala.util.crypto.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                 value crypto is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\") {\n            None\n\
    \        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\").digest(text.getBytes)\n\
    \            Some(new String(md5).substring(0, 32))\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp19jus8j8.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(text.getBytes)\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009492
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length > 0) {\n           \
    \ val bytes = new String(text).getBytes(\"UTF-8\")\n            val md5 = new\
    \ java.security.MessageDigest(\"MD5\")\n            val hash = md5.digest(bytes)\n\
    \            val hashString = hexToString(hash)\n            return Some(hashString)\n\
    \        }\n        else None\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpm5rznqix.scala:11:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm5rznqix.scala:13:29\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m\
    \ \e[36mhashString\e[0m = hexToString(hash)\n\e[31m\e[31m   |\e[0m           \
    \                  ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                         \
    \    Not found: hexToString\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None // if text is\
    \ empty, return None\n        else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val md5Buffer = new Array[Byte](32)\n            val inputStream\
    \ = new ByteArrayInputStream(md5(text).getBytes)\n            try {\n        \
    \        inputStream.readFully(md5Buffer)\n            } catch {\n           \
    \     case ex: Throwable => // return None on any error\n                None\n\
    \            }\n            Some(new String(md5Buffer))\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoppyjoxd.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoppyjoxd.scala:13:34 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36minputStream\e[0m = \e\
    [33mnew\e[0m \e[35mByteArrayInputStream\e[0m(md5(text).getBytes)\n\e[31m\e[31m\
    \   |\e[0m                                  ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                  Not found: type ByteArrayInputStream\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009494
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = new scala.util.Md5\n     \
    \   val s = text.getBytes(\"UTF-8\")\n        Some(md5.digest(s))\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsfesn9bk.scala:9:33 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ scala.util.Md5\n\e[31m\e[31m  |\e[0m                      ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                      type Md5 is not a member of util\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None\n        else\
    \ Some(scala.util.Md5.hexdigest(text.getBytes(\"UTF-8\")))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8vndfr2a.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hexdigest(text.getBytes(\e\
    [31m\"UTF-8\"\e[0m)))\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  value Md5 is not a member of util\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Some(scala.util.crypto.Md5.stringToMd5(text).##)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpio7z96yo.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(scala.util.crypto.Md5.stringToMd5(text).##)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                  value crypto is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val chars = text.map(c => c.toInt).toList\n\
    \        var hash = 5381;\n        for (i <- 0 to text.length-1)\n           \
    \ hash = (hash * 33) ^ chars(i)\n        if (hash.toInt % 1 !== 0)\n         \
    \   None\n        else\n            Some(hash.toString)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3f5_jebb.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (hash.toInt % \e[31m1\e[0m !==\
    \ \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            value !== is not a member of Int - did you mean Int.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else text match {\n            case str if str.length > 0 => Some(getMd5(str))\n\
    \            case _ => None\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbjm1z47n.scala:11:47 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mcase\e[0m str \e[33mif\e[0m str.length\
    \ > \e[31m0\e[0m => Some(getMd5(str))\n\e[31m\e[31m   |\e[0m                 \
    \                              ^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \                             Not found: getMd5\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009495
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val bytes = text.getBytes\n        bytes.map(_.toInt\
    \ + 0x49).toHexString\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfdb814ej.scala:10:34 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        bytes.map(_.toInt + \e[31m0x49\e[0m).toHexString\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue toHexString is not a member of Array[Int] - did you mean Array[Int].toString?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None else Some(scala.util.Digest.md5Hex(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp60426na2.scala:9:50 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text == \e[31m\"\"\e[0m) None \e\
    [33melse\e[0m Some(scala.util.Digest.md5Hex(text))\n\e[31m\e[31m  |\e[0m     \
    \                                  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m    \
    \                                  value Digest is not a member of util\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val bytes : Array[Byte] = text.getBytes(\"\
    UTF-8\")\n        val md5 : Md5 = MessageDigest.getInstance(\"MD5\")\n       \
    \ val digest = md5.digest(bytes)\n        val hash = Base64.encodeBase64String(digest)\n\
    \        Option(hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4k6xub05.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m : \e[35mMd5\e[0m\
    \ = MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \             ^^^\e[0m\n\e[31m   |\e[0m                  Not found: type Md5\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4k6xub05.scala:10:24\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mmd5\e[0m : \e[35mMd5\e[0m = MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                        Not found: MessageDigest\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp4k6xub05.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mhash\e[0m = Base64.encodeBase64String(digest)\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \          Not found: Base64\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else Some(Md5.hash(text))\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplo6a6jv9.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(Md5.hash(text))\n\e[31m\e\
    [31m   |\e[0m                  ^^^\e[0m\n\e[31m   |\e[0m                  Not\
    \ found: Md5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009497
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            Some(Digest.md5Hex(text))\n        }\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv5rc2n3w.scala:12:17 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(Digest.md5Hex(text))\n\e[31m\e[31m \
    \  |\e[0m                 ^^^^^^\e[0m\n\e[31m   |\e[0m                 Not found:\
    \ Digest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009496
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text.map { x => Digest.md5(x) }\n  \
    \          .flatten\n            .map(_.toHexString)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpme4lmu40.scala:9:24 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        text.map { \e[36mx\e[0m => Digest.md5(x) }\n\e\
    [31m\e[31m  |\e[0m                        ^^^^^^\e[0m\n\e[31m  |\e[0m        \
    \                Not found: Digest\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Some(md5(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpucvdh8_9.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(md5(text))\n\e[31m\e[31m\
    \   |\e[0m                  ^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ md5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659798851
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        def md5_1(text : String) : String =\
    \ {\n            import scala.collection.mutable.ListBuffer\n            val textToHash\
    \ = ListBuffer(text)\n            val textToHashLength = textToHash.length\n \
    \           var hashCode : Int = 0\n            var outputLength = 0\n       \
    \     val output = new mutable.StringBuilder()\n            while(textToHashLength\
    \ > 0){\n                val chars = textToHash(0)\n                textToHash\
    \ = textToHash.tail\n                textToHashLength = textToHashLength - chars.length\n\
    \                hashCode = hashCode + chars.hashCode\n                outputLength\
    \ += chars.length\n            }\n            val hashTableSize = 128\n      \
    \      val hashTable = scala.collection.mutable.ArrayBuffer.fill(hashTableSize)(0)\n\
    \            hashTable(0) = hashCode\n            val hashTablePointer = hashTableSize\n\
    \            while(outputLength > 0){\n                val char = output.charAt(outputLength\
    \ - 1)\n                hashTablePointer = hashTablePointer - char.length\n  \
    \              hashTable(0) = hashTable(0) * hashTableSize + hashTablePointer\n\
    \                output.length -= 1\n            }\n            output.toString\n\
    \        }\n        if (text.length > 0) Some(md5_1(text)) else None\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn1de5rtk.scala:15:29 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36moutput\e[0m = \e[33mnew\e\
    [0m mutable.StringBuilder()\n\e[31m\e[31m   |\e[0m                           \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m                             Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpn1de5rtk.scala:18:27 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                textToHash = textToHash.tail\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Reassignment to val textToHash\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpn1de5rtk.scala:19:33 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                textToHashLength = textToHashLength -\
    \ chars.length\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val textToHashLength\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpn1de5rtk.scala:29:33 -----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m                hashTablePointer = hashTablePointer -\
    \ char.length\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val hashTablePointer\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660009500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else {\n            import java.security.MessageDigest._\n            val m\
    \ = MessageDigest.getInstance(\"MD5\")\n            m.update(text.getBytes)\n\
    \            val md = m.digest()\n            val s = Array.ofDim[Byte](md.length)\n\
    \            System.arraycopy(md, 0, s, 0, md.length)\n            val hashString\
    \ = s.map(\"%02x\".format(_)).mkString.toLowerCase\n            Some(hashString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk3c1o3wh.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mm\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                    Not found: MessageDigest\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009499
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None else Some(text.getBytes.map(b\
    \ => java.security.MessageDigest.getInstance(\"MD5\").digest(b)).map(_ => scala.util.Base64.encodeBase64URLSafeString(b)).mkString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppfs3_4ch.scala:9:116\
    \ --------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text ==\
    \ \e[31m\"\"\e[0m) None \e[33melse\e[0m Some(text.getBytes.map(\e[36mb\e[0m =>\
    \ java.security.MessageDigest.getInstance(\e[31m\"MD5\"\e[0m).digest(b)).map(_\
    \ => scala.util.Base64.encodeBase64URLSafeString(b)).mkString)\n\e[31m\e[31m \
    \ |\e[0m                                                                     \
    \                                               ^\e[0m\n\e[31m  |\e[0m       \
    \                                              Found:    (b : Byte)\n\e[31m  |\e\
    [0m                                                     Required: Array[Byte]\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppfs3_4ch.scala:9:140\
    \ ------------------------\e[0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text\
    \ == \e[31m\"\"\e[0m) None \e[33melse\e[0m Some(text.getBytes.map(\e[36mb\e[0m\
    \ => java.security.MessageDigest.getInstance(\e[31m\"MD5\"\e[0m).digest(b)).map(_\
    \ => scala.util.Base64.encodeBase64URLSafeString(b)).mkString)\n\e[31m\e[31m \
    \ |\e[0m                                                                     \
    \                                                            ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                      value Base64 is not a\
    \ member of util\n\e[31m\e[31m-- Error: /tmp/tmppfs3_4ch.scala:9:176 -----------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text == \e[31m\"\"\e[0m) None \e\
    [33melse\e[0m Some(text.getBytes.map(\e[36mb\e[0m => java.security.MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(b)).map(_ => scala.util.Base64.encodeBase64URLSafeString(b)).mkString)\n\
    \e[31m\e[31m  |\e[0m                                                         \
    \                                                                            \
    \                                           ^\e[0m\n\e[31m  |\e[0m           \
    \                                 No ClassTag available for B\n\e[31m  |\e[0m\n\
    \e[31m  |\e[0m                                            where:    B is"
  stdout: ''
  timestamp: 1660009504
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5hash = MD5Hash.getInstance()\n\
    \        val inputstream = io.ByteArrayInputStream(text.getBytes)\n        val\
    \ outputstream = io.ByteArrayOutputStream()\n        md5hash.update(inputstream,\
    \ outputstream)\n        outputstream.toByteArray\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp54_no3e8.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5hash\e[0m = MD5Hash.getInstance()\n\
    \e[31m\e[31m  |\e[0m                      ^^^^^^^\e[0m\n\e[31m  |\e[0m       \
    \               Not found: MD5Hash\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp54_no3e8.scala:10:29 ------------------------\e[0m\e[0m\n\e[31m10 |\e\
    [0m        \e[33mval\e[0m \e[36minputstream\e[0m = io.ByteArrayInputStream(text.getBytes)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        value ByteArrayInputStream is not a member\
    \ of io\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp54_no3e8.scala:11:30 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36moutputstream\e[0m = io.ByteArrayOutputStream()\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       value ByteArrayOutputStream is not a member\
    \ of io\n3 errors found\n"
  stdout: ''
  timestamp: 1660009503
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var hash = 0\n        for (char <- text.toCharArray)\
    \ {\n            hash += char.toLong\n            hash = hash &0xffffffff\n  \
    \      }\n        Some(hash.toHexString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfebngupm.scala:11:17 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            hash += char.toLong\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660009502
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) {\n            None\n\
    \        } else {\n            val m = scala.util.matching.Regex.compile(\"^[\\\
    \\w]+$\").matcher(text)\n            val hash = java.security.MessageDigest.getInstance(\"\
    MD5\").digest(m.toString.getBytes)\n            new scala.util.matching.Regex(\"\
    \"\"\\w{2}\"\"\").replaceFirst(hash.toString, \"$&\")\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvd366he8.scala:12:46 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mm\e[0m = scala.util.matching.Regex.compile(\e\
    [31m\"^[\\\\w]+$\"\e[0m).matcher(text)\n\e[31m\e[31m   |\e[0m                \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value compile\
    \ is not a member of object scala.util.matching.Regex\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpvd366he8.scala:14:55 ------------------------\e[0m\e[0m\n\
    \e[31m14 |\e[0m            \e[33mnew\e[0m scala.util.matching.Regex(\e[31m\"\"\
    \"\\w{2}\"\"\"\e[0m).replaceFirst(hash.toString, \e[31m\"$&\"\e[0m)\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue replaceFirst is not a member of scala.util.matching.Regex\
    \ - did you mean Regex.replaceFirstIn?\n2 errors found\n"
  stdout: ''
  timestamp: 1660009503
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None else Some(md5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpha0g3tl8.scala:9:40 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m(text.isEmpty) None \e[33melse\e\
    [0m Some(md5(text))\n\e[31m\e[31m  |\e[0m                                    \
    \    ^^^\e[0m\n\e[31m  |\e[0m                                        Not found:\
    \ md5\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009500
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text match {\n            case \"\"\
    \ => None\n            case x => Some(scala.util.Digest.md5(x))\n        }\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1fcnik93.scala:11:38 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mcase\e[0m x => Some(scala.util.Digest.md5(x))\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                           value Digest is not a member of util\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009504
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.trim().isEmpty) None\n    \
    \    else Some(DigestUtils.md5Hex(text))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbvdd0gp1.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(DigestUtils.md5Hex(text))\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \             Not found: DigestUtils\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009501
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val buffer = new mutable.ArrayBuffer.empty[Int]\n        val digest\
    \ = md5.digest(text.getBytes)\n        digest.foreach( x => buffer.append(x))\n\
    \        Option(buffer.toString.take(8).mkString(\"\"))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp0u1cb3m9.scala:9:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0u1cb3m9.scala:10:25\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e\
    [36mbuffer\e[0m = \e[33mnew\e[0m mutable.ArrayBuffer.empty[\e[35mInt\e[0m]\n\e\
    [31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009502
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n      val md5 = Hashing.md5\n      if (text\
    \ != \"\")\n        Some(md5(text.asInstanceOf[String]))\n      else None\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnsrif9qd.scala:9:16 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m      \e[33mval\e[0m \e[36mmd5\e[0m = Hashing.md5\n\e\
    [31m\e[31m  |\e[0m                ^^^^^^^\e[0m\n\e[31m  |\e[0m               \
    \ Not found: Hashing\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009502
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None\n        else\
    \ {\n            val md5 = java.security.MessageDigest.getInstance(\"MD5\")\n\
    \            md5.update(text.getBytes(\"UTF-8\"))\n            val digest = md5.rest\n\
    \            val md5 = digest.digest\n            val md5 = ArrayBuffer(digest.take(2),\
    \ digest.take(2), digest.take(2))\n            new String(md5, \"UTF-8\")\n  \
    \      }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpiiuja6g_.scala:14:16 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.digest\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmd5\
    \ is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpiiuja6g_.scala:15:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e\
    [0m \e[36mmd5\e[0m = ArrayBuffer(digest.take(\e[31m2\e[0m), digest.take(\e[31m2\e\
    [0m), digest.take(\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpiiuja6g_.scala:13:29 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            \e[33mval\e[0m \e[36mdigest\e[0m = md5.rest\n\e[31m\e[31m   |\e\
    [0m                         ^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue rest is not a\
    \ member of java.security.MessageDigest - did you mean md5.reset?\n\e[31m\e[31m--\
    \ [E134] Type Error: /tmp/tmpiiuja6g_.scala:16:16 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mnew\e[0m \e[35mString\e[0m(md5, \e\
    [31m\"UTF-8\"\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m\
    \   |\e[0mNone of the overloaded alternatives of \e[33mconstructor\e[0m \e[35mString\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: StringBuilder):\
    \ String\n\e[31m   |\e[0m (x$0: StringBuffer): String\n\e[31m   |\e[0m (x$0: Array[Byte]):\
    \ String\n\e[31m   |\e[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\e[31m\
    \   |\e[0m (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\e[31m \
    \  |\e[0m (x$0: Array[Byte], x$1: String): String\n\e[31m   |\e[0m (x$0: Array[Byte],\
    \ x$1: Int, x$2: Int, x$3: java.nio.charset.Charset): String\n\e[31m   |\e[0m\
    \ (x$0: Array[Byte], x"
  stdout: ''
  timestamp: 1660009506
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var md5 : Option[String] = None\n  \
    \      if(text.isEmpty) {\n            md5 = None\n        } else {\n        \
    \    var chars = text.map {\n                x =>\n                    if (chars.size\
    \ > 0 && x == chars.last) chars.init else x\n            }\n\n            var\
    \ remaining = chars.last\n            var hash = \"\"\n            for(i <- 0\
    \ until chars.size) {\n                hash += remaining\n                remaining\
    \ = chars.drop(i).last\n            }\n            md5 = Some(hash)\n        }\n\
    \        md5\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp6fiybsu3.scala:15:24 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    \e[33mif\e[0m (chars.size > \e[31m0\e\
    [0m && x == chars.last) chars.init \e[33melse\e[0m x\n\e[31m\e[31m   |\e[0m  \
    \                      ^\e[0m\n\e[31m   |\e[0m                        Recursive\
    \ \e[33mvariable\e[0m \e[35mchars\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmp6fiybsu3.scala:15:59 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    \e[33mif\e[0m (chars.size > \e[31m0\e\
    [0m && x == chars.last) chars.init \e[33melse\e[0m x\n\e[31m\e[31m   |\e[0m  \
    \                                                         ^\e[0m\n\e[31m   |\e\
    [0m                                     Recursive \e[33mvariable\e[0m \e[35mchars\e\
    [0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009504
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty)\n            None\n\
    \        else {\n            val bytes = text.utf8.getBytes\n            val md5\
    \ = MessageDigest.getInstance(\"MD5\")\n            md5.update(bytes)\n      \
    \      val digest = md5.digest()\n            val hex = digest.toString(\"hex\"\
    )\n            Some(hex)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3utddbgf.scala:12:29 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mbytes\e[0m = text.utf8.getBytes\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                       value utf8 is not a member of String\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp3utddbgf.scala:13:22 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ {\n            // >>> \"Hello world\"\n            val hashes = text.hashCode\
    \ +: text.hashCode\n            // >>> hashes.toList\n            val hashesList\
    \ = hashes.toList\n            // >>> hashesList\n            val hashesSet =\
    \ hashesList.toSet\n            // >>> hashesSet\n            Some(hashesSet.mkString(\"\
    :\"))\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8sf60ac5.scala:12:39 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mhashes\e[0m = text.hashCode\
    \ +: text.hashCode\n\e[31m\e[31m   |\e[0m                                    \
    \   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                   \
    \    value +: is not a member of Int\n1 error found\n"
  stdout: ''
  timestamp: 1660009506
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n      val md5 = new java.security.MessageDigest(\"\
    MD5\")\n      md5.update(text.getBytes(\"utf-8\"), 0, text.length)\n      val\
    \ digest = md5.digest()\n      val result = Array[Byte]()\n      digest.foreach(x\
    \ => result += x)\n      Option(java.util.Base64.getEncoder.encodeToString(result))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp65t59pcy.scala:9:20 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m      \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \  |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \  |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009505
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        def hash(str: String): String = {\n\
    \            val md5 = java.security.MessageDigest.getInstance(\"MD5\")\n    \
    \        val digest = md5.digest(java.util.Arrays.copyOfRange(str.getBytes(),\
    \ 0, str.size()))\n            val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n            md5.update(digest)\n            digest.toHex\n        }\n\
    \        if (text == \"\") {\n            None\n        } else {\n           \
    \ Some(hash(text))\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpk4d2rydy.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = java.security.MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmpk4d2rydy.scala:11:88 -----------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m            \e[33mval\e[0m \e[36mdigest\e[0m = md5.digest(java.util.Arrays.copyOfRange(str.getBytes(),\
    \ \e[31m0\e[0m, str.size()))\n\e[31m\e[31m   |\e[0m                          \
    \                                                          ^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                 \e[33mmethod\e[0m \e[35msize\e[0m in \e[33mclass\e\
    [0m \e[35mStringOps\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpk4d2rydy.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            digest.toHex\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value toHex is not a member\
    \ of Array[Byte]\n3 errors found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else {\n            def charToHex(c : Char) =\n                Integer.toHexString(c.getNumericValue\
    \ + 65).toLowerCase\n\n            val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n            val bytes = text.getBytes()\n            val hash = md5.digest(bytes)\n\
    \            val ret: Map[String, String] = text.split('').map(charToHex).zipWithIndex.map\
    \ { case (c, i) => i -> c.toString }.\n                toMap\n            val\
    \ retString = ret.map { case (k,v) => v + \":\" + k }.mkString(\",\")\n      \
    \      Option(retString)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp35hvq91s.scala:17:54 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mval\e[0m \e[36mret\e[0m: \e[35mMap\e\
    [0m[\e[35mString\e[0m, \e[35mString\e[0m] = text.split('').map(charToHex).zipWithIndex.map\
    \ { \e[33mcase\e[0m (c, i) => i -> c.toString }.\n\e[31m\e[31m   |\e[0m      \
    \                                                ^\e[0m\n\e[31m   |\e[0m     \
    \                                            empty character literal\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") return None\n    \
    \    val hashM = new MessageDigest.getInstance(\"MD5\")\n        hashM.update(text.getBytes)\n\
    \        val hash = hashM.getMessageDigest.array\n        val out = new StringBuilder(hash.length\
    \ div 2)\n        for (i <- 0 until hash.length) {\n            out.append(Character.forDigit(hash(i\
    \ >> 2), 16))\n            out.append(Character.forDigit(hash(i & 0xf), 16))\n\
    \        }\n        Some(out.toString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp45iol96y.scala:10:24 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mhashM\e[0m = \e[33mnew\e\
    [0m MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                   ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \  Not found: MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009506
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.trim.isEmpty) None\n       \
    \ else {\n            val textAsArray = text.split(\" \")\n            var hashValue\
    \ = text.hashCode()\n            var index = 0\n            var newHashValue =\
    \ 0\n            var finalHashValue = 0\n            for(value <- textAsArray)\
    \ {\n                if(index != textAsArray.length - 1) {\n                 \
    \   hashValue += value.toLong\n                } else {\n                    hashValue\
    \ = hashValue % text.length\n                    newHashValue = hashValue % text.length\n\
    \                    finalHashValue += newHashValue.toChar.asInstanceOf[Int]\n\
    \                    finalHashValue += value.hashCode().toChar.asInstanceOf[Int]\n\
    \                }\n                index += 1\n            }\n            val\
    \ finalHashValueString = finalHashValue.toString\n            if(finalHashValueString.length\
    \ != 0) {\n                finalHashValueString = finalHashValueString.substring(0,4)\n\
    \            } else {\n                finalHashValueString = \"0\"\n        \
    \    }\n            finalHashValueString + finalHashValue\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqdrwv8g8.scala:18:30 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                    hashValue += value.toLong\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \        value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpqdrwv8g8.scala:29:37 -----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m                finalHashValueString = finalHashValueString.substring(\e\
    [31m0\e[0m,\e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val finalHashValueString\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpqdrwv8g8.scala:31:37 -----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m                finalHashValueString = \e[31m\"0\"\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                Reassignment to val finalHashValueString\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqdrwv8g8.scala:33:12 --------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m            finalHashValueString + finalHashValue\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m            Found:    String\n\e[31m   |\e[0m            Required:\
    \ \e[1m\e[32mOption\e[0m\e[1m\e[32m[\e[0mString\e[1m\e[32m]\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else {\n            val md5 = new java.security.MessageDigest.getInstance(\"\
    MD5\")\n            val buffer = new StringBuffer()\n            val digest =\
    \ md5.digest(text.getBytes(\"utf-8\"))\n            for (i <- 0 until digest.length)\
    \ {\n                val hex = Integer.toHexString(digest(i))\n              \
    \  buffer.append(hex.substring(0, 2))\n                buffer.append(hex.substring(2))\n\
    \            }\n            Some(buffer.toString)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpikoh10ve.scala:11:54 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m  type getInstance is not a member of object java.security.MessageDigest\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty)\n            None\n\
    \        else \n            Some(Md5.digest(text.getBytes))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvjl4yaf5.scala:12:17 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(Md5.digest(text.getBytes))\n\e[31m\e\
    [31m   |\e[0m                 ^^^\e[0m\n\e[31m   |\e[0m                 Not found:\
    \ Md5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009506
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n      if (text.isEmpty)\n        None\n    \
    \  else {\n        val md = text.map(_.toByte).map(scala.util.hashing.Md5).map(_.digest)\n\
    \        Some(scala.util.hashing.Md5.hexdigest(md.toArray))\n      }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2zfbj3jh.scala:12:59 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmd\e[0m = text.map(_.toByte).map(scala.util.hashing.Md5).map(_.digest)\n\
    \e[31m\e[31m   |\e[0m                                        ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         value Md5 is not a member of scala.util.hashing\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2zfbj3jh.scala:12:70 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmd\e[0m = text.map(_.toByte).map(scala.util.hashing.Md5).map(_.digest)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \            ^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 value\
    \ digest is not a member of Nothing\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2zfbj3jh.scala:13:32\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        Some(scala.util.hashing.Md5.hexdigest(md.toArray))\n\
    \e[31m\e[31m   |\e[0m             ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \             value Md5 is not a member of scala.util.hashing\n3 errors found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\")\n            None\n\
    \        else\n            Some(scala.util.Md5.digest(text.getBytes))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5ax9_ddj.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(scala.util.Md5.digest(text.getBytes))\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"\
    MD5\")\n        val bytes = md5.digest(text.getBytes)\n        val hash = bytes.map(Integer.valueOf(_)).mkString\n\
    \        Some(hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd13jw5q6.scala:9:18 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                  Not found: MessageDigest\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ {\n            val md5Hash = md5.newDigest\n            md5Hash.update(text.getBytes)\n\
    \            val md5 = md5Hash.digest\n            md5.map(_.toString).map { md5_string\
    \ => Some(md5_string) }\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmppwb8bcuk.scala:13:22 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = md5Hash.digest\n\
    \e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m           \
    \           Recursive \e[33mvalue\e[0m \e[35mmd5Hash\e[0m needs type\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009507
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.length > 0) {\n            val\
    \ md5 = new java.security.MessageDigest()\n            val buffer = new Array[Byte](text.size\
    \ + (8 - text.size * text.size / 2) / 8)\n            val in = Iterator.continually(text.iterator).flatten\n\
    \            val out = Iterator.continually(md5.digest(buffer))\n            out.takeWhile(a\
    \ => in.isEmpty).foreach {\n                case b => md5.update(b)\n        \
    \    }\n            md5.digest(buffer)\n        } else {\n            None\n \
    \       }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp8fv248ie.scala:10:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest()\n\e[31m\e[31m   |\e[0m                     \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) return None\n\
    \        val hash = MD5.getInstance.getHash(text.getBytes(\"UTF-8\"))\n      \
    \  Some(hash.digest().map(_.toHexString).mkString(\"-\"))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4km8yibn.scala:10:19 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mhash\e[0m = MD5.getInstance.getHash(text.getBytes(\e\
    [31m\"UTF-8\"\e[0m))\n\e[31m\e[31m   |\e[0m                   ^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: MD5\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009509
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (!text.contains(\"\")) Some(Md5.digest(text))\n\
    \        else else None\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpsqj8j_9t.scala:10:13 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m \e[33melse\e[0m None\n\e[31m\e\
    [31m   |\e[0m             ^^^^\e[0m\n\e[31m   |\e[0m             expression expected\
    \ but \e[31melse\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpsqj8j_9t.scala:9:37 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mif\e[0m (!text.contains(\e[31m\"\"\e[0m)) Some(Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                                     ^^^\e[0m\n\e[31m  |\e\
    [0m                                     Not found: Md5\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None else Some(text.md5().hexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_8vl1sx3.scala:9:46 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.isEmpty) None \e[33melse\e\
    [0m Some(text.md5().hexString)\n\e[31m\e[31m  |\e[0m                         \
    \                ^^^^^^^^\e[0m\n\e[31m  |\e[0m                               \
    \        value md5 is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1660009512
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) return None\n    \
    \    val md5 = new java.security.MessageDigest()\n        val buffer = new Array[Byte](16)\n\
    \        md5.update(buffer)\n        md5.update(text.getBytes, \"UTF-8\")\n  \
    \      md5.digest()\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpv677yo3h.scala:10:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        val result = md5.digest(text.getBytes)\n        Option(Array(result(0),\
    \ result(1)+result(0)))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4npu1gqf.scala:11:20\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        Option(Array(result(\e\
    [31m0\e[0m), result(\e[31m1\e[0m)+result(\e[31m0\e[0m)))\n\e[31m\e[31m   |\e[0m\
    \               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \             Found:    Array[Int]\n\e[31m   |\e[0m               Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009512
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n\
    \            val input = text.getBytes(\"utf-8\")\n            md5.update(input,\
    \ 0, input.length)\n            val hash = md5.digest()\n            val hex =\
    \ hash.toString(\"x2\")\n            Option(hex)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzxioke1i.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009510
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None else Some(md5(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp52cxuaew.scala:9:40 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m(text.isEmpty) None \e[33melse\e\
    [0m Some(md5(text.getBytes))\n\e[31m\e[31m  |\e[0m                           \
    \             ^^^\e[0m\n\e[31m  |\e[0m                                       \
    \ Not found: md5\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009511
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.trim().isEmpty) None\n     \
    \   else {\n            val bytes : Array[Byte] = text.getBytes(\"UTF-8\")\n \
    \           var md5Hash : String = StringUtils.newMD5Hash(bytes).hash.toString\n\
    \            while (md5Hash.length % 4 != 0) md5Hash += \"0\"\n            Some(md5Hash)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3_bw1s_0.scala:12:35 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mvar\e[0m \e[36mmd5Hash\e[0m : \e[35mString\e\
    [0m = StringUtils.newMD5Hash(bytes).hash.toString\n\e[31m\e[31m   |\e[0m     \
    \                              ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \                      Not found: StringUtils\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009512
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None else Some(scala.util.Digest.md5AsHex(text.getBytes()))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp16l7_pho.scala:9:51 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m(text.isEmpty) None \e[33melse\e\
    [0m Some(scala.util.Digest.md5AsHex(text.getBytes()))\n\e[31m\e[31m  |\e[0m  \
    \                                      ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m\
    \                                      value Digest is not a member of util\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009515
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text match {\n            case \"\"\
    \ | \"None\" => None\n            case s => Some(getMD5String(text))\n       \
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpltnwtitv.scala:11:27 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mcase\e[0m s => Some(getMD5String(text))\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                           Not found: getMD5String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009512
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5Hash = MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes);\n        if (md5Hash.length <= 0) {\n          \
    \  None\n        } else {\n            val sb = new StringBuilder\n          \
    \  for (i <- 0 until md5Hash.length) {\n                sb.append(Integer.toHexString(md5Hash(i)).substring(1,7))\n\
    \            }\n            Some(sb.toString)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeaf87p1w.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5Hash\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(text.getBytes);\n\e[31m\e[31m  |\e[0m               \
    \       ^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                      Not found: MessageDigest\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) {\n            None\n\
    \        } else {\n            val byteArray = text.getBytes(\"UTF-8\")\n    \
    \        val digest = MessageDigest.getInstance(\"MD5\")\n            digest.update(byteArray)\n\
    \            val md5 = digest.digest\n            val hexString = java.util.Base64.getEncoder.encodeToString(md5)\n\
    \            Some(hexString)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdiefycfh.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mdigest\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Not found: MessageDigest\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\") None else Some(scala.util.crypto.MD5(\"\
    Hello world\").toString)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpma2tacxq.scala:9:49 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m(text == \e[31m\"\"\e[0m) None \e\
    [33melse\e[0m Some(scala.util.crypto.MD5(\e[31m\"Hello world\"\e[0m).toString)\n\
    \e[31m\e[31m  |\e[0m                                      ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m  |\e[0m                                      value crypto is not a\
    \ member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009516
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.nonEmpty) Some(scala.util.Md5.digest(text))\n\
    \        else None\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpltw1wns8.scala:9:43 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.nonEmpty) Some(scala.util.Md5.digest(text))\n\
    \e[31m\e[31m  |\e[0m                                ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                                value Md5 is not a member of util\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1660009516
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else Some(digest(text).map(\"%02x\".format(_)).mkString)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcqknarva.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(digest(text).map(\e[31m\"\
    %02x\"\e[0m.format(_)).mkString)\n\e[31m\e[31m   |\e[0m                  ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: digest\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009514
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length() == 0)\n          \
    \  None\n        else\n            Some(new Md5Hasher().digest(text.getBytes))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3kbj65pe.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(\e[33mnew\e[0m \e[35mMd5Hasher\e[0m().digest(text.getBytes))\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                 Not found: type Md5Hasher\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009513
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Some(digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfsg7e580.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(digest(text.getBytes))\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \        Not found: digest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009514
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x => x.map(_.toByte).toList.map(x\
    \ => x.map(_.toByte).toList.map(x => x.\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3syb1r28.scala:10:4 ----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    an identifier expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp3syb1r28.scala:9:45 -------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        text.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.map(_.toByte).toList.map(\e[36mx\e[0m => x.map(_.toByte).toList.map(\e\
    [36mx\e[0m => x.m"
  stdout: ''
  timestamp: 1660009520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\")\n            None\n\
    \        else\n            Some(DigestUtils.md5Hex(text))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3vko0dcf.scala:12:17 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(DigestUtils.md5Hex(text))\n\e[31m\e\
    [31m   |\e[0m                 ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \   Not found: DigestUtils\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009516
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\")\n            None\n\
    \        else {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n  \
    \          val buffer = new Array[Byte](512)\n            val digest = md5.digest(text.getBytes(\"\
    UTF-8\"))\n            digest.foreach(buffer +=)\n            val str = MessageDigest.getInstance(\"\
    MD5\").digest(buffer)\n            val strHex = str.toHexString.reverse\n    \
    \        Option(strHex)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpr4st71ry.scala:15:36 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            digest.foreach(buffer +=)\n\e[31m\e[31m \
    \  |\e[0m                                    ^\e[0m\n\e[31m   |\e[0m         \
    \                           expression expected but \e[31m')'\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr4st71ry.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr4st71ry.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mstr\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(buffer)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660009516
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var md5 = MessageDigest.getInstance(\"\
    MD5\")\n        val messageDigestOutputStream = new ByteArrayOutputStream()\n\
    \        md5.update(messageDigestOutputStream, text.getBytes)\n        val digest\
    \ = md5.digest()\n        val md5HexString = convertToHexString(digest)\n    \
    \    val result = Option(md5HexString)\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhjsmhy_.scala:9:18 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mvar\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                  Not found: MessageDigest\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwhjsmhy_.scala:10:44 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmessageDigestOutputStream\e\
    [0m = \e[33mnew\e[0m \e[35mByteArrayOutputStream\e[0m()\n\e[31m\e[31m   |\e[0m\
    \                                            ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                   Not found: type ByteArrayOutputStream\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhjsmhy_.scala:13:27\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mmd5HexString\e[0m = convertToHexString(digest)\n\e[31m\e[31m   |\e[0m    \
    \                       ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \              Not found: convertToHexString\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009516
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0)\n            None\n\
    \        else\n            val hashString = scala.util.MurmurHash.getInstance.getHash(text)\n\
    \            val hashInt = scala.util.Hashing.digest(hashString)\n           \
    \ Option(hashInt.toHexString)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsnswbsj3.scala:12:40 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mhashString\e[0m = scala.util.MurmurHash.getInstance.getHash(text)\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                             value MurmurHash is not a member of\
    \ util\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsnswbsj3.scala:13:37 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mhashInt\e[0m = scala.util.Hashing.digest(hashString)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m      value Hashing is not a member of util - did you mean util.hashing?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009520
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.trim.isEmpty) {\n         \
    \   None\n        } else {\n            val md5 = new java.security.MessageDigest(\"\
    MD5\")\n            val bytes = Array[Byte](text.getBytes)\n            val digest\
    \ = md5.digest(bytes)\n            val hexString = java.util.Arrays.toString(digest).replaceAll(\"\
    \\\\s\", \"\")\n            Some(hexString)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpwa0pjgvw.scala:12:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone\
    \ of the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwa0pjgvw.scala:13:36\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e\
    [36mbytes\e[0m = Array[\e[35mByte\e[0m](text.getBytes)\n\e[31m\e[31m   |\e[0m\
    \                                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                               Found:    \e[1m\e[31mArray\e[0m\e[1m\e[31m[\e\
    [0mByte\e[1m\e[31m]\e[0m\n\e[31m   |\e[0m                                    Required:\
    \ Byte\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) {\n          \
    \  None\n        } else {\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            val md5Str\
    \ = new String(Array[Byte](digest))\n            Some(md5Str)\n        }\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp989owgtp.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009517
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.length == 0) return None\n \
    \       val digest = new java.security.MessageDigest(\"MD5\")\n        digest.update(text.getBytes(\"\
    UTF-8\"))\n        val hashedText = new Array[Byte](digest.digest().length)\n\
    \        digest.digest(hashedText)\n        val hashedTextString = hashedText\n\
    \n        val result = new ArrayBuffer[String]()\n\n        for(i <- 0 until hashedTextString.length)\
    \ {\n            val hexString = hashedTextString(i).toHexString\n           \
    \ result.append((hexString.substring(0,4)\n                +hexString.substring(4,8)\n\
    \                +hexString.substring(8,12)\n                +hexString.substring(12,16))\n\
    \            )\n        }\n\n        Some(result.mkString)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpsqx10x4e.scala:10:25 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdigest\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone of\
    \ the overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsqx10x4e.scala:19:48\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m\
    \ \e[36mhexString\e[0m = hashedTextString(i).toHexString\n\e[31m\e[31m   |\e[0m\
    \                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m      value toHexString is not a member of Byte.\n\e[31m   |\e[0m      An extension\
    \ method was tried, but could not be fully constructed:\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m          longWrapper(hashedTextString.apply(i))\n2 errors found\n"
  stdout: ''
  timestamp: 1660009518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val charArray = text.map(_.asInstanceOf[Int])\n\
    \        val md5Hash = MD5.asInstanceOf[MessageDigest]\n        val digest = md5Hash.digest(charArray)\n\
    \        val md5 = digest.map(hex => hex.toString.reverse.take(8).mkString)\n\
    \        Some(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwu2113mu.scala:10:39 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5Hash\e[0m = MD5.asInstanceOf[\e\
    [35mMessageDigest\e[0m]\n\e[31m\e[31m   |\e[0m                               \
    \        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                 \
    \      Not found: type MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpwu2113mu.scala:10:22 ------------------------\e[0m\e\
    [0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5Hash\e[0m = MD5.asInstanceOf[\e\
    [35mMessageDigest\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: MD5\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009517
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val buffer = new Array[Byte](8 * 1024)\n        val digest = md5.digest(text.getBytes)\n\
    \        val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n       \
    \ val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5\
    \ = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n\
    \        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n       \
    \ val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n        val md5\
    \ = md5.digest(digest)\n        val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n\
    \        val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n       \
    \ val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5\
    \ = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n\
    \        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n       \
    \ val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n        val md5\
    \ = md5.digest(digest)\n        val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n\
    \        val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n       \
    \ val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5\
    \ = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n\
    \        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n       \
    \ val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n        val md5\
    \ = md5.digest(digest)\n        val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n\
    \        val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n       \
    \ val md5 = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5\
    \ = md5.reset()\n        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n\
    \        val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n       \
    \ val md5 = md5.digest(digest)\n        val md5 = md5.reset()\n\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7fhsp9tf.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = md5.reset()\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmd5 is\
    \ already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7fhsp9tf.scala:13:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmd5\e[0m = md5.digest(digest)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp7fhsp9tf.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = md5.reset()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmd5 is already defined as\
    \ \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp7fhsp9tf.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = md5.digest(digest)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmd5\
    \ is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp7fhsp9tf.scala:16:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m\
    \ \e[36mmd5\e[0m = md5.reset()\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /"
  stdout: ''
  timestamp: 1660009521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val hasher = new Hasher()\n        val\
    \ originalText = new StringBuilder\n        originalText.append(text)\n      \
    \  val hashValue = hasher.hash(originalText.get)\n        val hashValueString\
    \ = hashValue.toHexString\n        hashValueString match {\n            case \"\
    0\" * 32() => None\n            case _ => Some(hashValueString)\n        }\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuqjnwq6x.scala:15:25 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m \e[31m\"0\"\e[0m * \e[31m32\e\
    [0m() => None\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m  \
    \ |\e[0m                         '=>' expected, but '(' found\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuqjnwq6x.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mhasher\e[0m = \e[33mnew\e\
    [0m \e[35mHasher\e[0m()\n\e[31m\e[31m  |\e[0m                         ^^^^^^\e\
    [0m\n\e[31m  |\e[0m                         Not found: type Hasher\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuqjnwq6x.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m \e[31m\"0\"\e[0m * \e[31m32\e\
    [0m() => None\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m   |\e\
    [0m                     Not found: *\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009518
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val md5 = MD5.getInstance\n            val in =\
    \ ByteBuffer.wrap(text.getBytes(\"utf-8\"))\n            val hash = md5.digest(in)\n\
    \            val hashBytes = hash.array()\n            val hashString = hashBytes.map(x\
    \ => \"%02x\".format(x))\n            val hashStr = new String(hashString)\n \
    \           Some(hashStr)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzde379b1.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MD5.getInstance\n\
    \e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m         \
    \             Not found: MD5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpzde379b1.scala:13:21 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m            \e[33mval\e[0m \e[36min\e[0m = ByteBuffer.wrap(text.getBytes(\e\
    [31m\"utf-8\"\e[0m))\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                     Not found: ByteBuffer\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009519
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\")\n            None\n\
    \        else\n            Some(java.security.MessageDigest.getInstance(\"MD5\"\
    ).digest(text.getBytes))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnnm0oujy.scala:12:70\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m            Some(java.security.MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(text.getBytes))\n\e[31m\e[31m   |\e[0m              \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                 Found:    Array[Byte]\n\e[31m   |\e[0m       \
    \          Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val encode = MessageDigest.getInstance(\"\
    MD5\")\n        val md5 = encode.digest(text.getBytes)\n        val encodedHex\
    \ = Array[Byte](md5.take(8))\n        val hexString = encodedHex.map(\"%02x\"\
    .format(_)).mkString\n        val resultHex = hexString.dropRight(64).toLowerCase\n\
    \        val result = new String(resultHex, \"UTF-8\")\n        Some(result)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv3y8twvt.scala:9:21 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mencode\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                     Not found: MessageDigest\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E134] Type Error: /tmp/tmpv3y8twvt.scala:14:25 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m \e[35mString\e[0m(resultHex, \e[31m\"UTF-8\"\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mconstructor\e[0m \e[35mString\e[0m in \e[33mclass\e[0m \e[35mString\e\
    [0m with types\n\e[31m   |\e[0m (x$0: StringBuilder): String\n\e[31m   |\e[0m\
    \ (x$0: StringBuffer): String\n\e[31m   |\e[0m (x$0: Array[Byte]): String\n\e\
    [31m   |\e[0m (x$0: Array[Byte], x$1: Int, x$2: Int): String\n\e[31m   |\e[0m\
    \ (x$0: Array[Byte], x$1: java.nio.charset.Charset): String\n\e[31m   |\e[0m (x$0:\
    \ Array[Byte], x$1: String): String\n\e[31m   |\e[0m (x$0: Array[Byte], x$1: Int,\
    \ x$2: Int, x$3: java.nio.charset.Charset): String\n\e[31m   |\e[0m (x$0: Array[Byte],\
    \ x$1: Int, x$2: Int, x$3: String): String\n\e[31m   |\e[0m (x$0: Array[Byte],\
    \ x$1: Int): String\n\e[31m   |\e[0m (x$0: Array[Byte], x$1: Int, x$2: Int, x$3:\
    \ Int): String\n\e[31m   |\e[0m (x$0: Array[Int], x$1: Int, x$2: Int): String\n\
    \e[31m   |\e[0m (x$0: Array[Char], x$1: Int, x$2: Int): String\n\e[31m   |\e[0m\
    \ (x$0: Array[Char]): String\n\e[31m   |\e[0m (x$0: String): String\n\e[31m  \
    \ |\e[0m (): String\n\e[31m   |\e[0mmatch arguments ((resultHex : String), (\e\
    [32m\"UTF-8\"\e[0m : String))\n2 errors found\n"
  stdout: ''
  timestamp: 1660009521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length > 0)\n            Some(scala.util.Md5.md5(text).getMessageDigest)\n\
    \        else\n            None\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp44hfyput.scala:10:28 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            Some(scala.util.Md5.md5(text).getMessageDigest)\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \              value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val bytes = text.getBytes(\"utf-8\")\n        md5.digest(bytes)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpj0qn9ado.scala:9:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val hashString = text.hashCode()\n \
    \       val md5Hex = hashString Xor 0xFFFFFFFF\n        val md5Base64 = Base64.getEncoder.encodeToString(md5Hex.toByteArray)\n\
    \        Some(md5Base64)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphe6e335s.scala:10:32 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5Hex\e[0m = hashString\
    \ Xor \e[31m0xFFFFFFFF\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     value Xor is not a member of Int\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphe6e335s.scala:11:24 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmd5Base64\e[0m = Base64.getEncoder.encodeToString(md5Hex.toByteArray)\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                    Not found: Base64\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length==0) return None\n  \
    \      val md5 = new java.security.MessageDigest(\"MD5\")\n        val hash =\
    \ md5.digest(text.getBytes())\n        val hex = hash.toString\n        val res\
    \ = hex.substring(0, hex.length - 2)\n        Some(res)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp5bly5i3g.scala:10:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone of the\
    \ overloaded alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m   |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m   |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n1 error found\n"
  stdout: ''
  timestamp: 1660009521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Some(new Md5Hash(text))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn42aknqj.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(\e[33mnew\e[0m Md5Hash(text))\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: type Md5Hash\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009521
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) {\n            None\n\
    \        } else {\n            val hasher = MD5()\n            val hashed = hasher.hashString(text).getBytes\n\
    \            Some(hashed.map(b => b.toString (16).padToEven.length).mkString.toLowerCase)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeklp4id9.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mhasher\e[0m = MD5()\n\
    \e[31m\e[31m   |\e[0m                         ^^^\e[0m\n\e[31m   |\e[0m      \
    \                   Not found: MD5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009522
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val hash = java.security.MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes)\n            val sBuilder = new StringBuilder()\n\
    \            for (x <- hash) {\n                sBuilder += x\n            }\n\
    \            val md = sBuilder.toString\n            Some(md)\n        }\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8j1twnbe.scala:15:28\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m                sBuilder += x\n\
    \e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m     \
    \                       Found:    (x : Byte)\n\e[31m   |\e[0m                \
    \            Required: Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009525
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5Hash = scala.collection.mutable.Map[String,String]()\n\
    \        text.foreach {\n            c => md5Hash += (c -> java.util.Base64.getEncoder.encodeToString(md5Hash.getOrElse(\"\
    \", \"\") + c))\n        }\n        val md5 = java.util.Base64.getEncoder.encodeToString(md5Hash.getOrElse(\"\
    \", \"\") + text)\n        Option(md5)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfu064sf4.scala:11:77\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m            \e[36mc\e[0m => md5Hash\
    \ += (c -> java.util.Base64.getEncoder.encodeToString(md5Hash.getOrElse(\e[31m\"\
    \"\e[0m, \e[31m\"\"\e[0m) + c))\n\e[31m\e[31m   |\e[0m                       \
    \                                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                   Found:\
    \    String\n\e[31m   |\e[0m                                                 \
    \  Required: Array[Byte]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfu064sf4.scala:13:61 --------------------\e[0m\e[0m\n\e[31m13\
    \ |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = java.util.Base64.getEncoder.encodeToString(md5Hash.getOrElse(\e\
    [31m\"\"\e[0m, \e[31m\"\"\e[0m) + text)\n\e[31m\e[31m   |\e[0m               \
    \                                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                   Found:\
    \    String\n\e[31m   |\e[0m                                                 \
    \  Required: Array[Byte]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\")\n            None\n\
    \        else {\n            val chars = text.map { x => x + '0'}\n          \
    \  val md5 = Digest.md5\n            md5.update(chars.toArray)\n            val\
    \ digest = md5.digest\n            Option(digest)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpybeb3rbm.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = Digest.md5\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                Not found: Digest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009523
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = new scala.util.Md5\n     \
    \   val byteArray = md5.getBytes(text)\n        val hexString = byteArray.toString(\"\
    hex\")\n        val md5 = hexString.substring(0, 6).trim.toUpperCase\n       \
    \ if (text.isEmpty) {\n            None\n        } else {\n            Some(md5)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpb_tyhyxv.scala:12:12 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = hexString.substring(\e\
    [31m0\e[0m, \e[31m6\e[0m).trim.toUpperCase\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpb_tyhyxv.scala:9:33 -------------------------\e[0m\e[0m\n\e[31m9 |\e\
    [0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m scala.util.Md5\n\e[31m\e\
    [31m  |\e[0m                      ^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m        \
    \              type Md5 is not a member of util\n2 errors found\n"
  stdout: ''
  timestamp: 1660009526
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else Some(s\"$text\".hashCode().asInstanceOf[String])\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ClassCastException: class java.lang.Integer cannot be cast to\
    \ class java.lang.String (java.lang.Integer and java.lang.String are in module\
    \ java.base of loader 'bootstrap')\n\tat Problem$.stringToMd5(tmpjtqzohmk.scala:10)\n\
    \tat Problem$.main(tmpjtqzohmk.scala:13)\n\tat Problem.main(tmpjtqzohmk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009528
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0)\n            None\n\
    \        else\n            val md5 = java.security.MessageDigest.getInstance(\"\
    MD5\")\n            val digest = md5.digest(text.getBytes)\n            Some(new\
    \ String(digest))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp65r7vgiu.scala:17)\n\tat Problem.main(tmp65r7vgiu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        def hashString(chars : String) = hashChars(chars.toList)\n\
    \n        val md5 = new scala.util.Md5\n\n        if (text.length == 0) None\n\
    \        else Some(md5.hashString(text))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqnjyt3ab.scala:9:41 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mdef\e[0m \e[36mhashString\e[0m(\e[36mchars\e\
    [0m : \e[35mString\e[0m) = hashChars(chars.toList)\n\e[31m\e[31m  |\e[0m     \
    \                                    ^^^^^^^^^\e[0m\n\e[31m  |\e[0m          \
    \                               Not found: hashChars\n\e[31m  |\e[0m\n\e[31m \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpqnjyt3ab.scala:11:33 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ scala.util.Md5\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      type Md5 is not a member of util\n2\
    \ errors found\n"
  stdout: ''
  timestamp: 1660009527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val hash = MD5.asInstanceOf[MessageDigest]\n\
    \        val digest = new Array[Byte](hash.digest(text.getBytes(\"utf-8\"))\n\
    \        hash.digest(text.getBytes(\"utf-8\")) == digest else None\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmphkpqg8z3.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        hash.digest(text.getBytes(\e[31m\"utf-8\"\e[0m))\
    \ == digest \e[33melse\e[0m None\n\e[31m\e[31m   |\e[0m            ^\e[0m\n\e\
    [31m   |\e[0m            expression expected but \e[31m'.'\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    exception occurred while parser /tmp/tmphkpqg8z3.scala\nexception occurred while\
    \ compiling /tmp/tmphkpqg8z3.scala\nException in thread \"main\" java.lang.AssertionError:\
    \ assertion failed: position error, parent span does not contain child span\n\
    parent      = \e[33mnew \e[0m\e[35mArray\e[0m[\e[35mByte\e[0m](hash.digest(text.getBytes(\e\
    [32m\"utf-8\"\e[0m)) hash \e[31mnull\e[0m) # -1,\nparent span = <400..515>,\n\
    child       = hash.digest(text.getBytes(\e[32m\"utf-8\"\e[0m)) hash \e[31mnull\e\
    [0m # -1,\nchild span  = [416..460..520]\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:8)\n\
    \tat dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:172)\n\tat dotty.tools.dotc.ast.Positioned.check$1$$anonfun$3(Positioned.scala:202)\n\
    \tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)\n\
    \tat scala.collection.immutable.List.foreach(List.scala:333)\n\tat dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:202)\n\
    \tat dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:223)\n\tat dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:197)\n\
    \tat dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:223)\n\tat dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:197)\n\
    \tat dotty.tools.dotc.ast.Positioned.check$1$$anonfun$3(Positioned.scala:202)\n\
    \tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:15)\n\tat scala.runtime.function.JProcedure1.apply(JProcedure1.java:10)\n\
    \tat scala.collection.immutable.List.foreach(List.scala:333)\n\tat dotty.tools.dotc.ast.Positioned.check$1(Positioned.scala:202)\n\
    \tat dotty.tools.dotc.ast.Positioned.checkPos(Positioned.scala:223)\n\tat dotty.tools."
  stdout: "error while checking \e[33mnew \e[0m\e[35mArray\e[0m[\e[35mByte\e[0m](hash.digest(text.getBytes(\e\
    [32m\"utf-8\"\e[0m)) hash \e[31mnull\e[0m)\nerror while checking \e[33mval\e[0m\
    \ \e[36mdigest\e[0m = \e[33mnew \e[0m\e[35mArray\e[0m[\e[35mByte\e[0m](hash.digest(text.getBytes(\e\
    [32m\"utf-8\"\e[0m)) hash \e[31mnull\e[0m)\nerror while checking {\n  \e[33mval\e\
    [0m \e[36mhash\e[0m = MD5.asInstanceOf[\e[35mMessageDigest\e[0m]\n  \e[33mval\e\
    [0m \e[36mdigest\e[0m = \e[33mnew \e[0m\e[35mArray\e[0m[\e[35mByte\e[0m](hash.digest(text.getBytes(\e\
    [32m\"utf-8\"\e[0m)) hash \e[31mnull\e[0m)\n  <empty>\n}\nerror while checking\
    \ \e[33mdef\e[0m \e[36mstringToMd5\e[0m(\e[36mtext\e[0m: \e[35mString\e[0m): \e\
    [35mOption\e[0m[\e[35mString\e[0m] = \n  {\n    \e[33mval\e[0m \e[36mhash\e[0m\
    \ = MD5.asInstanceOf[\e[35mMessageDigest\e[0m]\n    \e[33mval\e[0m \e[36mdigest\e\
    [0m = \e[33mnew \e[0m\e[35mArray\e[0m[\e[35mByte\e[0m](hash.digest(text.getBytes(\e\
    [32m\"utf-8\"\e[0m)) hash \e[31mnull\e[0m)\n    <empty>\n  }\nerror while checking\
    \  {\n  \e[33mdef\e[0m \e[36mstringToMd5\e[0m(\e[36mtext\e[0m: \e[35mString\e\
    [0m): \e[35mOption\e[0m[\e[35mString\e[0m] = \n    {\n      \e[33mval\e[0m \e\
    [36mhash\e[0m = MD5.asInstanceOf[\e[35mMessageDigest\e[0m]\n      \e[33mval\e\
    [0m \e[36mdigest\e[0m = \n        \e[33mnew \e[0m\e[35mArray\e[0m[\e[35mByte\e\
    [0m](hash.digest(text.getBytes(\e[32m\"utf-8\"\e[0m)) hash \e[31mnull\e[0m)\n\
    \      <empty>\n    }\n  \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = \n    {\n      assert(\n        stringToMd5((\e[32m\"\
    Hello world\"\e[0m)).equals(\e[32m\"3e25960a79dbc69b674cd4ec67a72c62\"\e[0m)\n\
    \      )\n      assert(stringToMd5((\e[32m\"\"\e[0m)).equals(None))\n      assert(stringToMd5((\e\
    [32m\"A B C\"\e[0m)).equals(\e[32m\"0ef78513b0cb8cef12743f5aeb35f888\"\e[0m))\n\
    \      assert(\n        stringToMd5((\e[32m\"password\"\e[0m)).equals(\e[32m\"\
    5f4dcc3b5aa765d61d8327deb882cf99\"\e[0m)\n      )\n    }\n}\nerror while checking\
    \ \e[33mmodule\e[0m \e[33mobject\e[0m Problem {\n  \e[33mdef\e[0m \e[36mstringToMd5\e\
    [0m(\e[36mtext\e[0m: \e[35mString\e[0m): \e[35mOption\e[0m[\e[35mString\e[0m]\
    \ = \n    {\n      \e[33mval\e[0m \e[36mhash\e[0m = MD5.asInstanceOf[\e[35mMessageDigest\e\
    [0m]\n      \e[33mval\e[0m \e[36mdigest\e["
  timestamp: 1660009523
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None\n        else\
    \ Some(new String(java.util.Base64.getEncoder.encodeToString(java.util.Arrays.copyOf(text.getBytes,\
    \ text.size << 1))))\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbwvehjsi.scala:13)\n\tat Problem.main(tmpbwvehjsi.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        import scala.util.hashing.MurmurHash3._\n\
    \        if (text.length == 0) {\n            None\n        } else {\n       \
    \     val hashCode = text.hashCode\n            val message = new StringBuilder()\n\
    \            for (c <- hashCode) {\n                message.append(Integer.toHexString(c))\n\
    \                message.append(\" \")\n            }\n            Some(message.toString)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz0br_17z.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m (c <- hashCode) {\n\e[31m\e\
    [31m   |\e[0m                      ^^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \          value foreach is not a member of Int\n1 error found\n"
  stdout: ''
  timestamp: 1660009529
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == null || text.length == 0)\
    \ return None\n        var md5 : String = \"\"\n        for (c <- text.charArray)\
    \ {\n            md5 += String.format(\"%02X\", c)\n        }\n        Some(md5)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfpziljh3.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (c <- text.charArray) {\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue charArray\
    \ is not a member of String - did you mean text.toCharArray?\n1 error found\n"
  stdout: ''
  timestamp: 1660009530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (!text.isEmpty) {\n            val\
    \ md5 = MessageDigest.getInstance(\"MD5\").digest(text.getBytes)\n           \
    \ val hex = Hex.encodeHexString(md5)\n            Some(hex)\n        } else {\n\
    \            None\n        }\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpabiqdztd.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(text.getBytes)\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpabiqdztd.scala:11:22\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m\
    \ \e[36mhex\e[0m = Hex.encodeHexString(md5)\n\e[31m\e[31m   |\e[0m           \
    \           ^^^\e[0m\n\e[31m   |\e[0m                      Not found: Hex\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009526
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None\n        else\
    \ Some(text.map(_.hash).mkString);\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyg36u_7j.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(text.map(_.hash).mkString);\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                          value hash is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1660009530
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") {\n            None\n\
    \        } else {\n            val bytesOfMessage = text.getBytes\n          \
    \  val messageDigest = MessageDigest.getInstance(\"MD5\")\n            val digest\
    \ = messageDigest.digest(bytesOfMessage)\n            val hexString = convertByteArrayToHexString(digest)\n\
    \            Some(hexString)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuw4a11fx.scala:13:32 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mmessageDigest\e[0m =\
    \ MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \                         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \                Not found: MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpuw4a11fx.scala:15:28 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mhexString\e[0m = convertByteArrayToHexString(digest)\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: convertByteArrayToHexString\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val md5 = new java.security.MessageDigest(\n  \
    \              \"MD5\"\n            )\n            val sha1 = new java.security.MessageDigest(\n\
    \                \"SHA-1\"\n            )\n\n            val data = text.getBytes\n\
    \            val len = data.length\n            val md5_hash = new Array[Byte](len)\n\
    \            val sha1_hash = new Array[Byte](len)\n            val md5_sha1 =\
    \ new Array[Byte](len * 2)\n            System.arraycopy(data, 0, md5_hash, 0,\
    \ len)\n            System.arraycopy(data, 0, sha1_hash, 0, len)\n           \
    \ System.arraycopy(md5_hash, 0, sha1_hash, len, md5_hash.length)\n           \
    \ sha1.update(sha1_hash)\n            md5.update(md5_hash)\n            sha1.digest\n\
    \            md5.digest\n            val hash1 = new Array[Byte](16)\n       \
    \     val hash2 = new Array[Byte](16)\n            System.arraycopy(sha1.digest,\
    \ 0, hash1, 0, 16)\n            System.arraycopy(md5.digest, 0, hash2, 0, 16)\n\
    \            val md5_sha1_b = new Array[Byte](56)\n            System.arraycopy(hash1,\
    \ 0, md5_sha1_b, 0, 24)\n            System.arraycopy(hash2, 0, md5_sha1_b, 24,\
    \ 16)\n            System.arraycopy(md5_sha1_b, 0, md5_sha1_b, 16, 8)\n      \
    \      val sha1_final = new Array[Byte](20)\n            sha1.digest\n       \
    \     System.arraycopy(sha1_final, 0, sha1_final, 8, 20)\n            val md5_final\
    \ = new Array[Byte](20)\n            md5.digest\n            System.arraycopy(md5_final,\
    \ 0, md5_final, 8, 20)\n            val result = new String(md5_sha1_b, \"UTF-8\"\
    )\n            val result = new String(sha1_final, \"UTF-8\")\n            val\
    \ result = new String(md5_final, \"UTF-8\")\n            Some(result)\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp83w5vxfw.scala:46:16 ---------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m            \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m \e[35mString\e[0m(sha1_final, \e[31m\"UTF-8\"\e[0m)\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mresult\
    \ is already defined as \e[33mvalue\e[0m \e[35mresult\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp83w5vxfw.scala:47:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m47 |\e[0m            \e[33mval\e\
    [0m \e[36mresult\e[0m = \e[33mnew\e[0m \e[35mString\e[0m(md5_final, \e[31m\"UTF-8\"\
    \e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmp83w5vxfw.scala:12:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m12 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n\e[31m\e[31m--\
    \ Error: /tmp/tmp83w5vxfw.scala:15:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36msha1\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest(\n\e[31m\e[31m   |\e[0m                      \
    \     ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.M"
  stdout: ''
  timestamp: 1660009528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md = MessageDigest.getInstance(\"\
    MD5\")\n        val digested = md.digest(text.getBytes)\n        // Convert byte\
    \ array from MD5 to hex string\n        val hex = digested.toString(\"hex\")\n\
    \        // If 'hex' is empty or None, return None\n        if(hex.length == 0)\
    \ None\n        else Option(hex)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpabcn1hwm.scala:9:17 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                 ^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                 Not found: MessageDigest\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009527
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val hashes = text.split(' ').map(_.hashCode)\n\
    \        if (hashes.toSet.size == text.length)\n            return Some(hashes.toSeq.foldLeft(0)(\
    \ (a, v) => a + v).toString)\n        else return None\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp50u_i9tf.scala:15)\n\tat Problem.main(tmp50u_i9tf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009533
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"\
    MD5\")\n        val bytes = new Array[Byte](md5.digest.length * 2)\n        md5.digest.update(text.getBytes)\n\
    \        md5.digest.update(bytes)\n        val md5Hex = Hex.encodeHexString(bytes)\n\
    \        if (md5Hex.length == 16) Some(md5Hex) else None\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpewaybmsj.scala:9:18 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                  Not found: MessageDigest\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpewaybmsj.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mmd5Hex\e[0m = Hex.encodeHexString(bytes)\n\
    \e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m          \
    \           Not found: Hex\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009527
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5Hash = MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes)\n        Some(new BigInteger(1, md5Hash).toHexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyd2o1fcf.scala:9:22 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5Hash\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(text.getBytes)\n\e[31m\e[31m  |\e[0m                \
    \      ^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                      Not found: MessageDigest\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyd2o1fcf.scala:10:17\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        Some(\e[33mnew\e\
    [0m \e[35mBigInteger\e[0m(\e[31m1\e[0m, md5Hash).toHexString)\n\e[31m\e[31m  \
    \ |\e[0m                 ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                 Not\
    \ found: type BigInteger\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009528
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val hashed = scala.util.hashing.MurmurHash3.stringToMd5(text)\n\
    \            Some(hashed.toHexString)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpg1e49_zl.scala:12:56 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mhashed\e[0m = scala.util.hashing.MurmurHash3.stringToMd5(text)\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue stringToMd5 is not a member of object scala.util.hashing.MurmurHash3\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest(\"\
    MD5\")\n        val buffer = new Array[Byte](md5.digest(input.getBytes(\"UTF-8\"\
    )).length)\n        md5.update(input.getBytes(\"UTF-8\"), 0, input.getBytes(\"\
    UTF-8\").length, buffer)\n        Some(scala.util.Base64.getUrlEncoder.encodeToString(buffer))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp2u4jaid1.scala:9:22 ------------------------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m      \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0mnone of the overloaded\
    \ alternatives named <init> can be accessed as a member of java.security.MessageDigest\
    \ from module class Problem$.\n\e[31m  |\e[0m Access to protected \e[33mconstructor\e\
    [0m \e[35mMessageDigest\e[0m not permitted because enclosing \e[33mobject\e[0m\
    \ \e[35mProblem\e[0m\n\e[31m  |\e[0m is not a subclass of \e[33mclass\e[0m \e\
    [35mMessageDigest\e[0m in \e[33mpackage\e[0m \e[35mjava.security\e[0m where target\
    \ is defined\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2u4jaid1.scala:12:24\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        Some(scala.util.Base64.getUrlEncoder.encodeToString(buffer))\n\
    \e[31m\e[31m   |\e[0m             ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \         value Base64 is not a member of util\n2 errors found\n"
  stdout: ''
  timestamp: 1660009532
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.nonEmpty) {\n            val\
    \ hash = text.foldLeft( \"\" ) { case (acc, elem) => acc +  (elem + elem.toLowerCase\
    \ + acc.length) }\n            Some(hash)\n        } else {\n            None\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppsz974eq.scala:10:85 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mhash\e[0m = text.foldLeft(\
    \ \e[31m\"\"\e[0m ) { \e[33mcase\e[0m (acc, elem) => acc +  (elem + elem.toLowerCase\
    \ + acc.length) }\n\e[31m\e[31m   |\e[0m                                     \
    \                                           ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                               value toLowerCase is not a member of Char\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009533
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None else Some(scala.util.hashing.Md5.stringToMd5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0jseje_8.scala:9:60 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.isEmpty) None \e[33melse\e\
    [0m Some(scala.util.hashing.Md5.stringToMd5(text))\n\e[31m\e[31m  |\e[0m     \
    \                                    ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  |\e\
    [0m                           value Md5 is not a member of scala.util.hashing\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009533
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text match {\n            case \"\"\
    \ => None\n            case x => Some(scala.util.Md5.hash(x).asInstanceOf[String])\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpub3_hn0z.scala:11:38 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mcase\e[0m x => Some(scala.util.Md5.hash(x).asInstanceOf[String])\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                           value Md5 is not a member of util\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5Hash = text.foldLeft(\"\")((hash,\
    \ str) => hash + digestString(str))\n        Option[String](md5Hash)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpav_qebuk.scala:9:62 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5Hash\e[0m = text.foldLeft(\e\
    [31m\"\"\e[0m)((\e[36mhash\e[0m, \e[36mstr\e[0m) => hash + digestString(str))\n\
    \e[31m\e[31m  |\e[0m                                                         \
    \     ^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m                                      \
    \             Not found: digestString\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009531
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None else {\n     \
    \       val md5 = new java.security.MessageDigest.getInstance(\"MD5\");\n    \
    \        val buffer = new Array[Byte](128);\n            md5.update(text.getBytes);\n\
    \            md5.doFinal(buffer, 0, buffer.length);\n            new String(buffer,\
    \ \"UTF-8\")\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpd7k6hxek.scala:10:54 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m java.security.MessageDigest.getInstance(\e[31m\"MD5\"\e[0m);\n\e[31m\e[31m\
    \   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m  type getInstance is not a member of object java.security.MessageDigest\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd7k6hxek.scala:14:12 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mnew\e[0m \e[35mString\e[0m(buffer,\
    \ \e[31m\"UTF-8\"\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    String\n\e[31m   |\e[0m            Required:\
    \ \e[1m\e[32mOption\e[0m\e[1m\e[32m[\e[0mString\e[1m\e[32m]\e[0m\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009535
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val digest = java.security.MessageDigest.getInstance(\"\
    MD5\")\n        val bytes = digest.digest(text.getBytes)\n        val md5 = java.util.Base64.getEncoder.encodeToString(bytes)\n\
    \        Some(md5)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpeyc5dx0c.scala:15)\n\tat Problem.main(tmpeyc5dx0c.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\") None else Some(md5(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnm5_xwvh.scala:9:38 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m(text == \e[31m\"\"\e[0m) None \e\
    [33melse\e[0m Some(md5(text))\n\e[31m\e[31m  |\e[0m                          \
    \            ^^^\e[0m\n\e[31m  |\e[0m                                      Not\
    \ found: md5\n\e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009533
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.length == 0){\n            None\n\
    \        } else {\n            val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n            val digest = md5.digest(text.getBytes(\"UTF-8\"))\n           \
    \ val md5 = digest.map(\"%02x\".format(_)).mkString(\"\")\n            Option(md5)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpr_pbeyj6.scala:14:16 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = digest.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString(\e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in the\
    \ same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpr_pbeyj6.scala:12:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m12 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val byteArray = text.getBytes(StandardCharsets.UTF_8)\n\
    \        var hasher = MessageDigest.getInstance(\"MD5\")\n        hasher.update(byteArray)\n\
    \        hasher.digest().map(\"%02x\".format(_)).mkString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp59pcaa_s.scala:9:38 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mbyteArray\e[0m = text.getBytes(StandardCharsets.UTF_8)\n\
    \e[31m\e[31m  |\e[0m                                      ^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                                      Not found: StandardCharsets\n\
    \e[31m  |\e[0m\n\e[31m  |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp59pcaa_s.scala:10:21\
    \ ------------------------\e[0m\e[0m\n\e[31m10 |\e[0m        \e[33mvar\e[0m \e\
    [36mhasher\e[0m = MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \          Not found: MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.size == 0) None\n        else\
    \ {\n            val md5Hash = Md5.asInstanceOf[MD5Hasher]\n            val hash\
    \ = new StringBuilder\n            md5Hash.reset\n            md5Hash.processBlock((text),\
    \ 0, text.length)\n            md5Hash.getMessageDigest.asInstanceOf[Array[Byte]].foreach\
    \ { b =>\n                hash += hexChar(b & 0xFF) + \" \"\n            }\n \
    \           Some(hash.toString)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqrhn_ozi.scala:11:43 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5Hash\e[0m = Md5.asInstanceOf[\e\
    [35mMD5Hasher\e[0m]\n\e[31m\e[31m   |\e[0m                                   \
    \        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                     \
    \      Not found: type MD5Hasher\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpqrhn_ozi.scala:11:26 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m            \e[33mval\e[0m \e[36mmd5Hash\e[0m = Md5.asInstanceOf[\e[35mMD5Hasher\e\
    [0m]\n\e[31m\e[31m   |\e[0m                          ^^^\e[0m\n\e[31m   |\e[0m\
    \                          Not found: Md5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None\n        else\
    \ {\n        val hash = MD5.asInstanceOf[MessageDigest]\n        val hashInBytes\
    \ = hash.getMessageDigest.digest(text.getBytes)\n        val md5 = hashInBytes.map\
    \ {\n        x => (x >> 24 & 0xFF) |   (x >> 16 & 0xFF)\n        |   (x >> 8 &\
    \ 0xFF) |  (x & 0xFF)\n        }\n        Some(md5.hex)\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4udjcoes.scala:11:36 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mhash\e[0m = MD5.asInstanceOf[\e\
    [35mMessageDigest\e[0m]\n\e[31m\e[31m   |\e[0m                               \
    \     ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                    Not\
    \ found: type MessageDigest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp4udjcoes.scala:11:19 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m        \e[33mval\e[0m \e[36mhash\e[0m = MD5.asInstanceOf[\e[35mMessageDigest\e\
    [0m]\n\e[31m\e[31m   |\e[0m                   ^^^\e[0m\n\e[31m   |\e[0m      \
    \             Not found: MD5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009534
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.nonEmpty) Some(Md5.hashString(text).getHexDigest)\
    \ else None\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7xyh_zp2.scala:9:32 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.nonEmpty) Some(Md5.hashString(text).getHexDigest)\
    \ \e[33melse\e[0m None\n\e[31m\e[31m  |\e[0m                                ^^^\e\
    [0m\n\e[31m  |\e[0m                                Not found: Md5\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = new java.security.MessageDigest.getInstance(\"\
    MD5\")\n        val buffer = new Array[Byte](16*1024)\n        val md5Hash = md5.digest(text)\n\
    \        val a = ArrayBuffer[String]()\n        var i = 0\n        while (i <\
    \ md5Hash.length) {\n            val b = md5Hash(i).toByte\n            buffer.update(b,\
    \ 0, b.length)\n            val c = new BigInteger(1, buffer).toString(16)\n \
    \           val d = c.substring(0, c.length - 2)\n            a += d\n       \
    \     i += 1\n        }\n        Some(a.mkString)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1otz957q.scala:9:50 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m\
    \ java.security.MessageDigest.getInstance(\e[31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e\
    [0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m    type getInstance is not a member of object java.security.MessageDigest\n\
    \e[31m\e[31m-- Error: /tmp/tmp1otz957q.scala:16:34 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            buffer.update(b, \e[31m0\e[0m, b.length)\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mtoo many arguments for \e[33mmethod\e[0m \e[35mupdate\e[0m in \e[33mclass\e\
    [0m \e[35mArray\e[0m: (i: Int, x: Byte): Unit\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp1otz957q.scala:17:24 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mval\e[0m \e[36mc\e[0m = \e[33mnew\e[0m \e[35mBigInteger\e\
    [0m(\e[31m1\e[0m, buffer).toString(\e[31m16\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                   ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: type BigInteger\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009538
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None\n        else\
    \ Some(scala.util.Digest.md5Hex(text))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3wetfkji.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(scala.util.Digest.md5Hex(text))\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                  value Digest is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009538
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md = MessageDigest.getInstance(\"\
    MD5\")\n        md.update(text)\n        val digest = convertDigest(md.digest)\n\
    \        return if (digest.length == 40)\n            Some(digest)\n        else\n\
    \            None\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfpghqfrp.scala:9:17 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                 ^^^^^^^^^^^^^\e[0m\n\e\
    [31m  |\e[0m                 Not found: MessageDigest\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpfpghqfrp.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mdigest\e[0m = convertDigest(md.digest)\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: convertDigest\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009535
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) None\n       \
    \ else {\n            val md5Hash = scala.util.hashing.Md5.newHasher();\n    \
    \        md5Hash.update(text.getBytes);\n            val md5String = md5Hash.digest();\n\
    \            Some(new String(md5String, \"UTF-8\"));\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjrck5psz.scala:11:45 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5Hash\e[0m = scala.util.hashing.Md5.newHasher();\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         value Md5 is not a member of scala.util.hashing\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009538
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val md5 = scala.security.MessageDigest.getInstance(\"\
    MD5\");\n            md5.update(text.getBytes);\n            val hash = md5.digest();\n\
    \            val hashHex = hash.toHexString;\n            Some(hashHex)\n    \
    \    }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcwxgh6ph.scala:12:28 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = scala.security.MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m);\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      value security is not a member of scala\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009538
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length > 0) Some(text.map(c\
    \ => c.toHexString).foldLeft(0)((acc, c) => acc + c.toInt)) else None\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\"\
    )).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\"\
    )).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp86tl6tyh.scala:9:50 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text.length > \e[31m0\e[0m) Some(text.map(\e\
    [36mc\e[0m => c.toHexString).foldLeft(\e[31m0\e[0m)((\e[36macc\e[0m, \e[36mc\e\
    [0m) => acc + c.toInt)) \e[33melse\e[0m None\n\e[31m\e[31m  |\e[0m           \
    \                                     ^^^^^^^^^^^^^\e[0m\n\e[31m  |\e[0m     \
    \   value toHexString is not a member of Char.\n\e[31m  |\e[0m        An extension\
    \ method was tried, but could not be fully constructed:\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m            intWrapper(c)\n1 error found\n"
  stdout: ''
  timestamp: 1660009537
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) {\n            None\n\
    \        } else {\n            val bytes = text.getBytes\n            val md5\
    \ = new java.security.MessageDigest(\"MD5\")\n            val hash = md5.digest(bytes)\n\
    \            val md5 = java.math.BigInteger(hash, 16).toString(36)\n         \
    \   Option(md5)\n        }\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpc6mbn3zl.scala:15:16 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = java.math.BigInteger(hash,\
    \ \e[31m16\e[0m).toString(\e[31m36\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpc6mbn3zl.scala:13:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m13 |\e[0m       \
    \     \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009538
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.trim.length == 0)\n        \
    \    None\n        else\n            Some(scala.collection.mutable.HashMap.newBuilder[String,\
    \ String]\n                   .map { case (k, v) => k -> scala.util.Md5.md5(text+v).take(32)\
    \ }\n                   .build\n                   .toMap.apply(text)\n      \
    \             .map(_._2)\n                   .mkString)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn07pu_lb.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(scala.collection.mutable.HashMap.newBuilder[\e\
    [35mString\e[0m, \e[35mString\e[0m]\n\e[31m13 |\e[0m                   .map {\
    \ \e[33mcase\e[0m (k, v) => k -> scala.util.Md5.md5(text+v).take(\e[31m32\e[0m)\
    \ }\n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0mvalue map is\
    \ not a member of scala.collection.mutable.Builder[(String, String), \n\e[31m\
    \   |\e[0m  scala.collection.mutable.HashMap[String, String]\n\e[31m   |\e[0m]\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) {\n            None\n\
    \        } else {\n            val md5Hash = scala.util.Hashing.Md5\n        \
    \    val bytes = text.getBytes(\"UTF-8\")\n            val hash = md5Hash.digest(bytes)\n\
    \            Some(bytesToHexString(hash))\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcd6_nlu5.scala:12:37 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mmd5Hash\e[0m = scala.util.Hashing.Md5\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m      value Hashing is not a member of util - did you mean util.hashing?\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcd6_nlu5.scala:15:17 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            Some(bytesToHexString(hash))\n\e[31m\e[31m\
    \   |\e[0m                 ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \     Not found: bytesToHexString\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\") None else Some(scala.util.hashing.Md5.hashString(text))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpig2ddoy2.scala:9:58 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mif\e[0m (text == \e[31m\"\"\e[0m) None \e\
    [33melse\e[0m Some(scala.util.hashing.Md5.hashString(text))\n\e[31m\e[31m  |\e\
    [0m                                       ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \  |\e[0m                           value Md5 is not a member of scala.util.hashing\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Option((text.split(\" \").map(_.md5) match { case Array(_) => text}).toList)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdlcxi0r1.scala:10:43 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Option((text.split(\e[31m\" \"\
    \e[0m).map(_.md5) \e[33mmatch\e[0m { \e[33mcase\e[0m Array(_) => text}).toList)\n\
    \e[31m\e[31m   |\e[0m                                         ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                     value md5 is not a member of String\n\
    \e[31m\e[31m-- Error: /tmp/tmpdlcxi0r1.scala:10:47 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Option((text.split(\e[31m\" \"\
    \e[0m).map(_.md5) \e[33mmatch\e[0m { \e[33mcase\e[0m Array(_) => text}).toList)\n\
    \e[31m\e[31m   |\e[0m                                               ^\e[0m\n\e\
    [31m   |\e[0m                                          No ClassTag available for\
    \ B\n\e[31m   |\e[0m\n\e[31m   |\e[0m                                        \
    \  where:    B is a type variable\n2 errors found\n"
  stdout: ''
  timestamp: 1660009543
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.nonEmpty) {\n            val\
    \ bytes = text.getBytes()\n            val md5 = MessageDigest.getInstance(\"\
    MD5\")\n            md5.update(bytes)\n            md5.digest()\n            val\
    \ str = new String(md5.digest())\n            return Some(str)\n        }\n  \
    \      None\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnrl9oppm.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n       if (text.isEmpty) {\n           None\n\
    \       } else {\n           val md5 = new java.security.MessageDigest(\"MD5\"\
    )\n           val digest = md5.digest(text.getBytes)\n           val md5 = digest.toHexString.substring(0,\
    \ 7)\n           Some(md5)\n       }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpj7_0noew.scala:14:15 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m           \e[33mval\e[0m \e[36mmd5\e[0m = digest.toHexString.substring(\e\
    [31m0\e[0m, \e[31m7\e[0m)\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5 is already defined as \e[33mvalue\e[0m \e[35mmd5\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- Error: /tmp/tmpj7_0noew.scala:12:25\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m12 |\e[0m       \
    \    \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e[0m java.security.MessageDigest(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnone of the overloaded alternatives named <init> can be accessed\
    \ as a member of java.security.MessageDigest from module class Problem$.\n\e[31m\
    \   |\e[0m Access to protected \e[33mconstructor\e[0m \e[35mMessageDigest\e[0m\
    \ not permitted because enclosing \e[33mobject\e[0m \e[35mProblem\e[0m\n\e[31m\
    \   |\e[0m is not a subclass of \e[33mclass\e[0m \e[35mMessageDigest\e[0m in \e\
    [33mpackage\e[0m \e[35mjava.security\e[0m where target is defined\n2 errors found\n"
  stdout: ''
  timestamp: 1660009540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty)\n            None\n\
    \        else {\n            val md5 : String = \"\"\n            val md5Hash\
    \ : scala.collection.mutable.Map[Int, String] = scala.collection.mutable.HashMap.empty[Int,\
    \ String]\n            for(char : Char <- text) {\n                md5Hash +=\
    \ char.hashCode() -> \"\"\n            }\n            md5 = md5Hash.toString\n\
    \            Some(md5)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpjzg9h66t.scala:17:16 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            md5 = md5Hash.toString\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val md5\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) return None\n    \
    \    import java.security.MessageDigest._\n        val md = MessageDigest.getInstance(\"\
    MD5\");\n        val bytes = md.digest(text.getBytes);\n        val hexArray =\
    \ bytes.map(\"%02x\".format(_)).mkString.toUpperCase\n        Option(hexArray);\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpawnv66g_.scala:11:17 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmd\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m);\n\e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                 Not found: MessageDigest\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009540
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty) None\n        else\
    \ Some(new String(scala.util.hashing.Md5.md5(text.getBytes)).toUpperCase )\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps7j7uks8.scala:10:48 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(\e[33mnew\e[0m String(scala.util.hashing.Md5.md5(text.getBytes)).toUpperCase\
    \ )\n\e[31m\e[31m   |\e[0m                             ^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         value Md5 is not a member of scala.util.hashing\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009544
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length > 0) {\n           \
    \ val digest = java.security.MessageDigest.getInstance(\"MD5\")\n            val\
    \ md = digest.digest(text.getBytes)\n            Some(\n                    java.util.Base64.getEncoder.encodeToString(md).substring(0,16)\n\
    \            )\n        }\n        else None\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv2jnhg7a.scala:19)\n\tat Problem.main(tmpv2jnhg7a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009544
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text != \"\"){\n            val s\
    \ = text.toLowerCase()\n            val m1 = Digest.md5(s)\n            val m2\
    \ = Digest.md5(s)\n            if(m1 == m2) Some(m1.hexString)\n            else\
    \ None\n        }\n        else None\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1gep5tdr.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mm1\e[0m = Digest.md5(s)\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \              Not found: Digest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp1gep5tdr.scala:12:21 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m            \e[33mval\e[0m \e[36mm2\e[0m = Digest.md5(s)\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ Digest\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009541
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\") return None\n     \
    \   val hash : scala.collection.mutable.Map[Char,String] = scala.collection.mutable.Map()\n\
    \        val md5 = MessageDigest.getInstance(\"MD5\")\n        for(c <- text.toCharArray){\n\
    \            hash(c) = {\n                val hash = md5.digest(c)\n         \
    \       hash.toHexString.toUpperCase\n            }\n        }\n        Some(hash.map(_._2))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1e7gjzwb.scala:11:18 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                  Not found: MessageDigest\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1e7gjzwb.scala:18:21 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        Some(hash.map(_._2))\n\e[31m\e[31m   |\e[0m \
    \            ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    scala.collection.mutable.Iterable[String]\n\
    \e[31m   |\e[0m             Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009546
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val digest = scala.security.MessageDigest.getInstance(\"\
    MD5\")\n        val bytes = digest.digest(text.getBytes())\n        val hex =\
    \ bytes.map(\"%02x\".format(_)).mkString\n        Option(hex)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv4pu7xtg.scala:9:27 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mdigest\e[0m = scala.security.MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                     value security is not a member of scala\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1660009544
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == \"\") None\n        else\
    \ Some(scala.util.Md5.hashString(text).hexValue)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbl0kh5gl.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33melse\e[0m Some(scala.util.Md5.hashString(text).hexValue)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                value Md5 is not a member of util\n1 error found\n"
  stdout: ''
  timestamp: 1660009545
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = scala.collection.mutable.HashMap[String,\
    \ String]()\n        if (text == \"\") {\n            None\n        } else {\n\
    \            val chars = text.chars()\n            while (chars.hasNext) {\n \
    \               val char = chars.next\n                val key = char.toString\
    \ + md5.get(char.toString.toInt)\n                if (key == \"\") {\n       \
    \             md5.put(char.toString.toInt, char.toString.toString)\n         \
    \       } else {\n                    md5.put(char.toString.toInt, key)\n    \
    \            }\n            }\n        }\n        md5.map{\n            case (k,\
    \ v) => v\n        }.toList.reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpskwytowf.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mwhile\e[0m (chars.hasNext) {\n\e[31m\e\
    [31m   |\e[0m                   ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \   value hasNext is not a member of java.util.stream.IntStream\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpskwytowf.scala:15:33 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                \e[33mval\e[0m \e[36mchar\e[0m = chars.next\n\
    \e[31m\e[31m   |\e[0m                           ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue next is not a member of java.util.stream.IntStream - did you mean chars.peek?\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpskwytowf.scala:26:17 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        md5.map{\n\e[31m25 |\e[0m            \e[33mcase\e\
    [0m (k, v) => v\n\e[31m26 |\e[0m        }.toList.reverse\n\e[31m\e[31m   |\e[0m\
    \        ^\e[0m\n\e[31m   |\e[0m        Found:    \e[1m\e[31mList\e[0m[String]\n\
    \e[31m   |\e[0m        Required: \e[1m\e[32mOption\e[0m[String]\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660009546
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val hasher = new Hasher();\n       \
    \ val bytes = text.getBytes;\n        hasher.putBytes(bytes);\n        hasher.hash().map(_.toHexString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp2foix8a.scala:9:25 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mhasher\e[0m = \e[33mnew\e\
    [0m \e[35mHasher\e[0m();\n\e[31m\e[31m  |\e[0m                         ^^^^^^\e\
    [0m\n\e[31m  |\e[0m                         Not found: type Hasher\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009542
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text == null || text.size == 0) {\n\
    \            None\n        } else {\n            val hash = java.security.MessageDigest.getInstance(\"\
    MD5\").digest(text.getBytes())\n            val s = java.security.MessageDigest.getInstance(\"\
    MD5\").digest(hash)\n            val str = Array[Byte](s(0), s(1), s(2), s(3),\
    \ s(4), s(5), s(6), s(7))\n            val hex = java.util.Arrays.toString(str).replace(\"\
    [\", \"\").replace(\"]\", \"\").replace(\",\", \"\").replaceAll(\"\\\\s\", \"\"\
    ).replaceAll(\"-\", \"\").replaceAll(\"^\", \"\").replace(\"0x\", \"\").replaceFirst(\"\
    ^0x\", \"\")\n            val hex = hex.substring(0, hex.length.toLong / 2)\n\
    \            Some(hex)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo1d1r3fg.scala:16:16 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mhex\e[0m = hex.substring(\e\
    [31m0\e[0m, hex.length.toLong / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mhex\
    \ is already defined as \e[33mvalue\e[0m \e[35mhex\e[0m\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mNote that overloaded methods must all be defined in the same group of\
    \ toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1660009545
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.nonEmpty) {\n            val\
    \ cipher = new MD5\n            val bytes = text.getBytes(StandardCharsets.UTF_8)\n\
    \            cipher.update(bytes)\n            val md5Text = cipher.doFinal\n\
    \            Some(md5Text) \n        } else {\n            None\n        }\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl30r1179.scala:10:29 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m            \e[33mval\e[0m \e[36mcipher\e[0m = \e[33mnew\e\
    [0m \e[35mMD5\e[0m\n\e[31m\e[31m   |\e[0m                             ^^^\e[0m\n\
    \e[31m   |\e[0m                             Not found: type MD5\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl30r1179.scala:11:38 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mbytes\e[0m = text.getBytes(StandardCharsets.UTF_8)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                      Not found: StandardCharsets\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009545
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var hash : String = \"00000000000000000000000000000000\"\
    \n        var i : Int = 0\n        while (i < text.length) {\n            val\
    \ char : Char = text(i)\n            var c : Int = char.asDigit\n            val\
    \ hashValue : Int = (((c >> 6) & 63) << 8) + ((c & 63) << 0)\n            hash\
    \ = (hash + hashValue.toString)\n            i += 1\n        }\n        return\
    \ if (hash.length == 0) None else Some(hash)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpiv5udin_.scala:21)\n\tat Problem.main(tmpiv5udin_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009548
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var hash : String = \"\"\n        var\
    \ charsCount : Int = 0\n        var charsSize : Int = 1\n        var chars : Array[Char]\
    \ = new Array[Char](text.length)\n\n        for (i <- 0 until text.length) {\n\
    \            charsCount = charsCount + 1\n            chars(i) = text(i)\n   \
    \         charsSize = charsSize + 1\n            if (charsSize > 2) {\n      \
    \          hash = hash + chars(i).toString() + chars(i + 1)\n                charsSize\
    \ = 1\n                charsCount = 1\n            }\n        }\n        if (charsSize\
    \ == 2) {\n            hash = hash + chars(charsCount - 1)\n        }\n      \
    \  hash = hash + chars(charsCount - 1)\n        return if (hash.length == 0) None\
    \ else Some(hash)\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjzzp1bcd.scala:31)\n\tat Problem.main(tmpjzzp1bcd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length == 0) return None\n\
    \        var result = new scala.collection.mutable.StringBuilder\n        // append\
    \ an initial '#'\n        result.append(text.charAt(0).toChar)\n        \n   \
    \     // for each character in text\n        for (char <- text.drop(1)) {\n  \
    \          // append the character and the current hash of all previous characters\
    \ (recursively)\n            result.append(char)\n            result.append(result.map(_.hashCode))\n\
    \        }\n        // add the final '#' to the result String\n        result.append(text.charAt(0).toChar)\n\
    \        // return the result\n        result.toString()\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplvzx4ag2.scala:23:23\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        result.toString()\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:\
    \    String\n\e[31m   |\e[0m        Required: \e[1m\e[32mOption\e[0m\e[1m\e[32m[\e\
    [0mString\e[1m\e[32m]\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009547
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n      if (text.isEmpty)\n        return None\n\
    \      val digest = MessageDigest.getInstance(\"MD5\")\n      digest.update(text.getBytes(\"\
    UTF-8\"))\n      val md5 = digest.digest()\n      val buffer = new Array[Byte](md5.length)\n\
    \      digest.digest(buffer)\n      new String(buffer, \"UTF-8\")\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello world\")).equals(\"\
    3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\")).equals(None));\n\
    \    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0463xztx.scala:11:19 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m      \e[33mval\e[0m \e[36mdigest\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: MessageDigest\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0463xztx.scala:16:6 ---------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m      \e[33mnew\e[0m \e[35mString\e[0m(buffer, \e[31m\"\
    UTF-8\"\e[0m)\n\e[31m\e[31m   |\e[0m      ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m      Found:    String\n\e[31m   |\e[0m      Required: \e[1m\e[32mOption\e\
    [0m\e[1m\e[32m[\e[0mString\e[1m\e[32m]\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009547
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val hasher = MessageDigest.getInstance(\"\
    MD5\")\n        val md5String = hasher.digest(text.getBytes(\"UTF-8\"))\n    \
    \    val md5String = md5String.map(\"%02x\".format(_)).mkString\n        Option(md5String)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp0iwhgd73.scala:11:12 ---------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mmd5String\e[0m = md5String.map(\e\
    [31m\"%02x\"\e[0m.format(_)).mkString\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mmd5String is already defined as \e[33mvalue\e[0m \e[35mmd5String\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp0iwhgd73.scala:9:21 -------------------------\e[0m\e[0m\n\
    \e[31m9 |\e[0m        \e[33mval\e[0m \e[36mhasher\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m  |\e[0m                     ^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                     Not found: MessageDigest\n\e[31m  |\e[0m\n\e\
    [31m  |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009545
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.isEmpty)\n            None\n\
    \        else\n            Some(new scala.util.hashing.Md5(text).hexDigest)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuhj0ikjf.scala:12:40 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(\e[33mnew\e[0m scala.util.hashing.Md5(text).hexDigest)\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     type Md5 is not a member of scala.util.hashing\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        var md5 = \"\"\n        for (x <- text.split('\
    \ ')) {\n            md5 = md5 + md5(x.toInt)\n        }\n        md5 match {\n\
    \            case hexToInt(md5) => Some(md5)\n            case _ => None\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp84a0faiv.scala:14:17 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mcase\e[0m hexToInt(md5) => Some(md5)\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \        Not found: hexToInt\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp84a0faiv.scala:14:39 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m            \e[33mcase\e[0m hexToInt(md5) => Some(md5)\n\e[31m\e[31m \
    \  |\e[0m                                       ^^^\e[0m\n\e[31m   |\e[0m    \
    \                                   Found:    (md5 : Any)\n\e[31m   |\e[0m   \
    \                                    Required: String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009548
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val md5 = MessageDigest.getInstance(\"\
    MD5\");\n        val utf8 = Charset.forName(\"UTF-8\");\n        val buffer =\
    \ new Array[Byte](100);\n        val digest = md5.digest(text);\n        digest.getBytes(0,\
    \ buffer, 0, digest.size);\n        val hexString = Hex.encodeHexString(buffer);\n\
    \        Option(new String(hexString, utf8)); \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzvtso3dt.scala:9:18 -------------------------\e\
    [0m\e[0m\n\e[31m9 |\e[0m        \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m);\n\e[31m\e[31m  |\e[0m                  ^^^^^^^^^^^^^\e[0m\n\
    \e[31m  |\e[0m                  Not found: MessageDigest\n\e[31m  |\e[0m\n\e[31m\
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzvtso3dt.scala:10:19 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mutf8\e[0m = Charset.forName(\e\
    [31m\"UTF-8\"\e[0m);\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                   Not found: Charset\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpzvtso3dt.scala:14:24 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mhexString\e[0m = Hex.encodeHexString(buffer);\n\
    \e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m       \
    \                 Not found: Hex\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009547
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if(text.isEmpty) None\n        else\
    \ {\n            val md5 = MessageDigest.getInstance(\"MD5\")\n            val\
    \ digest = md5.digest(text.getBytes)\n            val str = new String(digest)\n\
    \            Some(str)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8hx8ac2t.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: MessageDigest\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660009547
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        text match {\n            case \"\"\
    \ => None\n            case text1 => text1 match {\n                case text2\
    \ => Some(md5(text2.getBytes))\n                case _ => None\n            }\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"\
    Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0_h6jdok.scala:12:35 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                \e[33mcase\e[0m text2 => Some(md5(text2.getBytes))\n\
    \e[31m\e[31m   |\e[0m                                   ^^^\e[0m\n\e[31m   |\e\
    [0m                                   Not found: md5\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009547
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text == \"\")\n            None\n\
    \        else\n            Some(java.security.MessageDigest.getInstance(\"MD5\"\
    ).digest(text.getBytes).map(_.foldLeft(0)(_ + _)).map(_ => \"%02x\".format(_)).mkString)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmposvq1tg9.scala:12:92 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(java.security.MessageDigest.getInstance(\e\
    [31m\"MD5\"\e[0m).digest(text.getBytes).map(_.foldLeft(\e[31m0\e[0m)(_ + _)).map(_\
    \ => \e[31m\"%02x\"\e[0m.format(_)).mkString)\n\e[31m\e[31m   |\e[0m         \
    \                                                                            \
    \     ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                  value\
    \ foldLeft is not a member of Byte\n\e[31m\e[31m-- Error: /tmp/tmposvq1tg9.scala:12:111\
    \ ----------------------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \
    \    Some(java.security.MessageDigest.getInstance(\e[31m\"MD5\"\e[0m).digest(text.getBytes).map(_.foldLeft(\e\
    [31m0\e[0m)(_ + _)).map(_ => \e[31m\"%02x\"\e[0m.format(_)).mkString)\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                                               ^\e[0m\n\e[31m   |\e[0m      \
    \                                    No ClassTag available for B\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m                                          where:    B is a\
    \ type variable\n2 errors found\n"
  stdout: ''
  timestamp: 1660009549
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        if (text.length > 0)\n        {\n  \
    \          val md5 = new Md5()\n            md5.update(text.getBytes(\"UTF-8\"\
    ))\n            md5.digest()\n            val array = new Array[Byte](16)\n  \
    \          md5.digest(array)\n            new String(array)\n        }\n     \
    \   else\n            None\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(stringToMd5((\"Hello world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"\
    ));\n    assert(stringToMd5((\"\")).equals(None));\n    assert(stringToMd5((\"\
    A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"));\n    assert(stringToMd5((\"\
    password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpobvv7cqh.scala:11:26 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mval\e[0m \e[36mmd5\e[0m = \e[33mnew\e\
    [0m \e[35mMd5\e[0m()\n\e[31m\e[31m   |\e[0m                          ^^^\e[0m\n\
    \e[31m   |\e[0m                          Not found: type Md5\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpobvv7cqh.scala:16:12 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mnew\e[0m \e[35mString\e[0m(array)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \       Found:    String\n\e[31m   |\e[0m            Required: \e[1m\e[32mOption\e\
    [0m\e[1m\e[32m[\e[0mString\e[1m\e[32m]\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009549
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Given a string 'text', return its md5 hash equivalent string.\n  \
    \  // If 'text' is an empty string, return None.\n    // >>> stringToMd5((\"Hello\
    \ world\"))\n    // \"3e25960a79dbc69b674cd4ec67a72c62\"\n    def stringToMd5(text\
    \ : String) : Option[String] = {\n        val text = text.stripPrefix(\"/*\")\n\
    \        val text = text.stripSuffix(\"*/\")\n        if (text.length > 0)\n \
    \           Some(DigestUtils.md5Hex(text))\n        else\n            None\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(stringToMd5((\"Hello\
    \ world\")).equals(\"3e25960a79dbc69b674cd4ec67a72c62\"));\n    assert(stringToMd5((\"\
    \")).equals(None));\n    assert(stringToMd5((\"A B C\")).equals(\"0ef78513b0cb8cef12743f5aeb35f888\"\
    ));\n    assert(stringToMd5((\"password\")).equals(\"5f4dcc3b5aa765d61d8327deb882cf99\"\
    ));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpke5xvx7p.scala:10:12 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mtext\e[0m = text.stripSuffix(\e\
    [31m\"*/\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mtext is already defined as \e[33mvalue\e[0m \e[35mtext\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpke5xvx7p.scala:9:19 ----------------------------\e[0m\e[0m\n\e[31m9\
    \ |\e[0m        \e[33mval\e[0m \e[36mtext\e[0m = text.stripPrefix(\e[31m\"/*\"\
    \e[0m)\n\e[31m\e[31m  |\e[0m                   ^\e[0m\n\e[31m  |\e[0m        \
    \           Recursive \e[33mvalue\e[0m \e[35mtext\e[0m needs type\n\e[31m  |\e\
    [0m\n\e[31m  |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpke5xvx7p.scala:12:17 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            Some(DigestUtils.md5Hex(text))\n\e[31m\e\
    [31m   |\e[0m                 ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \   Not found: DigestUtils\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009548

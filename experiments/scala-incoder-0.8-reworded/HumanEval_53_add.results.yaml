language: scala
name: HumanEval_53_add
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val temp : Long = x+y\n        return temp\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        var z = x + y\n        while (y > 0) {\n            z = z / 2\n\
    \            y -= 1\n        }\n        z\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjgkwdunn.scala:13:14 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            y -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean y.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y).toLong\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        var sum = x + y\n        while(sum > Long.MaxValue - x) {\n   \
    \         sum = sum / 2\n        }\n        while(sum < Long.MinValue + x) {\n\
    \            sum = sum * 2\n        }\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def rec(x : Long, y : Long) : Long = {\n            if (x == 0\
    \ || y == 0) 1\n            else rec(x - 1, y + x) // x + y\n        }\n     \
    \   rec(x, y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcg4mxkfo.scala:19)\n\tat Problem.main(tmpcg4mxkfo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = (x + y).toLong\n        require(z <= 0xffffffffl)\n   \
    \     z\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l))\
    \ == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l))\
    \ == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l))\
    \ == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x+y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      val s = x + y\n      if(s > 9) {\n        s + (10 - s)\n      } else\
    \ {\n        s\n      }\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo1jyogoe.scala:21)\n\tat Problem.main(tmpo1jyogoe.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def addInt(x: Long, y: Long) : Long = x + y\n        val z = (y\
    \ + 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n    \
    \    val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n\
    \        val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y +\
    \ 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n      \
    \  val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n \
    \       val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y +\
    \ 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n      \
    \  val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n \
    \       val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y +\
    \ 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n      \
    \  val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n \
    \       val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y +\
    \ 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n      \
    \  val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n \
    \       val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y +\
    \ 2l)*(x/3l)\n        val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n      \
    \  val y = x % 3l\n        val z = (y + 2l)*(x/3l)\n        val y = x % 3l\n \
    \       val z = (y + 2l)*(x/3l)\n        val \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp8jlzt1i4.scala:58:11 ---------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m        \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m      \
    \     ^\e[0m\n\e[31m   |\e[0m           pattern expected\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmp8jlzt1i4.scala:13:12 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mz\e[0m = (y + \e[31m2l\e\
    [0m)*(x/\e[31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mz is already defined as \e[33mvalue\e[0m \e[35mz\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp8jlzt1i4.scala:14:12 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36my\e[0m = x % \e[31m3l\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0my is already defined as\
    \ \e[33mvalue\e[0m \e[35my\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp8jlzt1i4.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mz\e[0m = (y + \e[31m2l\e\
    [0m)*(x/\e[31m3l\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mz is already defined as \e[33mvalue\e[0m \e[35mz\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmp8jlzt1i4.scala:16:12 ---------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mval\e[0m \e[36my\e[0m = x % \e[31m3l\e[0m\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0my is already defined as\
    \ \e[33mvalue\e[0m \e[35my\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmp8jlzt1i4.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mz\e[0m "
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y\n        println (sum)\n        return sum\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659979221
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val add = x + y\n        Thread.sleep(1000)\n        add\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979224
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = x + y\n        if (z >= 0l) z else -z\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def loop(x1 : Long, z1 : Long, z2 : Long) : Long = {\n        \
    \    if (z1 == z2) {\n                return z1\n            } else {\n      \
    \          return z1 + loop(z1, x1, z2)\n            }\n        }\n        loop(x,\
    \ y, x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$1(tmp94s27kik.scala:14)\n\tat Problem$.loop$1(tmp94s27kik.scala:14)\n\
    \tat Problem$.loop$"
  stdout: ''
  timestamp: 1659979220
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = (x + y)\n        val z1 = z.toInt\n        z1\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val xs = (x / 10).ceil\n        val ys = (y / 10).ceil\n      \
    \  val result = x * 10 + y // + ((xs - 1) * 10 + ys) // + xs * y\n        if (result\
    \ > Long.MaxValue) {\n            println(\"overflow\")\n            result\n\
    \        } else {\n            result\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1dhd694w.scala:10:26 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mxs\e[0m = (x / \e[31m10\e\
    [0m).ceil\n\e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m      value ceil is not a member of Long.\n\e[31m   |\e[0m      An extension\
    \ method was tried, but could not be fully constructed:\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m          floatWrapper(x./(\e[31m10\e[0m))\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmp1dhd694w.scala:11:26 ------------------------\e[0m\e[0m\n\
    \e[31m11 |\e[0m        \e[33mval\e[0m \e[36mys\e[0m = (y / \e[31m10\e[0m).ceil\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \  value ceil is not a member of Long.\n\e[31m   |\e[0m      An extension method\
    \ was tried, but could not be fully constructed:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m          floatWrapper(y./(\e[31m10\e[0m))\n2 errors found\n"
  stdout: ''
  timestamp: 1659979219
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // Add x and y\n        val sum: Long = x + y\n        // Return\
    \ sum\n        return sum\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      println(\"add\")\n      return x + y\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: 'add

    add

    add

    add

    add

    '
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // return x + y\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoo39ou0b.scala:9:41\
    \ ---------------------\e[0m\e[0m\n\e[31m 9 |\e[0m    \e[33mdef\e[0m \e[36madd\e\
    [0m(\e[36mx\e[0m : \e[35mLong\e[0m, \e[36my\e[0m : \e[35mLong\e[0m) : \e[35mLong\e\
    [0m = {\n\e[31m\e[31m   |\e[0m                                         ^\e[0m\n\
    \e[31m   |\e[0m                                         Found:    Unit\n\e[31m\
    \   |\e[0m                                         Required: Long\n\e[31m10 |\e\
    [0m        \e[34m// return x + y\e[0m\n\e[31m11 |\e[0m    }\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = (x + y) \n        val product = (x * y) \n        return\
    \ (sum + product) \n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpk8nwmdwt.scala:17)\n\tat Problem.main(tmpk8nwmdwt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return (x + y)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x < y && x >= 0) {\n            x + y\n        }\n        else\
    \ {\n            x - y\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpof1hoj8t.scala:22)\n\tat Problem.main(tmpof1hoj8t.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // Return x + y if the operands are of Integral type\n        x\
    \ match {\n            case n : BigInt => BigInt(x.toInt + y.toInt)\n        \
    \    case n : Int => x + y\n            case n : Short => x + y\n            case\
    \ n : Byte => x + y\n            case n : Long => x + y\n            case n :\
    \ Float => x + y\n            case _ => x + y\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpop_238ph.scala:12:37\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m            \e[33mcase\e[0m n\
    \ : BigInt => BigInt(x.toInt + y.toInt)\n\e[31m\e[31m   |\e[0m               \
    \                ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \                  Found:    BigInt\n\e[31m   |\e[0m                         \
    \      Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979220
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x+y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return (x + y).toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def loop(n: Long, m: Long) : Long = if (n != 0) {\n           \
    \ m * n + loop(n - 1l, m)\n        } else {\n            m\n        }\n      \
    \  loop(x, y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo7i850s4.scala:19)\n\tat Problem.main(tmpo7i850s4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        var xx = x\n        var yy = y\n        while(true){\n        \
    \    if(xx==0 || yy==0) break\n            if(xx%2 != 0) xx = xx + 1\n       \
    \     else yy = yy + 1\n        }\n        xx\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuqgl3wc6.scala:13:31 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mif\e[0m(xx==\e[31m0\e[0m || yy==\e\
    [31m0\e[0m) break\n\e[31m\e[31m   |\e[0m                               ^^^^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: break\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979225
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // >>> println(\"x + y = \" + x + y)\n        x + y\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n \
    \   assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n \
    \   assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = x + y\n        z\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979173
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val s = x.toString + y.toString\n        val len = s.length\n \
    \       if (len == 1) {\n            x.toLong + y.toLong\n        } else if (len\
    \ == 2) {\n            x.toLong + y.toLong\n        } else {\n            val\
    \ sArray = s.toCharArray.map(_.toLong).toArray\n            val x = sArray(0).toLong\n\
    \            val y = sArray(1).toLong\n            val carry = 0\n           \
    \ var s = x + y + carry\n            while(s.length ==  2) {\n               \
    \ s *= 2\n                carry = sArray.length match {\n                    case\
    \ 2 => \n                        sArray.length == 2 \n                    case\
    \ _ => 1\n                }\n                s = s.toLong + carry\n          \
    \  }\n            carry match {\n                case 0 => s\n               \
    \ case _ => s\n            }\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwuzfiz83.scala:18:20 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mval\e[0m \e[36mx\e[0m = sArray(\e[31m0\e\
    [0m).toLong\n\e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m\
    \                    Recursive \e[33mvalue\e[0m \e[35msArray\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpwuzfiz83.scala:24:22 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                carry = sArray.length \e[33mmatch\e[0m\
    \ {\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m            \
    \    Reassignment to val carry\n\e[31m25 |\e[0m                    \e[33mcase\e\
    [0m \e[31m2\e[0m => \n\e[31m26 |\e[0m                        sArray.length ==\
    \ \e[31m2\e[0m \n\e[31m27 |\e[0m                    \e[33mcase\e[0m _ => \e[31m1\e\
    [0m\n\e[31m28 |\e[0m                }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979227
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      println(\"adding\")\n      x + y\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: 'adding

    adding

    adding

    adding

    adding

    '
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        var result = 0\n        while (x!=0){\n            result += x%10\n\
    \            x = x/10\n        }\n        while (y!=0){\n            result +=\
    \ y%10\n            y = y/10\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqygdb1n8.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            result += x%\e[31m10\e[0m\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpqygdb1n8.scala:13:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            x = x/\e\
    [31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \           Reassignment to val x\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpqygdb1n8.scala:16:19 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m            result += y%\e[31m10\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpqygdb1n8.scala:17:14 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            y = y/\e[31m10\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val y\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x > y) {\n            x + y\n        } else {\n           \
    \ x - y\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7yohq7gm.scala:17)\n\tat Problem.main(tmp7yohq7gm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z : Long = (x + y).toInt\n        (z >>> 0).toLong\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x+y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val xy = x + y\n        (xy % 10l).toInt\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpminuw_hh.scala:17)\n\tat Problem.main(tmpminuw_hh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        var newx : Long = x + y;\n        newx = x + newx;\n        newx\
    \ = newx + newx;\n        return newx;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8ze_37y_.scala:16)\n\tat Problem.main(tmp8ze_37y_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x > y) x + y\n        else x + y + 1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpz63h1nln.scala:14)\n\tat Problem.main(tmpz63h1nln.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = (x + y).toLong\n        z match {\n            case z if\
    \ z % 2 == 0 => z\n            case z if z % 2 == 1 => z - 1\n            case\
    \ z => z\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpimg71tvj.scala:18)\n\tat Problem.main(tmpimg71tvj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y).toLong\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x > y) x else y\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj6m8ks5r.scala:15)\n\tat Problem.main(tmpj6m8ks5r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      val temp = x + y\n      temp\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return (x + y)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y\n        val twoSum = sum + sum\n        return\
    \ twoSum\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l))\
    \ == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l))\
    \ == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l))\
    \ == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp34t0_n55.scala:15)\n\tat Problem.main(tmp34t0_n55.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x+y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x+y\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val temp : Long = x + y\n        0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphgs8bku4.scala:14)\n\tat Problem.main(tmphgs8bku4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // Write your code here\n        val res = x + y\n        res\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val product = x * y\n        (x + y) * (x + y + product)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo4kyku4k.scala:16)\n\tat Problem.main(tmpo4kyku4k.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // The sum of two numbers is not greater than the maximum of both\n\
    \        // >>> add((5l), (7l))\n        // >>> add((5l), (10l))\n        // >>>\
    \ add((5l), (8l))\n        if (x + y < max(x, y)) {\n            // The sum of\
    \ two numbers is greater than the maximum\n            return x + y\n        }\
    \ else {\n            // The sum of two numbers is less than the maximum\n   \
    \         return max(x, y)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnkuazuat.scala:25)\n\tat Problem.main(tmpnkuazuat.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = x + y\n        if (z > Integer.MAX_VALUE) {\n         \
    \   System.err.println(\"Overflow\")\n            sys.error(\"Overflow happened\"\
    )\n        }\n        z.toLong\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return (x + y)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x == 0 || y == 0)\n            return 0\n        var z = x\
    \ + y\n        if (z > Long.MaxValue)\n            z -= Long.MaxValue + 1\n  \
    \      z += 1l\n        if (z > Long.MaxValue)\n            z -= Long.MaxValue\
    \ + 1\n        z\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9puibvjh.scala:21)\n\tat Problem.main(tmp9puibvjh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979232
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def sum(x: Long, y: Long) : Long = x + y\n        sum(x, y)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // You can add two Long values in a single operation:\n       \
    \ // >>> add((3l), (7l))\n        // (11l)\n        // >>> add((5l), (7l))\n \
    \       // (12l)\n        x + y\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979234
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val num : Long = x + y;\n        num \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979235
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val temp = x + y\n        temp\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y) & 0xff\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return (x + y)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = x + y\n        return z\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val xy = x + y\n        xy\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val rt = x.toInt + (y.toInt)\n        if(!rt.isPrime) rt\n    \
    \    else rt\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1fxrj2_c.scala:11:15 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mif\e[0m(!rt.isPrime) rt\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value isPrime\
    \ is not a member of Int\n1 error found\n"
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum : Long = x + y\n        sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z: Long = x + y;\n        return z;\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return (x + y)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = x + y\n        z.asInstanceOf[Long]\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      val z = x + y\n      z\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y\n        sum.asInstanceOf[Long]\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979240
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // We need to use a mutable collection to hold the result\n   \
    \     val result = mutable.ListBuffer[Long]()\n\n        // We add the numbers\
    \ in reverse order so we have the least \n        // number first\n        for\
    \ (i <- y until x by -1) {\n            result += i\n        }\n\n        // We\
    \ return the result as a list of long values\n        result.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpegdac4gh.scala:11:21 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x > y) x else y\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj6m8ks5r.scala:15)\n\tat Problem.main(tmpj6m8ks5r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // The result will be the sum of the numbers\n        var result\
    \ = x + y\n        // For odd numbers, multiply by the reciprocal of their modulo\n\
    \        if (result % 2l == 0l) {\n            result *= reciprocalMod(result)\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpccsw5wcd.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            result *= reciprocalMod(result)\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value *= is\
    \ not a member of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpccsw5wcd.scala:14:22 ------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m            result *= reciprocalMod(result)\n\e[31m\e[31m   |\e[0m   \
    \                   ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: reciprocalMod\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val carry = x >> 31\n        val sum = x + y + carry\n        val\
    \ ret = (sum.toLong << 1) | carry\n        ret\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqm_dnog4.scala:16)\n\tat Problem.main(tmpqm_dnog4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y;\n        return sum.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val carry: Long = (x >>> 31) + y\n        x &= 0x7FFFFFFF\n   \
    \     y &= 0x7FFFFFFF\n        (carry | (x << 31) | (y << 63)) & 0x7FFFFFFF\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphzajrr9g.scala:11:10 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        x &= \e[31m0x7FFFFFFF\e[0m\n\e[31m\e[31m   |\e\
    [0m        ^^^^\e[0m\n\e[31m   |\e[0m        value &= is not a member of Long\
    \ - did you mean x.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphzajrr9g.scala:12:10\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        y &= \e[31m0x7FFFFFFF\e\
    [0m\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0m        value &= is\
    \ not a member of Long - did you mean y.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979241
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        var z = 0l\n        for (i <- 0 to (x - 1)) {\n            z =\
    \ z + y\n        }\n        return z\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2mvjzyoq.scala:11:24\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to (x - \e[31m1\e[0m)) {\n\e[31m\e[31m   |\e[0m               \
    \         ^^^^^\e[0m\n\e[31m   |\e[0m                        Found:    Long\n\e\
    [31m   |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979242
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val l1 = x.toInt\n        val l2 = y.toInt\n        if (l1 > l2)\
    \ {\n            val temp = l1\n            l1 = l2\n            l2 = temp\n \
    \       }\n        l1 + l2\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n   \
    \ assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n  \
    \  assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp4xc6uv9d.scala:14:15 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            l1 = l2\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val l1\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp4xc6uv9d.scala:15:15 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            l2 = temp\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val l2\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979239
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      val z = x + y\n      z.toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = x + y\n        z match {\n            case z if (z < 0)\
    \ => -z\n            case z if (z == 0) => z\n            case z => z\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l))\
    \ == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l))\
    \ == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l))\
    \ == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n    \tval z = x + y;\n    \treturn z.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        // Add x and y using addition algorithm\n        var sum = x\n\
    \        sum += y\n        sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x == 0) y\n        else x + y\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979245
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return (x + y)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y\n        sum.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979174
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def addLoop(ix : Long, iy : Long, sum : Long) : Long = \n     \
    \       if (ix < ix) \n              sum += iy\n            else \n          \
    \    sum += addLoop(ix+1, iy, sum+iy)\n        addLoop(0, 0, sum)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n  \
    \  assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n  \
    \  assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphqyzgwb7.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m              sum += iy\n\e[31m\e[31m   |\e[0m      \
    \        ^^^^^^\e[0m\n\e[31m   |\e[0m              value += is not a member of\
    \ Long - did you mean sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphqyzgwb7.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m              sum += addLoop(ix+\e\
    [31m1\e[0m, iy, sum+iy)\n\e[31m\e[31m   |\e[0m              ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m              value += is not a member of Long - did you mean sum.!=?\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphqyzgwb7.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        addLoop(\e[31m0\e[0m, \e[31m0\e[0m, sum)\n\e\
    [31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m           \
    \           Not found: sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979246
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y\n        sum.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979174
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      println(\"The sum is\" + x + y)\n      x + y\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: 'The sum is01

    The sum is10

    The sum is23

    The sum is57

    The sum is75

    '
  timestamp: 1659979246
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val result: Long = x+y\n        println(s\"Sum of $x and $y is\
    \ $result\")\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659979247
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794099
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val z = x + y\n        return z\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979240
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x + y\n        if (sum > 1023) {\n            val div\
    \ = sum / 1023\n            val remainder = sum % 1023\n            val newNum\
    \ = div + remainder\n            return newNum\n        }\n        return sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def add(x : Long, y : Long, acc : Long) : Long =\n            \
    \    if (x < y) {\n                    add(x + acc, y + acc, acc)\n          \
    \      }\n                else {\n                    add(x + acc, y, acc + x)\n\
    \                }\n\n        if (x > y)\n            add(x, y, x + y)\n     \
    \   else\n            add(x, y, x + y)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979252
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = new Long(0)\n        val n = 2l\n        while (y > 0)\
    \ {\n            val d = x % n\n            val m = x / n\n            val q =\
    \ (d + (y % n)) % n\n            val r = (d + ((y + q) % n)) % n\n           \
    \ val s = (q + ((x + r) % n)) % n\n            sum = sum + (s + q + r) + s\n \
    \           y = y - 1\n            x = x + 1\n            n = n + 1\n        }\n\
    \        sum\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpm2c2rkfw.scala:10:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = \e[33mnew\e[0m\
    \ \e[35mLong\e[0m(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                       \
    \    ^\e[0m\n\e[31m   |\e[0m         too many arguments for \e[33mconstructor\e\
    [0m \e[35mLong\e[0m in \e[33mclass\e[0m \e[35mLong\e[0m: (): Long\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpm2c2rkfw.scala:18:16 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            sum = sum + (s + q + r) + s\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \      Reassignment to val sum\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpm2c2rkfw.scala:19:14 -----------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            y = y - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val y\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpm2c2rkfw.scala:20:14 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            x = x + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ x\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpm2c2rkfw.scala:21:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            n = n +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val n\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659979247
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val sum = x+y\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979230
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        println(\"Add: \" + x + \" + \" + y)\n        return x + y\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: 'Add: 0 + 1

    Add: 1 + 0

    Add: 2 + 3

    Add: 5 + 7

    Add: 7 + 5

    '
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      val z = x + y\n      z.toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x+y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n      val tx = x + y\n      if (tx < 0) tx else tx\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l),\
    \ (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n    assert(add((5l),\
    \ (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val result = (x + y).toLong\n        result + (result << 32)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l)) == (1l));\n\
    \    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l)) == (5l));\n\
    \    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1a9rqgdr.scala:14)\n\tat Problem.main(tmp1a9rqgdr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x.toInt + y.toInt).toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        def loop(i:Long): Long = {\n            if (i <= 0) 0\n       \
    \     else {\n              val next = i + x\n              loop(i-1)\n      \
    \      }\n        }\n        loop(y);\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptk8h76a9.scala:20)\n\tat Problem.main(tmptk8h76a9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n    \t(x + y).asInstanceOf[Long]\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979248
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x = x + 1\n        y = y + 1\n        if (x < y) {\n          \
    \  x\n        } else {\n            y\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n\
    \    assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n\
    \    assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpki30iyvg.scala:10:10 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        x = x + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Reassignment to val x\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpki30iyvg.scala:11:10 -----------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        y = y + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Reassignment to val y\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979246
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        if (x > y) {\n            (x + y)\n        } else {\n         \
    \   (x - y)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_3scv5j3.scala:17)\n\tat Problem.main(tmp_3scv5j3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        val result = x + y\n        Console.println(result)\n        return\
    \ result\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l), (1l))\
    \ == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l), (3l))\
    \ == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l), (5l))\
    \ == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659979248
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        x + y\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659794017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        return x + y\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(add((0l), (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n  \
    \  assert(add((2l), (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n \
    \   assert(add((7l), (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Add two numbers x and y\n    // >>> add((2l), (3l))\n    // (5l)\n\
    \    // >>> add((5l), (7l))\n    // (12l)\n    def add(x : Long, y : Long) : Long\
    \ = {\n        (x + y)\n    }\n    def main(args: Array[String]) = {\n    assert(add((0l),\
    \ (1l)) == (1l));\n    assert(add((1l), (0l)) == (1l));\n    assert(add((2l),\
    \ (3l)) == (5l));\n    assert(add((5l), (7l)) == (12l));\n    assert(add((7l),\
    \ (5l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979126

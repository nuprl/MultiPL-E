language: scala
name: HumanEval_64_vowels_count
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowelsVowelSet = scala.collection.mutable.Set.empty[Char]\n        val vowelsVowelSetString\
    \ = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        for (i <- 0 until s.length\
    \ - 1) {\n            if ((s.charAt(i) == 'a' && vowelsVowelSet.contains('a'))\
    \ || (s.charAt(i) == 'e' && vowelsVowelSet.contains('e')) || (s.charAt(i) == 'i'\
    \ && vowelsVowelSet.contains('i')) || (s.charAt(i) == 'o' && vowelsVowelSet.contains('o'))\
    \ || (s.charAt(i) == 'u' && vowelsVowelSet.contains('u'))) {\n               \
    \ vowelsVowelSetString += s.charAt(i)\n                vowelsVowelSet += s.charAt(i)\n\
    \            }\n        }\n        if (vowelsVowelSetString == Set(\"y\"))\n \
    \           vowelsVowelSetString += ('y')\n        (vowelsVowelSetString == vowelsVowelSet).length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp28dq4s9_.scala:18:48\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                vowelsVowelSetString\
    \ += s.charAt(i)\n\e[31m\e[31m   |\e[0m                                      \
    \  ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                        Found:\
    \    Char\n\e[31m   |\e[0m                                        Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp28dq4s9_.scala:23:37\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m            vowelsVowelSetString\
    \ += (\e[31m'y'\e[0m)\n\e[31m\e[31m   |\e[0m                                 \
    \    ^^^\e[0m\n\e[31m   |\e[0m                                     Found:    (\e\
    [31m'y'\e[0m : Char)\n\e[31m   |\e[0m                                     Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmp28dq4s9_.scala:24:9 ------------------------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        (vowelsVowelSetString == vowelsVowelSet).length\n\
    \e[31m\e[31m   |\e[0m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mValues of types scala.collection.mutable.Set[String] and scala.collection.mutable.Set[Char]\
    \ cannot be compared with == or !=.\n\e[31m   |\e[0mI found:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m    CanEqual.canEqualSet[\e[35mString\e[0m, \e[35mChar\e[0m](/*\
    \ missing */summon[CanEqual[String, Char]])\n\e[31m   |\e[0m\n\e[31m   |\e[0mBut\
    \ no implicit values were found that match type CanEqual[String, Char].\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      val\
    \ vowels = \"aeiou\"\n      val vowelCount = 0\n      for(i <- 0 until s.length\
    \ - 1 ) {\n        if(vowels.indexOf(s.charAt(i)) > -1) {\n          vowelCount\
    \ += 1\n        }\n      }\n      vowelCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvhd9ryik.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m          vowelCount += \e[31m1\e[0m\n\e[31m\e[31m  \
    \ |\e[0m          ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          value += is not\
    \ a member of Int - did you mean vowelCount.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels_l = ('a' to 'u') ++ 'y' \n        var vowels = 0\n        for (c <- s)\
    \ {\n            if (vowels_l.contains(c)) {\n                vowels += 1\n  \
    \          }\n        }\n        vowels\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcintvdob.scala:14:39\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels_l\e\
    [0m = (\e[31m'a'\e[0m to \e[31m'u'\e[0m) ++ \e[31m'y'\e[0m \n\e[31m\e[31m   |\e\
    [0m                                       ^^^\e[0m\n\e[31m   |\e[0m          \
    \                             Found:    (\e[31m'y'\e[0m : Char)\n\e[31m   |\e\
    [0m                                       Required: IterableOnce[Char]\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ counter = 0\n        var i = s.length\n        while (i > 0) {\n           \
    \ if (s.charAt(i - 1) === 'a' || s.charAt(i - 1) === 'e' || s.charAt(i - 1) ===\
    \ 'i' || s.charAt(i - 1) === 'o' || s.charAt(i - 1) === 'u') {\n             \
    \   counter = counter + 1\n            }\n            i--\n        }\n       \
    \ counter\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpkg9nqu_b.scala:20:15 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            i--\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkg9nqu_b.scala:17:32\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m\
    \ (s.charAt(i - \e[31m1\e[0m) === \e[31m'a'\e[0m || s.charAt(i - \e[31m1\e[0m)\
    \ === \e[31m'e'\e[0m || s.charAt(i - \e[31m1\e[0m) === \e[31m'i'\e[0m || s.charAt(i\
    \ - \e[31m1\e[0m) === \e[31m'o'\e[0m || s.charAt(i - \e[31m1\e[0m) === \e[31m'u'\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m               value === is not a member of Char - did you mean Char.==?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowelsSet = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        s.toLowerCase.foldLeft(0L){\
    \ case (acc, letter) => acc + (vowelsSet contains letter) }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp75t7p4sp.scala:15:84\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        s.toLowerCase.foldLeft(\e\
    [31m0L\e[0m){ \e[33mcase\e[0m (acc, letter) => acc + (vowelsSet contains letter)\
    \ }\n\e[31m\e[31m   |\e[0m                                                   \
    \                                 ^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \                                Found:    (letter : Char)\n\e[31m   |\e[0m  \
    \                                             Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E134] Type Error: /tmp/tmp75t7p4sp.scala:15:62 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        s.toLowerCase.foldLeft(\e[31m0L\e[0m){ \e[33mcase\e\
    [0m (acc, letter) => acc + (vowelsSet contains letter) }\n\e[31m\e[31m   |\e[0m\
    \                                                          ^^^^^\e[0m\n\e[31m\
    \   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35m+\e[0m\
    \ in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x: Double):\
    \ Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m   |\e[0m (x: Long): Long\n\
    \e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e\
    [0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0m (x: String):\
    \ String\n\e[31m   |\e[0mmatch arguments (Boolean)\n2 errors found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 1\n        for(ch <- s)\n            if(ch == 'a' || ch == 'e' || ch\
    \ == 'i' || ch == 'o' || ch == 'u')\n                count += 1\n        val vowels\
    \ = s.length - count + 1\n        if(vowels == 0)\n            return 0\n    \
    \    if(vowels == 1 && s.charAt(s.length - 1) != 'y')\n            vowels\n  \
    \      else\n            vowels * (vowels/s.length)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo_cjg7m2.scala:27)\n\tat Problem.main(tmpo_cjg7m2.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Write your code here\n        val vowels = \"aeiouAEIOU\".toSet\n        val\
    \ vowelscount = s.length\n        vowels.foreach(x => vowelscount += s.indexOf(x)\
    \ >= 0)\n        vowelscount\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuzbbu6qb.scala:17:40 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        vowels.foreach(\e[36mx\e[0m => vowelscount +=\
    \ s.indexOf(x) >= \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                       \
    \     ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          value += is not a member of\
    \ Int - did you mean vowelscount.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toCharArray\n        var count = 0L\n        for (i<-0 to\
    \ s.length-1) {\n            if (vowels(i) == s(i)) {\n                count +=\
    \ 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp32g5aa0f.scala:24)\n\tat Problem.main(tmp32g5aa0f.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978937
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ c = s.toCharArray\n        val vowels = Array('a','e','i','o','u')\n       \
    \ val vowelsCount = new mutable.ArrayBuffer[Long]()\n        for (i <- 0 until\
    \ c.length) {\n            vowelsCount += vowels.filter(_ == c(i)).size\n    \
    \    }\n        c.toList.foldLeft(0){(sum, a) => sum + a}\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6cdqp_ku.scala:16:30 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978932
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        s.count(\
    \ c => \n            (c equals ('a') ||\n             c equals ('e') ||\n    \
    \         c equals ('i') ||\n             c equals ('o') ||\n             c equals\
    \ ('u')) &&\n            !(c == 'y' && s.last.isUpper)\n        )\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoj4v27he.scala:15:28 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            (c equals (\e[31m'a'\e[0m) ||\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \       value || is not a member of Char\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpoj4v27he.scala:16:28 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m             c equals (\e[31m'e'\e[0m) ||\n\e[31m\e[31m   |\e[0m          \
    \            ^^^^^^^^\e[0m\n\e[31m   |\e[0m                      value || is not\
    \ a member of Char\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoj4v27he.scala:17:28\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m             c equals (\e\
    [31m'i'\e[0m) ||\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      value || is not a member of Char\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpoj4v27he.scala:18:28 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m             c equals (\e[31m'o'\e[0m) ||\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \       value || is not a member of Char\n4 errors found\n"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (v <- \"aeiouy\".toCharArray) {\n            count +=\
    \ 1\n            if (s.endsWith(v)) {\n                count += 1\n          \
    \      break\n            }\n        }\n        return count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpz_75ze0u.scala:17:27\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (s.endsWith(v))\
    \ {\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m \
    \                          Found:    (v : Char)\n\e[31m   |\e[0m             \
    \              Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpz_75ze0u.scala:19:16 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m                break\n\e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e\
    [31m   |\e[0m                Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ lst : mutable.Seq[Char] = s.toList\n        val vowels = mutable.List(\"a\"\
    , \"e\", \"i\", \"o\", \"u\")\n        val slen = lst.size\n        val n = 0\n\
    \        for( i <- 0 until slen) {\n            val v = lst(i)\n            n\
    \ += vowels.contains(v)\n        }\n        n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdh9igzpe.scala:14:18 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mlst\e[0m : mutable.Seq[\e\
    [35mChar\e[0m] = s.toList\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpdh9igzpe.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.List(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpdh9igzpe.scala:20:14 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            n += vowels.contains(v)\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        def\
    \ vowelCount(s : String) : Long = {\n            var count = 0;\n            var\
    \ i = 0;\n            while (i < s.length){\n                count += if(i ==\
    \ s.length - 1) 1 else (s.charAt(i) == s.charAt(i+1));\n                i += 1\n\
    \            }\n            return count\n        }\n        return vowelCount(s)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmphn6ve9_a.scala:18:25 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                count += \e[33mif\e[0m(i == s.length\
    \ - \e[31m1\e[0m) \e[31m1\e[0m \e[33melse\e[0m (s.charAt(i) == s.charAt(i+\e[31m1\e\
    [0m));\n\e[31m\e[31m   |\e[0m                         ^^\e[0m\n\e[31m   |\e[0m\
    \                         expression expected but \e[31mif\e[0m found\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphn6ve9_a.scala:18:22 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                count += \e[33mif\e[0m(i == s.length\
    \ - \e[31m1\e[0m) \e[31m1\e[0m \e[33melse\e[0m (s.charAt(i) == s.charAt(i+\e[31m1\e\
    [0m));\n\e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \              value += is not a member of Int - did you mean Int.!=?\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978935
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ result = mutable.Map[Char, Long]()\n        for (i <- s.indices) {\n       \
    \     if ((s.charAt(i) == 'a') || (s.charAt(i) == 'e') || (s.charAt(i) == 'i')\
    \ || (s.charAt(i) == 'o') || (s.charAt(i) == 'u')) {\n                result(s.charAt(i))\
    \ = result.getOrElse(s.charAt(i), 0) + 1\n            }\n        }\n        result.get('y')\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc5pgn6kp.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.Map[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978932
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        s.toCharArray.filter(x => vowels.indexOf(x) != -1).length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfmg8f37d.scala:19)\n\tat Problem.main(tmpfmg8f37d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ counts : mutable.HashMap[Char, Int] = mutable.HashMap()\n        for (c <- s)\
    \ {\n            if (counts.contains(c))\n                counts(c) = counts(c)\
    \ + 1\n            else\n                counts.put(c, 1) \n        }\n      \
    \  val vowels = counts.filter(_._2 > 0).size\n        (vowels * s.length)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8h7urwx5.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m : mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m] = mutable.HashMap()\n\e[31m\e[31m   |\e[0m    \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8h7urwx5.scala:14:50\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m : mutable.HashMap[\e[35mChar\e[0m, \e[35mInt\e[0m] = mutable.HashMap()\n\
    \e[31m\e[31m   |\e[0m                                                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                  Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978932
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelEndChar =\
    \ s match {\n            case x :: rest =>\n                if (vowels.contains(x)\
    \ && x.length == 1) {\n                    x\n                } else {\n     \
    \               if (vowelEndChar == x) \"y\" else vowelEndChar\n             \
    \   }\n            case _ =>\n                \"y\"\n        }\n        val vowels\
    \ = vowels.toSet\n        val vowelsCount = s.length.toLong\n        if (vowelsCount\
    \ == 0) 0L\n        else if (vowelsCount == 1 && vowels.contains(vowelEndChar))\
    \ 1L\n        else vowelsCount.productIterator.filter(vowels.contains).length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpuskb0wv8.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = vowels.toSet\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowels\
    \ is already defined as \e[33mvalue\e[0m \e[35mvowels\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuskb0wv8.scala:17:36\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m                \e[33mif\e[0m\
    \ (vowels.contains(x) && x.length == \e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m  \
    \                                  ^\e[0m\n\e[31m   |\e[0m                   \
    \                 Found:    (x : Any)\n\e[31m   |\e[0m                       \
    \             Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpuskb0wv8.scala:17:44 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m                \e[33mif\e[0m (vowels.contains(x) && x.length == \e[31m1\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                                          ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                     value length is not a\
    \ member of Any\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpuskb0wv8.scala:20:24\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                    \e\
    [33mif\e[0m (vowelEndChar == x) \e[31m\"y\"\e[0m \e[33melse\e[0m vowelEndChar\n\
    \e[31m\e[31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m         \
    \               Recursive \e[33mvalue\e[0m \e[35mvowelEndChar\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpuskb0wv8.scala:20:52\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                    \e\
    [33mif\e[0m (vowelEndChar == x) \e[31m\"y\"\e[0m \e[33melse\e[0m vowelEndChar\n\
    \e[31m\e[31m   |\e[0m                                                    ^\e[0m\n\
    \e[31m   |\e[0m                                 Recursive \e[33mvalue\e[0m \e\
    [35mvowelEndChar\e[0m needs typ"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ arr = s.toCharArray\n        val vowels = 'a' -> 'e' -> 'i' -> 'o' -> 'u' ->\
    \ 'y'\n        val counts = scala.collection.mutable.Map.empty[Char, Int]\n  \
    \      for (i <- 0 until arr.length) {\n            val letter = arr(i).toLowerCase\n\
    \            counts.put(vowels(letter), counts.getOrElse(letter, 0L) + 1)\n  \
    \      }\n        counts.getOrElse('y', 0L)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr66l53li.scala:18:32 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mval\e[0m \e[36mletter\e[0m = arr(i).toLowerCase\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                         value toLowerCase is not a member of Char\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr66l53li.scala:19:29 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            counts.put(vowels(letter), counts.getOrElse(letter,\
    \ \e[31m0L\e[0m) + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                      \
    \ ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       Found:    ((((Char,\
    \ Char), Char), Char), Char)\n\e[31m   |\e[0m                       Required:\
    \ Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr66l53li.scala:19:68\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            counts.put(vowels(letter),\
    \ counts.getOrElse(letter, \e[31m0L\e[0m) + \e[31m1\e[0m)\n\e[31m\e[31m   |\e\
    [0m                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue + is not a member of AnyVal, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e\
    [0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import\
    \ math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpr66l53li.scala:21:24 --------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m        counts.getOrElse(\e[31m'y'\e[0m, \e[31m0L\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \     Found:    AnyVal\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659978937
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowelsCount = mutable.HashMap[Char, Long]()\n\
    \        s.foreach { letter =>\n            if (vowels.contains(letter)) vowelsCount(letter)\
    \ += 1\n        }\n        vowelsCount.filter(_._2 > 0).size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw_p8tgg5.scala:15:26 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978933
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Your code goes here!\n        val vowels = ('a' to 'u').toSet\n        var count\
    \ = 0\n        for ( letter <- s ) {\n            if(vowels.contains(letter))\
    \ {\n                count += 1\n            }\n        }\n        count\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6t8vlim6.scala:25)\n\tat Problem.main(tmp6t8vlim6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978937
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toSet\n        val count = s.length\n        var sum = 0L\n\
    \        for (i <- 0 until count) {\n            if (vowels.contains(s.charAt(i)))\
    \ {\n                sum = sum + 1\n            }\n        }\n        sum\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkibty87q.scala:26)\n\tat Problem.main(tmpkibty87q.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        s.toLowerCase\n\
    \            .split(\"\") // Split string into characters, ignoring case for simplicity\n\
    \            .filter(_.isUpper) // Select only uppercase characters\n        \
    \    .filter(_.isLetter) // Select only letters (for simplicity, assume not accented)\n\
    \            .filter(!_.isDigit) // Remove non-numeric characters\n          \
    \  .filter(s => s == \"a\" || s == \"e\" || s == \"i\" || s == \"o\" || s == \"\
    u\") // Select only vowels\n            .size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppqb6wimn.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            .filter(_.isUpper) \e[34m// Select only uppercase\
    \ characters\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                    value isUpper is not a member of String\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmppqb6wimn.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            .filter(_.isLetter) \e[34m// Select only\
    \ letters (for simplicity, assume not accented)\e[0m\n\e[31m\e[31m   |\e[0m  \
    \                  ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    value isLetter\
    \ is not a member of String\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppqb6wimn.scala:18:23\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            .filter(!_.isDigit)\
    \ \e[34m// Remove non-numeric characters\e[0m\n\e[31m\e[31m   |\e[0m         \
    \            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     value isDigit\
    \ is not a member of String\n3 errors found\n"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ letters = mutable.MutableList[String]()\n        for(i <- 0 until s.length){\n\
    \            if(s(i)==\"a\" || s(i)==\"e\" || s(i)==\"i\" || s(i)==\"o\" || s(i)==\"\
    u\"){\n                letters += s(i)\n            }\n            if(s(i)==\"\
    y\"){\n                letters += s(i)\n            }\n        }\n        letters.count\
    \ { case (\"a\" | \"e\" | \"i\" | \"o\" | \"u\") => true }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa52l_j_j.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mletters\e[0m = mutable.MutableList[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- Error: /tmp/tmpa52l_j_j.scala:16:15 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(s(i)==\e[31m\"a\"\e[0m || s(i)==\e\
    [31m\"e\"\e[0m || s(i)==\e[31m\"i\"\e[0m || s(i)==\e[31m\"o\"\e[0m || s(i)==\e\
    [31m\"u\"\e[0m){\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m        Values of types Char and String cannot be compared with == or\
    \ !=\n\e[31m\e[31m-- Error: /tmp/tmpa52l_j_j.scala:16:28 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(s(i)==\e[31m\"a\"\e[0m || s(i)==\e\
    [31m\"e\"\e[0m || s(i)==\e[31m\"i\"\e[0m || s(i)==\e[31m\"o\"\e[0m || s(i)==\e\
    [31m\"u\"\e[0m){\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpa52l_j_j.scala:16:41 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(s(i)==\e[31m\"a\"\e[0m || s(i)==\e\
    [31m\"e\"\e[0m || s(i)==\e[31m\"i\"\e[0m || s(i)==\e[31m\"o\"\e[0m || s(i)==\e\
    [31m\"u\"\e[0m){\n\e[31m\e[31m   |\e[0m                                      \
    \   ^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String cannot\
    \ be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpa52l_j_j.scala:16:54\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \     \e[33mif\e[0m(s(i)==\e[31m\"a\"\e[0m || s(i)==\e[31m\"e\"\e[0m || s(i)==\e\
    [31m\"i\"\e[0m || s(i)==\e[31m\"o\"\e[0m || s(i)==\e[31m\"u\"\e[0m){\n\e[31m\e\
    [31m   |\e[0m                                                      ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpa52l_j_j.scala:16:67 ------------------------"
  stdout: ''
  timestamp: 1659978936
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowels = Set.empty[Char]\n        for (c <- s) {\n            vowels += c\n\
    \        }\n        vowels.size + (if (s.endsWith('y')) 1 else 0)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp15czxv9s.scala:18:38\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        vowels.size + (\e[33mif\e\
    [0m (s.endsWith(\e[31m'y'\e[0m)) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m)\n\e\
    [31m\e[31m   |\e[0m                                      ^^^\e[0m\n\e[31m   |\e\
    [0m                                      Found:    (\e[31m'y'\e[0m : Char)\n\e\
    [31m   |\e[0m                                      Required: String\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978944
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0.0\n        for (c in s.toCharArray) {\n          if (c == 'a' || c\
    \ == 'e' || c == 'i' || c == 'o' || c == 'u') {\n            count += 1\n    \
    \      }\n        }\n        val vowels = Set(\"a\",\"e\",\"i\",\"o\",\"u\")\n\
    \        if (count % 2 != 0) {\n          (count - vowels.size) * vowels.size\n\
    \        } else {\n          count * vowels.size\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgwpjplkr.scala:15:33 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (c in s.toCharArray) {\n\e[31m\e\
    [31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m        \
    \                         '<-' expected, but '{' found\n\e[31m\e[31m-- [E020]\
    \ Syntax Error: /tmp/tmpgwpjplkr.scala:23:10 ---------------------------\e[0m\e\
    [0m\n\e[31m23 |\e[0m        } \e[33melse\e[0m {\n\e[31m\e[31m   |\e[0m       \
    \   ^^^^\e[0m\n\e[31m   |\e[0m          \e[33myield\e[0m or \e[33mdo\e[0m expected\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgwpjplkr.scala:19:9\
    \ -------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        }\n\e[31m\e[31m\
    \   |\e[0m         ^\e[0m\n\e[31m   |\e[0mvalue withFilter is not a member of\
    \ Null, but could be made available as an extension method.\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties\
    \ AsScalaMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration\
    \ AsScalaIterator\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator\
    \ asScala\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.map\
    \ AsScalaConcurrentMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.set\
    \ asScala\n\e[31m   |\e[0m\n3 errors found\n"
  stdout: ''
  timestamp: 1659978945
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var letters = s.toCharArray\n        var firstLetter = letters(0)\n\
    \        while (firstLetter != ' ') {\n            letters = letters.dropRight(1)\n\
    \            firstLetter = letters(0)\n        }\n\n        for (letter <- letters)\
    \ {\n            if ('a' <= letter && letter <= 'u') {\n                count\
    \ += 1\n            }\n        }\n        letters = letters.dropRight(1)\n   \
    \     var lastLetter = letters(0)\n        while (lastLetter != ' ') {\n     \
    \       letters = letters.dropRight(1)\n            lastLetter = letters(0)\n\
    \        }\n\n        for (letter <- letters) {\n            if ('a' <= letter\
    \ && letter <= 'u') {\n                count += 1\n            }\n        }\n\
    \        return count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArrayIndexOutOfBoundsException: Index 0 out of bounds for length\
    \ 0\n\tat Problem$.vowelsCount(tmp_podobgy.scala:19)\n\tat Problem$.main(tmp_podobgy.scala:42)\n\
    \tat Problem.main(tmp_podobgy.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      s.toUpperCase.count(x\
    \ => x == 'A'\n        | x == 'E'\n        | x == 'I'\n        | x == 'O'\n  \
    \      | x == 'U')\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbo5y348w.scala:23)\n\tat Problem.main(tmpbo5y348w.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978945
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ c = 0\n        var i = 0\n        while (i < s.length()) {\n            if (s.charAt(i)\
    \ == 'a') {\n                c += 1\n            } else if (s.charAt(i) == 'e')\
    \ {\n                c += 1\n            } else if (s.charAt(i) == 'i') {\n  \
    \              c += 1\n            } else if (s.charAt(i) == 'o') {\n        \
    \        c += 1\n            } else if (s.charAt(i) == 'u') {\n              \
    \  c += 1\n            } else if (s.charAt(i) == 'y') {\n                if (i\
    \ != s.length() - 1) {\n                    c += 1\n                }\n      \
    \      }\n            i += 1\n        }\n        c\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpei556yis.scala:38)\n\tat Problem.main(tmpei556yis.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        for (c <- s) {\n            if (c == 'a' || c == 'e' ||\
    \ c == 'i' || c == 'o' || c == 'u') {\n                count += 1L\n         \
    \   }\n        }\n        if (s.size == 0 || count > 0) {\n            return\
    \ count\n        }\n        return 0L\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyiiq_ry1.scala:27)\n\tat Problem.main(tmpyiiq_ry1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0L\n        for ( c <- s ) {\n     \
    \       if (\"aeiou\".contains(c)) {\n                count += 1L\n          \
    \  }\n        }\n        return count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzeme2sqv.scala:25)\n\tat Problem.main(tmpzeme2sqv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowelCount = 1\n        for(x<-s.toCharArray)\n        {\n            if(x=='a'\
    \ || x=='e' || x=='i' || x=='o' || x=='u')\n            {\n                vowelCount\
    \ += 1\n            }\n        }\n        vowelCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgwxb6xgd.scala:25)\n\tat Problem.main(tmpgwxb6xgd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978948
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = scala.collection.mutable.Set.empty[Char]\n        var count = 0L\n\
    \        for (char <- s)\n            if (vowels.contains(char)) count += 1\n\
    \            else vowels += char\n        vowels.size\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpolkpn1pv.scala:22)\n\tat Problem.main(tmpolkpn1pv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels  = \"aeiou\"\n        val vowelsSet = vowels.toSet\n        val setLen\
    \ = s.length\n        val vowelCount = ((s.toLowerCase() match {\n           \
    \ case vowelsSet(i) => i\n            case _          => -1\n        }).toList\
    \ map { i =>\n            vowels.indexOf(i)\n        }).sum\n        (vowelCount\
    \ == setLen) ? vowelCount : -1\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E127] Syntax Error: /tmp/tmpjz5yzfb1.scala:18:17 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mcase\e[0m vowelsSet(i) => i\n\e[31m\e\
    [31m   |\e[0m                 ^^^^^^^^^\e[0m\n\e[31m   |\e[0mvowelsSet cannot\
    \ be used as an extractor in a pattern because it lacks an unapply or unapplySeq\
    \ method\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjz5yzfb1.scala:18:33\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mcase\e\
    [0m vowelsSet(i) => i\n\e[31m\e[31m   |\e[0m                                 ^\e\
    [0m\n\e[31m   |\e[0m                                 Not found: i\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978944
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ code here\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwx_bceu3.scala:13:41\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m    \e[33mdef\e[0m \e[36mvowelsCount\e\
    [0m(\e[36ms\e[0m : \e[35mString\e[0m) : \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e\
    [0m                                         ^\e[0m\n\e[31m   |\e[0m          \
    \                               Found:    Unit\n\e[31m   |\e[0m              \
    \                           Required: Long\n\e[31m14 |\e[0m        \e[34m// code\
    \ here\e[0m\n\e[31m15 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978946
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        s.toLowerCase.foreach(x => {\n            if(x ==\"a\" ||\
    \ x == \"e\" || x == \"i\" || x == \"o\" || x == \"u\") {\n                count++\n\
    \            }\n        })\n        return count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpr9gla26r.scala:17:23 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                count++\n\e[31m\e[31m   |\e[0m      \
    \                 ^\e[0m\n\e[31m   |\e[0m                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpr9gla26r.scala:16:15\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \     \e[33mif\e[0m(x ==\e[31m\"a\"\e[0m || x == \e[31m\"e\"\e[0m || x == \e[31m\"\
    i\"\e[0m || x == \e[31m\"o\"\e[0m || x == \e[31m\"u\"\e[0m) {\n\e[31m\e[31m  \
    \ |\e[0m               ^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpr9gla26r.scala:16:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \     \e[33mif\e[0m(x ==\e[31m\"a\"\e[0m || x == \e[31m\"e\"\e[0m || x == \e[31m\"\
    i\"\e[0m || x == \e[31m\"o\"\e[0m || x == \e[31m\"u\"\e[0m) {\n\e[31m\e[31m  \
    \ |\e[0m                          ^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types Char and String cannot be compared with == or !=\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpr9gla26r.scala:16:38 -----------------------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(x ==\e[31m\"a\"\e[0m || x == \e\
    [31m\"e\"\e[0m || x == \e[31m\"i\"\e[0m || x == \e[31m\"o\"\e[0m || x == \e[31m\"\
    u\"\e[0m) {\n\e[31m\e[31m   |\e[0m                                      ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpr9gla26r.scala:16:50 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(x ==\e[31m\"a\"\e[0m || x ==\
    \ \e[31m\"e\"\e[0m || x == \e[31m\"i\"\e[0m || x == \e[31m\"o\"\e[0m || x == \e\
    [31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m                                     \
    \             ^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpr9gla26r.scala:16:62\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \     \e[33mif\e[0m(x ==\e["
  stdout: ''
  timestamp: 1659978948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Your code here\n        val vowels = Set('a', 'e', 'i', 'o', 'u')\n        val\
    \ vowels_count = 0\n        for(i <- 0 until s.length) vowels_count += vowels.contains(s.charAt(i))\n\
    \        vowels_count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6d7bbzdq.scala:17:48 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until s.length)\
    \ vowels_count += vowels.contains(s.charAt(i))\n\e[31m\e[31m   |\e[0m        \
    \                           ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         value\
    \ += is not a member of Int - did you mean vowels_count.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978947
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set.empty[Char]\n        val lowerCases = s.toLowerCase //\
    \ Make it case insensitive\n        for (c <- lowerCases) {\n            if(c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u')\n                vowels\
    \ += c\n        }\n        val vowelCount = vowels.size // return number of vowels\n\
    \        vowelCount //return number of vowels\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps1_4i51j.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set.empty[\e\
    [35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ count = mutable.HashSet[Char]()\n        s.foreach(c => count += c)\n      \
    \  count.count(_ == 'a') + (if (s.endsWith('y')) 1 else 0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzz2xvo0a.scala:14:20 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978944
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ l = (s.length)\n        val x = s.toCharArray\n        val z = Array.ofDim[Int](l)\n\
    \        for (i <- 0 until l)\n            z(i) = (x(i %) + (x(i) <> 'a' && !(x(i)\
    \ <> 'y'))).toLong\n        val n = z(0)\n        var count = 0L\n        for\
    \ (i <- 1 until l)\n            if (z(i) != n)\n                count++\n    \
    \    Long(count)\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp3e32q0sc.scala:18:25 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            z(i) = (x(i %) + (x(i) <> \e[31m'a'\e[0m\
    \ && !(x(i) <> \e[31m'y'\e[0m))).toLong\n\e[31m\e[31m   |\e[0m               \
    \          ^\e[0m\n\e[31m   |\e[0m                         expression expected\
    \ but \e[31m')'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error:\
    \ /tmp/tmp3e32q0sc.scala:23:23 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                count++\n\e[31m\e[31m   |\e[0m                       ^\e\
    [0m\n\e[31m   |\e[0m                       expression expected but \e[31munindent\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3e32q0sc.scala:18:35\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            z(i) = (x(i %)\
    \ + (x(i) <> \e[31m'a'\e[0m && !(x(i) <> \e[31m'y'\e[0m))).toLong\n\e[31m\e[31m\
    \   |\e[0m                              ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \        value <> is not a member of Char - did you mean Char.<<?\n\e[31m\e[31m--\
    \ [E050] Type Error: /tmp/tmp3e32q0sc.scala:24:8 ------------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        Long(count)\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0m        \e[33mobject\e[0m \e[35mLong\e[0m in \e[33mpackage\e\
    [0m \e[35mscala\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978947
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ counts = mutable.HashMap[Char,Long]()\n        for (c <- s.toCharArray) {\n\
    \            counts(c) match {\n            case None     => counts += ((c) ->\
    \ 1)\n            case Some(x) => counts += ((c) -> x + 1)\n            }\n  \
    \      }\n        counts.filter(_._2 > 0).values.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4t9plzqb.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m,\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        def\
    \ findVowel(s: String, index : Int) : Long = {\n            if (index < s.length){\n\
    \                var vowelCount = 0\n                if (s.charAt(index) == 'a'){\n\
    \                    vowelCount+=1\n                }\n                if (s.charAt(index)\
    \ == 'e'){\n                    vowelCount+=1\n                }\n           \
    \     if (s.charAt(index) == 'i'){\n                    vowelCount+=1\n      \
    \          }\n                if (s.charAt(index) == 'o'){\n                 \
    \   vowelCount+=1\n                }\n                if (s.charAt(index) == 'u'){\n\
    \                    vowelCount+=1\n                }\n                if (s.charAt(index)\
    \ == 'y'){\n                    vowelCount+=1\n                }\n           \
    \     if (s.charAt(index) == ' '){\n                    vowelCount+=1\n      \
    \          }\n                return vowelCount\n            }\n            return\
    \ 0\n        }\n        def findVowels(s: String) : Long = {\n            var\
    \ vowelCount = 0\n            for (i <- 0 to s.length-1){\n                var\
    \ countOfVowels = findVowel(s, i)\n                vowelCount += countOfVowels\n\
    \            }\n            return vowelCount\n        }\n        return findVowels(s)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl_b83_cs.scala:46:27 ------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m                vowelCount += countOfVowels\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   value += is not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        s.toList\
    \ match {\n            case x if (x == null || x.length == 0) => 0\n         \
    \   case xs =>\n                var cnt = 0\n                var lastChar = xs.last\n\
    \                for (x <- xs) {\n                    if (x.equalsIgnoreCase(lastChar)\
    \ || x == \"y\") {\n                        cnt += 1\n                    }\n\
    \                    lastChar = x\n                }\n                cnt\n  \
    \      }\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf4kys7s2.scala:20:26 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                    \e[33mif\e[0m (x.equalsIgnoreCase(lastChar)\
    \ || x == \e[31m\"y\"\e[0m) {\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                        value equalsIgnoreCase is not a member\
    \ of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659978947
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toList\n        var count = 0L\n        val letters\
    \ = s.toCharArray\n        for (i <- 0 until letters.length) count += (if (vowels(letters(i)))\
    \ 1 else 0L)\n        count\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5fvlr5fa.scala:17:48 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until letters.length)\
    \ count += (\e[33mif\e[0m (vowels(letters(i))) \e[31m1\e[0m \e[33melse\e[0m \e\
    [31m0L\e[0m)\n\e[31m\e[31m   |\e[0m                                          ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value += is not a member of Long - did you\
    \ mean Long.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5fvlr5fa.scala:17:62\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until letters.length) count += (\e[33mif\e[0m (vowels(letters(i)))\
    \ \e[31m1\e[0m \e[33melse\e[0m \e[31m0L\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \                                               ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                                       Found:    Char\n\
    \e[31m   |\e[0m                                                       Required:\
    \ Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978947
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val numVowels = s.length\n\
    \        val vowelsArray = Array.ofDim[Char](numVowels)\n        for(i <- 0 until\
    \ numVowels)\n            vowelsArray(i) = s(i)\n            vowelsArray(i)\n\
    \        for(i <- 0 until numVowels)\n            if(vowels(s(i)))\n         \
    \       vowelsArray(i) -= 1\n        vowelsArray.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmbqm4_5f.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpmbqm4_5f.scala:22:31 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                vowelsArray(i) -= \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value -= is not a member of Char - did you mean Char.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978948
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      var\
    \ count = 1\n      var pos = 0\n      val chars = s.toCharArray\n      while (pos\
    \ < chars.length) {\n        if (chars(pos) == 'a' || chars(pos) == 'e' || chars(pos)\
    \ == 'i' || chars(pos) == 'o' || chars(pos) == 'u') {\n          count = count\
    \ + 1\n        }\n        pos += 1\n      }\n      (count - s.length)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpeex71nvi.scala:26)\n\tat Problem.main(tmpeex71nvi.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978948
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set.empty[Char]\n        for (letter <- s) {\n            vowels\
    \ += letter\n        }\n        return vowels.size + (s.toString.toLowerCase.endsWith(\"\
    y\") match {\n            case true => 1\n            case _ => 0\n        })\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq0b5ahbq.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set.empty[\e\
    [35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set[Char]('a','e','i','o','u')\n        val counts = mutable.HashMap[Char,\
    \ Int]()\n        for (letter <- s) {\n            if (!vowels.contains(letter))\
    \ continue \n            if (letter.isEmpty) continue \n            if (!counts.contains(letter))\
    \ {\n                counts += letter -> 1\n            } else {\n           \
    \     counts(letter) += 1\n            }\n        }\n        counts.map{ case\
    \ (k,v) => v.toLong }.reduce(_ + _).toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgl964_q2.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgl964_q2.scala:17:42 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (!vowels.contains(letter))\
    \ continue \n\e[31m\e[31m   |\e[0m                                          ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                          Not found: continue\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgl964_q2.scala:18:23\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m\
    \ (letter.isEmpty) continue \n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value isEmpty is not a member of Char\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgl964_q2.scala:18:32 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (letter.isEmpty) continue \n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                Not found: continue\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toCharArray\n        val result = new mutable.HashMap[Char,\
    \ Int]()\n        var wordLen = s.length()\n        for ( c <- s.toCharArray )\
    \ {\n            if ( vowels(c) ) result += (c -> 1)\n            else wordLen\
    \ -= 1\n        }\n        result.size + (if ( wordLen == 0 ) 1 else 0)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp815bcqmp.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp815bcqmp.scala:18:23\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m ( vowels(c)\
    \ ) result += (c -> \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                 ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                 Found:    Char\n\e[31m   |\e[0m         \
    \        Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      var\
    \ count = 0\n      var currentChar = s.charAt(0)\n      var nextChar = s.charAt(1)\n\
    \      while (nextChar != null) {\n        if (currentChar == 'a' || currentChar\
    \ == 'e' || currentChar == 'i' || currentChar == 'o' || currentChar == 'u') {\n\
    \          count += 1\n        }\n        currentChar = nextChar\n        nextChar\
    \ = s.charAt(2)\n      }\n      if (currentChar == 'y') {\n        count += 1\n\
    \      }\n      return count\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmprzha0_q2.scala:17:13 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m      \e[33mwhile\e[0m (nextChar != \e[31mnull\e[0m)\
    \ {\n\e[31m\e[31m   |\e[0m             ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \          Values of types Char and Null cannot be compared with == or !=\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ count = mutable.ListBuffer[Char]()\n        val vowels = 'aeiou'.toCharArray\n\
    \        for (i <- s.length - 1 to 0 by -1) {\n            if (vowels(i) != 'u'\
    \ && vowels(i) != 'o' && vowels(i) != 'a') {\n                count += vowels(i)\n\
    \            }\n        }\n        count.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpid63hgsa.scala:15:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = \e[31m'aeiou\e\
    [0m'.toCharArray\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m   |\e\
    [0msymbol literal 'aeiou is no longer supported,\n\e[31m   |\e[0muse a string\
    \ literal \"aeiou\" or an application Symbol(\"aeiou\") instead,\n\e[31m   |\e\
    [0mor enclose in braces '{aeiou} if you want a quoted expression.\n\e[31m   |\e\
    [0mFor now, you can also `import language.deprecated.symbolLiterals` to accept\n\
    \e[31m   |\e[0mthe idiom, but this possibility might no longer be available in\
    \ the future.\n\e[31m\e[31m-- Error: /tmp/tmpid63hgsa.scala:15:27 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = \e[31m'aeiou\e\
    [0m'.toCharArray\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m\
    \   |\e[0m                           unclosed character literal\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpid63hgsa.scala:14:20 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E050] Type Error: /tmp/tmpid63hgsa.scala:17:16 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(i) != \e[31m'u'\e[0m\
    \ && vowels(i) != \e[31m'o'\e[0m && vowels(i) != \e[31m'a'\e[0m) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                \e[33mvalue\e\
    [0m \e[35mvowels\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978952
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowels :List[Char] = Nil\n        var i = 0\n        while (i < s.length - 1)\
    \ {\n            if (vowels.contains(s.charAt(i))) {\n                i += 1\n\
    \            } else {\n                vowels ::= s.charAt(i)\n              \
    \  i += 1\n            }\n        }\n        vowels.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvtprz7_s.scala:27)\n\tat Problem.main(tmpvtprz7_s.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978956
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ v = s.toLowerCase().toCharArray.toList.filter(!Character.isLetter(ch)).toList\n\
    \        val vCount = v.count(c => c == 'a' || c == 'e' || c == 'i' || c == 'o'\
    \ || c == 'u')\n        vCount\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg314jrto.scala:14:78 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mv\e[0m = s.toLowerCase().toCharArray.toList.filter(!Character.isLetter(ch)).toList\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                      ^^\e[0m\n\e[31m   |\e[0m                              \
    \                             Not found: ch\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"aeiouy\")\n        val vowelsCount = Set()\n        var count\
    \ = 0\n        for (word <- s.split(\"\\\\W\")) {\n            val wordCount =\
    \ word.split(\"a\").length\n            count += wordCount\n            for (vowel\
    \ <- vowels) {\n                if (word.contains(vowel)) {\n                \
    \    vowelsCount += count\n                }\n            }\n        }\n     \
    \   vowelsCount.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyora4yz4.scala:22:35\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m                    vowelsCount\
    \ += count\n\e[31m\e[31m   |\e[0m                                   ^^^^^\e[0m\n\
    \e[31m   |\e[0m                                   Found:    (count : Int)\n\e\
    [31m   |\e[0m                                   Required: Nothing\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyora4yz4.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        vowelsCount.toLong\n\e[31m\e[31m   |\e[0m   \
    \     ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toLong is not a member of\
    \ scala.collection.mutable.Set[Nothing], but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e[0m  import\
    \ math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import math.Numeric.Implicits.infixNumericOps\n\
    \e[31m   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1659978956
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toSet\n        var count = 0\n        s.foreach(x => if (vowels.contains(x))\
    \ count += 1)\n        count\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4yki620d.scala:21)\n\tat Problem.main(tmp4yki620d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978957
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = List(\"a\",\"e\",\"i\",\"o\",\"u\")\n        var count = 0L\n     \
    \   for (v <- vowels) {\n            if (s.indexOf(v) != -1) {\n             \
    \   count += 1L\n            }\n        }\n        if (s.indexOf(\"y\") == -1)\
    \ {\n            count += 1L\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt41i7uqq.scala:27)\n\tat Problem.main(tmpt41i7uqq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ list = mutable.MutableList(s.reverse.zipWithIndex.filter(_._1 == _._1).map(_._2._2))\n\
    \        val vowels = \"aeiou\".toSet\n        val count = list.filterNot(vowels.contains).size\n\
    \        return count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl_0hyr6j.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = mutable.MutableList(s.reverse.zipWithIndex.filter(_._1\
    \ == _._1).map(_._2._2))\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978954
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n       //\
    \ Your code goes here\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9s1zduoc.scala:13:41\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m    \e[33mdef\e[0m \e[36mvowelsCount\e\
    [0m(\e[36ms\e[0m : \e[35mString\e[0m) : \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e\
    [0m                                         ^\e[0m\n\e[31m   |\e[0m          \
    \                               Found:    Unit\n\e[31m   |\e[0m              \
    \                           Required: Long\n\e[31m14 |\e[0m       \e[34m// Your\
    \ code goes here\e[0m\n\e[31m15 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978957
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ counts = new mutable.HashMap[Char, Int]()\n        for (c <- s.toCharArray)\n\
    \            if (counts.getOrElse(c, 0) < 1)\n                counts.put(c.toLowerCase,\
    \ counts.size + (if (c == 'y') 1 else 0))\n        counts.values.sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq_4_b31g.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = \e[33mnew\e\
    [0m mutable.HashMap[\e[35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ n = 0\n        var v = true\n        for (x <- s.toCharArray) {\n          \
    \  if (v) n += (v = x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u')\n\
    \            v = !v\n        }\n        n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcpr6fr0i.scala:17:21 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (v) n += (v = x == \e[31m'a'\e\
    [0m || x == \e[31m'e'\e[0m || x == \e[31m'i'\e[0m || x == \e[31m'o'\e[0m || x\
    \ == \e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^\e[0m\n\e[31m\
    \   |\e[0m                  value += is not a member of Int - did you mean Int.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = ('a' to 'u').toSet\n        var count = 0\n        for (i <- 0 until\
    \ s.length) count += vowels(s(i))\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp089txb3k.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ count += vowels(s(i))\n\e[31m\e[31m   |\e[0m                               \
    \     ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is not a member\
    \ of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978957
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count=0\n        var i=s.length-1\n        while(i>=0){\n            if(s(i)=='a')\n\
    \                count=count+1\n            i=i-1\n        }\n        return count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpw18x3vm3.scala:24)\n\tat Problem.main(tmpw18x3vm3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        var count = 0\n        for (i <- 0 until s.length)\n\
    \            if (vowels.indexOf(s.charAt(i)) == -1) count++\n        return count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpoh70vrar.scala:17:58 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.indexOf(s.charAt(i))\
    \ == -\e[31m1\e[0m) count++\n\e[31m\e[31m   |\e[0m                           \
    \                               ^\e[0m\n\e[31m   |\e[0m                      \
    \            expression expected but \e[31munindent\e[0m found\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978956
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels_count = s.count(c => c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u')\n        if (s.last.equals(\"y\"))\n            vowels_count + 1\n\
    \        else\n            vowels_count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjso98qdw.scala:22)\n\tat Problem.main(tmpjso98qdw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978959
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Count vowels and store them in a map\n        val vowels = mutable.HashMap[Char,\
    \ Int]()\n\n        // Iterate through all characters in s\n        s.foreach(x\
    \ => { \n            // Check if the character is a vowel\n            if (x.toLowerCase\
    \ == \"a\" || x.toLowerCase == \"e\" || x.toLowerCase == \"i\" || x.toLowerCase\
    \ == \"o\" || x.toLowerCase == \"u\") {\n                vowels += (x.toLowerCase\
    \ -> 1) // Increment vowel count for each vowel\n            }\n        })\n\n\
    \        // Return sum of the vowel counts\n        vowels.values.sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjxvejytn.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.HashMap[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpjxvejytn.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (x.toLowerCase == \e[31m\"\
    a\"\e[0m || x.toLowerCase == \e[31m\"e\"\e[0m || x.toLowerCase == \e[31m\"i\"\e\
    [0m || x.toLowerCase == \e[31m\"o\"\e[0m || x.toLowerCase == \e[31m\"u\"\e[0m)\
    \ {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                value toLowerCase is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659978958
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ letters = Vector.tabulate(s.length){ i => s.charAt(i).toLowerCase }\n      \
    \  letters.filter{ letter => letter ==='a' || letter ==='e' || letter ==='i' ||\
    \ letter ==='o' || letter ==='u'}.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprc5yrg4g.scala:14:66 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mletters\e[0m = Vector.tabulate(s.length){\
    \ \e[36mi\e[0m => s.charAt(i).toLowerCase }\n\e[31m\e[31m   |\e[0m           \
    \                                           ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               value toLowerCase is not a member of\
    \ Char\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprc5yrg4g.scala:15:41 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        letters.filter{ \e[36mletter\e[0m => letter ===\e\
    [31m'a'\e[0m || letter ===\e[31m'e'\e[0m || letter ===\e[31m'i'\e[0m || letter\
    \ ===\e[31m'o'\e[0m || letter ===\e[31m'u'\e[0m}.size\n\e[31m\e[31m   |\e[0m \
    \                                 ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          value\
    \ === is not a member of Nothing - did you mean letter.==?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978960
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        if(s.isEmpty)\
    \ 0\n        else {\n            val vowels : Set[String] = Set(\"a\",\"e\",\"\
    i\",\"o\",\"u\")\n            var count = 0L\n            for(i <- 1 to s.length)\n\
    \                if(vowels.contains(s.charAt(i)) || s.charAt(i) == 'y') count+=1\n\
    \            count\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpalnxihjq.scala:19:43\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mif\e[0m(vowels.contains(s.charAt(i))\
    \ || s.charAt(i) == \e[31m'y'\e[0m) count+=\e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \                                   ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                           Found:    Char\n\e[31m   |\e[0m                  \
    \                 Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978959
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (letter <- s) {\n            if (letter == 'a' || letter\
    \ == 'e' || letter == 'i' || letter == 'o' || letter == 'u')\n               \
    \ count += 1\n        }\n        if (s.length == 1 && s.head == 'y')\n       \
    \     count += 1\n        return count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6z6uy5p_.scala:25)\n\tat Problem.main(tmp6z6uy5p_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978961
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count : Long = 0\n        for(i <- 0 until s.length) {\n            val v =\
    \ s.charAt(i).toLowerCase\n            if(v == 'a' || v == 'e' || v == 'i' ||\
    \ v == 'o' || v == 'u') {\n                count += 1\n            }\n       \
    \ }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpiwic6wwb.scala:16:32 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mv\e[0m = s.charAt(i).toLowerCase\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    value toLowerCase is not a member of Char\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978959
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n       val\
    \ vowels = Set('a','e','i','o','u')\n       val nVowels = s.length\n       var\
    \ total = 0\n       for (i <- 0 to nVowels - 1) {\n          if (vowels.contains(s.charAt(i)))\
    \ {\n             total = total + 1\n          }\n       }\n       return total\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpm4e9jeug.scala:26)\n\tat Problem.main(tmpm4e9jeug.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978961
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = ('a','e','i','o','u')\n        for(c <- s) {\n\
    \            if(c == 'a') count += vowels.length\n            if(c == 'e') count\
    \ += vowels.length\n            if(c == 'i') count += vowels.length\n        \
    \    if(c == 'o') count += vowels.length\n            if(c == 'u') count += vowels.length\n\
    \        }\n        count + vowels.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqflxu319.scala:17:31 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m(c == \e[31m'a'\e[0m) count\
    \ += vowels.length\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                  value += is not a member of Int - did you mean\
    \ Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqflxu319.scala:17:41\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m(c\
    \ == \e[31m'a'\e[0m) count += vowels.length\n\e[31m\e[31m   |\e[0m           \
    \                       ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          value length\
    \ is not a member of (Char, Char, Char, Char, Char)\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpqflxu319.scala:18:31 ------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m            \e[33mif\e[0m(c == \e[31m'e'\e[0m) count += vowels.length\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                 value += is not a member of Int - did you mean Int.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpqflxu319.scala:18:41 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m(c == \e[31m'e'\e[0m) count\
    \ += vowels.length\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m          value length is not a member of (Char, Char, Char,\
    \ Char, Char)\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqflxu319.scala:19:31\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(c\
    \ == \e[31m'i'\e[0m) count += vowels.length\n\e[31m\e[31m   |\e[0m           \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value += is not\
    \ a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpqflxu319.scala:19:41 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m            \e[33mif\e[0m(c == \e[31m'i'\e[0m) count += vowels.length\n\e[31m\e\
    [31m   |\e[0m                                  ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m          value length is not a member of (Char, Char, Char, Char, Char)\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpqflxu319.scala:20:31 --------------------"
  stdout: ''
  timestamp: 1659978966
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 1L\n        for (ch <- s.toCharArray) {\n            if (ch == 'a' ||\
    \ ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') count += 1\n        }\n  \
    \      return count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpr6se3adl.scala:21)\n\tat Problem.main(tmpr6se3adl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        var vowels = \"aeiouAEIOU\"\n        for (c <- s) {\n  \
    \          if (vowels(c)) {\n                count += 1\n            }\n     \
    \   }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzp2zruy2.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels(c))\
    \ {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Found:    Char\n\e[31m   |\e[0m                Required: Boolean\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978965
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = scala.collection.mutable.HashSet[String]()\n        vowels += \"a\"\
    \n        vowels += \"e\"\n        vowels += \"i\"\n        vowels += \"o\"\n\
    \        vowels += \"u\"\n        vowels += \"y\"\n        vowels += \"Y\"\n \
    \       val wordCounts = scala.collection.mutable.HashMap[String, Long]()\n  \
    \      var count = 0L\n        for (w <- s.split(\"\\\\W+\")) {\n            if\
    \ (vowels.contains(w)) {\n                count += 1\n            }\n        \
    \    wordCounts.put(w, count)\n            count = 0\n        }\n        val wordCount\
    \ = wordCounts.values.sum\n        val uniqueWordCount = wordCounts.size\n   \
    \     wordCounts\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5980z6z5.scala:33:8\
    \ ---------------------\e[0m\e[0m\n\e[31m33 |\e[0m        wordCounts\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m Found:    (wordCounts :\
    \ scala.collection.mutable.HashMap[String, Long])\n\e[31m   |\e[0m Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Solution here\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpobbs2nlr.scala:13:41\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m    \e[33mdef\e[0m \e[36mvowelsCount\e\
    [0m(\e[36ms\e[0m : \e[35mString\e[0m) : \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e\
    [0m                                         ^\e[0m\n\e[31m   |\e[0m          \
    \                               Found:    Unit\n\e[31m   |\e[0m              \
    \                           Required: Long\n\e[31m14 |\e[0m        \e[34m// Solution\
    \ here\e[0m\n\e[31m15 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978966
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\n            \"a\", \"e\", \"i\", \"o\", \"u\",\n            \"\
    A\", \"E\", \"I\", \"O\", \"U\",\n            \"a\", \"e\", \"i\", \"o\", \"u\"\
    ,\n            \"A\", \"E\", \"I\", \"O\", \"U\"\n        )\n        var count\
    \ = s.length\n        for( x <- 0 until count ) {\n            val sub = s.substring(\
    \ x, x + 1 )\n            if( vowels.contains( sub.toLowerCase ) ) {\n       \
    \         count += 1\n            }\n        }\n        count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpr_qav9d6.scala:30)\n\tat Problem.main(tmpr_qav9d6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978968
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n       //\
    \ Your code here\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7f1fh5to.scala:13:41\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m    \e[33mdef\e[0m \e[36mvowelsCount\e\
    [0m(\e[36ms\e[0m : \e[35mString\e[0m) : \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e\
    [0m                                         ^\e[0m\n\e[31m   |\e[0m          \
    \                               Found:    Unit\n\e[31m   |\e[0m              \
    \                           Required: Long\n\e[31m14 |\e[0m       \e[34m// Your\
    \ code here\e[0m\n\e[31m15 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978965
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowelCount = 0L\n        for (i <- s.indices) {\n            if (s(i) == 'a')\n\
    \                vowelCount = vowelCount + 1\n            else if (s(i) == 'e')\n\
    \                vowelCount = vowelCount + 1\n            else if (s(i) == 'i')\n\
    \                vowelCount = vowelCount + 1\n            else if (s(i) == 'o')\n\
    \                vowelCount = vowelCount + 1\n            else if (s(i) == 'u')\n\
    \                vowelCount = vowelCount + 1\n        }\n        vowelCount\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpb7v716ks.scala:31)\n\tat Problem.main(tmpb7v716ks.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978968
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Your code here\n        val aSet = new mutable.HashSet[Char]()\n        for\
    \ (i <- 0 until s.length) aSet += s.charAt(i)\n        aSet.toSeq.filter(_ ==\
    \ 'a' || _ == 'e' || _ == 'i' || _ == 'o' || _ == 'u').length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj6zuh2cg.scala:15:23 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36maSet\e[0m = \e[33mnew\e\
    [0m mutable.HashSet[\e[35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978965
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ array = s.toUpperCase() // Convert the string to an array of characters and\
    \ then upper case\n        var count = 0L\n        var last = 0\n        for (i\
    \ <- 0 until array.length) {\n            val c = array(i)\n            if (\"\
    AEIOUY\".indexOf(c) != -1){\n                count++ \n            }\n       \
    \     if (\"AEIOUY\".indexOf(c) != -1 && array(i) != c) {\n                count++\
    \ \n            }\n            last = i\n        }\n        if (last < array.length-1){\n\
    \            count += 1L\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpuzu3u384.scala:20:23 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                count++ \n\e[31m\e[31m   |\e[0m     \
    \                  ^\e[0m\n\e[31m   |\e[0m                       expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error:\
    \ /tmp/tmpuzu3u384.scala:23:23 ---------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                count++ \n\e[31m\e[31m   |\e[0m                      \
    \ ^\e[0m\n\e[31m   |\e[0m                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978965
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toSet\n        val n = s.length\n        val count = mutable.ListBuffer[Char]()\n\
    \        for ((i, c) <- s.zipWithIndex) {\n            if (vowels(c))\n      \
    \          count += c\n        }\n        count.filterNot(vowels).size\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1mjhpd5s.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ListBuffer[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1mjhpd5s.scala:18:23 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (vowels(c))\n\e[31m\e[31m \
    \  |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                      \
    \ Found:    (c : Int)\n\e[31m   |\e[0m                       Required: Char\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978968
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length) count += s.charAt(i) == 'a' ||\n\
    \            s.charAt(i) == 'e' ||\n            s.charAt(i) == 'i' ||\n      \
    \      s.charAt(i) == 'o' ||\n            s.charAt(i) == 'u'\n        if (s.charAt(s.length\
    \ - 1) == 'y') count += 1\n        \n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp99wpfibv.scala:15:42 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ count += s.charAt(i) == \e[31m'a'\e[0m ||\n\e[31m\e[31m   |\e[0m           \
    \                         ^^^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ += is not a member of Int - did you mean Int.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (char <- s) {\n            count += if(char == 'a' ||\
    \ char == 'e' || char == 'i' || char == 'o' || char == 'u') 1 else 0\n       \
    \ }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpw_xnwvef.scala:16:21 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            count += \e[33mif\e[0m(char == \e[31m'a'\e\
    [0m || char == \e[31m'e'\e[0m || char == \e[31m'i'\e[0m || char == \e[31m'o'\e\
    [0m || char == \e[31m'u'\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m                     ^^\e[0m\n\e[31m   |\e[0m                   \
    \  expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpw_xnwvef.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            count += \e[33mif\e[0m(char == \e[31m'a'\e\
    [0m || char == \e[31m'e'\e[0m || char == \e[31m'i'\e[0m || char == \e[31m'o'\e\
    [0m || char == \e[31m'u'\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of Int - did you mean Int.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978968
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length) {\n            val c = s.charAt(i)\n\
    \            val isVowel = c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u'\n            if (isVowel) {\n                count += 1\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpev8nbv4r.scala:25)\n\tat Problem.main(tmpev8nbv4r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelCount\
    \ = 0\n        var vowelCountIndex = -1\n        var vowelIndex = -1\n       \
    \ var stringLength = s.length\n        while (vowelCountIndex < stringLength)\
    \ {\n            vowelIndex = s.indexOf(vowels(0), vowelCountIndex)\n        \
    \    if (vowelIndex >= 0) {\n                vowelCount += 1\n               \
    \ vowelCountIndex = vowelIndex\n            } else {\n                vowelCountIndex\
    \ -= 1\n            }\n        }\n        vowelCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5nfiqeg4.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.List(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978966
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toCharArray\n        var cnt = 0\n        val len = s.length\n\
    \        for (i <- 0 until len) {\n            val c = s.charAt(i)\n         \
    \   if (vowels.contains(c))\n                cnt += 1\n        }\n        cnt\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfxhpva52.scala:26)\n\tat Problem.main(tmpfxhpva52.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n         val\
    \ vowels : mutable.Set[Char] = mutable.Set('a','e','i','o','u')\n         if (s\
    \ == \"\") return 0\n         var count = 0\n         val list = s.toList\n  \
    \       list.foreach(c => if (vowels.contains(c)) count += 1)\n         count\n\
    \     }\n }\n</code>\n<|/ a tags=scala |>\n<| a |>\n<code>\nscala> val vowels\
    \ = Set('a','e','i','o','u')\nvowels: scala.collection.immutable.Set[Char] = Set(a,\
    \ e, i, o, u)\n\nscala> val word = \"abcde\"\nword: String = abcde\n\nscala> val\
    \ count = vowels diff word.toLowerCase map {c=>\n     | if (vowels contains c)\
    \ 1 else 0\n     | }\ncount: scala.collection.immutable.Map[Char,Int] = Map(e\
    \ -> 1, a -> 1, i -> 0, o -> 0)\n</code>\n<|/ a dscore=2 tags=scala |>\n<| a dscore=1\
    \ |>\nThe simplest possible answer:\n<code>\n\"abcde\".toLowerCase map {c=>\n\
    \  if (('a','e','i','o','u').contains(c)) 1\n  else 0\n}\n</code>\n<|/ a tags=scala\
    \ |>\n<| c |>\nThanks for your answer, but that code is giving the error \"type\
    \ mismatch\"\n<|/ c |>\n<| c |>\nI've used your example `\"abcde\"` string and\
    \ provided my own `Map` of vowels. Could you paste your code with your example\
    \ and let me know what error you get? Maybe you've made a typo or something else.\n\
    <|/ c |>\n<| a tags=scala |>\n<code>\nscala> val vowels = Set('a','e','i','o','u')\n\
    vowels: scala.collection.immutable.Set[Char] = Set(a, e, i, o, u)\n\nscala> val\
    \ word = \"abcde\"\nword: String = abcde\n\nscala> val count = word.map(c => if\
    \ (vowels contains c) 1 else 0)\ncount: List[Int] = List(0, 1, 0, 0, 0)\n</code>\n\
    <|/ a dscore=0 |>\n<| c |>\nThe OP wants a `Set[Int]`\n<|/ c |>\n<| c |>\n\"The\
    \ OP wants a Set[Int]\" - I disagree\n<|/ c |>\n<| c |>\n`vowels` isn't `Set[Char]`,\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E103] Syntax Error: /tmp/tmpp3u8zh06.scala:22:0 ----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m</code>\n\e[31m\e[31m   |\e[0m^^\e[0m\n\e[31m   |\e[0mIllegal\
    \ start of toplevel definition\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpp3u8zh06.scala:84:0 ----------------------------\e[0m\e[0m\n\e[31m84\
    \ |\e[0m}\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0meof expected, but '}' found\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3u8zh06.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m         \e[33mval\e[0m \e[36mvowels\e[0m : mutable.Set[\e\
    [35mChar\e[0m] = mutable.Set(\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e\
    [0m,\e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpp3u8zh06.scala:14:42 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m         \e[33mval\e[0m \e[36mvowels\e[0m : mutable.Set[\e\
    [35mChar\e[0m] = mutable.Set(\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e\
    [0m,\e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                                   \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                                        \
    \  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpp3u8zh06.scala:75:11\
    \ ------------------------\e[0m\e[0m\n\e[31m75 |\e[0m    assert(vowelsCount((\e\
    [31m\"abcde\"\e[0m)) == (\e[31m2l\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           Not found: vowelsCount\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpp3u8zh06.scala:76:11 ------------------------\e\
    [0m\e[0m\n\e[31m76 |\e[0m    assert(vowelsCount((\e[31m\"Alone\"\e[0m)) == (\e\
    [31m3l\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m           Not found: vowelsCount\n\e[31m   |\e[0m\n\e[31m "
  stdout: ''
  timestamp: 1659978967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array('a','e','i','o','u')\n        val count = mutable.ListBuffer[String]()\n\
    \        for (x <- s) {\n            if (vowels(x) == vowels(s.length-1))\n  \
    \              count += x\n        }\n        count.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp054wh7ou.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978966
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Solution goes here\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkb3f9ofr.scala:13:41\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m    \e[33mdef\e[0m \e[36mvowelsCount\e\
    [0m(\e[36ms\e[0m : \e[35mString\e[0m) : \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e\
    [0m                                         ^\e[0m\n\e[31m   |\e[0m          \
    \                               Found:    Unit\n\e[31m   |\e[0m              \
    \                           Required: Long\n\e[31m14 |\e[0m        \e[34m// Solution\
    \ goes here\e[0m\n\e[31m15 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978970
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Write code here\n        var vowel_count = 0\n        for (i<-0 until s.length){\n\
    \            if (s.charAt(i) == 'a'){\n                vowel_count += 1\n    \
    \        }\n            if (s.charAt(i) == 'e'){\n                vowel_count\
    \ += 1\n            }\n            if (s.charAt(i) == 'i'){\n                vowel_count\
    \ += 1\n            }\n            if (s.charAt(i) == 'o'){\n                vowel_count\
    \ += 1\n            }\n            if (s.charAt(i) == 'u'){\n                vowel_count\
    \ += 1\n            }\n            if (s.charAt(i) == 'y'){\n                vowel_count\
    \ += 1\n            }\n        }\n        vowel_count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpelob193u.scala:40)\n\tat Problem.main(tmpelob193u.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        val list = s.toList\n        for(elm <- list)\n         \
    \   if(elm == \"a\" || elm == \"e\" || elm == \"i\" || elm == \"o\" || elm ==\
    \ \"u\" || elm == \"y\")\n                count += 1\n        count\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp4fznwir3.scala:17:15 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m(elm == \e[31m\"a\"\e[0m ||\
    \ elm == \e[31m\"e\"\e[0m || elm == \e[31m\"i\"\e[0m || elm == \e[31m\"o\"\e[0m\
    \ || elm == \e[31m\"u\"\e[0m || elm == \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m\
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and\
    \ String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp4fznwir3.scala:17:29\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m17 |\e[0m       \
    \     \e[33mif\e[0m(elm == \e[31m\"a\"\e[0m || elm == \e[31m\"e\"\e[0m || elm\
    \ == \e[31m\"i\"\e[0m || elm == \e[31m\"o\"\e[0m || elm == \e[31m\"u\"\e[0m ||\
    \ elm == \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                            \
    \ ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String cannot\
    \ be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp4fznwir3.scala:17:43\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m17 |\e[0m       \
    \     \e[33mif\e[0m(elm == \e[31m\"a\"\e[0m || elm == \e[31m\"e\"\e[0m || elm\
    \ == \e[31m\"i\"\e[0m || elm == \e[31m\"o\"\e[0m || elm == \e[31m\"u\"\e[0m ||\
    \ elm == \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                            \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and\
    \ String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp4fznwir3.scala:17:57\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m17 |\e[0m       \
    \     \e[33mif\e[0m(elm == \e[31m\"a\"\e[0m || elm == \e[31m\"e\"\e[0m || elm\
    \ == \e[31m\"i\"\e[0m || elm == \e[31m\"o\"\e[0m || elm == \e[31m\"u\"\e[0m ||\
    \ elm == \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m                            \
    \                             ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of\
    \ types Char and String cannot be compared with == or !=\n\e[31m\e[31m-- Error:\
    \ /tmp/tmp4fznwir3.scala:17:71 -----------------------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            \e[33mif\e[0m(elm == \e[31m\"a\"\e[0m || elm ==\
    \ \e[31m\"e\"\e[0m || elm == \e[31m\"i\"\e[0m || elm == \e[31m\"o\"\e[0m || elm\
    \ == \e[31m\"u\"\e[0m || elm == \e[31m\"y\"\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                                             "
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ TODO your code:\n        var count = 0\n        for (i <- 0 to s.length - 1)\
    \ {\n            if (s.charAt(i) == 'a' || s.charAt(i) == 'e' || s.charAt(i) ==\
    \ 'i' || s.charAt(i) == 'o' || s.charAt(i) == 'u') {\n                count +=\
    \ 1\n            } else if (s.charAt(i) == 'y') {\n                count += 1\n\
    \                i += 1 // move to next char\n            }\n        }\n     \
    \   count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2hwol4j1.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                i += \e[31m1\e[0m \e[34m// move to next\
    \ char\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m \
    \               value += is not a member of Int - did you mean i.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ a = \"a\".toCharArray\n        val e = \"e\".toCharArray\n        val i = \"\
    i\".toCharArray\n        val o = \"o\".toCharArray\n        val u = \"u\".toCharArray\n\
    \        val y = \"y\".toCharArray\n        val z = s.length\n        val count\
    \ = z.toLong\n        val count = s.filter(_ == 'a').size\n        val count =\
    \ s.filter(_ == 'e').size\n        val count = s.filter(_ == 'i').size\n     \
    \   val count = s.filter(_ == 'o').size\n        val count = s.filter(_ == 'u').size\n\
    \        val count = s.filter(_ == 'y').size\n        val count = s.filter(_ ==\
    \ 'z').size\n        count\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpo0_d8ft4.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = s.filter(_\
    \ == \e[31m'a'\e[0m).size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcount is already defined as \e[33mvalue\e[0m \e[35mcount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo0_d8ft4.scala:23:12 ---------------------------\e[0m\e[0m\n\e\
    [31m23 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = s.filter(_ == \e[31m'e'\e\
    [0m).size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcount is already defined as \e[33mvalue\e[0m \e[35mcount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo0_d8ft4.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = s.filter(_ == \e[31m'i'\e\
    [0m).size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcount is already defined as \e[33mvalue\e[0m \e[35mcount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo0_d8ft4.scala:25:12 ---------------------------\e[0m\e[0m\n\e\
    [31m25 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = s.filter(_ == \e[31m'o'\e\
    [0m).size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcount is already defined as \e[33mvalue\e[0m \e[35mcount\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpo0_d8ft4.scala:26:12 ---------------------------\e[0m\e[0m\n\e\
    [31m26 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = s.filter(_ == \e[31m'u'\e\
    [0m).size\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mcount is already defined as \e[33mv"
  stdout: ''
  timestamp: 1659978969
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        def\
    \ vowels(s : String) : Set[Char] = {\n            val vowels = scala.collection.mutable.Set[Char]('a',\
    \ 'e', 'i', 'o', 'u')\n            var i = 0\n            var n = 0\n        \
    \    var s = s\n            while (i < s.length) {\n                if (vowels(s(i)).contains('y'))\
    \ n += 1\n                else n -= 1\n                i += 1\n            }\n\
    \            if (n == 0) n += 1\n            vowels\n        }\n        vowels(s).size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwmnrruxr.scala:18:20 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mvar\e[0m \e[36ms\e[0m = s\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    Recursive\
    \ \e[33mvariable\e[0m \e[35ms\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpwmnrruxr.scala:20:33 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m (vowels(s(i)).contains(\e\
    [31m'y'\e[0m)) n += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    value contains is not a member of Boolean\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978975
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ counts : mutable.Map[String, Long] = mutable.HashMap[String, Long]()\n     \
    \   for(c <- s) {\n            if(counts.getOrElse(c) == null) counts.put(c, 1L)\n\
    \            else counts.put(c, (counts.get(c) + 1))\n        }\n        counts.filter(_._2\
    \ > 0).map(_._2).sum\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfcil52uz.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m : mutable.Map[\e\
    [35mString\e[0m, \e[35mLong\e[0m] = mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpfcil52uz.scala:14:49 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m : mutable.Map[\e\
    [35mString\e[0m, \e[35mLong\e[0m] = mutable.HashMap[\e[35mString\e[0m, \e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                                                \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                                              \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978973
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        var last = 0L\n        for (c:Char <- s) {\n           \
    \ count += 1\n            if (c == 'a' || c == 'e' || c == 'i' || c == 'o' ||\
    \ c == 'u') {\n                last = c\n            }\n        }\n        count\
    \ += 1\n        if (last != 'y') {\n            count += 1\n        }\n      \
    \  count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_o11t66.scala:29)\n\tat Problem.main(tmp5_o11t66.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978978
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        for(i <- 0 until s.length){\n            if(s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u')\n                count += 1L\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmps1k0boiv.scala:23)\n\tat Problem.main(tmps1k0boiv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ array = s.toLowerCase().toCharArray\n        val count = mutable.ArrayBuffer(0)\n\
    \        for (i <- 0 until array.length) if (array(i) == 'a' || array(i) == 'e'\
    \ || array(i) == 'i' || array(i) == 'o' || array(i) == 'u') count += 1 \n    \
    \    if (array.length == 0) 0\n        else if (array.length == 1) 1\n       \
    \ else count.sum\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0sx4ofl8.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toSet\n        val count = mutableListBuffer[String]()\n\
    \        val split = s.toCharArray\n        for (i <- 0 to split.length - 1) {\n\
    \            if (vowels(s(i)))\n                count += s(i)\n        }\n   \
    \     count.toList.size\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfj0ootjb.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutableListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutableListBuffer\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n       val\
    \ vowels = ('a' to 'u').toSet\n       val end = s.indexOf(\"y\")\n       if (end\
    \ != -1)\n           vowels(s.charAt(end-1))\n       else\n           vowels.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpytv_uha6.scala:17:17\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m           vowels(s.charAt(end-\e\
    [31m1\e[0m))\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m           Found:    Boolean\n\e[31m   |\e[0m           Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978976
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Vector('a', 'e', 'i', 'o', 'u', 'y')\n        s.toLowerCase\n     \
    \   .map(_.toChar)\n        .filter(x => vowels.contains(x))\n        .size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5_sxg_ox.scala:24)\n\tat Problem.main(tmp5_sxg_ox.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ counts : mutable.Set[String] = mutable.Set[String]()\n        val array = s.toCharArray.dropRight(s.length)\n\
    \        for (i <- 0 to array.length - 1) {\n            counts += array(i)\n\
    \        }\n        counts.count(\"aeiouy\")\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj0wnuvrx.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m : mutable.Set[\e\
    [35mString\e[0m] = mutable.Set[\e[35mString\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj0wnuvrx.scala:14:43\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mcounts\e[0m : mutable.Set[\e[35mString\e[0m] = mutable.Set[\e[35mString\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                                           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                           Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ arr = s.split(\"\")\n        val vowels = arr.map(x => if (x == 'a' || x ==\
    \ 'e' || x == 'i' || x == 'o' || x == 'u') x else \"\")\n        val y = vowels.last\n\
    \        vowels.filter(_ != y).length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmplgfz0rtk.scala:15:38 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = arr.map(\e\
    [36mx\e[0m => \e[33mif\e[0m (x == \e[31m'a'\e[0m || x == \e[31m'e'\e[0m || x ==\
    \ \e[31m'i'\e[0m || x == \e[31m'o'\e[0m || x == \e[31m'u'\e[0m) x \e[33melse\e\
    [0m \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                                  \
    \    ^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types String and Char cannot\
    \ be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmplgfz0rtk.scala:15:50\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m15 |\e[0m       \
    \ \e[33mval\e[0m \e[36mvowels\e[0m = arr.map(\e[36mx\e[0m => \e[33mif\e[0m (x\
    \ == \e[31m'a'\e[0m || x == \e[31m'e'\e[0m || x == \e[31m'i'\e[0m || x == \e[31m'o'\e\
    [0m || x == \e[31m'u'\e[0m) x \e[33melse\e[0m \e[31m\"\"\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                                                  ^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        Values of types String and Char cannot be compared with == or\
    \ !=\n\e[31m\e[31m-- Error: /tmp/tmplgfz0rtk.scala:15:62 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = arr.map(\e\
    [36mx\e[0m => \e[33mif\e[0m (x == \e[31m'a'\e[0m || x == \e[31m'e'\e[0m || x ==\
    \ \e[31m'i'\e[0m || x == \e[31m'o'\e[0m || x == \e[31m'u'\e[0m) x \e[33melse\e\
    [0m \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                                  \
    \                            ^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types\
    \ String and Char cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmplgfz0rtk.scala:15:74\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m15 |\e[0m       \
    \ \e[33mval\e[0m \e[36mvowels\e[0m = arr.map(\e[36mx\e[0m => \e[33mif\e[0m (x\
    \ == \e[31m'a'\e[0m || x == \e[31m'e'\e[0m || x == \e[31m'i'\e[0m || x == \e[31m'o'\e\
    [0m || x == \e[31m'u'\e[0m) x \e[33melse\e[0m \e[31m\"\"\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                                                                    \
    \      ^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types String and Char cannot\
    \ be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmplgfz0rtk.scala:15:86\
    \ -----------------------------------"
  stdout: ''
  timestamp: 1659978978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var lastVowel = s.charAt(s.length - 1)\n        var lastVowelIsAConsonant\
    \ = false\n        for (i <- 0 until s.length)\n        {\n            var current\
    \ = s.charAt(i)\n            var currentIsConsonant = false\n            if ('a'\
    \ <= current && current <= 'z')\n            {\n                count += 1\n \
    \               lastVowelIsAConsonant = false\n            }\n            else\n\
    \            {\n                if ('e' <= current && current <= 'z')\n      \
    \          {\n                    count += 2\n                    lastVowelIsAConsonant\
    \ = true\n                }\n                else\n                if ('i' <=\
    \ current && current <= 'z')\n                {\n                    count +=\
    \ 3\n                    lastVowelIsAConsonant = true\n                }\n   \
    \             else\n                if ('o' <= current && current <= 'z')\n  \
    \              {\n                    count += 4\n                    lastVowelIsAConsonant\
    \ = true\n                }\n                else\n                if ('u' <=\
    \ current && current <= 'z')\n                {\n                    count +=\
    \ 5\n                    lastVowelIsAConsonant = true\n                }\n   \
    \             else\n                if ('y' <= current && current <= 'z')\n  \
    \              {\n                    count += 6\n                    lastVowelIsAConsonant\
    \ = true\n                }\n                else\n                if ('y' <=\
    \ current && current <= 'z')\n                {\n                    count +=\
    \ 6\n                    lastVowelIsAConsonant = true\n                }\n   \
    \             else\n                if ('y' <= current && current <= 'z')\n  \
    \              {\n                    count += 6\n                    lastVowelIsAConsonant\
    \ = true\n                }\n                else\n                if ('y' <=\
    \ current && current <= 'z')\n                {\n                    count +=\
    \ 6\n                    lastVowelIsAConsonant = true\n                }\n   \
    \             else\n                if ('a' <= current && current <= 'z')\n  \
    \              {\n                    count += 7\n                    lastVowelIsAConsonant\
    \ = true\n                }\n                else\n                if ('a' <=\
    \ current && current <= 'z')\n                {\n                    count +=\
    \ 7\n                    lastVowelIsAConsonant = true\n                }\n   \
    \             else\n                if ('a' <= current && current <= 'z')\n  \
    \              {\n                    count += 7\n                    lastVowelIsAConsonant\
    \ = true\n                }\n                else\n                if ('a' <=\
    \ current && current <= '\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp3cfwexvn.scala:94:49 -----------------------------------------\e\
    [0m\e[0m\n\e[31m94 |\e[0m                \e[33mif\e[0m (\e[31m'a'\e[0m <= current\
    \ && current <= '\n\e[31m\e[31m   |\e[0m                                     \
    \            ^\e[0m\n\e[31m   |\e[0m                                         \
    \     unclosed character literal\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp3cfwexvn.scala:107:0\
    \ ---------------------------\e[0m\e[0m\n\e[31m107 |\e[0m\n\e[31m\e[31m    |\e\
    [0m^\e[0m\n\e[31m    |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E134]\
    \ Type Error: /tmp/tmp3cfwexvn.scala:94:46 -----------------------------\e[0m\e\
    [0m\n\e[31m94 |\e[0m                \e[33mif\e[0m (\e[31m'a'\e[0m <= current &&\
    \ current <= '\n\e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e\
    [35m<=\e[0m in \e[33mclass\e[0m \e[35mChar\e[0m with types\n\e[31m   |\e[0m (x:\
    \ Double): Boolean\n\e[31m   |\e[0m (x: Float): Boolean\n\e[31m   |\e[0m (x: Long):\
    \ Boolean\n\e[31m   |\e[0m (x: Int): Boolean\n\e[31m   |\e[0m (x: Char): Boolean\n\
    \e[31m   |\e[0m (x: Short): Boolean\n\e[31m   |\e[0m (x: Byte): Boolean\n\e[31m\
    \   |\e[0mmatch arguments (Null)\n\e[33m\e[33m-- Warning: /tmp/tmp3cfwexvn.scala:96:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m96 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n\e[33m\e[33m-- [E129] Potential Issue Warning:\
    \ /tmp/tmp3cfwexvn.scala:95:4 -----------------\e[0m\e[0m\n\e[33m94 |\e[0m   \
    \             \e[33mif\e[0m (\e[31m'a'\e[0m <= current && current <= '\n\e[33m95\
    \ |\e[0m    }\n\e[33m\e[33m   |\e[0m                                         \
    \         ^\e[0m\n\e[33m   |\e[0mA pure expression does nothing in statement position;\
    \ you may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 warnings found\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659978976
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsCount = s.map(x\
    \ => vowels.find(_ == x))\n        vowelsCount.count(_ == true)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmps_aovrh5.scala:15:49 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = s.map(\e\
    [36mx\e[0m => vowels.find(_ == x))\n\e[31m\e[31m   |\e[0m                    \
    \                             ^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types\
    \ String and Char cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmps_aovrh5.scala:16:26\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \ vowelsCount.count(_ == \e[31mtrue\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \             ^^^^^^^^^\e[0m\n\e[31m   |\e[0mValues of types Option[String] and\
    \ Boolean cannot be compared with == or !=\n2 errors found\n"
  stdout: ''
  timestamp: 1659978980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ l = 1\n        for (v <- \"AEIOUY\".toCharArray) {\n            val l1 = s.count(v\
    \ => v == v)\n            val l2 = s.lastIndexOf(v) + 1\n            l += l1 +\
    \ l2 - (l1 - l2)\n        }\n        l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps0rfs14d.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            l += l1 + l2 - (l1 - l2)\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean l.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        for (c <- s) {\n            val vowel = if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') c else ''\n            if (vowel\
    \ == '') count = 1L\n            else if (vowel == 'y') count += 1L\n        \
    \    else count += 0L\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp5dkdaaqh.scala:16:93 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mvowel\e[0m = \e[33mif\e\
    [0m (c == \e[31m'a'\e[0m || c == \e[31m'e'\e[0m || c == \e[31m'i'\e[0m || c ==\
    \ \e[31m'o'\e[0m || c == \e[31m'u'\e[0m) c \e[33melse\e[0m ''\n\e[31m\e[31m  \
    \ |\e[0m                                                                     \
    \                        ^\e[0m\n\e[31m   |\e[0m                             \
    \                    empty character literal\n\e[31m\e[31m-- Error: /tmp/tmp5dkdaaqh.scala:17:25\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m17 |\e[0m       \
    \     \e[33mif\e[0m (vowel == '') count = \e[31m1L\e[0m\n\e[31m\e[31m   |\e[0m\
    \                         ^\e[0m\n\e[31m   |\e[0m                         empty\
    \ character literal\n2 errors found\n"
  stdout: ''
  timestamp: 1659978976
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toSet\n        var count = 0\n        var cur = s\n     \
    \   while (cur.length >= 1) {\n            val v = cur.charAt(0)\n           \
    \ if (vowels.contains(v)) {\n                count += 1\n            }\n     \
    \       cur = cur.substring(1)\n        }\n        count.toLong\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyotg5dpk.scala:28)\n\tat Problem.main(tmpyotg5dpk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\",\"e\",\"i\",\"o\",\"u\")\n        vowels.count(vowels.find(_==s.last).toSet)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpd8snu_ha.scala:15:33 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        vowels.count(vowels.find(_==s.last).toSet)\n\e\
    [31m\e[31m   |\e[0m                                 ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        Values of types String and Char cannot be compared with == or !=\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978980
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ countVowels = s filter { c => c match {\n            case \"a\" | \"e\" | \"\
    i\" | \"o\" | \"u\" => true\n            case _ => false\n        }\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaoryr4td.scala:30:0 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- Error: /tmp/tmpaoryr4td.scala:15:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m \e[31m\"a\"\e[0m | \e[31m\"\
    e\"\e[0m | \e[31m\"i\"\e[0m | \e[31m\"o\"\e[0m | \e[31m\"u\"\e[0m => \e[31mtrue\e\
    [0m\n\e[31m\e[31m   |\e[0m                 ^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types String and Char cannot be compared with == or !=\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpaoryr4td.scala:15:23 -----------------------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m \e[31m\"a\"\e[0m | \e[31m\"e\"\
    \e[0m | \e[31m\"i\"\e[0m | \e[31m\"o\"\e[0m | \e[31m\"u\"\e[0m => \e[31mtrue\e\
    [0m\n\e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0m   \
    \     Values of types String and Char cannot be compared with == or !=\n\e[31m\e\
    [31m-- Error: /tmp/tmpaoryr4td.scala:15:29 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m \e[31m\"a\"\e[0m | \e[31m\"\
    e\"\e[0m | \e[31m\"i\"\e[0m | \e[31m\"o\"\e[0m | \e[31m\"u\"\e[0m => \e[31mtrue\e\
    [0m\n\e[31m\e[31m   |\e[0m                             ^^^\e[0m\n\e[31m   |\e\
    [0m        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpaoryr4td.scala:15:35 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m \e[31m\"a\"\e[0m | \e[31m\"\
    e\"\e[0m | \e[31m\"i\"\e[0m | \e[31m\"o\"\e[0m | \e[31m\"u\"\e[0m => \e[31mtrue\e\
    [0m\n\e[31m\e[31m   |\e[0m                                   ^^^\e[0m\n\e[31m\
    \   |\e[0m        Values of types String and Char cannot be compared with == or\
    \ !=\n\e[31m\e[31m-- Error: /tmp/tmpaoryr4td.scala:15:41 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m \e[31m\"a\"\e[0m | \e[31m\"\
    e\"\e[0m | \e[31m\"i\"\e[0m | \e[31m\"o\"\e[0m | \e[31m\"u\"\e[0m => \e[31mtrue\e\
    [0m\n\e[31m\e[31m   |\e[0m                                         ^^^\e[0m\n\e\
    [31m   |\e[0m        Values of types String and Char cannot be compared with ==\
    \ or !=\n\e[31m\e[31m-- [E007] Type "
  stdout: ''
  timestamp: 1659978982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = ('a' to 'z' | 'A' to 'Z' | 'y' to 'z').toList\n        val wordLength\
    \ = s.length\n        val vowelsCount = new mutable.MutableLong[String]\n    \
    \    for (i<- 0 until wordLength) {\n            if (vowels.contains(s(i))) {\n\
    \                vowelsCount.value(i) = vowelsCount.value(i) + 1 \n          \
    \  }\n        }\n        vowelsCount.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplmumld9s.scala:14:42\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e\
    [0m = (\e[31m'a'\e[0m to \e[31m'z'\e[0m | \e[31m'A'\e[0m to \e[31m'Z'\e[0m | \e\
    [31m'y'\e[0m to \e[31m'z'\e[0m).toList\n\e[31m\e[31m   |\e[0m                \
    \                          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \
    \        Found:    (\e[31m123\e[0m : Int)\n\e[31m   |\e[0m                   \
    \        Required: scala.collection.Factory[Char, Any]\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmplmumld9s.scala:16:30 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = \e[33mnew\e\
    [0m mutable.MutableLong[\e[35mString\e[0m]\n\e[31m\e[31m   |\e[0m            \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \ Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(ch <- s) {\n          val index = ch.toInt\n        \
    \  val l = index.toLong\n          val bit = (1 & (l - 1).toInt)\n          count\
    \ += bit == 0 ? 0 : 1\n        }\n        count\n      }\n}\n</code>\n<|/ a tags=string,count,scala\
    \ |>\n<| a tags=string,count,scala |>\n<code>\nval listString: ListBuffer[String]\
    \ = ListBuffer(\"abcde\", \"abcde\", \"abcde\", \"abcde\", \"abcde\")\nval str:\
    \ String = \"abcde\"\nfor (x <- listString){\n  if (x.contains(str)){\n    println(x.length)\n\
    \  }\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis is incorrect. The OP wants\
    \ the number of vowels, not the length of the string.\n<|/ c |>\n<| a |>\nI came\
    \ up with another solution:\n<code>\ndef vowels(s: String): Int = s.filterNot(_\
    \ == 'a').filter(x => x != 'a').length\n</code>\n<|/ a dscore=0 tags=string,count,scala\
    \ |>\n<| a tags=string,count,scala |>\nAnother solution:\n<code>\nval listString:\
    \ ListBuffer[String] = ListBuffer(\"abcde\", \"abcde\", \"abcde\", \"abcde\",\
    \ \"abcde\")\nval str: String = \"abcde\"\n\nval result = listString.map{x=>x.count(y\
    \ => y == str)}.sum\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis solution also doesn't\
    \ count 'e'.\n<|/ c |>\n<| a tags=string,count,scala |>\n<code>\ndef vowels(s:String):Int=s.toCharArray().foldLeft((0,0)){case((count,c),i)=>\n\
    \      if(c.equals('a')) \n        count + 1\n      else if(c == 'e')\n      \
    \  count + 1\n      else if(c == 'i')\n        count + 1\n      else if(c == 'o')\n\
    \        count + 1\n      else if(c == 'u')\n        count + 1\n      else if(c\
    \ == 'y') \n        count + 1\n      else \n        count \n  }._1\n</code>\n\
    <|/ a dscore=0 |>\n<| a tags=string,count,scala |>\n<code>\ndef vowels(s:String):Int={\n\
    \  var count = 0\n  for(x <- s.toCharArray()){\n    count += if(x =='a'||x =='e'||x\
    \ =='i'||x =='o'||x =='\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E103] Syntax Error: /tmp/tmph82tiiub.scala:24:0 ----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m</code>\n\e[31m\e[31m   |\e[0m^^\e[0m\n\e[31m   |\e[0mIllegal\
    \ start of toplevel definition\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E103] Syntax Error:\
    \ /tmp/tmph82tiiub.scala:30:0 ----------------------------\e[0m\e[0m\n\e[31m30\
    \ |\e[0m\e[33mfor\e[0m (x <- listString){\n\e[31m\e[31m   |\e[0m^^^\e[0m\n\e[31m\
    \   |\e[0mIllegal start of toplevel definition\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E103] Syntax Error: /tmp/tmph82tiiub.scala:44:0 ----------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m</code>\n\e[31m\e[31m   |\e[0m^^\e[0m\n\e[31m   |\e[0mIllegal\
    \ start of toplevel definition\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E103] Syntax Error:\
    \ /tmp/tmph82tiiub.scala:53:0 ----------------------------\e[0m\e[0m\n\e[31m53\
    \ |\e[0m</code>\n\e[31m\e[31m   |\e[0m^^\e[0m\n\e[31m   |\e[0mIllegal start of\
    \ toplevel definition\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E103] Syntax Error: /tmp/tmph82tiiub.scala:76:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m76 |\e[0m</code>\n\e[31m\e[31m\
    \   |\e[0m^^\e[0m\n\e[31m   |\e[0mIllegal start of toplevel definition\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E018] Syntax Error: /tmp/tmph82tiiub.scala:83:13 ---------------------------\e\
    [0m\e[0m\n\e[31m83 |\e[0m    count += \e[33mif\e[0m(x ==\e[31m'a'\e[0m||x ==\e\
    [31m'e'\e[0m||x ==\e[31m'i'\e[0m||x ==\e[31m'o'\e[0m||x =='\n\e[31m\e[31m   |\e\
    [0m             ^^\e[0m\n\e[31m   |\e[0m             expression expected but \e\
    [31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmph82tiiub.scala:83:56\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m83 |\e[0m    count\
    \ += \e[33mif\e[0m(x ==\e[31m'a'\e[0m||x ==\e[31m'e'\e[0m||x ==\e[31m'i'\e[0m||x\
    \ ==\e[31"
  stdout: ''
  timestamp: 1659978984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowelsCount_map = Map[String, Long]()\n        for (i <- 0 to s.length-1) {\n\
    \            val c = s.charAt(i)\n            if (vowelsCount_map.contains(c))\
    \ {\n                vowelsCount_map(c) = vowelsCount_map(c) + 1 }\n         \
    \   else { vowelsCount_map(c) = 1 } }\n        vowelsCount_map.values.toArray.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1h88b7f0.scala:17:41\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowelsCount_map.contains(c))\
    \ {\n\e[31m\e[31m   |\e[0m                                         ^\e[0m\n\e\
    [31m   |\e[0m                                         Found:    (c : Char)\n\e\
    [31m   |\e[0m                                         Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1h88b7f0.scala:18:32 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                vowelsCount_map(c) = vowelsCount_map(c)\
    \ + \e[31m1\e[0m }\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\
    \e[31m   |\e[0m                                Found:    (c : Char)\n\e[31m  \
    \ |\e[0m                                Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1h88b7f0.scala:18:53 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                vowelsCount_map(c) = vowelsCount_map(c)\
    \ + \e[31m1\e[0m }\n\e[31m\e[31m   |\e[0m                                    \
    \                 ^\e[0m\n\e[31m   |\e[0m                                    \
    \                Found:    (c : Char)\n\e[31m   |\e[0m                       \
    \                             Required: String\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp1h88b7f0.scala:19:35 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33melse\e[0m { vowelsCount_map(c) = \e\
    [31m1\e[0m } }\n\e[31m\e[31m   |\e[0m                                   ^\e[0m\n\
    \e[31m   |\e[0m                                   Found:    (c : Char)\n\e[31m\
    \   |\e[0m                                   Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659978983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\",\"e\",\"i\",\"o\",\"u\")\n        val vowelsCount = s.filter(x\
    \ => vowels.contains(x)).length\n        s.reverse.filter(x => vowels.contains(x)).length\
    \ + vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8i9iox.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e\
    [0m = s.filter(\e[36mx\e[0m => vowels.contains(x)).length\n\e[31m\e[31m   |\e\
    [0m                                                        ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxs8i9iox.scala:16:46\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        s.reverse.filter(\e[36mx\e\
    [0m => vowels.contains(x)).length + vowelsCount\n\e[31m\e[31m   |\e[0m       \
    \                                       ^\e[0m\n\e[31m   |\e[0m              \
    \                                Found:    (x : Char)\n\e[31m   |\e[0m       \
    \                                       Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val lengths = s.map(_.length)\n\
    \        val vowelCounts = lengths.scanLeft(0)(_ + lengths.last)\n           \
    \     .map(vowelCounts.count(_ == 1))\n                .filter(_ > 0)\n      \
    \          .map(_._2)\n                .sum\n        vowelCounts\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp84ree6iz.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mlengths\e[0m = s.map(_.length)\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                            value length is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659978983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        def\
    \ isVowel(x: Char): Boolean = \n            x match {\n            case 'a' |\
    \ 'e' | 'i' | 'o' | 'u' => {\n                true\n            }\n          \
    \  case _ => {\n                false\n            }\n        }\n        val vowels\
    \ = mutable.Set[Char]('a','e','i','o','u')\n        val count = s.length\n   \
    \     if (count == 0) 0\n        else {\n            var vowelCount = 0\n    \
    \        for (i <- 0 until count) {\n                val c = s.charAt(i)\n   \
    \             if (!vowels.contains(c)) {\n                    vowelCount += 1\n\
    \                }\n            }\n            vowelCount\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfzm2h7w3.scala:23:21 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978981
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n         var\
    \ count = 0\n         val vowels = \"aeiou\"\n         for (i <- 0 until s.length)\
    \ {\n            val subString = s.substring(i, s.length)\n            count +=\
    \ vowels.count(subString.toChar)\n         }\n         count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqj1b8rm6.scala:18:18 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            count += vowels.count(subString.toChar)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpqj1b8rm6.scala:18:44 ------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m            count += vowels.count(subString.toChar)\n\e[31m\e[31m\
    \   |\e[0m                                  ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                  value toChar is not a member of String\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978986
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ numVowels : Long = 0\n        var vowel : String = \"\"\n        for (letter\
    \ : String <- s.split(\"\")) {\n            if (\"aeiou\".contains(letter)) {\n\
    \                vowel = letter\n            }\n        }\n        if (\"y\".equals(vowel))\
    \ {\n            for (letter : String <- s.split(\"\")) {\n                if\
    \ (letter != \"y\" && letter != \"Y\") {\n                    numVowels += 1\n\
    \                }\n            }\n        }\n        return numVowels\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8t6nk7gq.scala:31)\n\tat Problem.main(tmp8t6nk7gq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = (\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n      \
    \  for (letter <- s) {\n            if (vowels.contains(letter)) {\n         \
    \       count += 1\n            }\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjgl6iowi.scala:17:23 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (vowels.contains(letter)) {\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ contains is not a member of (String, String, String, String, String)\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val count = mutableListBuffer[Long]()\n        for\
    \ (i <- 0 until s.length) count+=1 if (vowels.contains(s.charAt(i)))\n       \
    \ return count.length\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpl7bm0wx1.scala:16:45 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until s.length)\
    \ count+=\e[31m1\e[0m \e[33mif\e[0m (vowels.contains(s.charAt(i)))\n\e[31m\e[31m\
    \   |\e[0m                                             ^^\e[0m\n\e[31m   |\e[0m\
    \                                end of statement expected but 'if' found\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpl7bm0wx1.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutableListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutableListBuffer\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ s = \"\"\n        val vowels = \"AEIOUY\"\n        val count = Array[Long]()\n\
    \        for( i <- 0 until s.length ) {\n            if( vowels.contains(s.charAt(i))\
    \ ) {\n                count += 1 \n            }\n        }\n        return count.reduce((a,\
    \ b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpu6sr3iwf.scala:19:22 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                count += \e[31m1\e[0m \n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not\
    \ a member of Array[Long] - did you mean count.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978986
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ c = s.length\n        var c = 0\n        var i = 0\n        var k = 0\n    \
    \    var v = 0\n        while (i < c) {\n            if (s.charAt(i) == 'a') {\n\
    \                v = v + 1\n            }\n            else if (s.charAt(i) ==\
    \ 'e') {\n                v = v + 1\n            }\n            else if (s.charAt(i)\
    \ == 'i') {\n                v = v + 1\n            }\n            else if (s.charAt(i)\
    \ == 'o') {\n                v = v + 1\n            }\n            else if (s.charAt(i)\
    \ == 'u') {\n                v = v + 1\n            }\n            else {\n  \
    \              k = k + 1\n            }\n            i = i + 1\n        }\n  \
    \      if (k == c) {\n            return v\n        }\n        else {\n      \
    \      return 0\n        }\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp9_rw0mqk.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mc\e[0m = \e[31m0\e[0m\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mc is already defined\
    \ as \e[33mvalue\e[0m \e[35mc\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val n = s.length\n        var count = 0L\n     \
    \   var i = 1\n        while (i <= n) {\n            val x = s.charAt(i-1)\n \
    \           val y = s.charAt(i)\n            if (vowels(x.toUpperCase()) && (y.toUpperCase()\
    \ == vowels(x.toUpperCase()))) {\n                count += 1L\n              \
    \  i += 1\n            }\n            else {\n                i += 1\n       \
    \     }\n        }\n        count\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7fozxq6u.scala:21:25 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (vowels(x.toUpperCase()) &&\
    \ (y.toUpperCase() == vowels(x.toUpperCase()))) {\n\e[31m\e[31m   |\e[0m     \
    \                  ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       value\
    \ toUpperCase is not a member of Char\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp7fozxq6u.scala:21:46 ------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m            \e[33mif\e[0m (vowels(x.toUpperCase()) && (y.toUpperCase() == vowels(x.toUpperCase())))\
    \ {\n\e[31m\e[31m   |\e[0m                                            ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toUpperCase is not a\
    \ member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659978989
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels =  mutable.ListBuffer[Char]('a','e','i','o','u','y')\n        var count\
    \ = 0\n        for(char <- s) {\n            if(vowels.contains(char)) count +=\
    \ 1\n        }\n        count.toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd5hpu__p.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m =  mutable.ListBuffer[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m,\e[31m'y'\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n       var\
    \ count = 1\n       for (i <- 0 until s.length)\n           if (('A' <= s.charAt(i)\
    \ ) && (s.charAt(i) <= 'z')) count++ \n           else if ('a' <= s.charAt(i)\
    \ ) && (s.charAt(i) <= 'z')\n           else if ('e' <= s.charAt(i) ) && (s.charAt(i)\
    \ <= 'z')\n           else if ('i' <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n\
    \           else if ('o' <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n          \
    \ else if ('u' <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n           else if ('y'\
    \ <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n           count++\n       count\n\
    \   }\n\n    // Write a function vowels_count_mutable which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowels_count_mutable((\"abcde\"))\n    // (2l)\n    // >>> vowels_count_mutable((\"\
    ACEDY\"))\n    // (3l)\n    def vowels_count_mutable(s : String) : Long = {\n\
    \       val count = collection.mutable.HashMap[Char, Long]()\n       for (i <-\
    \ 0 until s.length)\n           if (('A' <= s.charAt(i) ) && (s.charAt(i) <= 'z'))\
    \ count.put(s.charAt(i), count\n           else if ('a' <= s.charAt(i) ) && (s.charAt(i)\
    \ <= 'z')\n           else if ('e' <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n\
    \           else if ('i' <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n          \
    \ else if ('o' <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n           else if ('u'\
    \ <= s.charAt(i) ) && (s.charAt(i) <= 'z')\n           else if ('y' <= s.charAt(i)\
    \ ) && (s.charAt(i) <= 'z')\n           count.put(s.charAt(i), count+1 )\n   \
    \    count.valuesIterator.sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpftquglzc.scala:16:69 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m           \e[33mif\e[0m ((\e[31m'A'\e[0m <= s.charAt(i)\
    \ ) && (s.charAt(i) <= \e[31m'z'\e[0m)) count++ \n\e[31m\e[31m   |\e[0m      \
    \                                                               ^\e[0m\n\e[31m\
    \   |\e[0m                                      expression expected but \e[31melse\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpftquglzc.scala:23:18\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m           count++\n\e\
    [31m\e[31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                 \
    \ expression expected but \e[31munindent\e[0m found\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmpftquglzc.scala:40:11 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m           \e[33melse\e[0m \e[33mif\e[0m (\e[31m'a'\e\
    [0m <= s.charAt(i) ) && (s.charAt(i) <= \e[31m'z'\e[0m)\n\e[31m\e[31m   |\e[0m\
    \           ^^^^\e[0m\n\e[31m   |\e[0m           ')' expected, but 'else' found\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpftquglzc.scala:39:85 --------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m           \e[33mif\e[0m ((\e[31m'A'\e[0m <= s.charAt(i)\
    \ ) && (s.charAt(i) <= \e[31m'z'\e[0m)) count.put(s.charAt(i), count\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                     ^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (count : scala.collection.mutable.HashMap[Char,\
    \ Long])\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978990
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        var index = 0\n        while (index < s.length) {\n    \
    \        var c = s(index)\n            if (\"aeiouAEIOU\".indexOf(c) >= 0) {\n\
    \                count += 1\n            }\n            index += 1\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpy7tcgyco.scala:28)\n\tat Problem.main(tmpy7tcgyco.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978990
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        s.toLowerCase().toList.filter(x\
    \ => x == 'a' || x == 'e' || x == 'i' || x == 'o' || x == 'u').size\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpckccdozu.scala:19)\n\tat Problem.main(tmpckccdozu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0;\n        var vowels = \"aeiouAEIOU\".toSet\n        var yCount =\
    \ 0\n        val wordArray = s.toLowerCase split \"\"\n        wordArray.foreach(\
    \ w => {\n            val vowelCountArray = vowels.count( vowel => w.startsWith(vowel)\
    \ )\n            count += vowelCountArray(0)\n            count += vowelCountArray(1)\n\
    \            count += vowelCountArray(2)\n            if (w.endsWith(\"y\")) {\n\
    \                yCount += 1\n            }\n        })\n        count += yCount\n\
    \        count += wordArray.length - 1\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqk8m30cl.scala:19:70\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e\
    [36mvowelCountArray\e[0m = vowels.count( \e[36mvowel\e[0m => w.startsWith(vowel)\
    \ )\n\e[31m\e[31m   |\e[0m                                                   \
    \                   ^^^^^\e[0m\n\e[31m   |\e[0m                              \
    \                  Found:    (vowel : Char)\n\e[31m   |\e[0m                 \
    \                               Required: String\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqk8m30cl.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            count += vowelCountArray(\e[31m0\e[0m)\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E050] Type\
    \ Error: /tmp/tmpqk8m30cl.scala:20:21 -----------------------------\e[0m\e[0m\n\
    \e[31m20 |\e[0m            count += vowelCountArray(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \            \e[33mvalue\e[0m \e[35mvowelCountArray\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqk8m30cl.scala:21:18\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            count += vowelCountArray(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \           value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E050] Type Error: /tmp/tmpqk8m30cl.scala:21:21 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            count += vowelCountArray(\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     \e[33mvalue\e[0m \e[35mvowelCountArray\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqk8m30cl.scala:22:18\
    \ ------------------------\e[0m\e[0m"
  stdout: ''
  timestamp: 1659978992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Your code here.\n        val vowels : mutable.Set[Char] = scala.collection.mutable.Set('a',\
    \ 'e', 'i', 'o', 'u')\n        val count : mutable.Map[Char, Int] = scala.collection.mutable.Map[Char,\
    \ Int]()\n        for(c <- s) {\n            if('z' == c) {\n                count\
    \ += 1\n            } else {\n                count += vowels(c).size\n      \
    \      }\n        }\n        count.filter(_._2 > 1).map(_._1).reduceLeft(_ + _)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy_1h7mvl.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m : mutable.Set[\e\
    [35mChar\e[0m] = scala.collection.mutable.Set(\e[31m'a'\e[0m, \e[31m'e'\e[0m,\
    \ \e[31m'i'\e[0m, \e[31m'o'\e[0m, \e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy_1h7mvl.scala:16:20\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mcount\e[0m : mutable.Map[\e[35mChar\e[0m, \e[35mInt\e[0m] = scala.collection.mutable.Map[\e\
    [35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978988
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        s.replaceAll(\"\
    \"\"[^AEIOUaeiouy]\"\"\", \"-\").count(i => i != \"-\")\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp8e9q3i01.scala:14:59 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        s.replaceAll(\e[31m\"\"\"[^AEIOUaeiouy]\"\"\"\
    \e[0m, \e[31m\"-\"\e[0m).count(\e[36mi\e[0m => i != \e[31m\"-\"\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                                           ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n1 error found\n"
  stdout: ''
  timestamp: 1659978991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        def\
    \ isVowel(ch: Char) = ('a' to 'z') contains ch\n        val counts = mutable.HashMap[(Char,\
    \ Char), Long]()\n        for (ch <- s.chars) {\n            counts.put((ch, ch),\
    \ 1l) // one count for both\n            if (ch == 'y' && chs.last != 'y') counts.put((chs.last,\
    \ ch), 1l)\n            else counts.put((ch, chs.last), 1l)\n        }\n     \
    \   counts.values.sum\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp81y3lthz.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = mutable.HashMap[(\e\
    [35mChar\e[0m, \e[35mChar\e[0m), \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp81y3lthz.scala:16:19\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (ch\
    \ <- s.chars) {\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue foreach is not a member of java.util.stream.IntStream - did you\
    \ mean IntStream.forEach?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Write your code here\n        var count=0\n        var last=-1\n        for(i\
    \ <- 0 to s.length-1){\n            if(last==-1 || s[i]=='a'){\n             \
    \   count+=1\n            }\n            last=s[i]\n        }\n        return\
    \ count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgdygcv2n.scala:17:0 ----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m to s.length-\e\
    [31m1\e[0m){\n\e[31m\e[31m   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=' expected, but\
    \ 'end of statement' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgdygcv2n.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m last=-\e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^\e[0m\n\e[31m   |\e[0m    \
    \            Not found: =-\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpgdygcv2n.scala:18:19 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m            \e[33mif\e[0m(last==-\e[31m1\e[0m || s[\e[35mi\e[0m]==\e[31m'a'\e\
    [0m){\n\e[31m\e[31m   |\e[0m               ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \          value ==- is not a member of Any - did you mean Any.==?\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpgdygcv2n.scala:21:19 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            last=s[\e[35mi\e[0m]\n\e[31m\e[31m   |\e\
    [0m                   ^\e[0m\n\e[31m   |\e[0m                   Not found: type\
    \ i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978992
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val vowels_count = s.filter(c => vowels.contains(c)).size\n\
    \        vowels_count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfqpjvba6.scala:20)\n\tat Problem.main(tmpfqpjvba6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vs = List('a', 'e', 'i', 'o', 'u')\n        val vowels = vs.filter(v => s.contains(v))\n\
    \        s.toString.split('').map(_.toChar).filter { c =>\n            vowels.contains(c.charAt(0))\
    \ &&\n            vowels.contains(c.charAt(1)) &&\n            vowels.contains(c.charAt(2))\
    \ &&\n            vowels.contains(c.charAt(3)) &&\n            vowels.contains(c.charAt(4))\
    \ &&\n            vowels.contains(c.charAt(5)) &&\n            vowels.contains(c.charAt(6))\n\
    \        }.size\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpmpf61v2l.scala:16:25 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        s.toString.split('').map(_.toChar).filter { \e\
    [36mc\e[0m =>\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m  \
    \ |\e[0m                         empty character literal\n1 error found\n"
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Solution is here\n        var res = 0L\n        for(ch <- s){\n            if(ch\
    \ == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u'){\n             \
    \   res += 1\n            }\n        }\n        res\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7lm1maa7.scala:25)\n\tat Problem.main(tmp7lm1maa7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978994
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = ('a','e','i','o','u')\n        val vowels_array = Array(vowels: _*)\n\
    \n        val vowels_count = s.toList\n            .map{ x =>\n              \
    \  vowels_array.indexOf(x.toUpperCase)\n            }\n            .sum\n    \
    \        .toLong\n\n        vowels_count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjeynqvel.scala:15:33\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels_array\e\
    [0m = Array(vowels: \e[35m_*\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \             ^^^^^^\e[0m\n\e[31m   |\e[0m                     Found:    (vowels\
    \ : (Char, Char, Char, Char, Char))\n\e[31m   |\e[0m                     Required:\
    \ Seq[<?>] | Array[<?>]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpjeynqvel.scala:21:16\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m21 |\e[0m       \
    \     .sum\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0mambiguous\
    \ given instances: both \e[33mobject\e[0m \e[35mCharIsIntegral\e[0m in \e[33mobject\e\
    [0m \e[35mNumeric\e[0m and \e[33mobject\e[0m \e[35mBigIntIsIntegral\e[0m in \e\
    [33mobject\e[0m \e[35mNumeric\e[0m match type Numeric[B] of parameter num of \e\
    [33mmethod\e[0m \e[35msum\e[0m in \e[33mtrait\e[0m \e[35mIterableOnceOps\e[0m\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ count = mutable.MutableMap[Char, Long]()\n        s.map(c => if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') count(c) += 1 else 0 ).sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpme9k4c6b.scala:14:20 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.MutableMap[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978991
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aieou\"\n        s.foldLeft(0){ case (n,c) =>\n            (n + (if\
    \ (vowels.contains(c)) 1 else 0)) * (if (c == 'y' && (n+2)>s.length) 2 else 1)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphuddi06m.scala:21)\n\tat Problem.main(tmphuddi06m.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978997
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = mutable.Set[Char]('a','e','i','o','u')\n        val vowelsSet = mutable.Set[Char](vowels.toSeq:\
    \ _*)\n        var count = 0\n        for(letter <- s){\n            if((letter\
    \ == 'a') || (letter == 'e') || (letter == 'i') || (letter == 'o') || (letter\
    \ == 'u')){\n                count += 1\n            }else if((letter == ' ')\
    \ && (vowelsSet.contains(letter))){\n                count += 1\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5h9e2ivh.scala:14:21 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5h9e2ivh.scala:15:24 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet\e[0m = mutable.Set[\e\
    [35mChar\e[0m](vowels.toSeq: \e[35m_*\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978993
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        var c = 0\n        var x = 0\n        for(ch <- s) {\n \
    \           if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')\
    \ {\n                count += 1\n            }\n            if(ch == 'y' && c\
    \ == 0) {\n                count += 1\n                x = 0\n            }\n\
    \            x += 1\n            c += 1\n        }\n        if(x > 0) {\n    \
    \        count += x\n        }\n        count + 1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_d0z6cyb.scala:34)\n\tat Problem.main(tmp_d0z6cyb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978997
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\")\n        s.toLowerCase().count(c\
    \ => vowels.indexOf(c) >= 0)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcys_z69_.scala:15:50\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        s.toLowerCase().count(\e\
    [36mc\e[0m => vowels.indexOf(c) >= \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \                                            ^\e[0m\n\e[31m   |\e[0m         \
    \                                         Found:    (c : Char)\n\e[31m   |\e[0m\
    \                                                  Required: String\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978996
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(char <- s) {\n            val lowerCaseChar = char.toLowerCase\n\
    \            val lowerCaseChars = lowerCaseChar.toList\n            if(lowerCaseChars.contains(\"\
    a\") || lowerCaseChars.contains(\"e\") || lowerCaseChars.contains(\"i\") || lowerCaseChars.contains(\"\
    o\") || lowerCaseChars.contains(\"u\")) {\n                count += 1\n      \
    \      }\n        }\n        count + 1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpi0n5nuyq.scala:16:37 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mlowerCaseChar\e[0m =\
    \ char.toLowerCase\n\e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toLowerCase is not a\
    \ member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659978996
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set('a','e','i','o','u')\n        val vowelCounts = mutable.Map[Char,\
    \ Int]()\n        for (i <- 1 to s.length - 1) {\n            vowelCounts += (s.charAt(i)\
    \ == s.charAt(i).toLower ? s.charAt(i).toLower: s.charAt(i).toUpper) ++ vowels\n\
    \        }\n        vowelCounts.count{case (k, v) => v >= 1}\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpkkt5nh7t.scala:17:94 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            vowelCounts += (s.charAt(i) == s.charAt(i).toLower\
    \ ? s.charAt(i).toLower: s.charAt(i).toUpper) ++ vowels\n\e[31m\e[31m   |\e[0m\
    \                                                                            \
    \                  ^\e[0m\n\e[31m   |\e[0m                                   \
    \          ')' expected, but '(' found\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpkkt5nh7t.scala:15:26 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36mvowelCounts\e[0m = mutable.Map[\e[35mChar\e[0m,\
    \ \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978994
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        for (ch <- s) {\n            if (ch == 'a' || ch == 'e'\
    \ || ch == 'i' || ch == 'o' || ch == 'u' &&\n               ch != 'y')\n     \
    \           count += 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv77syshj.scala:24)\n\tat Problem.main(tmpv77syshj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978998
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ TODO: Your code here!\n        val vowels = \"aeiou\"\n        val vowel_count\
    \ = 0\n        for(letter <- s) {\n            if((letter in vowels) && !(letter\
    \ == s(s.length-1))) {\n                vowel_count = vowel_count + 1\n      \
    \      }\n        }\n        vowel_count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwpnny5r3.scala:18:23 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m((letter in vowels) && !(letter\
    \ == s(s.length-\e[31m1\e[0m))) {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value in is not a member of Char\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpwpnny5r3.scala:19:28 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                vowel_count = vowel_count + \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Reassignment to val vowel_count\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978997
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var count = 0\n  \
    \      s.foreach(c => {\n            if (vowels.contains(c))\n               \
    \ count += 1\n        })\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptiz_sdrf.scala:23)\n\tat Problem.main(tmptiz_sdrf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979001
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count : Long = 0\n        var vowelCount = 0\n        var finalString = \"\"\
    \n        var i = s.length() - 1\n        while (i >= 0) {\n            if (vowels.contains(s(i)))\
    \ {\n                vowelCount = vowelCount + 1\n            }\n            else\
    \ {\n                count = count + 1\n            }\n            i--\n     \
    \   }\n        finalString = finalString + (vowelCount)\n        return count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp1vqjfcfu.scala:25:15 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            i--\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1vqjfcfu.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m\
    \ (vowels.contains(s(i))) {\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: vowels\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978997
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        var count = 0\n        for (x <- s) {\n        \
    \    val a = x.toLowerCase \n            if (vowels.indexOf(a) != -1)\n      \
    \          count += 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwq_snxjw.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mval\e[0m \e[36ma\e[0m = x.toLowerCase\
    \ \n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                    value toLowerCase is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659978999
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ list = s.toCharArray\n        val count = mutable.HashSet[Char]()\n        for(i\
    \ <- 0 until list.length){\n            if(list(i) == 'a' || list(i) == 'e' ||\
    \ list(i) == 'i' || list(i) == 'o' || list(i) == 'u' || list(i) == 'y'){\n   \
    \             count += list(i)\n            }\n        }\n        return count.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1ri9gxve.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978998
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //Write\
    \ your code here\n        val vowelList: mutable.HashSet[Char] = mutable.HashSet[Char]()\n\
    \        var count = 0\n        for (v <- s) {\n            if (vowelList.contains(v))\n\
    \                count += 1\n            else\n                vowelList += v\n\
    \        }\n        \n        return count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnf5j0147.scala:15:23 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelList\e[0m: mutable.HashSet[\e\
    [35mChar\e[0m] = mutable.HashSet[\e[35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnf5j0147.scala:15:47\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mvowelList\e[0m: mutable.HashSet[\e[35mChar\e[0m] = mutable.HashSet[\e[35mChar\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                               Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978998
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowelsCount = 0\n        var vowelsCountIndex = 0\n        var vowelsCountIndexEnd\
    \ = 0\n        var vowelsCountIndexStart = 0\n        var vowelsCountIndexEndStart\
    \ = 0\n        var vowelsCountIndexStartEnd = 0\n        val wordArray = s.toUpperCase().toCharArray\n\
    \        for (i <- 0 until wordArray.length)\n        {\n            if (vowelsCountIndex\
    \ == 0 && vowelsCountIndexEnd == 0 && vowelsCountIndexStart == 0 && vowelsCountIndexEndStart\
    \ == 0)\n            {\n                vowelsCountIndexStart = i\n          \
    \      vowelsCountIndexEnd = i + 1\n            }\n            if (vowelsCountIndex\
    \ == 0 && vowelsCountIndexEnd == 0 && vowelsCountIndexStart != 0)\n          \
    \  {\n                vowelsCountIndexEnd = i\n                vowelsCountIndexStartEnd\
    \ = i + 1\n            }\n            if (vowelsCountIndex != 0 && vowelsCountIndexEnd\
    \ == 0 && vowelsCountIndexStart != 0 && vowelsCountIndexEndStart != 0)\n     \
    \       {\n                vowelsCountIndexEnd = i\n                vowelsCountIndexStartEnd\
    \ = i + 1\n            }\n            if (vowelsCountIndex != 0 && vowelsCountIndexEnd\
    \ == 0 && vowelsCountIndexStart != 0 && vowelsCountIndexEndStart != 0 && vowelsCountIndexStart\
    \ != vowelsCountIndexEnd)\n            {\n                vowelsCountIndexEnd\
    \ = i\n                vowelsCountIndexStartEnd = i + 1\n            }\n     \
    \       if (vowelsCountIndex != 0 && vowelsCountIndexEnd == 0 && vowelsCountIndexStart\
    \ != 0 && vowelsCountIndexEndStart != 0 && vowelsCountIndexStart == vowelsCountIndexEnd)\n\
    \            {\n                vowelsCountIndexEnd = i\n                vowelsCountIndexStartEnd\
    \ = i + 1\n            }\n            if (vowelsCountIndex != 0 && vowelsCountIndexEnd\
    \ == 0 && vowelsCountIndexStart != 0 && vowelsCountIndexEndStart != 0 && vowelsCountIndexStart\
    \ != vowelsCountIndexEnd)\n            {\n                vowelsCountIndexStart\
    \ = i\n                vowelsCountIndexStartEnd = i + 1\n            }\n     \
    \       if (vowelsCountIndex != 0 && vowelsCountIndexEnd == 0 && vowelsCountIndexStart\
    \ != 0 && vowelsCountIndexEndStart != 0 && vowelsCountIndexStart != vowelsCountIndexEnd)\n\
    \            {\n                vowelsCountIndexStart = i\n                vowelsCountIndexEndStart\
    \ = i + 1\n            }\n            if (vowelsCountIndex != 0 && vowelsCountIndexEnd\
    \ == 0 && vowelsCountIndexStart != 0 && vowelsCountIndexEndStart != 0 && vowelsCountIndexStart\
    \ == vowelsCountIndexEnd)\n            {\n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpeuv3hs96.scala:73:0 ----------------------------\e\
    [0m\e[0m\n\e[31m73 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpeuv3hs96.scala:63:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m63 |\e[0m    assert(vowelsCount((\e\
    [31m\"abcde\"\e[0m)) == (\e[31m2l\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvariable\e[0m \e[35mvowelsCount\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpeuv3hs96.scala:64:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m64 |\e[0m    assert(vowelsCount((\e\
    [31m\"Alone\"\e[0m)) == (\e[31m3l\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvariable\e[0m \e[35mvowelsCount\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpeuv3hs96.scala:65:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m65 |\e[0m    assert(vowelsCount((\e\
    [31m\"key\"\e[0m)) == (\e[31m2l\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvariable\e[0m \e[35mvowelsCount\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpeuv3hs96.scala:66:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m66 |\e[0m    assert(vowelsCount((\e\
    [31m\"bye\"\e[0m)) == (\e[31m1l\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvariable\e[0m \e[35mvowelsCount\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpeuv3hs96.scala:67:11\
    \ -----------------------------\e[0m\e[0m\n\e[31m67 |\e[0m    assert(vowelsCount((\e\
    [31m\"keY\"\e[0m)) == (\e[31m2l\e[0m));\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           \e[33mvariable\e[0m \e[35mvowelsCount\e[0m does\
    \ not take "
  stdout: ''
  timestamp: 1659978999
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ vowelCount = 1\n        for ( c <- s.toCharArray ) {\n            if ( c ==\
    \ 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' ) {\n                vowelCount\
    \ += 1\n            }\n        }\n        vowelCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpr0p1l5sh.scala:23)\n\tat Problem.main(tmpr0p1l5sh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979003
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count : Long = 0\n        val alphabet = List('a', 'e', 'i', 'o', 'u')\n   \
    \     val wordCount = s.split(\"\\\\s+\").length\n        for (i <- 0 to wordCount\
    \ -1) {\n            val word = s.substring(i,i+1)\n            val foundChar\
    \ = word.filter(c => alphabet.isInstance(c)).map(_.asInstanceOf[Char]).toList\n\
    \            count += foundChar.count(c => c =='a')\n            count += foundChar.count(c\
    \ => c == 'e')\n            count += foundChar.count(c => c == 'i')\n        \
    \    count += foundChar.count(c => c == 'o')\n            count += foundChar.count(c\
    \ => c == 'u')\n            count += word.filter(c => !alphabet.isInstance(c)).count(c\
    \ => c =='y')\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb9l25nx0.scala:19:54 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mfoundChar\e[0m = word.filter(\e\
    [36mc\e[0m => alphabet.isInstance(c)).map(_.asInstanceOf[\e[35mChar\e[0m]).toList\n\
    \e[31m\e[31m   |\e[0m                                             ^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue isInstance is not a member of List[Char] - did you mean\
    \ alphabet.isInstanceOf?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb9l25nx0.scala:25:18\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m            count += word.filter(\e\
    [36mc\e[0m => !alphabet.isInstance(c)).count(\e[36mc\e[0m => c ==\e[31m'y'\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpb9l25nx0.scala:25:48 ------------------------\e[0m\e[0m\n\
    \e[31m25 |\e[0m            count += word.filter(\e[36mc\e[0m => !alphabet.isInstance(c)).count(\e\
    [36mc\e[0m => c ==\e[31m'y'\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \                  ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue isInstance is\
    \ not a member of List[Char] - did you mean alphabet.isInstanceOf?\n3 errors found\n"
  stdout: ''
  timestamp: 1659979004
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var vowels = ('a','e','i','o','u')\n        var lastVowel\
    \ = 'y'\n        for (c <- s) {\n            if (vowels(c) == lastVowel) {\n \
    \               count += 1\n            }\n            lastVowel = c\n       \
    \ }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IndexOutOfBoundsException: 97 is out of bounds (min 0, max 4)\n\
    \tat scala.Product5.productElement(Product5.scala:46)\n\tat scala.Product5.productElement$(Product5.scala:40)\n\
    \tat scala.Tuple5.productElement(Tuple5.scala:27)\n\tat scala.runtime.Tuples$.apply(Tuples.scala:515)\n\
    \tat Problem$.vowelsCount$$anonfun$1(tmphjts8q0d.scala:18)\n\tat Problem$.vowelsCount$$anonfun$adapted$1(tmphjts8q0d.scala:22)\n\
    \tat scala.collection.StringOps$.foreach$extension(StringOps.scala:1044)\n\tat\
    \ Problem$.vowelsCount(tmphjts8q0d.scala:22)\n\tat Problem$.main(tmphjts8q0d.scala:26)\n\
    \tat Problem.main(tmphjts8q0d.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979004
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowelSet = mutable.Set.empty[Char]\n        val vowelCount = mutable.List.empty[Long]\n\
    \        for (i <- 0 until s.length)\n        {\n            val char = s.charAt(i)\n\
    \            val isVowel = ('a' <= char && char <= 'u') || ('e' <= char && char\
    \ <= 'i') || ('i' <= char && char <= 'o') || ('o' <= char && char <= 'u')\n  \
    \          if (vowelSet.contains(char) && !isVowel)\n                vowelCount\
    \ += -1\n            else\n                vowelSet += char\n        }\n     \
    \   vowelCount.length\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqlnce7q6.scala:14:23 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mvowelSet\e[0m = mutable.Set.empty[\e\
    [35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpqlnce7q6.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowelCount\e[0m = mutable.List.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979000
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val strArray = s.toUpperCase.split(\"\").toArray\n\
    \        var count = 0\n        for (x <- strArray) {\n            count += (strArray.indexOf(x).toLong\
    \ + 1) match {\n                case -1 => vowels.indexOf(x).toLong\n        \
    \        case i if vowels.indexOf(x).toLong == i => vowels.indexOf(x).toLong\n\
    \                case i => 0\n            }\n        }\n        return count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecvvpkgo.scala:18:18 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            count += (strArray.indexOf(x).toLong + \e\
    [31m1\e[0m) \e[33mmatch\e[0m {\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m            value += is not a member of Int - did you mean Int.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979003
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ i = 0\n        val vowels = \"aeiouAEIOU\".toSet\n        var num = 0\n    \
    \    val lengths = s.toList.length\n        var vowelIndex = 0\n        for (i\
    \ <- 0 until lengths) {\n            if (vowels(s(i))) {\n                num\
    \ += 1\n            }\n            val c = s(i)\n            if (vowelIndex <\
    \ vowels.length && vowels(c)) {\n                vowelIndex += 1\n           \
    \ }\n        }\n        num\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8h584_zy.scala:24:36 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m (vowelIndex < vowels.length\
    \ && vowels(c)) {\n\e[31m\e[31m   |\e[0m                             ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             value length is not a member\
    \ of Set[Char]\n1 error found\n"
  stdout: ''
  timestamp: 1659979002
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        s.replaceAll(\"\
    [^aeiou]\", \"\")\n            .replaceAll(\"y\", \"\")\n            .chars\n\
    \            .filter(_.isLetter)\n            .count(_ == 'a')\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3eudhez3.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            .filter(_.isLetter)\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    value\
    \ isLetter is not a member of Int\n\e[31m\e[31m-- Error: /tmp/tmp3eudhez3.scala:18:19\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     .count(_ == \e[31m'a'\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        too many arguments for \e[33mmethod\e[0m \e[35mcount\e\
    [0m in \e[33mtrait\e[0m \e[35mIntStream\e[0m: (): Long\n2 errors found\n"
  stdout: ''
  timestamp: 1659979003
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ arr = s.toList\n        val vc = arr.count(_ == 'a')\n        vc += arr.count(_\
    \ == 'e')\n        vc += arr.count(_ == 'i')\n        vc += arr.count(_ == 'o')\n\
    \        vc += arr.count(_ == 'u')\n        vc += arr.count(_ == 'y')\n      \
    \  val len = s.length\n        vc += arr.count(_ == 'a')\n        vc += arr.count(_\
    \ == 'e')\n        vc += arr.count(_ == 'i')\n        vc += arr.count(_ == 'o')\n\
    \        vc += arr.count(_ == 'u')\n        vc += arr.count(_ == 'y')\n      \
    \  vc += arr.count(_ == 'a')\n        vc += arr.count(_ == 'e')\n        vc +=\
    \ arr.count(_ == 'i')\n        vc += arr.count(_ == 'o')\n        vc += arr.count(_\
    \ == 'u')\n        vc += arr.count(_ == 'y')\n        vc += arr.count(_ == 'a')\n\
    \        vc += arr.count(_ == 'e')\n        vc += arr.count(_ == 'i')\n      \
    \  vc += arr.count(_ == 'o')\n        vc += arr.count(_ == 'u')\n        vc +=\
    \ arr.count(_ == 'y')\n        vc += arr.count(_ == 'a')\n        vc += arr.count(_\
    \ == 'e')\n        vc += arr.count(_ == 'i')\n        vc += arr.count(_ == 'o')\n\
    \        vc += arr.count(_ == 'u')\n        vc += arr.count(_ == 'y')\n      \
    \  vc += arr.count(_ == 'a')\n        vc += arr.count(_ == 'e')\n        vc +=\
    \ arr.count(_ == 'i')\n        vc += arr.count(_ == 'o')\n        vc += arr.count(_\
    \ == 'u')\n        vc += arr.count(_ == 'y')\n        vc += arr.count(_ == 'a')\n\
    \        vc += arr.count(_ == 'e')\n        vc += arr.count(_ == 'i')\n      \
    \  vc += arr.count(_ == 'o')\n        vc += arr.count(_ == 'u')\n        vc +=\
    \ arr.count(_ == 'y')\n        vc += arr.count(_ == 'a')\n        vc += arr.count(_\
    \ == 'e')\n        vc += arr.count(_ == 'i')\n        vc += arr.count(_ == 'o')\n\
    \        vc += arr.count(_ == 'u')\n        vc += arr.count(_ == 'y')\n      \
    \  vc += arr.count(_ == 'a')\n        vc += arr.count(_ == 'e')\n        vc +=\
    \ arr.count(_ == 'i')\n        vc += arr.count(_\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpz_oj4hnm.scala:68:4 ----------------------------\e\
    [0m\e[0m\n\e[31m68 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz_oj4hnm.scala:16:11\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        vc += arr.count(_\
    \ == \e[31m'e'\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean vc.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz_oj4hnm.scala:17:11 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        vc += arr.count(_ == \e[31m'i'\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member\
    \ of Int - did you mean vc.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz_oj4hnm.scala:18:11\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        vc += arr.count(_\
    \ == \e[31m'o'\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean vc.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz_oj4hnm.scala:19:11 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        vc += arr.count(_ == \e[31m'u'\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member\
    \ of Int - did you mean vc.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz_oj4hnm.scala:20:11\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        vc += arr.count(_\
    \ == \e[31m'y'\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean vc.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpz_oj4hnm.scala:22:11 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        vc += arr.count(_ == \e[31m'a'\e[0m)\n\e[31m\e\
    [31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member\
    \ of Int - did you mean vc.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz_oj4hnm.scala:23:11\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        vc += arr.count(_\
    \ == \e[31m'e'\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Int - did you mean vc"
  stdout: ''
  timestamp: 1659979010
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowel_end = \"\
    y\" :: vowels\n        vowel_end.forall(vowels.contains)\n            ? vowels.count(vowels.contains)\n\
    \            : 0\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8sgbctk6.scala:15:28 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowel_end\e[0m = \e[31m\"\
    y\"\e[0m :: vowels\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue :: is not a member of scala.collection.mutable.Set[String]\
    \ - did you mean vowels./:?\n1 error found\n"
  stdout: ''
  timestamp: 1659979004
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowelsMap = Map('a' -> 1, 'e' -> 1, 'i' -> 1, 'o' -> 1, 'u' -> 1)\n        var\
    \ vowelsCount = 0\n        for (x <- s) {\n            if (vowelsMap.contains(x))\n\
    \                vowelsCount += 1\n        }\n        if (vowelsCount > 0 && vowelsCount\
    \ != s.length)\n            vowelsCount\n        else\n            vowelsCount\
    \ + (if (s.last == 'y') 1 else 0)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpojdw_0lu.scala:27)\n\tat Problem.main(tmpojdw_0lu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979008
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count : Long = 0\n        for(letter : String <- s.toCharArray()){\n       \
    \     if(letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter\
    \ == 'u'){\n                count += 1\n            }\n        }\n        return\
    \ count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpldpirorc.scala:16:15 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(letter == \e[31m'a'\e[0m ||\
    \ letter == \e[31m'e'\e[0m || letter == \e[31m'i'\e[0m || letter == \e[31m'o'\e\
    [0m || letter == \e[31m'u'\e[0m){\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types String and Char cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpldpirorc.scala:16:32 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(letter == \e[31m'a'\e[0m ||\
    \ letter == \e[31m'e'\e[0m || letter == \e[31m'i'\e[0m || letter == \e[31m'o'\e\
    [0m || letter == \e[31m'u'\e[0m){\n\e[31m\e[31m   |\e[0m                     \
    \           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types String\
    \ and Char cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpldpirorc.scala:16:49\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \
    \     \e[33mif\e[0m(letter == \e[31m'a'\e[0m || letter == \e[31m'e'\e[0m || letter\
    \ == \e[31m'i'\e[0m || letter == \e[31m'o'\e[0m || letter == \e[31m'u'\e[0m){\n\
    \e[31m\e[31m   |\e[0m                                                 ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types String and Char cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpldpirorc.scala:16:66 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(letter == \e[31m'a'\e[0m ||\
    \ letter == \e[31m'e'\e[0m || letter == \e[31m'i'\e[0m || letter == \e[31m'o'\e\
    [0m || letter == \e[31m'u'\e[0m){\n\e[31m\e[31m   |\e[0m                     \
    \                                             ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpldpirorc.scala:16:83 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m(letter == \e[31m'a'\e[0m ||\
    \ letter == \e[31m'e'\e[0m || letter == \e[31m'i'\e[0m || letter == \e[31m'o'\e\
    [0m || letter == \e[31m'u'\e[0m){\n\e[31m\e[31m   |\e[0m                     \
    \                                  "
  stdout: ''
  timestamp: 1659979006
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\"\n        val count = s.count(x => vowels.indexOf(x) >= 0)\n\
    \        count + count(s.last)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmph3k41_pv.scala:16:16 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        count + count(s.last)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                \e[33mvalue\e[0m \e\
    [35mcount\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979005
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ i = 0\n        var n = 0\n        var vowels = \"aeiou\"\n        val length\
    \ = s.length\n        while (i<length){\n            if (vowels.indexOf(s.charAt(i).toString.toLowerCase)\
    \ >=0)\n            {\n                n += 1\n            }\n            i +=\
    \ 1\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7m4f48b_.scala:30)\n\tat Problem.main(tmp7m4f48b_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979009
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        s.toList\n        \
    \    .map(_.toLowerCase)\n            .map(v => vowels.contains(v))\n        \
    \    .sum\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2usarbpc.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            .map(_.toLowerCase)\n\e[31m\e[31m   |\e[0m\
    \                 ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                 value toLowerCase\
    \ is not a member of Char\n\e[31m\e[31m-- Error: /tmp/tmp2usarbpc.scala:18:16\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     .sum\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m     \
    \          No implicit Ordering defined for B\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \               where:    B is a type variable with constraint >: Boolean\n\e\
    [31m   |\e[0m               .\n2 errors found\n"
  stdout: ''
  timestamp: 1659979010
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowelsSet = vowels.toSet\n\
    \        val vowelCount = s.filter(vowelsSet.contains).length\n        val vowelsCount\
    \ = 0\n        for (i <- 0 to s.length - 1) {\n            if (vowelsSet.contains(s.charAt(i)))\
    \ {\n                vowelsCount = vowelsCount + 1\n            }\n        }\n\
    \        vowelsCount\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4mzu7i58.scala:16:34\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowelCount\e\
    [0m = s.filter(vowelsSet.contains).length\n\e[31m\e[31m   |\e[0m             \
    \                     ^\e[0m\n\e[31m   |\e[0m                                \
    \  Found:    (elem : Char)\n\e[31m   |\e[0m                                  Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4mzu7i58.scala:19:43\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (vowelsSet.contains(s.charAt(i)))\
    \ {\n\e[31m\e[31m   |\e[0m                                   ^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                   Found:    Char\n\e[31m   |\e\
    [0m                                   Required: String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp4mzu7i58.scala:20:28 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                vowelsCount = vowelsCount + \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Reassignment to val vowelsCount\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979009
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        var lastChar = s.charAt(s.length-1)\n        for (i <- 0\
    \ until s.length -1) {\n            if (lastChar == 'y' && s.charAt(i) == 'y')\
    \ count++\n            if (lastChar == 'a' && s.charAt(i) == 'a') count++\n  \
    \          if (lastChar == 'e' && s.charAt(i) == 'e') count++\n            if\
    \ (lastChar == 'i' && s.charAt(i) == 'i') count++\n            if (lastChar ==\
    \ 'o' && s.charAt(i) == 'o') count++\n            if (lastChar == 'u' && s.charAt(i)\
    \ == 'u') count++\n            lastChar = s.charAt(i)\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5yncfwfl.scala:17:62 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (lastChar == \e[31m'y'\e[0m\
    \ && s.charAt(i) == \e[31m'y'\e[0m) count++\n\e[31m\e[31m   |\e[0m           \
    \                                                   ^\e[0m\n\e[31m   |\e[0m  \
    \                                      expression expected but \e[31mif\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp5yncfwfl.scala:19:62\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e\
    [0m (lastChar == \e[31m'e'\e[0m && s.charAt(i) == \e[31m'e'\e[0m) count++\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \    ^\e[0m\n\e[31m   |\e[0m                                        expression\
    \ expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error:\
    \ /tmp/tmp5yncfwfl.scala:21:62 ---------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m            \e[33mif\e[0m (lastChar == \e[31m'o'\e[0m && s.charAt(i) ==\
    \ \e[31m'o'\e[0m) count++\n\e[31m\e[31m   |\e[0m                             \
    \                                 ^\e[0m\n\e[31m   |\e[0m                    \
    \                    expression expected but \e[31mif\e[0m found\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979006
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      var\
    \ count = 0L\n      s.toList match {\n        case Nil => count\n        case\
    \ Nil :+ _ => count\n        case _ :+ _ => count\n        case _ :+ x => {\n\
    \          val last = s.last\n          val y = last equals x.toLowerCase || last\
    \ equals \"y\" ? \"y\" : last\n          count += y == \"y\" || y == \"e\" ||\
    \ y == \"a\" ? 1 : 0\n        }\n      }\n      count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjsnsbc0b.scala:21:71 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m          \e[33mval\e[0m \e[36my\e[0m = last equals x.toLowerCase\
    \ || last equals \e[31m\"y\"\e[0m ? \e[31m\"y\"\e[0m : \e[35mlast\e[0m\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \       ^^^^\e[0m\n\e[31m   |\e[0m                                           \
    \         Not found: type last\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpjsnsbc0b.scala:21:32 ------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m          \e[33mval\e[0m \e[36my\e[0m = last equals x.toLowerCase || last equals\
    \ \e[31m\"y\"\e[0m ? \e[31m\"y\"\e[0m : \e[35mlast\e[0m\n\e[31m\e[31m   |\e[0m\
    \                              ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \                   value toLowerCase is not a member of Char\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjsnsbc0b.scala:21:63 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m          \e[33mval\e[0m \e[36my\e[0m = last equals x.toLowerCase\
    \ || last equals \e[31m\"y\"\e[0m ? \e[31m\"y\"\e[0m : \e[35mlast\e[0m\n\e[31m\e\
    [31m   |\e[0m                                                           ^^^^^\e\
    [0m\n\e[31m   |\e[0m                                       value ? is not a member\
    \ of String\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjsnsbc0b.scala:22:10\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m          count += y == \e[31m\"\
    y\"\e[0m || y == \e[31m\"e\"\e[0m || y == \e[31m\"a\"\e[0m ? \e[31m1\e[0m : \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m          Found:    Unit\n\e[31m   |\e[0m          Required:\
    \ (\e[31m0\e[0m : Int)\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659979009
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toList\n        val vowelCount = 0\n        for (a <- 0 until\
    \ s.length) {\n            vowelCount += vowels.count(s.charAt(a) match {\n  \
    \              case 'a' | 'e' | 'i' | 'o' | 'u' => 1\n                case _ =>\
    \ 0\n            })\n        }\n        vowelCount\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpst6y3y0d.scala:17:23 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            vowelCount += vowels.count(s.charAt(a) \e\
    [33mmatch\e[0m {\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m           value += is not a member of Int - did you mean vowelCount.!=?\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpst6y3y0d.scala:18:52 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                \e[33mcase\e[0m \e[31m'a'\e[0m | \e[31m'e'\e\
    [0m | \e[31m'i'\e[0m | \e[31m'o'\e[0m | \e[31m'u'\e[0m => \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m                                                    ^\e[0m\n\e[31m\
    \   |\e[0m                                               Found:    (\e[31m1\e\
    [0m : Int)\n\e[31m   |\e[0m                                               Required:\
    \ Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpst6y3y0d.scala:19:26\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mcase\e\
    [0m _ => \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (\e[31m0\e[0m : Int)\n\e[31m\
    \   |\e[0m                          Required: Char => Boolean\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979010
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\".toCharArray\n        var count = 0L\n        for (i\
    \ <- 0 until s.length - 1) {\n            if (vowels(i) == s(i)) {\n         \
    \       count += 1\n            }\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpowqsxvk_.scala:24)\n\tat Problem.main(tmpowqsxvk_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979011
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toCharArray\n        val count = s.length\n        var sum\
    \ = 0\n        for(i <- 0 until count) {\n            val ch = s.charAt(i)\n \
    \           if(ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u')\
    \ {\n                sum += vowels.length\n            }\n        }\n        sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5cltps8k.scala:26)\n\tat Problem.main(tmp5cltps8k.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979011
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      var\
    \ vowel_count = s.toCharArray.filter( c => c =='a' || c == 'e' || c == 'i' ||\
    \ c == 'o' || c == 'u').length\n      vowel_count = vowel_count + 1\n      return\
    \ vowel_count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpx9s4p8o4.scala:19)\n\tat Problem.main(tmpx9s4p8o4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979012
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      val\
    \ vowelSet = new mutable.HashSet[Char]()\n      s.toCharArray.foreach(vowelSet\
    \ += _)\n      vowelSet.size * (vowelSet.size + 1) / 2\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2pgcxfk3.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m      \e[33mval\e[0m \e[36mvowelSet\e[0m = \e[33mnew\e\
    [0m mutable.HashSet[\e[35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979008
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiou\".toSet\n        val y = \"y\".toChar\n        val n = s.length\n\
    \n        val vowelsCount = for (i <- 0 until n) yield {\n            val n =\
    \ s.charAt(i)\n\n            if (n.isLower) {\n                vowels contains\
    \ n.toLower\n            } else if (n.isUpper) {\n                vowels contains\
    \ n.toUpper\n            } else if (n.isDigit) {\n                false\n    \
    \        } else if (n.toChar != y || n == y && i == n - 1) {\n               \
    \ vowels contains n.toChar\n            } else {\n                false\n    \
    \        }\n        }.sum\n\n        vowelsCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptd_tr_zf.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36my\e[0m = \e[31m\"y\"\e[0m.toChar\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \        value toChar is not a member of String\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmptd_tr_zf.scala:32:10 ------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mvowelsCount\e[0m = \e[33mfor\e[0m (i <- \e\
    [31m0\e[0m until n) \e[33myield\e[0m {\n\e[31m19 |\e[0m            \e[33mval\e\
    [0m \e[36mn\e[0m = s.charAt(i)\n\e[31m20 |\e[0m            \e[33mif\e[0m (n.isLower)\
    \ {\n\e[31m21 |\e[0m                vowels contains n.toLower\n\e[31m22 |\e[0m\
    \            } \e[33melse\e[0m \e[33mif\e[0m (n.isUpper) {\n\e[31m23 |\e[0m  \
    \              vowels contains n.toUpper\n\e[31m24 |\e[0m            } \e[33melse\e\
    [0m \e[33mif\e[0m (n.isDigit) {\n\e[31m25 |\e[0m                \e[31mfalse\e\
    [0m\n\e[31m26 |\e[0m            } \e[33melse\e[0m \e[33mif\e[0m (n.toChar != y\
    \ || n == y && i == n - \e[31m1\e[0m) {\n\e[31m27 |\e[0m                vowels\
    \ contains n.toChar\n\e[31m28 |\e[0m            } \e[33melse\e[0m {\n\e[31m29\
    \ |\e[0m                \e[31mfalse\e[0m\n\e[31m30 |\e[0m            }\n\e[31m31\
    \ |\e[0m        }.sum\n\e[31m\e[31m   |\e[0m                                 \
    \                    ^\e[0m\n\e[31m   |\e[0m                                 \
    \   value sum is not a member of Boolean\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmptd_tr_zf.scala:34:8 ---------------------\e[0m\e[0m\n\e[31m34\
    \ |\e[0m        vowelsCount\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m        Found:    (vowelsCount : IndexedSeq[Nothing])\n\e[31m   |\e\
    [0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979013
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ TODO: Write the function here\n        var count = 0\n        s.iterator().foreach\
    \ { x =>\n            if (x == \"a\")\n                count += 1\n          \
    \  if (x == \"e\")\n                count += 1\n            if (x == \"i\")\n\
    \                count += 1\n            if (x == \"o\")\n                count\
    \ += 1\n            if (x == \"u\")\n                count += 1\n        }\n \
    \       count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpn0ow_sfr.scala:16:10 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        s.iterator().foreach { \e[36mx\e[0m =>\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \e[33mmethod\e[0m\
    \ \e[35miterator\e[0m in \e[33mclass\e[0m \e[35mStringOps\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979009
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ write your code here\n        var i = 0\n        var j = 0\n        var count\
    \ = 0\n        for(i <- 0 until s.length){\n            for(j <- 0 until s.length){\n\
    \                if(i == j)\n                    continue\n                if(s(i)\
    \ == s(j) && s(i) != 'y')\n                    count++\n            }\n      \
    \  }\n        return count\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4k27dguz.scala:23:27 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                    count++\n\e[31m\e[31m   |\e[0m  \
    \                         ^\e[0m\n\e[31m   |\e[0m                           expression\
    \ expected but \e[31munindent\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp4k27dguz.scala:21:20 ------------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m                    continue\n\e[31m\e[31m   |\e[0m      \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: continue\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979011
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n       var\
    \ count = 0L\n       var vowels = Array('a','e','i','o','u')\n       var lastVowel:\
    \ Option[Char] = None\n       for (c1 <- s ; c2 <- vowels) {\n           if (c1\
    \ == c2) {\n               count += 1\n               lastVowel = Some(c1)\n \
    \          }\n       }\n       lastVowel.orElse {\n           for (c1 <- s ; c2\
    \ <- vowels) {\n               if (c1 != c2) {\n                   count += 1\n\
    \                   lastVowel = Some(c1)\n               }\n           }\n   \
    \    }\n       count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7wh1ghhb.scala:24:11\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m           \e[33mfor\e[0m (c1\
    \ <- s ; c2 <- vowels) {\n\e[31m\e[31m   |\e[0m           ^\e[0m\n\e[31m   |\e\
    [0m           Found:    Unit\n\e[31m   |\e[0m           Required: Option[Char]\n\
    \e[31m25 |\e[0m               \e[33mif\e[0m (c1 != c2) {\n\e[31m26 |\e[0m    \
    \               count += \e[31m1\e[0m\n\e[31m27 |\e[0m                   lastVowel\
    \ = Some(c1)\n\e[31m28 |\e[0m               }\n\e[31m29 |\e[0m           }\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979014
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ write your code here\n        val vowels = List(\"a\", \"e\", \"i\", \"o\",\
    \ \"u\")\n        val vowel_count = s.count(vowels).toLong\n        vowel_count\
    \ += s.last.equals(\"y\") ? 1 : 0\n        vowel_count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwhl_r_nz.scala:16:34\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowel_count\e\
    [0m = s.count(vowels).toLong\n\e[31m\e[31m   |\e[0m                          \
    \        ^^^^^^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (vowels : List[String])\n\e[31m   |\e[0m                                \
    \  Required: Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpwhl_r_nz.scala:17:20 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        vowel_count += s.last.equals(\e[31m\"y\"\e[0m) ? \e[31m1\e[0m : \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        value += is not a member of Long - did you mean vowel_count.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpwhl_r_nz.scala:17:42 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        vowel_count += s.last.equals(\e[31m\"y\"\e[0m)\
    \ ? \e[31m1\e[0m : \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                       value ? is not a member of Boolean\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979016
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0L\n        for(i <- 0 until s.length){\n            if(s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' || s.charAt(i) == 'i' || s.charAt(i) == 'o' ||\
    \ s.charAt(i) == 'u'){\n                count += 1\n            }\n        }\n\
    \        return count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpmyu1mv9x.scala:24)\n\tat Problem.main(tmpmyu1mv9x.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979016
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n       var\
    \ vowelSet = mutable.Set[Char]()\n       for (letter <- s.toCharArray) vowelSet\
    \ += letter\n       vowelSet.count { letter =>\n           letter =='a' || letter\
    \ =='e' || letter =='i' || letter =='o' || letter =='u'\n       }\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbhz2b1l6.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m       \e[33mvar\e[0m \e[36mvowelSet\e[0m = mutable.Set[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979012
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        val wordLength = s.length\n        for (i <- 0 until wordLength)\
    \ {\n            if (s.charAt(i) == 'a') count += 1\n            if (s.charAt(i)\
    \ == 'e') count += 1\n            if (s.charAt(i) == 'i') count += 1\n       \
    \     if (s.charAt(i) == 'o') count += 1\n            if (s.charAt(i) == 'u')\
    \ count += 1\n            if (s.charAt(i) == 'y' && i + 1 == wordLength) count\
    \ += 1\n        }\n        count\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplnru21s1.scala:28)\n\tat Problem.main(tmplnru21s1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowelsCountArray = Array('a', 'e', 'i', 'o', 'u')\n        val array = s.toCharArray\n\
    \        var index = 0\n        var count = 0\n        var isVowel = true\n\n\
    \        while (index < array.length) {\n            if (array[index] == vowelsCountArray(0))\
    \ {\n                count += 1\n            } else {\n                isVowel\
    \ = false\n            }\n            index += 1\n        }\n\n        if (isVowel)\
    \ {\n            count += 1\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkkf4mgz0.scala:21:22 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (array[\e[35mindex\e[0m] ==\
    \ vowelsCountArray(\e[31m0\e[0m)) {\n\e[31m\e[31m   |\e[0m                   \
    \   ^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: type index\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979013
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (c <- s) {\n            if (c =='a' || c == 'e' || c\
    \ == 'i' || c == 'o' || c == 'u') count += 1\n            if (c == 'y') count\
    \ -= 1\n        }\n        s.length * count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp61_3po8v.scala:22)\n\tat Problem.main(tmp61_3po8v.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aeiouAEIOU\"\n        val count = s.length\n        s.toCharArray.filter(vowels.indexOf(_)\
    \ > -1).length\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9qmxqxx6.scala:21)\n\tat Problem.main(tmp9qmxqxx6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ n = s.length()\n        val vowels = \"aeiouAEIOU\"\n        var count = 0\n\
    \        for (i <- 0 until n) {\n            val v = s(i)\n            if (vowels.indexOf(v)\
    \ >= 0) {\n                count += 1\n            }\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpefpwava4.scala:28)\n\tat Problem.main(tmpefpwava4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979019
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Write your code here\n        var vowels: Long = 0\n        var chars = s.toCharArray\n\
    \        for (i <- 0 until chars.length) {\n            if(chars(i) == 'a' ||\
    \ chars(i) == 'e' || chars(i) == 'i' || chars(i) == 'o' || chars(i) == 'u'){\n\
    \                vowels += 1\n            }\n        }\n        return vowels\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6h4iwqdi.scala:26)\n\tat Problem.main(tmp6h4iwqdi.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979019
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ vowels = \"aaiou\"\n        val vowels_count = s.length - vowels.length\n  \
    \      val vowels_array = vowels.toCharArray\n        val vowels_array_len = vowels_array.length\n\
    \        var i = 0\n        var j = 0\n        var count = 0\n        while (i\
    \ < s.length)\n            if (vowels_count(s.charAt(i)) > 0 && vowels_count(s.charAt(i))\
    \ == vowels_count(s.charAt(i + 1))) {\n                count = count + 1\n   \
    \             i = i + 1\n            }\n            else {\n                while\
    \ (j < vowels_array_len)\n                    if (vowels_count(s.charAt(i)) >\
    \ 0 && vowels_count(s.charAt(i)) == vowels_count(s.charAt(i + 1))) {\n       \
    \                 count = count + 1\n                        i = i + 1\n     \
    \                   break\n                    }\n                    else {\n\
    \                        j = j + 1\n                    }\n            }\n   \
    \     vowels_count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmp16hzq2qo.scala:22:16 -----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (vowels_count(s.charAt(i))\
    \ > \e[31m0\e[0m && vowels_count(s.charAt(i)) == vowels_count(s.charAt(i + \e\
    [31m1\e[0m))) {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                \e[33mvalue\e[0m \e[35mvowels_count\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmp16hzq2qo.scala:28:24\
    \ -----------------------------\e[0m\e[0m\n\e[31m28 |\e[0m                   \
    \ \e[33mif\e[0m (vowels_count(s.charAt(i)) > \e[31m0\e[0m && vowels_count(s.charAt(i))\
    \ == vowels_count(s.charAt(i + \e[31m1\e[0m))) {\n\e[31m\e[31m   |\e[0m      \
    \                  ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        \e\
    [33mvalue\e[0m \e[35mvowels_count\e[0m does not take parameters\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp16hzq2qo.scala:31:24 ------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m                        break\n\e[31m\e[31m   |\e[0m\
    \                        ^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979016
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Your code here\n        val vowels = mutable.ArrayBuffer(\n            ('a'),\n\
    \            ('e'),\n            ('i'),\n            ('o'),\n            ('u'),\n\
    \            ('y'),\n        )\n        val vowelCount = 0\n        for(x <- 0\
    \ until s.length){\n            if(!vowels(x)){\n                if(s.length ==\
    \ x){\n                    vowelCount += 1\n                }\n            }\n\
    \        }\n        vowelCount\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwp9ybmqg.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.ArrayBuffer(\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpwp9ybmqg.scala:27:31 ------------------------\e[0m\e[0m\n\e[31m27 |\e\
    [0m                    vowelCount += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \               ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value += is not\
    \ a member of Int - did you mean vowelCount.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979019
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        def\
    \ isVowel(ch: Char): Boolean = {\n            ch match {\n                case\
    \ 'a' | 'e' | 'i' | 'o' | 'u' =>\n                    true\n                case\
    \ _ => false\n            }\n        }\n\n        var count = 0\n        for (i\
    \ <- s.indices) {\n            if (isVowel(s.charAt(i))) {\n                count\
    \ += 1\n            }\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"\
    Alone\")) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5402fgg8.scala:32)\n\tat Problem.main(tmp5402fgg8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979021
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length)\n            if (s.charAt(i)\
    \ == 'a' || s.charAt(i) == 'e' ||\n                s.charAt(i) == 'i' || s.charAt(i)\
    \ == 'o' ||\n                s.charAt(i) == 'u')\n                count++\n  \
    \      count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpm7jduo4f.scala:19:23 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                count++\n\e[31m\e[31m   |\e[0m      \
    \                 ^\e[0m\n\e[31m   |\e[0m                       expression expected\
    \ but \e[31munindent\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ map = Map('a','e','i','o','u')\n        var vowels = 0\n        var lastVowel\
    \ = -1\n        var index = s.length\n        while(index != 0) {\n          \
    \  if(map(s(index-1)) != -1){\n                lastVowel = s(index-1)\n      \
    \          vowels = vowels + 1\n            }\n            index = index - 1\n\
    \        }\n        if(lastVowel == -1)\n            return vowels\n        else\n\
    \            return vowels + 1\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1sxf0j1y.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mmap\e\
    [0m = Map(\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e[31m'u'\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m   \
    \                   Found:    (\e[31m'a'\e[0m : Char)\n\e[31m   |\e[0m       \
    \               Required: (Any, Any)\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp1sxf0j1y.scala:14:26 --------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mmap\e[0m = Map(\e[31m'a'\e[0m,\e\
    [31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e[31m'u'\e[0m)\n\e[31m\e[31m   |\e\
    [0m                          ^^^\e[0m\n\e[31m   |\e[0m                       \
    \   Found:    (\e[31m'e'\e[0m : Char)\n\e[31m   |\e[0m                       \
    \   Required: (Any, Any)\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp1sxf0j1y.scala:14:30 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mmap\e[0m = Map(\e[31m'a'\e[0m,\e[31m'e'\e\
    [0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                         ^^^\e[0m\n\e[31m   |\e[0m                          \
    \    Found:    (\e[31m'i'\e[0m : Char)\n\e[31m   |\e[0m                      \
    \        Required: (Any, Any)\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp1sxf0j1y.scala:14:34 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mmap\e[0m = Map(\e[31m'a'\e[0m,\e[31m'e'\e\
    [0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                             ^^^\e[0m\n\e[31m   |\e[0m                      \
    \            Found:    (\e[31m'o'\e[0m : Char)\n\e[31m   |\e[0m              \
    \                    Required: (Any, Any)\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp1sxf0j1y.scala:14:3"
  stdout: ''
  timestamp: 1659979020
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var count = 0\n        for (i <- 0 to s.length-1) {\n   \
    \         if (s.charAt(i) == 'a') count+=1\n            if (s.charAt(i) == 'e')\
    \ count+=1\n            if (s.charAt(i) == 'i') count+=1\n            if (s.charAt(i)\
    \ == 'o') count+=1\n            if (s.charAt(i) == 'u') count+=1\n           \
    \ if (s.charAt(i) == 'y') count += 2\n        }\n        count + 1\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpyxaynz2h.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mcount\e[0m = \e[31m0\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mcount is already\
    \ defined as \e[33mvariable\e[0m \e[35mcount\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659979017
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        s.foreach(w\
    \ => {\n            val vowels = Set(\"a\",\"e\",\"i\",\"o\",\"u\",\"y\")\n  \
    \          val found = vowels.find(!vowels.contains(w))\n            found match\
    \ {\n                case Some(true) => vowels.add(w)\n                case _\
    \ => vowels.remove(w)\n            }\n        })\n        vowels.toSet.size //\
    \ returns the number of vowels\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnh5kye_j.scala:16:53\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e\
    [36mfound\e[0m = vowels.find(!vowels.contains(w))\n\e[31m\e[31m   |\e[0m     \
    \                                                ^\e[0m\n\e[31m   |\e[0m     \
    \                                               Found:    (w : Char)\n\e[31m \
    \  |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnh5kye_j.scala:18:26\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mcase\e\
    [0m Some(\e[31mtrue\e[0m) => vowels.add(w)\n\e[31m\e[31m   |\e[0m            \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                         Found:    (\e\
    [31mtrue\e[0m : Boolean)\n\e[31m   |\e[0m                         Required: String\n\
    \e[31m   |\e[0m                         pattern type is incompatible with expected\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnh5kye_j.scala:18:46\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mcase\e\
    [0m Some(\e[31mtrue\e[0m) => vowels.add(w)\n\e[31m\e[31m   |\e[0m            \
    \                                  ^\e[0m\n\e[31m   |\e[0m                   \
    \                           Found:    (w : Char)\n\e[31m   |\e[0m            \
    \                                  Required: String\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpnh5kye_j.scala:19:40 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                \e[33mcase\e[0m _ => vowels.remove(w)\n\
    \e[31m\e[31m   |\e[0m                                        ^\e[0m\n\e[31m  \
    \ |\e[0m                                        Found:    (w : Char)\n\e[31m \
    \  |\e[0m                                        Required: String\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tm"
  stdout: ''
  timestamp: 1659979020
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ count = mutable.Map.empty[Char, Long]\n        for(c: Char <- s) c match {\n\
    \            case 'a' => count.update(c, 1L)\n            case 'e' => count.update(c\
    \ + 1, 1L)\n            case 'i' => count.update(c + 2, 1L)\n            case\
    \ 'o' => count.update(c + 3, 1L)\n            case 'u' => count.update(c + 4,\
    \ 1L)\n            case _ => count.update(c, 1L)\n        }\n        count.size\
    \ * (1L / count.size)\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe5w76doq.scala:14:20 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.Map.empty[\e\
    [35mChar\e[0m, \e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979018
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        //\
    \ Write code here\n        var vowelsCount = 0.0\n        for(i <- 0 until s.length)\n\
    \        {\n            if(s(i) == 'a' ||\n                s(i) == 'e' ||\n  \
    \              s(i) == 'i' ||\n                s(i) == 'o' ||\n              \
    \  s(i) == 'u' ||\n                s(i) == 'y' ||\n                s(i) == 'A'\
    \ ||\n                s(i) == 'E' ||\n                s(i) == 'I' ||\n       \
    \         s(i) == 'O' ||\n                s(i) == 'U' ||\n                s(i)\
    \ == 'Y')\n            {\n                vowelsCount += 1\n            }\n  \
    \      }\n        vowelsCount\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(vowelsCount((\"abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\"\
    )) == (3l));\n    assert(vowelsCount((\"key\")) == (2l));\n    assert(vowelsCount((\"\
    bye\")) == (1l));\n    assert(vowelsCount((\"keY\")) == (2l));\n    assert(vowelsCount((\"\
    bYe\")) == (1l));\n    assert(vowelsCount((\"ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3ncdso0y.scala:34:8\
    \ ---------------------\e[0m\e[0m\n\e[31m34 |\e[0m        vowelsCount\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (vowelsCount\
    \ : Double)\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979020
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        s.toCharArray.foreach { ch =>\n            if(ch == 'a')\
    \ count += 1\n            if(ch == 'e') count += 1\n            if(ch == 'i')\
    \ count += 1\n            if(ch == 'o') count += 1\n            if(ch == 'u')\
    \ count += 1\n            if(ch == 'y') count += 1\n        }\n        count.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\"\
    )) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5vbb596q.scala:27)\n\tat Problem.main(tmp5vbb596q.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979021
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n      val\
    \ vowels = \"aeiouAEIOU\".toCharArray\n      var count = 0L\n      var pos = 0\n\
    \      while (pos < s.length){\n        val c = s.charAt(pos)\n        if (!vowels(c))\n\
    \          count += 1\n        pos += 1\n      }\n      count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe9j5ielm.scala:19:12 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mif\e[0m (!vowels(c))\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      value unary_! is not a member\
    \ of Char - did you mean Char.unary_+?\n1 error found\n"
  stdout: ''
  timestamp: 1659979020
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for(x <- s.toCharArray) {\n            if(x != 'y' && x !=\
    \ 'e' && x != 'i' && x != 'o' && x != 'u' && x != 'a' && x != 'y') {\n       \
    \         count += 1\n            }\n        }\n        count\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) == (2l));\n\
    \    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"key\"\
    )) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpm_esbo16.scala:23)\n\tat Problem.main(tmpm_esbo16.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979021
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        var lastVowel : Option[String] = None\n\n        s.split('').foreach(c\
    \ => {\n            if (c =~ \"[aeiou]\") {\n                count += 1\n    \
    \            lastVowel = Some(c)\n            }\n        })\n\n        if (lastVowel.isDefined\
    \ && lastVowel.get() == \"y\") {\n            count += 1\n        }\n\n      \
    \  count\n    }\n    def main(args: Array[String]) = {\n    assert(vowelsCount((\"\
    abcde\")) == (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpw_mpe4l7.scala:17:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        s.split('').foreach(\e[36mc\e[0m => {\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                empty character\
    \ literal\n\e[31m\e[31m-- Error: /tmp/tmpw_mpe4l7.scala:24:48 -----------------------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mif\e[0m (lastVowel.isDefined && lastVowel.get()\
    \ == \e[31m\"y\"\e[0m) {\n\e[31m\e[31m   |\e[0m                              \
    \     ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing argument for parameter i of\
    \ \e[33mmethod\e[0m \e[35mapply\e[0m in \e[33mclass\e[0m \e[35mStringOps\e[0m:\
    \ (i: Int): Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659979019
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        var\
    \ count = 0\n        for (i <- 0 until s.length()) {\n            if (s.charAt(i)\
    \ == 'a') count+=1\n            if (s.charAt(i) == 'e') count+=1\n           \
    \ if (s.charAt(i) == 'i') count+=1\n            if (s.charAt(i) == 'o') count+=1\n\
    \            if (s.charAt(i) == 'u') count+=1\n        }\n        count\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgf_23sce.scala:26)\n\tat Problem.main(tmpgf_23sce.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979021
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Write a function vowels_count which takes a string representing\n\
    \    // a word as input and returns the number of vowels in the string.\n    //\
    \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    //\
    \ vowel, but only when it is at the end of the given word.\n    // Example:\n\
    \    // >>> vowelsCount((\"abcde\"))\n    // (2l)\n    // >>> vowelsCount((\"\
    ACEDY\"))\n    // (3l)\n    def vowelsCount(s : String) : Long = {\n        val\
    \ arr = s.toCharArray\n        val counts = new mutable.HashSet[Char]\n      \
    \  for(i <- 0 until arr.length) {\n            if(arr(i) == 'a' || arr(i) == 'e'\
    \ || arr(i) == 'i' || arr(i) == 'o' || arr(i) == 'u') {\n                counts\
    \ += arr(i)\n            }\n        }\n        return counts.length\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(vowelsCount((\"abcde\")) ==\
    \ (2l));\n    assert(vowelsCount((\"Alone\")) == (3l));\n    assert(vowelsCount((\"\
    key\")) == (2l));\n    assert(vowelsCount((\"bye\")) == (1l));\n    assert(vowelsCount((\"\
    keY\")) == (2l));\n    assert(vowelsCount((\"bYe\")) == (1l));\n    assert(vowelsCount((\"\
    ACEDY\")) == (3l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt4wm2gwj.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mcounts\e[0m = \e[33mnew\e\
    [0m mutable.HashSet[\e[35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                  \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979020

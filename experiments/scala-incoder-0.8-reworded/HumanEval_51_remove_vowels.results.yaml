language: scala
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def replaceChar(c : Char) : String = {\n            if (c.toLowerCase\
    \ == 'a' || c.toLowerCase == 'e' || c.toLowerCase == 'i' || c.toLowerCase == 'o'\
    \ || c.toLowerCase == 'u'){\n                return c\n            }\n       \
    \     else{\n                return \"\"\n            }\n        }\n        val\
    \ newText = text.toString.map(replaceChar)\n        newText.mkString(\"\")\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpth6x484m.scala:17:18 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (c.toLowerCase == \e[31m'a'\e\
    [0m || c.toLowerCase == \e[31m'e'\e[0m || c.toLowerCase == \e[31m'i'\e[0m || c.toLowerCase\
    \ == \e[31m'o'\e[0m || c.toLowerCase == \e[31m'u'\e[0m){\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                value toLowerCase\
    \ is not a member of Char\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpth6x484m.scala:18:23\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mreturn\e\
    [0m c\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m   \
    \                    Found:    (c : Char)\n\e[31m   |\e[0m                   \
    \    Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = \"\"\n        for(i <- 0 until text.length){\n         \
    \   if((text(i) == \"\" || text(i) == \"a\" || text(i) == \"e\" || text(i) ==\
    \ \"i\" || text(i) == \"o\" || text(i) == \"u\") && text(i+1) != \"\"){\n    \
    \            result += text(i) + text(i+1)\n                i = i + 1\n      \
    \      }\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpqr5w6fk0.scala:18:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m((text(i) == \e[31m\"\"\e[0m\
    \ || text(i) == \e[31m\"a\"\e[0m || text(i) == \e[31m\"e\"\e[0m || text(i) ==\
    \ \e[31m\"i\"\e[0m || text(i) == \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e\
    [0m) && text(i+\e[31m1\e[0m) != \e[31m\"\"\e[0m){\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and\
    \ String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpqr5w6fk0.scala:18:33\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     \e[33mif\e[0m((text(i) == \e[31m\"\"\e[0m || text(i) == \e[31m\"a\"\e[0m\
    \ || text(i) == \e[31m\"e\"\e[0m || text(i) == \e[31m\"i\"\e[0m || text(i) ==\
    \ \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e[0m) && text(i+\e[31m1\e[0m) !=\
    \ \e[31m\"\"\e[0m){\n\e[31m\e[31m   |\e[0m                                 ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpqr5w6fk0.scala:18:51 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m((text(i) == \e[31m\"\"\e[0m\
    \ || text(i) == \e[31m\"a\"\e[0m || text(i) == \e[31m\"e\"\e[0m || text(i) ==\
    \ \e[31m\"i\"\e[0m || text(i) == \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e\
    [0m) && text(i+\e[31m1\e[0m) != \e[31m\"\"\e[0m){\n\e[31m\e[31m   |\e[0m     \
    \                                              ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        Values of types Char and String cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpqr5w6fk0.scala:18:69 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m((text(i) == \e[31m\"\"\e[0m\
    \ || text(i) == \e[31m\"a\"\e[0m || text(i) == \e[31m\"e\"\e[0m || text(i) ==\
    \ \e[31m\"i\"\e[0m || text(i) == \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e\
    [0m) && text(i+\e[31m1\e[0m) != \e[31m\"\"\e[0m){\n\e[31m\e[31m   |\e[0m     \
    \                                                                ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpqr5w6fk0.scala:18:87"
  stdout: ''
  timestamp: 1659979136
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def isVowel(ch: Char): Boolean = {\n            val lower = ch.toLower\n\
    \            val upper = ch.toUpper\n            (lower == 'a' || lower == 'e'\
    \ || lower == 'i' || lower == 'o' || lower == 'u') && (upper == 'A' || upper ==\
    \ 'E' || upper == 'I' || upper == 'O' || upper == 'U')\n        }\n        val\
    \ result = new StringBuilder\n        var inWord = false\n        for (ch <- text)\
    \ {\n            if (inWord) {\n                if (isVowel(ch))\n           \
    \         continue\n                else {\n                    inWord = false\n\
    \                }\n            }\n            else {\n                if (isVowel(ch))\n\
    \                    inWord = true\n                else {\n                 \
    \   result.append(ch)\n                }\n            }\n        }\n        return\
    \ result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpg4o38a7n.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                    continue\n\e[31m\e[31m   |\e[0m \
    \                   ^^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ continue\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979129
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \    val vowels = \"aeiou\"\n    val newText = text\n    for(c <- newText)\n \
    \       if(vowels.contains(c))\n            newText = newText.replace(c,\"\")\n\
    \    newText\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmp_zcjbls6.scala:20:30 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            newText = newText.replace(c,\e[31m\"\"\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mreplace\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: CharSequence,\
    \ x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char, x$1: Char): String\n\
    \e[31m   |\e[0mmatch arguments ((c : Char), (\e[32m\"\"\e[0m : String))\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979129
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\"\n        text.split(\"[\" + vowels + \"]\").map(_.replaceAll(vowels,\
    \ \"\")).mkString(\"\")\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp__rxaewd.scala:24)\n\tat Problem.main(tmp__rxaewd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979136
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Only consider the cases where text contains vowels, remove them and\
    \ return the result.\n        // >>> removeVowels((\"aa\"))\n        // (\"aa\"\
    )\n        // >>> removeVowels((\"ab\"))\n        // (\"ab\")\n        text match\
    \ {\n            case text if !text.isEmpty => \n                val vowels =\
    \ mutable.HashSet(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\").filter(x => text.contains(x))\n\
    \                text = text.filterNot(x => vowels.contains(x))\n            case\
    \ _ => text\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt8qt7h_4.scala:23:29 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                \e[33mval\e[0m \e[36mvowels\e[0m = mutable.HashSet(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m, \e[31m\"y\"\e[0m).filter(\e[36mx\e[0m => text.contains(x))\n\e[31m\e\
    [31m   |\e[0m                             ^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpt8qt7h_4.scala:24:21 -----------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m                text = text.filterNot(\e[36mx\e[0m => vowels.contains(x))\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val text\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979128
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\"\n        var result = \"\"\n        for(i <- 0\
    \ to text.length){\n            if(vowels.contains(text.charAt(i))){\n       \
    \         result += text.charAt(i)\n            } else {\n                result\
    \ += text.charAt(i).toLowerCase\n            }\n        }\n        result\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptjvx9nvj.scala:22:23 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                result += text.charAt(i).toLowerCase\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \   value += is not a member of String - did you mean String.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmptjvx9nvj.scala:22:41 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                result += text.charAt(i).toLowerCase\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                          value toLowerCase is not a member of\
    \ Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659979135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def isVowel(c:Char) : Boolean = {\n            c match {\n          \
    \      case 'a' | 'e' | 'i' | 'o' | 'u' =>\n                    true\n       \
    \         case 'A' | 'E' | 'I' | 'O' | 'U' =>\n                    true\n    \
    \            case _ =>\n                    false\n            }\n        }\n\
    \        if (text.length < 1)\n            return text\n        val len = text.length\n\
    \        val newText = new StringBuilder(text.toCharArray(0))\n        text.dropWhile(c\
    \ => !isVowel(c))\n        text.takeWhile(c => !isVowel(c)).foreach(newText.append)\n\
    \        newText.toString\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmppnnqjfcn.scala:29:57 -----------------------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mnewText\e[0m = \e[33mnew\e\
    [0m \e[35mStringBuilder\e[0m(text.toCharArray(\e[31m0\e[0m))\n\e[31m\e[31m   |\e\
    [0m                                                         ^\e[0m\n\e[31m   |\e\
    [0mtoo many arguments for \e[33mmethod\e[0m \e[35mtoCharArray\e[0m in \e[33mclass\e\
    [0m \e[35mString\e[0m: (): Array[Char]\n1 error found\n"
  stdout: ''
  timestamp: 1659979129
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      var newtext = \"\"\n      for(ch <- text){\n        val vowels = \"aeiouAEIOU\"\
    \n        for(vowel_ch <- vowels)\n          if(ch == vowel_ch) newtext +=  ch\n\
    \      }\n      newtext\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkfn6xayb.scala:26)\n\tat Problem.main(tmpkfn6xayb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val pattern = \"[aeiou]\".r\n        val res = pattern.pattern.replaceAllIn(text,\
    \ \"\")\n        if (res.isEmpty)\n            res\n        else\n           \
    \ removeVowels(res)\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpth3kjk28.scala:17:34 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mres\e[0m = pattern.pattern.replaceAllIn(text,\
    \ \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           value replaceAllIn is not a member of java.util.regex.Pattern\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979133
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val noVowels = text.filter(x =>\
    \ !vowels.contains(x))\n        noVowels.toUpperCase\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3zt7438n.scala:22)\n\tat Problem.main(tmp3zt7438n.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text.length == 0) \"\"\n        else text.reverse match {\n     \
    \       case \"\" | \"a\" | \"e\" | \"i\" | \"o\" | \"u\" => text.reverse\n  \
    \          case x => removeVowels(removeVowels(x)) ++ text.reverse\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat java.base/java.lang.StringBuilder.append(StringBuilder.java:179)\n\
    \tat java.base/java.lang.StringBuilder.append(StringBuilder.java:91)\n\tat java.base/java.lang.AbstractStringBuilder.<init>(AbstractStringBuilder.java:112)\n\
    \tat java.base/java.lang.StringBuilder.<init>(StringBuilder.java:131)\n\tat scala.collection.StringOps$.reverse$extension(StringOps.scala:1180)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:17)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\
    \tat Problem$.removeVowels(tmpymr2mmu1.scala:19)\n\tat Problem$.removeVowels(tmpymr2mmu1.scala:1"
  stdout: ''
  timestamp: 1659979135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var noVowels : List[String] = Nil\n        for (i <- 0 to text.length\
    \ - 1) {\n            if (text(i).matches(\"[aeiouAEIOU]\")) {\n             \
    \   noVowels += text(i)\n            }\n        }\n        if (noVowels.isEmpty)\
    \ \"\" else noVowels.mkString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwnflx4wj.scala:18:24 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (text(i).matches(\e[31m\"[aeiouAEIOU]\"\
    \e[0m)) {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                value matches is not a member of Char\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpwnflx4wj.scala:19:25 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                noVowels += text(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue += is not a member of\
    \ List[String] - did you mean List[String].!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val withoutVowels = text.flatMap(c => c.toString.toList.filter(x => !List('a',\
    \ 'e', 'i', 'o', 'u') contains x))\n        withoutVowels.toString.reverse\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzkflthth.scala:16:76 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mwithoutVowels\e[0m = text.flatMap(\e\
    [36mc\e[0m => c.toString.toList.filter(\e[36mx\e[0m => !List(\e[31m'a'\e[0m, \e\
    [31m'e'\e[0m, \e[31m'i'\e[0m, \e[31m'o'\e[0m, \e[31m'u'\e[0m) contains x))\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                       value unary_! is not a member of List[Char]\n1 error found\n"
  stdout: ''
  timestamp: 1659979135
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Your code goes here\n        val vowels = \"aeiouAEIOU\"\n       \
    \ val newText = new StringBuilder()\n        text.foreach{ char => if (!vowels.contains(char))\
    \ newText.append(char) }\n        newText.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979137
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      val vowels = List('a','e','i','o','u','y','A','E','I','O','U','Y')\n  \
    \    val text = text.toLowerCase\n      for (v <- vowels) {\n        val position\
    \ = text.indexOf(v)\n        if(position != -1) {\n          text.replace(v,\"\
    \")\n        }\n      }\n      text\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpwj3svczr.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m      \e[33mval\e[0m \e[36mtext\e[0m = text.toLowerCase\n\
    \e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m                \
    \ Recursive \e[33mvalue\e[0m \e[35mtext\e[0m needs type\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979127
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = text\n        for (letter <- text.toCharArray) {\n     \
    \       if (!('a' <= letter && letter <= 'z') || ('a' <= letter && letter <= 'z')\
    \ || (('a' <= letter && letter <= 'z') && letter != ('z')))\n                result\
    \ = result.replace(letter, \"\")\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpk3tfd22w.scala:19:32 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                result = result.replace(letter, \e[31m\"\
    \"\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mreplace\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: CharSequence,\
    \ x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char, x$1: Char): String\n\
    \e[31m   |\e[0mmatch arguments ((letter : Char), (\e[32m\"\"\e[0m : String))\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979129
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Define a map to store vowels here.\n        val vowels = mutable.HashSet(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        val result = new StringBuilder\n\n \
    \       // Iterate over text and remove vowels\n        for(i <- text.indices)\
    \ {\n            if(!vowels.contains(text(text.length-i))) {\n               \
    \ result.append(text(text.length - i))\n            }\n        }\n        return\
    \ result.toString\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe92gguaq.scala:17:21 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.HashSet(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979130
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\") \n      \
    \  text.filterNot(vowels.contains)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7ok8ltwc.scala:21)\n\tat Problem.main(tmp7ok8ltwc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979136
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n        var tempText = \"\"\n    \
    \    for (c: Int <- 0 until text.length) {\n            if (vowels.contains(text.charAt(c)))\
    \ {\n                tempText += text.charAt(c)\n            }\n        }\n  \
    \      return tempText\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpozyrvvzr.scala:27)\n\tat Problem.main(tmpozyrvvzr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979137
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        var res : String = \"\"\n      \
    \  for (i <- text.indices) {\n            res += text(i)\n            if (vowels.indexOf(text(i))\
    \ < 0) res += \" \"\n        }\n        return res\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkqh6ubn_.scala:26)\n\tat Problem.main(tmpkqh6ubn_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979137
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels : (String) =\n            List(\"a\", \"e\", \"i\", \"o\"\
    , \"u\")\n\n        var output : String = \"\"\n\n        if (text.length == 0)\n\
    \            output\n        else\n            output += text.charAt(0).toLowerCase\
    \ + text.substring(1).toLowerCase\n\n        text.substring(1).split(\"\").foldLeft(output){(outputStr,\
    \ char) =>\n            val found : (Boolean) =\n                vowels.contains(char.toLowerCase)\n\
    \n            if (found)\n                outputStr\n            else\n      \
    \          outputStr + char\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuyx73ajl.scala:17:16\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            List(\e[31m\"a\"\e\
    [0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m            Found:    \e[1m\e[31mList\e[0m\e[1m\e[31m[\e[0mString\e[1m\e\
    [31m]\e[0m\n\e[31m   |\e[0m            Required: String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpuyx73ajl.scala:24:19 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            output += text.charAt(\e[31m0\e[0m).toLowerCase\
    \ + text.substring(\e[31m1\e[0m).toLowerCase\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of String\
    \ - did you mean String.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuyx73ajl.scala:24:37\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m            output += text.charAt(\e\
    [31m0\e[0m).toLowerCase + text.substring(\e[31m1\e[0m).toLowerCase\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                      value toLowerCase is not a member of Char\n3 errors found\n"
  stdout: ''
  timestamp: 1659979136
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Create a mutable array and add characters to it using for loop.\n\
    \        var text : Array[Char] = new Array[Char](text.length)\n        for (i\
    \ <- 0 until text.length) text(i ) = text(i)\n        // Loop through all vowels\
    \ and remove them from the array.\n        // Use while loop because it can run\
    \ through multiple times\n        // >>> text\n        // (a, b, c, d)\n     \
    \   // >>> for(i <- 0 until text.length) text(i ) = text(i)\n        // >>> text\n\
    \        // (a, b, c)\n        // >>> while(i < text.length){\n        //    \
    \ // remove vowel\n        //     if(text(i) == ('a') || (text(i) == ('e') ||\
    \ (text(i) == ('i') || (text(i) == ('o') || (text(i) == ('u') ) ) ) ){\n     \
    \   //         text(i ) = text(i )\n        //     }\n        //     i++\n   \
    \     // }\n        // >>> text\n        // (a, c)\n        var vowels: Array[Char]\
    \ = new Array[Char]('a', 'e', 'i', 'o', 'u')\n        var index = 0\n        var\
    \ i = 0\n        var newString = \"\"\n        while(i < text.length){\n     \
    \       // remove vowel\n            if(vowels(index) == text(i) ){\n        \
    \        text(i ) = text(i )\n            }\n            i++\n        }\n    \
    \    //Loop through the array from start to end and add them to newString\n  \
    \      for (i = text.length; i >=0; i--){\n            newString = newString +\
    \ text(i)\n        }\n        //Remove trailing vowel if there is one.\n     \
    \   //>>> println(newString)\n        //abc\n        var i = newString.length\n\
    \        while(i >= 0) {\n            if(vowels(i) == newString(i)){\n       \
    \         newString = newString.dropRight(1)\n            }\n            i--\n\
    \        }\n        // >>> println(newString)\n        //bc\n        return newString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpiwr4mjsd.scala:44:15 ---------------------------\e\
    [0m\e[0m\n\e[31m44 |\e[0m            i++\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpiwr4mjsd.scala:47:15\
    \ ---------------------------\e[0m\e[0m\n\e[31m47 |\e[0m        \e[33mfor\e[0m\
    \ (i = text.length; i >=\e[31m0\e[0m; i--){\n\e[31m\e[31m   |\e[0m           \
    \    ^\e[0m\n\e[31m   |\e[0m               ')' expected, but '=' found\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmpiwr4mjsd.scala:47:35 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mfor\e[0m (i = text.length; i >=\e[31m0\e\
    [0m; i--){\n\e[31m\e[31m   |\e[0m                                   ^\e[0m\n\e\
    [31m   |\e[0m                                   '<-' expected, but ';' found\n\
    \e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpiwr4mjsd.scala:47:40 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m        \e[33mfor\e[0m (i = text.length; i >=\e[31m0\e\
    [0m; i--){\n\e[31m\e[31m   |\e[0m                                        ^\e[0m\n\
    \e[31m   |\e[0m                                        pattern expected\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpiwr4mjsd.scala:58:15 ---------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m            i--\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpiwr4mjsd.scala:53:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m53 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mi\e[0m = newString.length\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mi is already defined as \e[33mvariable\e[0m \e[35mi\e[0m\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n\e[31m\e[31m-- [E007] Ty"
  stdout: ''
  timestamp: 1659979137
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowelsSet = Set(\"a\",\"e\",\"i\",\"o\",\"u\")\n        var res :\
    \ String = \"\"\n        for (c <- text)\n            res += if (vowelsSet.contains(c))\
    \ \"\" else c\n        return res\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp0h4lo4wq.scala:19:19 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            res += \e[33mif\e[0m (vowelsSet.contains(c))\
    \ \e[31m\"\"\e[0m \e[33melse\e[0m c\n\e[31m\e[31m   |\e[0m                   ^^\e\
    [0m\n\e[31m   |\e[0m                   expression expected but \e[31mif\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979140
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var new_text = text\n        var charCount = 0\n        for (char <-\
    \ text) {\n            charCount += 1\n            if (char.equals(\"a\") || char.equals(\"\
    e\") || char.equals(\"i\") || char.equals(\"o\") || char.equals(\"u\"))\n    \
    \            new_text = new_text.replace(char, \"\")\n        }\n        return\
    \ new_text\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpj9229oz3.scala:21:36 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                new_text = new_text.replace(char, \e\
    [31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e\
    [35mreplace\e[0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e\
    [0m (x$0: CharSequence, x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char,\
    \ x$1: Char): String\n\e[31m   |\e[0mmatch arguments ((char : Char), (\e[32m\"\
    \"\e[0m : String))\n1 error found\n"
  stdout: ''
  timestamp: 1659979142
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val vowels_rev\
    \ = Set(\"u\", \"o\", \"i\", \"e\", \"a\")\n        var output_text = \"\"\n \
    \       for(letter <- text) {\n            output_text += if (vowels.contains(letter))\
    \ letter else \"\"\n        }\n        output_text.reverse.mkString\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4ass8hfr.scala:20:27 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            output_text += \e[33mif\e[0m (vowels.contains(letter))\
    \ letter \e[33melse\e[0m \e[31m\"\"\e[0m\n\e[31m\e[31m   |\e[0m              \
    \             ^^\e[0m\n\e[31m   |\e[0m                           expression expected\
    \ but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979142
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n\n        // filter returns iterator\
    \ that returns true for only elements satisfying the given predicate.\n      \
    \  // map applies a function to the elements of the iterator and returns the transformed\
    \ iterator.\n        text.filter( c => !vowels.contains(c) ).map( c => c )\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979150
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text.filter(c => !('A'<=c&&c<='Z')||c=='z')\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq9ykcm_v.scala:20)\n\tat Problem.main(tmpq9ykcm_v.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979149
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\");\n     \
    \   val filtered = text.filter(letter => vowels.contains(letter));\n        return\
    \ filtered;\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcts4gb7u.scala:17:61\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mfiltered\e\
    [0m = text.filter(\e[36mletter\e[0m => vowels.contains(letter));\n\e[31m\e[31m\
    \   |\e[0m                                                             ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                               Found:    (letter\
    \ : Char)\n\e[31m   |\e[0m                                               Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979148
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // write your implementation here\n        val vowels = Set(\"a\", \"\
    e\", \"i\", \"o\", \"u\")\n        val result = text.map{c => c match {\n    \
    \        case vowel if vowels.contains(c) => c\n            case _ => \"\"\n \
    \       }}.mkString\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpecgy7eu2.scala:19:42\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mcase\e[0m vowel\
    \ \e[33mif\e[0m vowels.contains(c) => c\n\e[31m\e[31m   |\e[0m               \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \                Found:    (c : Char)\n\e[31m   |\e[0m                       \
    \                   Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979149
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = mutable.Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n       \
    \ def noVowels(x : String) : String = x.filter(!vowels.contains(_))\n        text.split(\"\
    \").map(noVowels(_)).mkString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_7940ggt.scala:16:21 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979146
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      var result = \"\"\n      for(i <- 0 until text.length){\n        if(text.charAt(i)\
    \ != 'a' && text.charAt(i) != 'e' && text.charAt(i) != 'i' && text.charAt(i) !=\
    \ 'o' && text.charAt(i) != 'u'){\n          result += text.charAt(i)\n       \
    \ }\n      }\n      result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\\
    nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\"\
    )).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\")));\n\
    \    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnnq4tlsq.scala:29)\n\tat Problem.main(tmpnnq4tlsq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979155
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val regex = new Regex(\"[aeiou]\");\n        val replaced = regex.replaceAllIn(text,\"\
    *\");\n        return replaced;\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfizd6di1.scala:16:24 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mregex\e[0m = \e[33mnew\e\
    [0m \e[35mRegex\e[0m(\e[31m\"[aeiou]\"\e[0m);\n\e[31m\e[31m   |\e[0m         \
    \               ^^^^^\e[0m\n\e[31m   |\e[0m                        Not found:\
    \ type Regex\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Write your logic here\n        if (text.length <= 1) return text\n\
    \        // remove the first vowel\n        if (text.head == \"a\" || text.head\
    \ == \"e\" || text.head == \"i\" || text.head == \"o\" || text.head == \"u\")\
    \ {\n            val tmp = text.drop(1)\n            val newText = removeVowels(tmp)\n\
    \            return text + newText\n        } else {\n            // remove the\
    \ last vowel\n            if (text.last == \"a\" || text.last == \"e\" || text.last\
    \ == \"i\" || text.last == \"o\" || text.last == \"u\") {\n                val\
    \ tmp = text.dropRight(1)\n                val newText = removeVowels(tmp)\n \
    \               return text + newText\n            } else {\n                //\
    \ return without vowels\n                return text\n            }\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpoh4hjlox.scala:19:12 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mif\e[0m (text.head == \e[31m\"a\"\e[0m\
    \ || text.head == \e[31m\"e\"\e[0m || text.head == \e[31m\"i\"\e[0m || text.head\
    \ == \e[31m\"o\"\e[0m || text.head == \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpoh4hjlox.scala:19:32\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m19 |\e[0m       \
    \ \e[33mif\e[0m (text.head == \e[31m\"a\"\e[0m || text.head == \e[31m\"e\"\e[0m\
    \ || text.head == \e[31m\"i\"\e[0m || text.head == \e[31m\"o\"\e[0m || text.head\
    \ == \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m                              \
    \  ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpoh4hjlox.scala:19:52\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m19 |\e[0m       \
    \ \e[33mif\e[0m (text.head == \e[31m\"a\"\e[0m || text.head == \e[31m\"e\"\e[0m\
    \ || text.head == \e[31m\"i\"\e[0m || text.head == \e[31m\"o\"\e[0m || text.head\
    \ == \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m                              \
    \                      ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of\
    \ types Char and String cannot be compared with == or !=\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpoh4hjlox.scala:19:72 -----------------------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mif\e[0m (text.head == \e[31m\"a\"\e[0m || text.head\
    \ == \e[31m\"e\"\e[0m || text.head == \e[31m\"i\"\e[0m || text.head == \e[31m\"\
    o\"\e[0m || text.head == \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m          \
    \                                                              ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpoh4hjlox.scala:19:92 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mif\e[0m (text.head == \e[31m\"a\"\e[0m\
    \ || text.head == \e[31m\"e\"\e[0m || text.head == \e[31m\"i\"\e[0m || text.head\
    \ == \e[31m\"o\"\e[0m || text.head == \e[31m\""
  stdout: ''
  timestamp: 1659979156
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        //remove all vowels and then reverse string\n        return text.toLowerCase().replace(\"\
    a\", \"\")\n                    .replace(\"e\", \"\")\n                    .replace(\"\
    i\", \"\")\n                    .replace(\"o\", \"\")\n                    .replace(\"\
    u\", \"\")\n                    .replace(\"y\", \"\")\n                    .replaceAll(\"\
    [^aeiou]\", \"\")\n                    .reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3m90vxq1.scala:28)\n\tat Problem.main(tmp3m90vxq1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979155
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text match {\n            case \"\" => \"\"\n            case x => x.toUpperCase.filter(c\
    \ => c != 'A' && c != 'E' && c != 'I' && c != 'O' && c != 'U').mkString\n    \
    \    }\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpapo4153x.scala:23)\n\tat Problem.main(tmpapo4153x.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979156
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text == \"\") text\n        val list = text.split(\" \").toList\n\
    \        for (word <- list) yield {\n            for (c <- word.chars) yield {\n\
    \                if (c == 'a' || c == 'A' || c == 'e' || c == 'E' || c == 'i'\
    \ || c == 'I' || c == 'o' || c == 'O' || c == 'u' || c == 'U') yield {\n     \
    \               word.remove(c)\n                }\n            }\n        }\n\
    \        val result = list.mkString(\" \")\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpikmuu4bs.scala:20:138 --------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m (c == \e[31m'a'\e[0m ||\
    \ c == \e[31m'A'\e[0m || c == \e[31m'e'\e[0m || c == \e[31m'E'\e[0m || c == \e\
    [31m'i'\e[0m || c == \e[31m'I'\e[0m || c == \e[31m'o'\e[0m || c == \e[31m'O'\e\
    [0m || c == \e[31m'u'\e[0m || c == \e[31m'U'\e[0m) \e[33myield\e[0m {\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \                                                                          ^^^^^\e\
    [0m\n\e[31m   |\e[0m                                      'then' expected, but\
    \ 'yield' found\n\e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmpikmuu4bs.scala:16:24\
    \ ----------------\e[0m\e[0m\n\e[33m16 |\e[0m        \e[33mif\e[0m (text == \e\
    [31m\"\"\e[0m) text\n\e[33m\e[33m   |\e[0m                        ^^^^\e[0m\n\e\
    [33m   |\e[0mA pure expression does nothing in statement position; you may be\
    \ omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[33m\e[33m-- [E129] Potential Issue\
    \ Warning: /tmp/tmpikmuu4bs.scala:23:12 ----------------\e[0m\e[0m\n\e[33m22 |\e\
    [0m                }\n\e[33m23 |\e[0m            }\n\e[33m\e[33m   |\e[0m    \
    \             ^\e[0m\n\e[33m   |\e[0mA pure expression does nothing in statement\
    \ position; you may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 warnings\
    \ found\n1 error found\n"
  stdout: ''
  timestamp: 1659979149
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        // We use\
    \ mutable collections here since Scala 2.8 does not have immutable collections\n\
    \        val result = new mutable.ArrayBuffer[Char]()\n        for (c <- text)\n\
    \            if (!vowels.contains(c))\n                result += c\n        return\
    \ result.toString()\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwpcomn57.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwpcomn57.scala:20:33\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (!vowels.contains(c))\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 Found:    (c : Char)\n\e[31m   |\e[0m      \
    \                           Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979154
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \       text.filter(x => !x.isLetter || x.isUpperCase || x.isLowerCase || x.isNumber).mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgyw8a3nq.scala:16:41 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m       text.filter(\e[36mx\e[0m => !x.isLetter || x.isUpperCase\
    \ || x.isLowerCase || x.isNumber).mkString\n\e[31m\e[31m   |\e[0m            \
    \                           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \                 value isUpperCase is not a member of Char\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpgyw8a3nq.scala:16:58 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m       text.filter(\e[36mx\e[0m => !x.isLetter || x.isUpperCase\
    \ || x.isLowerCase || x.isNumber).mkString\n\e[31m\e[31m   |\e[0m            \
    \                                            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                               value isLowerCase is not a member of Char\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpgyw8a3nq.scala:16:75 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m       text.filter(\e[36mx\e[0m => !x.isLetter || x.isUpperCase\
    \ || x.isLowerCase || x.isNumber).mkString\n\e[31m\e[31m   |\e[0m            \
    \                                                             ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                  value isNumber is not a member\
    \ of Char\n3 errors found\n"
  stdout: ''
  timestamp: 1659979156
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \    var result = \"\"\n    var vowels = \"aeiouAEIOU\".toCharArray\n    var text\
    \ = text.toLowerCase\n    var text = text.replaceAll(\"[aeiou]\",\"\")\n    for\
    \ (letter <- text.toCharArray) {\n        if (vowels(letter) == true) {\n    \
    \        result += letter\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsc5jg78u.scala:36:0 ----------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpsc5jg78u.scala:19:8\
    \ ----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m    \e[33mvar\e[0m \e\
    [36mtext\e[0m = text.replaceAll(\e[31m\"[aeiou]\"\e[0m,\e[31m\"\"\e[0m)\n\e[31m\e\
    [31m   |\e[0m    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtext\
    \ is already defined as \e[33mvariable\e[0m \e[35mtext\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpsc5jg78u.scala:18:15\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m    \e[33mvar\e[0m \e\
    [36mtext\e[0m = text.toLowerCase\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\
    \e[31m   |\e[0m               Recursive \e[33mvariable\e[0m \e[35mtext\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsc5jg78u.scala:35:1\
    \ ---------------------\e[0m\e[0m\n\e[31m35 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e\
    [0m\n\e[31m   |\e[0m Found:    Unit\n\e[31m   |\e[0m Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659979155
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // (1) Create an empty string with the length of the text and place \"\
    z\" in all the positions of the string.\n        var new_text : String = \"\"\n\
    \        for (i <- 0 until text.length){\n            if (text.charAt(i) == 'a'\
    \ || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o' ||\
    \ text.charAt(i) == 'u') new_text += \"z\"\n            else new_text += text.charAt(i)\n\
    \        }\n        // (2) Remove all the vowels from the string.\n        new_text\
    \ = new_text.replaceAll(\"[aAeEiIoOuU]\", \"\")\n        new_text = new_text.replaceAll(\"\
    [zZ]\", \"\")\n        return new_text\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Remove all vowels from text.\n        text = text.toLowerCase()\n\
    \        val text = text.toLowerCase()\n        val vowels = Set(\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n        val newText\
    \ = text.replace(vowels.toSeq, \"\")\n        val newTextAsList = newText.toList\n\
    \        // Return string without vowels.\n        newTextAsList.mkString.toUpperCase()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpg1apfz63.scala:18:19 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mtext\e[0m = text.toLowerCase()\n\
    \e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m              \
    \     Recursive \e[33mvalue\e[0m \e[35mtext\e[0m needs type\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmpg1apfz63.scala:17:13 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        text = text.toLowerCase()\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Reassignment\
    \ to val text\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979148
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      var new_text = \"\"\n      var count = 0\n      for(ch <- text) {\n   \
    \       if(('A' <= ch && ch <= 'Z') || ('a' <= ch && ch <= 'z')) {\n         \
    \     count += 1\n          }\n      }\n      for( ch <- text) {\n          if('A'\
    \ <= ch && ch <= 'Z') {\n              count -= 1\n          }\n      }\n    \
    \  for( ch <- text) {\n          if('a' <= ch && ch <= 'z') {\n              count\
    \ -= 1\n          }\n      }\n      for( ch <- text) {\n          if('A' <= ch\
    \ && ch <= 'Z' ||\n               'a' <= ch && ch <= 'z') {\n              new_text\
    \ += ch\n              if(count != 0) new_text += ch\n              count += 1\n\
    \          }\n      }\n      if(count == 0) new_text = \"\"\n      return new_text\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph37d8fmo.scala:46)\n\tat Problem.main(tmph37d8fmo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979158
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // (1) count the number of vowels\n        var vowelCount : Int = 0\n\
    \        var vowels : (Char) = (_: Char)\n        // (2) go through each letter\
    \ in text and see if it is a vowel\n        for (letter : Char in text) {\n  \
    \          if (letter == 'a' || letter == 'e' || letter == 'i' || letter == 'o'\
    \ || letter == 'u') {\n                vowels = letter\n                vowelCount\
    \ += 1\n            }\n        }\n        // (3) keep only the letter if it has\
    \ no vowels\n        if (vowelCount == 0) {\n            return text\n       \
    \ } else {\n            var removed = \"\"\n            // (4) iterate through\
    \ the string, removing vowels and adding them back\n            for (letter :\
    \ Char in text) {\n                if (letter == 'a' || letter == 'e' || letter\
    \ == 'i' || letter == 'o' || letter == 'u') {\n                    removed +=\
    \ letter\n                } else {\n                    removed += letter\n  \
    \              }\n            }\n            return removed\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpuz609662.scala:20:27 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (letter : \e[35mChar\e[0m in text)\
    \ {\n\e[31m\e[31m   |\e[0m                           ^^\e[0m\n\e[31m   |\e[0m\
    \                           ')' expected, but identifier found\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmpuz609662.scala:20:36 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (letter : \e[35mChar\e[0m in text)\
    \ {\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m \
    \  |\e[0m                                    '<-' expected, but '{' found\n\e\
    [31m\e[31m-- [E020] Syntax Error: /tmp/tmpuz609662.scala:29:10 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        } \e[33melse\e[0m {\n\e[31m\e[31m   |\e[0m  \
    \        ^^^^\e[0m\n\e[31m   |\e[0m          \e[33myield\e[0m or \e[33mdo\e[0m\
    \ expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E017] Syntax Error: /tmp/tmpuz609662.scala:18:31\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mvowels\e[0m : (\e[35mChar\e[0m) = (_: \e[35mChar\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                               ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \               Unbound placeholder parameter; incorrect use of _\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuz609662.scala:25:9 -------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        }\n\e[31m\e[31m   |\e[0m         ^\e[0m\n\e[31m\
    \   |\e[0mvalue withFilter is not a member of Null, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.con"
  stdout: ''
  timestamp: 1659979157
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = \"aeiouAEIOU\"\n        var result = text\n        for (c\
    \ <- text) {\n            if (vowels.contains(c)) {\n                result =\
    \ result.replace(c, '')\n            }\n        }\n        return result\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpvlhyu_re.scala:20:43 -----------------------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                result = result.replace(c, '')\n\e[31m\e\
    [31m   |\e[0m                                           ^\e[0m\n\e[31m   |\e[0m\
    \                                           empty character literal\n\e[31m\e\
    [31m-- [E018] Syntax Error: /tmp/tmpvlhyu_re.scala:23:21 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mreturn\e[0m result\n\e[31m\e[31m   |\e\
    [0m                     ^\e[0m\n\e[31m   |\e[0m                     expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E134] Type Error:\
    \ /tmp/tmpvlhyu_re.scala:20:32 -----------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                result = result.replace(c, '')\n\e[31m\e[31m   |\e[0m\
    \                         ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35mreplace\e[0m in \e[33mclass\e[0m \e\
    [35mString\e[0m with types\n\e[31m   |\e[0m (x$0: CharSequence, x$1: CharSequence):\
    \ String\n\e[31m   |\e[0m (x$0: Char, x$1: Char): String\n\e[31m   |\e[0mmatch\
    \ arguments ((c : Char), Null)\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvlhyu_re.scala:23:8\
    \ -------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mreturn\e[0m\
    \ result\n\e[31m\e[31m   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        Not\
    \ found: 'return\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659979151
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        //removeVowels code here\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2c3d0pjm.scala:15:47\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m    \e[33mdef\e[0m \e[36mremoveVowels\e\
    [0m(\e[36mtext\e[0m : \e[35mString\e[0m) : \e[35mString\e[0m = {\n\e[31m\e[31m\
    \   |\e[0m                                               ^\e[0m\n\e[31m   |\e\
    [0m                                               Found:    Unit\n\e[31m   |\e\
    [0m                                               Required: String\n\e[31m16 |\e\
    [0m        \e[34m//removeVowels code here\e[0m\n\e[31m17 |\e[0m    }\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979155
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Define an empty list to contain all vowel characters\n        val\
    \ vowels: List[Char] = List('a', 'e', 'i', 'o', 'u')\n        // Create a mutable\
    \ collection to hold new string\n        val newText = mutable.StringBuilder(text)\n\
    \        // Go through each character of the string\n        for (x <- newText.toSeq)\
    \ \n            // If the character is a vowel then remove it\n            if\
    \ (vowels.contains(x)) \n                newText.replace(newText.indexWhere(x\
    \ => x == x), 1, \"\")\n            // If the character is not vowel then append\
    \ it to string\n            else newText.append(x)\n        // return the new\
    \ string\n        newText.result()\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnud2tfep.scala:19:22 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mnewText\e[0m = mutable.StringBuilder(text)\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979154
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val cleanedText\
    \ = text.toString.filterNot(vowels.contains)\n        return cleanedText\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9jw6hwpk.scala:25)\n\tat Problem.main(tmp9jw6hwpk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979164
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      var result : String = \"\"\n      var vowels = Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\")\n      for (letter <- text) {\n        if (!vowels.contains(letter))\
    \ {\n          result += letter\n        }\n      }\n      result\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp013ygqun.scala:19:29\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mif\e[0m (!vowels.contains(letter))\
    \ {\n\e[31m\e[31m   |\e[0m                             ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                             Found:    (letter : Char)\n\e[31m   |\e[0m   \
    \                          Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979161
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = \"\"\n        var isVowel = false\n        for(i <- 0 until\
    \ text.length){\n            if(text.charAt(i) == 'a' || text.charAt(i) == 'e'\
    \ || text.charAt(i) == 'i' || text.charAt(i) == 'o' || text.charAt(i) == 'u'){\n\
    \                result += text.charAt(i)\n                isVowel = true\n  \
    \          }\n            else if(text.charAt(i) != 'z' && text.charAt(i) != 'Z'){\n\
    \                result += text.charAt(i)\n                isVowel = false\n \
    \           }\n        }\n        if (isVowel) result\n        else \"\"\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc9tdn114.scala:33)\n\tat Problem.main(tmpc9tdn114.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979168
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // create new list containing vowels\n        val vowels = List(\"a\"\
    , \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"I\", \"O\", \"U\")\n        // remove\
    \ each vowel in the string and keep only those that do not match any of the previous\
    \ elements\n        val newString = text.filterNot(vowels.contains)\n        //\
    \ return new string\n        newString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqbtwozm3.scala:25)\n\tat Problem.main(tmpqbtwozm3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Array(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\")\n        val letters = text.filter(x => vowels.contains(x))\n\
    \        letters.mkString.toUpperCase\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb2oq7947.scala:17:55\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mletters\e\
    [0m = text.filter(\e[36mx\e[0m => vowels.contains(x))\n\e[31m\e[31m   |\e[0m \
    \                                                      ^\e[0m\n\e[31m   |\e[0m\
    \                                                    Found:    (x : Char)\n\e\
    [31m   |\e[0m                                                    Required: String\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var output : String = text;\n        for {\n            currentChar <-\
    \ text.toCharArray\n            nextChar = currentChar.next\n            if (\"\
    aeiou\".contains(nextChar)) text = text.replace(nextChar, \"\")\n        } yield\
    \ output\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpo55cshqs.scala:20:49 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (\e[31m\"aeiou\"\e[0m.contains(nextChar))\
    \ text = text.replace(nextChar, \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \                                           ^\e[0m\n\e[31m   |\e[0m          \
    \                               expression expected but \e[31m=\e[0m found\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpo55cshqs.scala:19:35\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            nextChar = currentChar.next\n\
    \e[31m\e[31m   |\e[0m                       ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                       value next is not a member of Char\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpo55cshqs.scala:20:44 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (\e[31m\"aeiou\"\e[0m.contains(nextChar))\
    \ text = text.replace(nextChar, \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \   value text is not a member of Boolean\n3 errors found\n"
  stdout: ''
  timestamp: 1659979169
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\"\n        var newText = text\n        var first\
    \ = true\n        for ( i <- newText.indices if !vowels.contains(newText.charAt(i))\
    \ ) {\n            if ( first ) {\n                newText = newText.drop(i)\n\
    \                first = false\n            } else {\n                newText\
    \ = newText.take(i-1)+newText.drop(i)\n            }\n        }\n        newText\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: String index out of range: 8\n\
    \tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\tat java.base/java.lang.String.charAt(String.java:1515)\n\
    \tat Problem$.removeVowels$$anonfun$1(tmpvg66uxiu.scala:19)\n\tat scala.runtime.java8.JFunction1$mcZI$sp.apply(JFunction1$mcZI$sp.scala:17)\n\
    \tat scala.collection.Iterator$$anon$6.hasNext(Iterator.scala:472)\n\tat scala.collection.IterableOnceOps.foreach(IterableOnce.scala:563)\n\
    \tat scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:561)\n\tat scala.collection.AbstractIterable.foreach(Iterable.scala:926)\n\
    \tat scala.collection.IterableOps$WithFilter.foreach(Iterable.scala:896)\n\tat\
    \ Problem$.removeVowels(tmpvg66uxiu.scala:26)\n\tat Problem$.main(tmpvg66uxiu.scala:31)\n\
    \tat Problem.main(tmpvg66uxiu.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(Mai"
  stdout: ''
  timestamp: 1659979171
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \    \tvar chars = text.toCharArray.iterator\n    \tval vowels = \"aeiou\"\n \
    \   \tvar removeVowelsChars = chars\n    \twhile (removeVowelsChars.hasNext) {\n\
    \    \t\tchar <- removeVowelsChars\n    \t\tif (vowels.contains(char))\n    \t\
    \t\tremoveVowelsChars = removeVowelsChars.next()\n    \t}\n    \tchars.toString.substring(0,chars.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpt_exknqz.scala:20:13 -----------------------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m    \t\tchar <- removeVowelsChars\n\e[31m\e[31m   |\e\
    [0m    \t\t     ^^\e[0m\n\e[31m   |\e[0m    \t\t     end of statement expected\
    \ but '<-' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt_exknqz.scala:20:8\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m    \t\tchar <- removeVowelsChars\n\
    \e[31m\e[31m   |\e[0m    \t\t^^^^\e[0m\n\e[31m   |\e[0m    \t\tNot found: char\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt_exknqz.scala:21:28\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m    \t\t\e[33mif\e[0m (vowels.contains(char))\n\
    \e[31m\e[31m   |\e[0m    \t\t                    ^^^^\e[0m\n\e[31m   |\e[0m  \
    \  \t\t                    Not found: char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpt_exknqz.scala:22:50 --------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m    \t\t\tremoveVowelsChars = removeVowelsChars.next()\n\e\
    [31m\e[31m   |\e[0m    \t\t\t                    ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m    \t\t\t                    Found:    Char\n\e[31m   |\e[0m \
    \   \t\t\t                    Required: Iterator[Char]\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979167
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        var newString = text\n        for(\
    \ i <- 0 until text.length ) {\n            if( vowels.contains(text.charAt(i)))\
    \ {\n                newString = newString.replaceAll( text.charAt(i), \"\")\n\
    \            }\n        }\n        return newString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps1fifqhz.scala:20:61\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m                newString = newString.replaceAll(\
    \ text.charAt(i), \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \                              ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                                        Found:    Char\n\e[31m   |\e[0m     \
    \                                             Required: String\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979168
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val newText = mutable.MutableBuffer.empty[Char]\n        for(i <- 0 until\
    \ text.length) \n          newText.+= text.charAt(i).toString.filterNot(c => c=='a'\
    \ || c=='e' || c=='i' || c=='o' || c=='u')\n        newText.toString.substring(1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpryw0uvya.scala:18:25 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m          newText.+= text.charAt(i).toString.filterNot(c\
    \ => c==\e[31m'a'\e[0m || c==\e[31m'e'\e[0m || c==\e[31m'i'\e[0m || c==\e[31m'o'\e\
    [0m || c==\e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\
    \e[31m   |\e[0m                         expression expected but \e[31m'.'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpryw0uvya.scala:16:22\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mnewText\e[0m = mutable.MutableBuffer.empty[\e[35mChar\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \      Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979164
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text match {\n            case \"\" => \"\\n\"\n            case s =>\
    \ s filter (x => !vowels.contains(x))\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnx1h84vu.scala:18:38 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mcase\e[0m s => s filter (x => !vowels.contains(x))\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                      Not found: vowels\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979165
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val newText = Array[String]()\n        for (i <- 0 until text.length){\n\
    \            val currChar = text.charAt(i)\n            val currCharLowerCase\
    \ = currChar.toLowerCase()\n            val vowels = Array('a','e','i','o','u')\n\
    \            if (vowels.contains(currCharLowerCase))\n                newText\
    \ += currCharLowerCase\n            else if (currChar == ' '){\n             \
    \   newText += ' '\n            }\n            else{\n                newText\
    \ += currChar\n            }\n        }\n        return newText.mkString\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprqkp8xlb.scala:19:45 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mcurrCharLowerCase\e\
    [0m = currChar.toLowerCase()\n\e[31m\e[31m   |\e[0m                          \
    \          ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \       value toLowerCase is not a member of Char\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmprqkp8xlb.scala:22:24 ------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m                newText += currCharLowerCase\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of\
    \ Array[String] - did you mean newText.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmprqkp8xlb.scala:24:24 ------------------------\e[0m\e[0m\n\e[31m24 |\e\
    [0m                newText += \e[31m' '\e[0m\n\e[31m\e[31m   |\e[0m          \
    \      ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of Array[String]\
    \ - did you mean newText.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprqkp8xlb.scala:27:24\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m                newText +=\
    \ currChar\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m    value += is not a member of Array[String] - did you mean newText.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659979175
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"A\", \"\
    E\", \"I\", \"O\", \"U\")\n        val consonants = Set(\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"z\", \"A\", \"B\", \"C\", \"D\", \"F\", \"\
    G\", \"H\", \"J\", \"K\", \"L\", \"M\", \"N\", \"P\", \"Q\", \"R\", \"S\", \"\
    T\", \"V\", \"W\", \"X\", \"Z\")\n        var result = (for (i <- text.indices)\
    \ yield {\n            if (vowels.contains(text.charAt(i))) {\n              \
    \  text.substring(i, i + 1)\n            } else consonants.contains(text.charAt(i))\n\
    \        }).mkString\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk0rn27oy.scala:19:43\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (vowels.contains(text.charAt(i)))\
    \ {\n\e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                Found:    Char\n\e[31m   |\e[0m\
    \                                Required: String\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpk0rn27oy.scala:21:50 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            } \e[33melse\e[0m consonants.contains(text.charAt(i))\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                       Found:    Char\n\e[31m \
    \  |\e[0m                                       Required: String\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979174
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newText = \"\"\n        var lastChar = \"\"\n        text.split(\"\
    a\").foreach{char =>\n            if(!(char.equals(\"a\")||char.equals(\"e\")||char.equals(\"\
    i\")||char.equals(\"o\")||char.equals(\"u\"))){\n                newText += char\n\
    \            }\n            if(char == lastChar){\n                return\n  \
    \          }\n            lastChar = char\n        }\n        return newText\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7hybk4_v.scala:23:16\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m                \e[33mreturn\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \         Found:    Unit\n\e[31m   |\e[0m                Required: String\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result : String = \"\"\n        var temp = \"\"\n        for ((letter,\
    \ i) <- text.zipWithIndex) {\n            if (letter == \"a\" || letter == \"\
    e\" || letter == \"i\" || letter == \"o\" || letter == \"u\")\n              \
    \  result += letter\n            else\n                result += temp\n      \
    \      temp = letter\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpjfb8fk57.scala:19:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (letter == \e[31m\"a\"\e[0m\
    \ || letter == \e[31m\"e\"\e[0m || letter == \e[31m\"i\"\e[0m || letter == \e\
    [31m\"o\"\e[0m || letter == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \       ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpjfb8fk57.scala:19:33\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m19 |\e[0m       \
    \     \e[33mif\e[0m (letter == \e[31m\"a\"\e[0m || letter == \e[31m\"e\"\e[0m\
    \ || letter == \e[31m\"i\"\e[0m || letter == \e[31m\"o\"\e[0m || letter == \e\
    [31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m                                 ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpjfb8fk57.scala:19:50 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (letter == \e[31m\"a\"\e[0m\
    \ || letter == \e[31m\"e\"\e[0m || letter == \e[31m\"i\"\e[0m || letter == \e\
    [31m\"o\"\e[0m || letter == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \                                         ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \        Values of types Char and String cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpjfb8fk57.scala:19:67 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (letter == \e[31m\"a\"\e[0m\
    \ || letter == \e[31m\"e\"\e[0m || letter == \e[31m\"i\"\e[0m || letter == \e\
    [31m\"o\"\e[0m || letter == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \                                                          ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m        Values of types Char and String cannot be compared with\
    \ == or !=\n\e[31m\e[31m-- Error: /tmp/tmpjfb8fk57.scala:19:84 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (letter == \e[31m\"a\"\e[0m\
    \ || letter == \e[31m\"e\"\e[0m || letter == \e[31m\"i\"\e[0m || letter == \e\
    [31m\"o\"\e[0m || letter == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \                                          "
  stdout: ''
  timestamp: 1659979176
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text == \"\") {\n            return \"\"\n        }\n        var\
    \ newText : String = \"\"\n        for (letter <- text) {\n            val isVowel\
    \ = letter.matches(\"[aeiouAEIOU]{1}\")\n            if (isVowel == true) {\n\
    \                newText += letter\n            }\n        }\n        return newText\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnfvmt7li.scala:21:33 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mval\e[0m \e[36misVowel\e[0m = letter.matches(\e\
    [31m\"[aeiouAEIOU]{1}\"\e[0m)\n\e[31m\e[31m   |\e[0m                         \
    \ ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                          value matches\
    \ is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659979173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = mutable.Set[Char]('a','e','i','o','u')\n        val newText\
    \ = new StringBuilder(text).reverse.foreach(c => {\n            if (vowels.contains(c))\
    \ {\n                newText.deleteCharAt(newText.length - 1)\n            }\n\
    \        })\n        newText.reverse.toString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpseuql5am.scala:16:21 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m](\e[31m'a'\e[0m,\e[31m'e'\e[0m,\e[31m'i'\e[0m,\e[31m'o'\e[0m,\e\
    [31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmpseuql5am.scala:19:16 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                newText.deleteCharAt(newText.length -\
    \ \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m\
    \                Recursive \e[33mvalue\e[0m \e[35mnewText\e[0m needs type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpseuql5am.scala:22:16\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        newText.reverse.toString\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ reverse is not a member of Unit\n3 errors found\n"
  stdout: ''
  timestamp: 1659979173
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n        val text = text.toLowerCase\n\
    \        val resultText = text\n        val resultLen = text.length\n        var\
    \ i = 0\n        while (i < text.length) {\n            var j = i + 1\n      \
    \      while (j < resultLen) {\n                if (vowels.contains(text.charAt(j))\
    \ == false)\n                    j++\n                else\n                 \
    \   break\n            }\n            resultText = resultText.substring(0,i) +\
    \ resultText.substring(i,j) + resultText.substring(j+1)\n            i = j\n \
    \       }\n        resultText\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpva_nq4sk.scala:25:23 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                    j++\n\e[31m\e[31m   |\e[0m      \
    \                 ^\e[0m\n\e[31m   |\e[0m                       expression expected\
    \ but \e[31munindent\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpva_nq4sk.scala:17:19 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mtext\e[0m = text.toLowerCase\n\e[31m\e[31m\
    \   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   Recursive\
    \ \e[33mvalue\e[0m \e[35mtext\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpva_nq4sk.scala:27:20 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                    break\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: break\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpva_nq4sk.scala:29:23 -----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            resultText = resultText.substring(\e[31m0\e\
    [0m,i) + resultText.substring(i,j) + resultText.substring(j+\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val resultText\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659979170
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = text\n        // first we create array of unique characters,\
    \ excluding vowels\n        val uniqueChars = text.filter(c => !c.equals('a')\
    \ && !c.equals('e') && !c.equals('i') && !c.equals('o') && !c.equals('u'))\n \
    \       // then we create array of unique vowels\n        val uniqueVowels = uniqueChars.filter(c\
    \ => c.equals('a') || c.equals('e') || c.equals('i') || c.equals('o') || c.equals('u'))\n\
    \        // then we create array of unique consonants\n        val uniqueConsonants\
    \ = uniqueChars.filter(c => !c.equals('a') && !c.equals('e') && !c.equals('i')\
    \ && !c.equals('o') && !c.equals('u'))\n        // and then we filter out consonants\
    \ and append vowels\n        result = uniqueVowels.filter(c => uniqueConsonants.contains(c)).mkString(\"\
    \")\n        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf23vy_gm.scala:29)\n\tat Problem.main(tmpf23vy_gm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979177
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var output = \"\"\n        var vowels = \"aeiouAEIOU\"\n        var consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n        for(i <- 0 until text.length){\n\
    \            output += if (vowels.contains(text.charAt(i))) text.charAt(i) else\
    \ {consonants.charAt(text.charAt(i))}\n        }\n        output\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\"\
    )));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp77hghy4m.scala:20:22 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            output += \e[33mif\e[0m (vowels.contains(text.charAt(i)))\
    \ text.charAt(i) \e[33melse\e[0m {consonants.charAt(text.charAt(i))}\n\e[31m\e\
    [31m   |\e[0m                      ^^\e[0m\n\e[31m   |\e[0m                  \
    \    expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979172
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val rev = text.reverse // make text reversed (remove vowels from the\
    \ middle)\n        val vowels = \"aeiouAEIOU\" // make a list of vowels\n    \
    \    val newText = \"\"\n        val positions = new mutable.ArrayBuffer[Int]()\n\
    \        var position = -1\n        while(position < rev.size) {\n           \
    \ val found = vowels.find(rev(rev(position)) + \"\")\n            if(found ==\
    \ None) {\n                newText += rev(position)\n                position\
    \ += 1 // skip the vowel\n            } else {\n                position += found.start\
    \ // skip the vowel and get to the position of first vowel in text (excluding\
    \ it)\n                positions += 1\n            }\n        }\n        // add\
    \ missing vowels\n        for(i <- positions.reverse until position) {\n     \
    \       newText += rev(i)\n        }\n        newText\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps3vdtbeu.scala:19:28 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mpositions\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                            Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps3vdtbeu.scala:22:36\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m            \e[33mval\e[0m \e\
    [36mfound\e[0m = vowels.find(rev(rev(position)) + \e[31m\"\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                    Found:    String\n\e[31m   |\e\
    [0m                                    Required: Char => Boolean\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmps3vdtbeu.scala:24:24 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                newText += rev(position)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value +=\
    \ is not a member of String - did you mean newText.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmps3vdtbeu.scala:27:25 ------------------------\e[0m\e\
    [0m\n\e[31m27 |\e[0m                position += found.start \e[34m// skip the\
    \ vowel and get to the position of first vowel in text (excluding it)\e[0m\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmps3vdtbeu.scala:27:34 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                position += found.start \e[34m// skip\
    \ the vowel and get to the position of first vowel in text (excluding it)\e[0m\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m  value start is not a member of Option[Char] - did you mean found.wait?\n\
    5 errors found\n"
  stdout: ''
  timestamp: 1659979178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var text = text.toLowerCase\n        var arr = text.split(\"a\").map(x\
    \ => x.toString.toInt).sorted\n        arr = arr.filter(x => x != 1)\n       \
    \ arr = arr.map(x => x.toString.toInt)\n        val result = (arr.min + 1).toString.toInt\n\
    \        return arr(0).toString + (result % 26).toChar\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpf8egzfbp.scala:16:19 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mtext\e[0m = text.toLowerCase\n\
    \e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m              \
    \     Recursive \e[33mvariable\e[0m \e[35mtext\e[0m needs type\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979170
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result : String = \"\"\n        // TODO: Complete the function to\
    \ remove the vowels from the given string.\n        // For example if the string\
    \ is \"aBcD\" then the result should be \"BCD\".\n        \n        result\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuk3qitbf.scala:24)\n\tat Problem.main(tmpuk3qitbf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979177
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text match {\n            case \"\" => \"\"\n            case x if (x\
    \ contains \"aeiou\") => x\n            case x => x\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\"\
    )));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5oxqnbjk.scala:24)\n\tat Problem.main(tmp5oxqnbjk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979180
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = \"\"\n        val vowels = \"aeiou\"\n        for (i <-\
    \ 0 until text.length) {\n            var isVowel = false\n            for (j\
    \ <- 0 until vowels.length) {\n                if (text(i) == vowels(j)) {\n \
    \                   isVowel = true\n                }\n            }\n       \
    \     if (!isVowel) {\n                result += text(i)\n            }\n    \
    \    }\n        return result\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpv18ioqxc.scala:36)\n\tat Problem.main(tmpv18ioqxc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var removed = \"\"\n        var vowels = \"aeiouAEIOU\"\n        for\
    \ (char <- text.toCharArray) {\n            removed += if(vowels.indexOf(char)\
    \ != -1) \"\" else char\n        }\n        removed\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmph1mu3w8w.scala:19:23 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            removed += \e[33mif\e[0m(vowels.indexOf(char)\
    \ != -\e[31m1\e[0m) \e[31m\"\"\e[0m \e[33melse\e[0m char\n\e[31m\e[31m   |\e[0m\
    \                       ^^\e[0m\n\e[31m   |\e[0m                       expression\
    \ expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979178
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text.length == 0 || text.length == 1)\n            return text\n\
    \        val vowels = \"aAbBcCdDeEfFgGhHiIjJkKlLmMnNoOpPqQrRsStTuUvVwWxXyYzZ\"\
    .toSet\n        val outText = text\n        val pos = text.indexOf(\"a\")\n  \
    \      for (i <- 0 until text.length -1) {\n            if (vowels(text.charAt(i))\
    \ && !vowels(text.charAt(pos + i))) {\n                val out = text.substring(0,\
    \ pos)\n                val remaining = text.substring(pos + 1)\n            \
    \    if (remaining == \"\")\n                    return out\n                outText\
    \ = outText + \"$\" + remaining\n                pos = i\n            }\n    \
    \    }\n        outText\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp1cek5n0g.scala:27:24 -----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                outText = outText + \e[31m\"$\"\e[0m\
    \ + remaining\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val outText\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp1cek5n0g.scala:28:20 -----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m                pos = i\n\e[31m\e[31m   |\e[0m      \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val pos\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var new_text = new StringBuilder(text)\n        new_text.replaceAll(\"\
    [aeiou]\", \"\")\n        return new_text.toString()\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpp9p7le4m.scala:17:17 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        new_text.replaceAll(\e[31m\"[aeiou]\"\e[0m, \e\
    [31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue replaceAll is not a member of StringBuilder - did you mean StringBuilder.replace?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979185
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if(text.forall(c => c.toUpper == 'A' || c.toUpper == 'E' || c.toUpper\
    \ == 'I' || c.toUpper == 'O' || c.toUpper == 'U')){\n            \"\"\n      \
    \  } else {\n            text.replaceAll(\"[AEIOUaeiou]\", \"\")\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979187
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Create a mutable array to store each letter in input string\n    \
    \    val textCopy = mutable.ArrayBuffer(text.toCharArray)\n        // Create an\
    \ empty mutable array to store letters without vowels\n        val withoutVowels\
    \ = mutable.ArrayBuffer.empty[Char]\n        // Loop through input string and\
    \ delete vowels\n        for (letter <- textCopy) {\n            // check if letter\
    \ is vowel\n            if (vowels.contains(letter)) {\n                // if\
    \ it is vowel, remove it\n                withoutVowels += letter\n          \
    \  }\n        }\n        // Create a string from withoutVowels\n        withoutVowels.mkString.toUpperCase\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzhlxnq1g.scala:17:23 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mtextCopy\e[0m = mutable.ArrayBuffer(text.toCharArray)\n\
    \e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpzhlxnq1g.scala:19:28 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mwithoutVowels\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979180
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        //Using pattern matching, extract vowels and replace them with empty\
    \ string.\n        text match {\n            case \"\"     => text\n         \
    \   case s      => s filter { c => !('a' to 'z') contains c }\n        }\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv9lft9oy.scala:19:43 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mcase\e[0m s      => s filter { c =>\
    \ !(\e[31m'a'\e[0m to \e[31m'z'\e[0m) contains c }\n\e[31m\e[31m   |\e[0m    \
    \                                       ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ unary_! is not a member of scala.collection.immutable.NumericRange.Inclusive[Char]\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979187
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val filtered = text.flatMap(c => if (c == 'a' || c == 'e' || c == 'i'\
    \ || c == 'o' || c == 'u') Nil else c :: Nil)\n        filtered mkString \"\"\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprbug3ll1.scala:24)\n\tat Problem.main(tmprbug3ll1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979191
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \       val vowels = \"aeiouAEIOU\".toCharArray\n       val vowelsRemoved = new\
    \ StringBuilder(text.length)\n       for (i <- 0 until text.length) \n       \
    \     if (vowels(i) != text.charAt(i)) vowelsRemoved.append((text.charAt(i)))\n\
    \            \n       return vowelsRemoved.toString()\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArrayIndexOutOfBoundsException: Index 10 out of bounds for length\
    \ 10\n\tat Problem$.removeVowels$$anonfun$1(tmpmm_k3s62.scala:19)\n\tat scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)\n\
    \tat scala.collection.immutable.Range.foreach(Range.scala:190)\n\tat Problem$.removeVowels(tmpmm_k3s62.scala:19)\n\
    \tat Problem$.main(tmpmm_k3s62.scala:25)\n\tat Problem.main(tmpmm_k3s62.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // return \"text\" if not vowel, return \"empty\" if vowel.\n       \
    \ var result = text\n        // Remove vowels and keep only alphabetical characters.\n\
    \        for(i <- 0 until text.length()) {\n            if(text.charAt(i) == 'a'\
    \ || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o' ||\
    \ text.charAt(i) == 'u' || text.charAt(i) == 'A' || text.charAt(i) == 'E' || text.charAt(i)\
    \ == 'I' || text.charAt(i) == 'O' || text.charAt(i) == 'U') {\n              \
    \  text = text.substring(0,i) + text.substring(i+1)\n            } else {\n  \
    \              result = result + text.charAt(i)\n            }\n        }\n  \
    \      return result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpf3t_qgbc.scala:21:21 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                text = text.substring(\e[31m0\e[0m,i)\
    \ + text.substring(i+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val text\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979183
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val noVowels = new mutable.ArrayBuffer[Char]()\n        for (i <- 0 until\
    \ text.length) {\n            if (text(i) != 'a' && text(i) != 'e' && text(i)\
    \ != 'i' && text(i) != 'o' &&\n                text(i) != 'u' && text(i) != 'A'\
    \ && text(i) != 'E' && text(i) != 'I' &&\n                text(i) != 'O' && text(i)\
    \ != 'U') {\n                noVowels += text(i)\n            }\n        }\n \
    \       return noVowels.mkString\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp886runc4.scala:16:27 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mnoVowels\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                           Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979185
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = Set(\"\",\"a\",\"e\",\"i\",\"o\",\"u\")\n        for (c\
    \ <- text) {\n            if (!vowels.contains(c)) {\n                text = text.replaceFirst(c.toString,\
    \ \"\")\n            }\n        }\n        return text\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw7av6y8v.scala:18:33\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (!vowels.contains(c))\
    \ {\n\e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e\
    [0m                                 Found:    (c : Char)\n\e[31m   |\e[0m    \
    \                             Required: String\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpw7av6y8v.scala:19:21 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                text = text.replaceFirst(c.toString,\
    \ \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val text\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979189
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      val vowels: Set[Char] = Set('a','e','i','o','u')\n      text.filter(!vowels.contains(_)).mkString.reverse\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnwxuc9_r.scala:21)\n\tat Problem.main(tmpnwxuc9_r.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979194
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val result = text.foldLeft(\"\") {\n            (acc, c) =>\n       \
    \         if (c.isLetter) acc + (if (acc.isEmpty) \"\" else c.toLower)\n     \
    \           else acc\n        }\n        result.tail\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuo0wolo0.scala:25)\n\tat Problem.main(tmpuo0wolo0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979193
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newText = \"\"\n        for(i <- text.length-1 downTo 0 by -1) {\n\
    \            val c = text.charAt(i)\n            if(c != 'a' && c != 'e' && c\
    \ != 'i' && c != 'o' && c != 'u' && c != 'A' && c != 'E' && c != 'I' && c != 'O'\
    \ && c != 'U') {\n                newText += c\n            }\n        }\n   \
    \     newText\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaxqcuib2.scala:17:31 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- text.length-\e[31m1\e[0m\
    \ downTo \e[31m0\e[0m by -\e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m             \
    \    ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                 value downTo is\
    \ not a member of Int\n1 error found\n"
  stdout: ''
  timestamp: 1659979191
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var ret = \"\";\n        var len = text.length\n        for (i = 0; i\
    \ <= len; ++i) {\n            val chr = text.charAt(i)\n            if (chr ==\
    \ 'a' || chr == 'A' || chr == 'e' || chr == 'E' || chr == 'i' || chr == 'I' ||\
    \ chr == 'o' || chr == 'O' || chr == 'u' || chr == 'U')\n                text\
    \ = text.substring(0, i) + text.substring(i, text.length)\n        }\n       \
    \ len = text.length\n        for (i = 0; i <= len; ++i) {\n            val chr\
    \ = text.charAt(i)\n            if (chr == 'b' || chr == 'B' || chr == 'd' ||\
    \ chr == 'D' || chr == 'f' || chr == 'F' || chr == 'g' || chr == 'G' || chr ==\
    \ 'h' || chr == 'H' || chr == 'j' || chr == 'J' || chr == 'k' || chr == 'K' ||\
    \ chr == 'l' || chr == 'L' || chr == 'm' || chr == 'M' || chr == 'n' || chr ==\
    \ 'N' || chr == 'p' || chr == 'P' || chr == 'q' || chr == 'Q' || chr == 'r' ||\
    \ chr == 'R' || chr == 's' || chr == 'S' || chr == 't' || chr == 'T' || chr ==\
    \ 'v' || chr == 'V' || chr == 'w' || chr == 'W' || chr == 'x' || chr == 'X' ||\
    \ chr == 'z' || chr == 'Z')\n                text = text.substring(0, i) + text.substring(i,\
    \ text.length)\n        }\n        ret = text\n        return ret;\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5070yzur.scala:18:15 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i = \e[31m0\e[0m; i <= len; ++i)\
    \ {\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m             \
    \  ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5070yzur.scala:18:28\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m0\e[0m; i <= len; ++i) {\n\e[31m\e[31m   |\e[0m                 \
    \           ^\e[0m\n\e[31m   |\e[0m                            '<-' expected,\
    \ but ';' found\n\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp5070yzur.scala:18:33\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m0\e[0m; i <= len; ++i) {\n\e[31m\e[31m   |\e[0m                 \
    \                ^\e[0m\n\e[31m   |\e[0m                                 pattern\
    \ expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5070yzur.scala:24:15\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m0\e[0m; i <= len; ++i) {\n\e[31m\e[31m   |\e[0m               ^\e\
    [0m\n\e[31m   |\e[0m               ')' expected, but '=' found\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmp5070yzur.scala:24:28 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mfor\e[0m (i = \e[31m0\e[0m; i <= len; ++i)\
    \ {\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m\
    \                            '<-' expected, but ';' found\n\e[31m\e[31m-- [E032]\
    \ Syntax Error: /tmp/tmp5070yzur.scala:24:33 ---------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        \e[33mfor\e[0m (i = \e[31m0\e[0m; i <= len; ++i) {\n\
    \e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m\
    \                                 pattern expected\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp5070yzur.scala:18:18 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i = \e[31m0\e[0m; i <= len; ++i)\
    \ {\n\e[31m\e[31m   |\e[0m           "
  stdout: ''
  timestamp: 1659979196
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Write your code here\n        val result : String = \"\"\n       \
    \ val vowels =  Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        for(x <- text.indices)\
    \ {\n            if(vowels.contains(text.charAt(x)))\n                result +=\
    \ text.charAt(x)\n        }\n        return result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyf8atef1.scala:20:42\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m(vowels.contains(text.charAt(x)))\n\
    \e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               Found:    Char\n\e[31m   |\e[0m     \
    \                          Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpyf8atef1.scala:21:23 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                result += text.charAt(x)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of String - did you mean result.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = text\n        var consonantCount = 0\n        for(i <- text.toLowerCase\
    \ -> 'z' until text.length){\n            if(i == 'a' || i == 'e' || i == 'i'\
    \ || i == 'o' || i == 'u' || i == 'A' || i == 'E' || i == 'I' || i == 'O' || i\
    \ == 'U'){\n                consonantCount += 1\n                result +=  (consonantCount.toString)\n\
    \            }\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2befhern.scala:18:41 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- text.toLowerCase -> \e[31m'z'\e\
    [0m until text.length){\n\e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue until is not a member of (String, Char) - did you mean\
    \ (String, Char).init?\n1 error found\n"
  stdout: ''
  timestamp: 1659979193
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels : Set[String] = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"\
    y\")\n        val result : String = text.replaceAll(\"[aeiouy]+\", \"\")\n   \
    \     if (result != text)\n        result else \"\"\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppsesmuty.scala:26)\n\tat Problem.main(tmppsesmuty.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979197
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n      text.filter(x\
    \ => !vowels.contains(x))\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsos8ej_6.scala:17:40\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m      text.filter(\e[36mx\e[0m\
    \ => !vowels.contains(x))\n\e[31m\e[31m   |\e[0m                             \
    \           ^\e[0m\n\e[31m   |\e[0m                                        Found:\
    \    (x : Char)\n\e[31m   |\e[0m                                        Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979195
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val res\
    \ = text.toSet\n        vowels.filter(x => !res.contains(x))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwzg_nwlz.scala:18:41\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        vowels.filter(\e[36mx\e\
    [0m => !res.contains(x))\n\e[31m\e[31m   |\e[0m                              \
    \           ^\e[0m\n\e[31m   |\e[0m                                         Found:\
    \    (x : String)\n\e[31m   |\e[0m                                         Required:\
    \ Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979196
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val vowels_index = text.indexOf(vowels)\n\
    \        if(vowels_index == -1)\n            text\n        else\n            text.substring(0,\
    \ vowels_index)\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl41gmxcf.scala:25)\n\tat Problem.main(tmpl41gmxcf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979197
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result : String = \"\"\n        var i : Int = 0\n        while(i\
    \ < text.length){\n            val c = text.charAt(i)\n            if(\"AEIOUaeiou\"\
    .contains(c)) {\n                result = result + text.charAt(i)\n          \
    \      i = i + 1\n            }else if(c == 'z'){\n                result = result\
    \ + text.charAt(i)\n                i = i + 1\n            }else{\n          \
    \      result = result + c\n                i = i + 1\n            }\n       \
    \ }\n        return result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\\
    nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\"\
    )).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\")));\n\
    \    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_wadvz1_.scala:35)\n\tat Problem.main(tmp_wadvz1_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979200
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\"\n        val no_vowels = text.replaceAllIn(vowels,\
    \ \"\")\n        no_vowels\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\\
    nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\"\
    )).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\")));\n\
    \    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppb_3390h.scala:17:29 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mno_vowels\e[0m = text.replaceAllIn(vowels,\
    \ \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue replaceAllIn is not a member of String - did you mean\
    \ text.replaceAll?\n1 error found\n"
  stdout: ''
  timestamp: 1659979198
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var res = \"\";\n        for (i <- 0 until text.length) {\n         \
    \   if (text(i) != \"a\" && text(i) != \"e\" && text(i) != \"i\" && text(i) !=\
    \ \"o\" && text(i) != \"u\") {\n                res += text(i, i+1)\n        \
    \    }\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpljv20tri.scala:18:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (text(i) != \e[31m\"a\"\e[0m\
    \ && text(i) != \e[31m\"e\"\e[0m && text(i) != \e[31m\"i\"\e[0m && text(i) !=\
    \ \e[31m\"o\"\e[0m && text(i) != \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpljv20tri.scala:18:34\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     \e[33mif\e[0m (text(i) != \e[31m\"a\"\e[0m && text(i) != \e[31m\"e\"\e[0m\
    \ && text(i) != \e[31m\"i\"\e[0m && text(i) != \e[31m\"o\"\e[0m && text(i) !=\
    \ \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m                                 \
    \ ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String\
    \ cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpljv20tri.scala:18:52\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     \e[33mif\e[0m (text(i) != \e[31m\"a\"\e[0m && text(i) != \e[31m\"e\"\e[0m\
    \ && text(i) != \e[31m\"i\"\e[0m && text(i) != \e[31m\"o\"\e[0m && text(i) !=\
    \ \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m                                 \
    \                   ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types\
    \ Char and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpljv20tri.scala:18:70\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     \e[33mif\e[0m (text(i) != \e[31m\"a\"\e[0m && text(i) != \e[31m\"e\"\e[0m\
    \ && text(i) != \e[31m\"i\"\e[0m && text(i) != \e[31m\"o\"\e[0m && text(i) !=\
    \ \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m                                 \
    \                                     ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \     Values of types Char and String cannot be compared with == or !=\n\e[31m\e\
    [31m-- Error: /tmp/tmpljv20tri.scala:18:88 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (text(i) != \e[31m\"a\"\e[0m\
    \ && text(i) != \e[31m\"e\"\e[0m && text(i) != \e[31m\"i\"\e[0m && text(i) !=\
    \ \e[31m\"o\"\e[0m && text(i) != \e[31m\"u\"\e[0m) {\n\e[31m\e[31m   |\e[0m  \
    \    "
  stdout: ''
  timestamp: 1659979203
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Your code goes here!\n        val vowels = Set(\"a\", \"e\", \"i\"\
    , \"o\", \"u\")\n        val newText = new StringBuilder(text)\n        text.foreach\
    \ {char =>\n          char match {\n            case 'a' | 'e' | 'i' | 'o' | 'u'\
    \ =>\n              newText.deleteCharAt(newText.length() - 1)\n          }\n\
    \        }\n        return newText.toString()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "scala.MatchError: b (of class java.lang.Character)\n\tat Problem$.removeVowels$$anonfun$1(tmp01oz5any.scala:22)\n\
    \tat Problem$.removeVowels$$anonfun$adapted$1(tmp01oz5any.scala:23)\n\tat scala.collection.StringOps$.foreach$extension(StringOps.scala:1044)\n\
    \tat Problem$.removeVowels(tmp01oz5any.scala:23)\n\tat Problem$.main(tmp01oz5any.scala:29)\n\
    \tat Problem.main(tmp01oz5any.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\")\n        val\
    \ lowerText = text.toLowerCase\n        val result = for (c <- lowerText) yield\
    \ {\n            if (vowels(c))\n                c\n            else\n       \
    \         \"\"\n        }\n        result.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph1ld6hfd.scala:19:23\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (vowels(c))\n\
    \e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m          \
    \             Found:    (c : Char)\n\e[31m   |\e[0m                       Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979203
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var str : String = text\n        var vowels : mutable.Set[String] = mutable.Set(\"\
    a\", \"e\", \"i\", \"o\", \"u\")\n        var vowelsSet = new mutable.HashSet[String](vowels)\n\
    \        vowelsSet.retain(text.filter(x => x.toString.toList.flatMap(vowelsSet.contains).contains(_)))\n\
    \        vowelsSet.clear()\n        str += vowelsSet.foldLeft(List[String]())((acc,\
    \ c) => acc :+ c).mkString(\"\")\n        return str\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5m5wpn3p.scala:17:21 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e[0m : mutable.Set[\e\
    [35mString\e[0m] = mutable.Set(\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\
    \e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5m5wpn3p.scala:17:43\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36mvowels\e[0m : mutable.Set[\e[35mString\e[0m] = mutable.Set(\e[31m\"a\"\e[0m,\
    \ \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)\n\e\
    [31m\e[31m   |\e[0m                                           ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                           Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5m5wpn3p.scala:18:28\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e\
    [36mvowelsSet\e[0m = \e[33mnew\e[0m mutable.HashSet[\e[35mString\e[0m](vowels)\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979199
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Array('a', 'e', 'i', 'o', 'u')\n        val result = \"\"\
    \n        for(i <- 0 until text.length()) {\n            if(vowels.contains(text.charAt(i)))\
    \ {\n                result += text.charAt(i)\n            }\n        }\n    \
    \    result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpljo6y73j.scala:20:23 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                result += text.charAt(i)\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of String - did you mean result.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \    \t//return \"\"\n    \tval str = new StringBuilder\n    \tfor (letter <-\
    \ text)\n    \t{\n    \t\tif(letter.equalsIgnoreCase(\"a\") || letter.equalsIgnoreCase(\"\
    e\") || letter.equalsIgnoreCase(\"i\") || letter.equalsIgnoreCase(\"o\") || letter.equalsIgnoreCase(\"\
    u\"))\n    \t\t\tstr.append(letter)\n    \t\telse\n    \t\t\tstr.append(\" \"\
    )\n    \t}\n    \treturn str.toString()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpe7u4c7ek.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m    \t\t\e[33mif\e[0m(letter.equalsIgnoreCase(\e[31m\"\
    a\"\e[0m) || letter.equalsIgnoreCase(\e[31m\"e\"\e[0m) || letter.equalsIgnoreCase(\e\
    [31m\"i\"\e[0m) || letter.equalsIgnoreCase(\e[31m\"o\"\e[0m) || letter.equalsIgnoreCase(\e\
    [31m\"u\"\e[0m))\n\e[31m\e[31m   |\e[0m    \t\t   ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m    \t\t   value equalsIgnoreCase is not a member of Char\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979204
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val vowelsSet = scala.collection.mutable.Set[Char](vowels)\n\
    \        val filtered = text.filter { x => !vowelsSet.contains(x) }\n        val\
    \ newText = filtered mkString \"\"\n        newText\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4nyur6b0.scala:17:59\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowelsSet\e\
    [0m = scala.collection.mutable.Set[\e[35mChar\e[0m](vowels)\n\e[31m\e[31m   |\e\
    [0m                                                           ^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                             Found:    (vowels :\
    \ String)\n\e[31m   |\e[0m                                             Required:\
    \ Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979206
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        text.foldLeft(\"\
    \"){ (result, text) =>\n            val newString = text.toString.replaceAll(\"\
    [aeiou]\", \"\")\n            if (vowels.contains(text.toString))\n          \
    \      newString\n            else\n                result + newString\n     \
    \   }\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0jru764q.scala:27)\n\tat Problem.main(tmp0jru764q.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979209
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text.length == 0) return \"\"\n        var result : String = \"\"\
    \n        for (c <- text.characters) {\n            if (!c.isLetter) result +=\
    \ c\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0q9vu09d.scala:18:23 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (c <- text.characters) {\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \         value characters is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1659979208
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"\xF4\",\
    \ \"\xF8\", \"\xEE\", \"\xEA\", \"\xEE\", \"\xF4\", \"\xEE\", \"\xF4\", \"\xEA\
    \", \"\xEE\", \"\xF4\", \"\xEA\", \"\xEE\")\n        val nonVowels = Set(\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"z\")\n        val lowerCaseText\
    \ = text.lowercase\n        val newText = lowerCaseText.toList.filterNot(vowels.contains)\n\
    \        val newLowerCaseText = newText.mkString.toLowerCase\n        val newText\
    \ = newLowerCaseText.toList.filterNot(nonVowels.contains)\n        val newLowerCaseText\
    \ = newText.mkString.toLowerCase\n        val newText = newLowerCaseText.toList.filterNot(lowerCaseText.contains)\n\
    \        val newLowerCaseText = newText.mkString.toLowerCase\n        val newText\
    \ = newLowerCaseText.toList.filterNot(upperCaseText.contains)\n        val newLowerCaseText\
    \ = newText.mkString.toLowerCase\n        newLowerCaseText\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmplj1p1pka.scala:21:12 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mnewText\e[0m = newLowerCaseText.toList.filterNot(nonVowels.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnewText is already defined as \e[33mvalue\e[0m \e[35mnewText\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmplj1p1pka.scala:22:12 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        \e[33mval\e[0m \e[36mnewLowerCaseText\e[0m = newText.mkString.toLowerCase\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnewLowerCaseText is already defined as \e[33mvalue\e[0m \e\
    [35mnewLowerCaseText\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmplj1p1pka.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mnewText\e[0m = newLowerCaseText.toList.filterNot(lowerCaseText.contains)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnewText is already defined as \e[33mvalue\e[0m \e[35mnewText\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmplj1p1pka.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mnewLowerCaseText\e[0m = newText.mkString.toLowerCase\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mnewLowerCaseText is already defined as \e[33mvalue\e[0m \e\
    [35mnewLowerCaseText\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E161] Naming Error: /tmp/tmplj1p1pka.scala:25:12 -----------------"
  stdout: ''
  timestamp: 1659979210
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newtext =\"\"\n        for (letter <- text.toCharArray){\n      \
    \      if (letter.equals('a')|| letter.equals('e') || letter.equals('i') || letter.equals('o')\
    \ || letter.equals('u')) {\n                newtext +=\" \"\n            }\n \
    \           newtext += letter\n        }\n        return newtext\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\"\
    )));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4kq3jr6d.scala:27)\n\tat Problem.main(tmp4kq3jr6d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979213
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val result\
    \ = \"\"\n        for(i <- text.toList){\n            val t = i\n            if(vowels.contains(t)){\n\
    \                result += t\n            }\n        }\n        result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvvrjt_ov.scala:20:31\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m(vowels.contains(t)){\n\
    \e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m  \
    \                             Found:    (t : Char)\n\e[31m   |\e[0m          \
    \                     Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpvvrjt_ov.scala:21:23 ------------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m                result += t\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of String - did you mean result.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979211
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var output = new StringBuilder\n        var last = 0\n        for (i\
    \ <- 0 until text.length){\n            if (text(i) == 'z'){\n               \
    \ last++\n            } else if (text(i) != 'z' && last>0){\n                output.insert(last,\
    \ text(i))\n                last = 0\n            }\n        }\n        output.toString()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpq4phc7k6.scala:20:22 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                last++\n\e[31m\e[31m   |\e[0m       \
    \               ^\e[0m\n\e[31m   |\e[0m                      expression expected\
    \ but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979207
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var ret\
    \ = \"\"\n        for(i <- 0 until text.length) {\n            val c = text(i)\n\
    \            if(vowels.contains(c)) {\n                ret += c\n            }\n\
    \        }\n        return ret\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpaiabff_9.scala:20:31\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m(vowels.contains(c))\
    \ {\n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e\
    [0m                               Found:    (c : Char)\n\e[31m   |\e[0m      \
    \                         Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979213
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      text filter { letter => !letter.equals('a') && !letter.equals('e') && !letter.equals('i')\
    \ && !letter.equals('o') && !letter.equals('u') }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp07broryi.scala:23)\n\tat Problem.main(tmp07broryi.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\",\"E\",\"I\"\
    ,\"O\",\"U\")\n        def getVowels(text : String) : String = {\n           \
    \ val result = text.filter(x => vowels(x))\n            return result\n      \
    \  }\n        val result = getVowels(text)\n        return result\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp39bbqrmi.scala:18:49\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mval\e[0m \e\
    [36mresult\e[0m = text.filter(\e[36mx\e[0m => vowels(x))\n\e[31m\e[31m   |\e[0m\
    \                                                 ^\e[0m\n\e[31m   |\e[0m    \
    \                                             Found:    (x : Char)\n\e[31m   |\e\
    [0m                                                 Required: String\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979215
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n        var res = text\n        val\
    \ len = text.length\n        val charSet = text.codePoints.toSet\n        res\
    \ +=  text.codePoints.filterNot(charSet.contains).toList\n        val l = res.last\n\
    \        val res = if (l == 0) \"\" else res.dropRight(1)\n        res\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpogafywxp.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mres\e[0m = \e[33mif\e[0m\
    \ (l == \e[31m0\e[0m) \e[31m\"\"\e[0m \e[33melse\e[0m res.dropRight(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mres is already defined as \e[33mvariable\e[0m \e[35mres\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpogafywxp.scala:19:38 ------------------------\e[0m\e[0m\n\
    \e[31m19 |\e[0m        \e[33mval\e[0m \e[36mcharSet\e[0m = text.codePoints.toSet\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue toSet is not a member of java.util.stream.IntStream - did you\
    \ mean IntStream.boxed?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpogafywxp.scala:20:12\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        res +=  text.codePoints.filterNot(charSet.contains).toList\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not\
    \ a member of String - did you mean String.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpogafywxp.scala:20:32 ------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        res +=  text.codePoints.filterNot(charSet.contains).toList\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue filterNot is not a member of java.util.stream.IntStream - did you mean\
    \ IntStream.filter?\n4 errors found\n"
  stdout: ''
  timestamp: 1659979217
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text.flatMap(_.toCharArray().filter(v => v != 'a' && v != 'e' && v !=\
    \ 'i' && v != 'o' && v != 'u'))\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6min4vty.scala:16:23 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        text.flatMap(_.toCharArray().filter(\e[36mv\e\
    [0m => v != \e[31m'a'\e[0m && v != \e[31m'e'\e[0m && v != \e[31m'i'\e[0m && v\
    \ != \e[31m'o'\e[0m && v != \e[31m'u'\e[0m))\n\e[31m\e[31m   |\e[0m          \
    \           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     value toCharArray\
    \ is not a member of Char\n1 error found\n"
  stdout: ''
  timestamp: 1659979215
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result : String = \"\"\n        for (letter <- text.toCharArray)\
    \ {\n            if (letter == 'a' || letter == 'e' || letter == 'i' || letter\
    \ == 'o' || letter == 'u') {\n                result = result + letter\n     \
    \       }\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt1kaa4mq.scala:26)\n\tat Problem.main(tmpt1kaa4mq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result : String = \"\"\n        // Iterate over characters in the\
    \ given text.\n        for (i <- 0 until text.length) {\n            // if character\
    \ is an uppercase character or a lowercase character add it to the result string.\n\
    \            if (text(i).isUpper || text(i).isLower) {\n                result\
    \ += text(i)\n            }\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpqs89pqn5.scala:28)\n\tat Problem.main(tmpqs89pqn5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979219
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text.filter(x => !x.toLower.contains(\"a\") && !x.toLower.contains(\"\
    e\") && !x.toLower.contains(\"i\") && !x.toLower.contains(\"o\") && !x.toLower.contains(\"\
    u\"))\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp43q41faf.scala:16:36 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        text.filter(\e[36mx\e[0m => !x.toLower.contains(\e\
    [31m\"a\"\e[0m) && !x.toLower.contains(\e[31m\"e\"\e[0m) && !x.toLower.contains(\e\
    [31m\"i\"\e[0m) && !x.toLower.contains(\e[31m\"o\"\e[0m) && !x.toLower.contains(\e\
    [31m\"u\"\e[0m))\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value contains is not a member of\
    \ Char\n1 error found\n"
  stdout: ''
  timestamp: 1659979215
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = \"\"\n        for(letter <- text.toCharArray) {\n      \
    \      if(letter != 'a' && letter != 'e' && letter != 'i' && letter != 'o' &&\
    \ letter != 'u' && letter != 'A' && letter != 'E' && letter != 'I' && letter !=\
    \ 'O' && letter != 'U')\n                result += letter\n        }\n       \
    \ return result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979220
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val result = new StringBuilder()\n\
    \n        for (i <- 0 until text.length) {\n            val currentChar = text(i)\n\
    \            if (vowels.contains(currentChar)) {\n                result.append(currentChar)\n\
    \            }\n        }\n\n        result.toString()\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpggvjinug.scala:30)\n\tat Problem.main(tmpggvjinug.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979222
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val noVowels = text.filter(x =>\
    \ !vowels.contains(x))\n        if (noVowels.length == text.length) {\n      \
    \      return text\n        } else {\n            return noVowels\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979221
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\".toSet\n        val noVowels = text.replaceAll(\"\
    [aeiou]\", \"\").replaceAll(\"[aeiouy]+\", \"\").toString.toCharArray.toList\n\
    \        var newText = String.empty\n        if (noVowels.isEmpty) {\n       \
    \     return text\n        }\n        for (i <- 0 until noVowels.length) {\n \
    \           if (vowels.contains(noVowels(i))) {\n                newText +=  noVowels(i)\n\
    \            }\n        }\n        newText\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjfj302ep.scala:18:29 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36mnewText\e[0m = String.empty\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      value empty is not a member of object String\n1 error found\n"
  stdout: ''
  timestamp: 1659979222
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \       val vowelSet = mutable.HashSet[Char]()\n       text.forall( c => c !=\
    \ 'a' && c != 'e' && c != 'i' && c != 'o' && c != 'u' ) \n       if (!text.forall(\
    \ c => c == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u' )) text else text.filter(\
    \ c => !vowelSet.contains(c) ) ++ text.filter( c => vowelSet.contains(c) )\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp75fyb3of.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m       \e[33mval\e[0m \e[36mvowelSet\e[0m = mutable.HashSet[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979218
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newString = \"\"\n        for (i <- 0 until text.length) {\n    \
    \        if (!text.contains(i.toChar)) {\n                newString += text.charAt(i)\n\
    \            }\n        }\n        return newString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpsbq1okos.scala:26)\n\tat Problem.main(tmpsbq1okos.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979224
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var new_string = \"\"\n        for (i <- 0 until text.length) {\n   \
    \         val c = text.charAt(i)\n            if (('a' <= c && c <= 'z') || (('A'\
    \ <= c && c <= 'Z'))) {\n                val v = c - 'a'\n                if (v\
    \ == 0 || v == 1) {\n                    new_string += text(i)\n             \
    \   }\n            }\n        }\n        new_string\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp847o5soh.scala:30)\n\tat Problem.main(tmp847o5soh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Write your code\n        val vowels = mutable.Set(\"a\", \"e\", \"\
    i\", \"o\", \"u\")\n        val newText = mutable.Set[String]()\n        for (c\
    \ <- text.toCharArray()) {\n            if(!vowels.contains(c)){\n           \
    \     newText.add(c.toString)\n            }\n        }\n        val s = newText.mkString(\"\
    \")\n        return s\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgqwhfy6m.scala:17:21 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set(\e\
    [31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"\
    u\"\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpgqwhfy6m.scala:18:22 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mnewText\e[0m = mutable.Set[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979218
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text.filterNot(_.equals('a') || _.equals('e') || _.equals('i') || _.equals('o')\
    \ || _.equals('u'))\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp1q9axthe.scala:16:23 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        text.filterNot(_.equals(\e[31m'a'\e[0m) || _.equals(\e\
    [31m'e'\e[0m) || _.equals(\e[31m'i'\e[0m) || _.equals(\e[31m'o'\e[0m) || _.equals(\e\
    [31m'u'\e[0m))\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                       Wrong number of parameters, expected:\
    \ 1\n1 error found\n"
  stdout: ''
  timestamp: 1659979220
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val result = text.filterNot(\n            character => character == 'a'\
    \ || character == 'e' || character == 'i' || character == 'o' || character ==\
    \ 'u' ||\n                            character == 'A' || character == 'E' ||\
    \ character == 'I' || character == 'O' || character == 'U' ||\n              \
    \              character == 'Z' || character == 'Z')\n        \n        // Scala\
    \ doesn't have tail recursion optimization, so we have to do it ourselves.\n \
    \       if(text.length > 0 && result.length > 0) {\n            val rest = removeVowels(text.tail)\n\
    \            if(rest.size > 0) result += rest.head\n        }\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6l8ra9im.scala:24:37 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            \e[33mif\e[0m(rest.size > \e[31m0\e[0m) result\
    \ += rest.head\n\e[31m\e[31m   |\e[0m                              ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of String - did you mean\
    \ result.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979226
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = Set[Char](\"a\", \"e\", \"i\", \"o\", \"u\")\n        var\
    \ text1 = \"\"\n        for(char <- text){\n            if(vowels.contains(char)){\n\
    \                text1 += char\n            } else {\n                text1 +=\
    \ \"\"\n            }\n        }\n        return text1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf2c32mct.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e\
    [0m = Set[\e[35mChar\e[0m](\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m,\
    \ \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \              ^^^\e[0m\n\e[31m   |\e[0m                               Found:\
    \    (\e[32m\"a\"\e[0m : String)\n\e[31m   |\e[0m                            \
    \   Required: Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf2c32mct.scala:16:36\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e\
    [0m = Set[\e[35mChar\e[0m](\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m,\
    \ \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \                   ^^^\e[0m\n\e[31m   |\e[0m                                \
    \    Found:    (\e[32m\"e\"\e[0m : String)\n\e[31m   |\e[0m                  \
    \                  Required: Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpf2c32mct.scala:16:41 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mvar\e[0m \e[36mvowels\e[0m = Set[\e[35mChar\e[0m](\e[31m\"\
    a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                         ^^^\e[0m\n\
    \e[31m   |\e[0m                                         Found:    (\e[32m\"i\"\
    \e[0m : String)\n\e[31m   |\e[0m                                         Required:\
    \ Char\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf2c32mct.scala:16:46\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mvowels\e\
    [0m = Set[\e[35mChar\e[0m](\e[31m\"a\"\e[0m, \e[31m\"e\"\e[0m, \e[31m\"i\"\e[0m,\
    \ \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m                 \
    \                             ^^^\e[0m\n\e[31m   |\e[0m                      \
    \                        Found:    (\e[32m\"o\"\e[0m : String)\n\e[31m   |\e[0m\
    \                   "
  stdout: ''
  timestamp: 1659979228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \       val vowels = mutable.Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n       var\
    \ count = 0\n       var outputStr = \"\"\n       for(i <- 0 to text.length){\n\
    \           if(vowels(text.charAt(i)))\n               count++\n       }\n   \
    \    outputStr = text.substring(0,count)\n       return outputStr\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp9r_waw6s.scala:21:22 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m               count++\n\e[31m\e[31m   |\e[0m       \
    \               ^\e[0m\n\e[31m   |\e[0m                      expression expected\
    \ but \e[31munindent\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9r_waw6s.scala:16:20 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m       \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set(\e[31m\"a\"\e[0m, \e\
    [31m\"e\"\e[0m, \e[31m\"i\"\e[0m, \e[31m\"o\"\e[0m, \e[31m\"u\"\e[0m)\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979223
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def removeVowels2(text : String) : String = {\n            def removeVowels3(text\
    \ : String) : String = {\n                text.split(\"[aeiouAEIOU]\").filter(x\
    \ => x != \"\").mkString\n            }\n            def removeVowels4(text :\
    \ String) : String = {\n                text.split(\"[AEIOUaeiou]\").filter(x\
    \ => x != \"\").mkString\n            }\n            def removeVowels5(text :\
    \ String) : String = {\n                text.split(\"[AEIOUaeiouAEIOU]\").filter(x\
    \ => x != \"\").mkString\n            }\n            text match {\n          \
    \      case \"aeiouAEIOU\" => removeVowels3(text)\n                case \"AEIOUaeiou\"\
    \ => removeVowels4(text)\n                case \"AEIOUaeiouAEIOU\" => removeVowels5(text)\n\
    \                case _ => text\n            }\n        }\n        removeVowels2(text)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdjqdm1hy.scala:37)\n\tat Problem.main(tmpdjqdm1hy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979231
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text.length == 0 || text.length == 1) return text\n\n        val\
    \ vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val new_text = text\n\
    \        val vowels_string = text.split(\"\")\n        for(i <- 0 until vowels_string.length)\
    \ {\n            if (vowels(vowels_string(i))) new_text = new_text.replace(vowels_string(i),\
    \ \"\")\n        }\n        new_text\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp_o8q5c4q.scala:22:51 -----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (vowels(vowels_string(i)))\
    \ new_text = new_text.replace(vowels_string(i), \e[31m\"\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                          Reassignment to\
    \ val new_text\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979225
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if(text.indexOf(\"aeiou\") > -1) text.substring(0,text.indexOf(\"aeiou\"\
    ))\n        else text\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo3_v3bum.scala:21)\n\tat Problem.main(tmpo3_v3bum.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979230
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val text = text.filter { x => !vowels.contains(x)\
    \ }\n        text.toString()\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp2f14_uja.scala:17:19 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mtext\e[0m = text.filter\
    \ { \e[36mx\e[0m => !vowels.contains(x) }\n\e[31m\e[31m   |\e[0m             \
    \      ^\e[0m\n\e[31m   |\e[0m                   Recursive \e[33mvalue\e[0m \e\
    [35mtext\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979225
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\"\
    ,\"U\")\n        val new_text = mutable.ListBuffer[String]()\n        for (letter\
    \ <- text.toCharArray) {\n            if (vowels.contains(letter)) new_text +=\
    \ letter\n        }\n        (new_text.toString.trim)(0)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe_y1bxgr.scala:17:23 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mnew_text\e[0m = mutable.ListBuffer[\e\
    [35mString\e[0m]()\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe_y1bxgr.scala:19:32 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (vowels.contains(letter)) new_text\
    \ += letter\n\e[31m\e[31m   |\e[0m                                ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                Found:    (letter : Char)\n\e[31m\
    \   |\e[0m                                Required: String\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979233
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val newText = \"\"\n        var vowels = \"aeiou\"\n        var vowelsSet\
    \ = Set(vowels)\n\n        for (i <- 0 until text.length()) {\n            var\
    \ c = text.charAt(i)\n            if (vowelsSet.contains(c)) {\n             \
    \   newText += c\n            } else {\n                newText += c\n       \
    \     }\n        }\n\n        return newText\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2o2741y0.scala:22:35\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m            \e[33mif\e[0m (vowelsSet.contains(c))\
    \ {\n\e[31m\e[31m   |\e[0m                                   ^\e[0m\n\e[31m  \
    \ |\e[0m                                   Found:    (c : Char)\n\e[31m   |\e\
    [0m                                   Required: String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2o2741y0.scala:23:24 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                newText += c\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           value += is not a member\
    \ of String - did you mean newText.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp2o2741y0.scala:25:24 ------------------------\e[0m\e[0m\n\e[31m25 |\e\
    [0m                newText += c\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           value += is not a member of String - did you mean\
    \ newText.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1659979235
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = text\n        for (char <- text) {\n            if (('A'\
    \ <= char && char <= 'Z') || ('a' <= char && char <= 'z')) {\n               \
    \ result = result.replace(char, \"\")\n            }\n        }\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpm_wdhn08.scala:19:32 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                result = result.replace(char, \e[31m\"\
    \"\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mreplace\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: CharSequence,\
    \ x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char, x$1: Char): String\n\
    \e[31m   |\e[0mmatch arguments ((char : Char), (\e[32m\"\"\e[0m : String))\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1659979228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text.length <= 0) {\n            return text\n        }\n       \
    \ var newText : String = \"\"\n        var index = 0\n        while (index <=\
    \ text.length - 1) {\n            val c = text.charAt(index)\n            if (c\
    \ == 'a' || c == 'e' || c == 'i' || c == 'o' || c == 'u') {\n                newText\
    \ += text\n            }\n            index++\n        }\n        return newText\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpg7bpo2yl.scala:26:19 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            index++\n\e[31m\e[31m   |\e[0m          \
    \         ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979228
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        //To remove vowel we can:\n        //  1.Create a set of all characters\
    \ that occur in the string using scala's collection.Set\n        //  2.Iterate\
    \ over each character in the string and remove it from the set using the set subtraction\n\
    \        //  3.Remove the character if the set is empty or contains only vowels.\n\
    \        //  4.Join the characters back into a string.\n        val vowels = Set('a',\
    \ 'e', 'i', 'o', 'u')\n        text.toIterator.map{ c => vowels.subsetOf(c) }.filter(_.nonEmpty).mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpz4fgf9zh.scala:22:50\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m        text.toIterator.map{\
    \ \e[36mc\e[0m => vowels.subsetOf(c) }.filter(_.nonEmpty).mkString\n\e[31m\e[31m\
    \   |\e[0m                                                  ^\e[0m\n\e[31m   |\e\
    [0m                                    Found:    (c : Char)\n\e[31m   |\e[0m \
    \                                   Required: scala.collection.Set[Char]\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpz4fgf9zh.scala:22:64 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        text.toIterator.map{ \e[36mc\e[0m => vowels.subsetOf(c)\
    \ }.filter(_.nonEmpty).mkString\n\e[31m\e[31m   |\e[0m                       \
    \                                       ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                          value nonEmpty is not a member of Boolean\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        var resultString = text\n      \
    \  for (c <- text.chars) {\n            if(!vowels.contains(c)) {\n          \
    \      resultString += c\n            }\n        }\n        resultString\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpig59w5wt.scala:18:18 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (c <- text.chars) {\n\e[31m\e\
    [31m   |\e[0m                  ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue foreach is\
    \ not a member of java.util.stream.IntStream - did you mean IntStream.forEach?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979236
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if(text.matches(\".*[aeiou].*\")){\n            return text.substring(0,text.length-1)\n\
    \        }\n        return text\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp0xjkkvf.scala:23)\n\tat Problem.main(tmpp0xjkkvf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979236
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = \"aeiouAEIOU\";\n        var newText = \"\";\n        var\
    \ lastIndex = 0;\n        for (index = 0; index < text.length; index++) {\n  \
    \          if (vowels.contains(text.charAt(index))) {\n                newText\
    \ = newText + text.charAt(index);\n                lastIndex = index;\n      \
    \      }\n        }\n        if (lastIndex < text.length) {\n            newText\
    \ = newText + text.substring(lastIndex);\n        }\n        return newText;\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpgajyc2_7.scala:19:19 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (index = \e[31m0\e[0m; index <\
    \ text.length; index++) {\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\e\
    [31m   |\e[0m                   ')' expected, but '=' found\n\e[31m\e[31m-- [E040]\
    \ Syntax Error: /tmp/tmpgajyc2_7.scala:19:43 ---------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (index = \e[31m0\e[0m; index < text.length;\
    \ index++) {\n\e[31m\e[31m   |\e[0m                                          \
    \ ^\e[0m\n\e[31m   |\e[0m                                           '<-' expected,\
    \ but ';' found\n\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpgajyc2_7.scala:19:52\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m\
    \ (index = \e[31m0\e[0m; index < text.length; index++) {\n\e[31m\e[31m   |\e[0m\
    \                                                    ^\e[0m\n\e[31m   |\e[0m \
    \                                                   pattern expected\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgajyc2_7.scala:19:22 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (index = \e[31m0\e[0m; index <\
    \ text.length; index++) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\
    \e[31m   |\e[0mvalue foreach is not a member of Null, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator asScala\n\
    \e["
  stdout: ''
  timestamp: 1659979240
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text split 'a' map (_.replaceAll(\"[aeiouAEIOU]\", \"\")) filter !=\"\
    \" mkString \"\"\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp9obw4962.scala:16:71 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        text split \e[31m'a'\e[0m map (_.replaceAll(\e\
    [31m\"[aeiouAEIOU]\"\e[0m, \e[31m\"\"\e[0m)) filter !=\e[31m\"\"\e[0m mkString\
    \ \e[31m\"\"\e[0m\n\e[31m\e[31m   |\e[0m                                     \
    \                                  ^\e[0m\n\e[31m   |\e[0m                   \
    \   end of statement expected but string literal found\n1 error found\n"
  stdout: ''
  timestamp: 1659979234
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def vowel(c : String) : Boolean = c.toUpperCase().matches(\"[AEIOUaeiou]\"\
    )\n        def isVowel(c: Char): Boolean = vowel(c.toString)\n        def makePairs(s\
    \ : String): List[(Char, Char)] = {\n            val pairs = s.toList.flatMap\
    \ { c => \n                if (vowel(c)) {\n                    (c.toUpperCase\
    \ -> (c.toUpperCase -> c))\n                } else {\n                    List(\
    \ (c.toUpperCase -> c) ) \n                }\n            }\n            pairs.reverse\n\
    \        }\n        val pairs = makePairs(text)\n        val filtered = pairs.filter(isVowel)\n\
    \        filtered.toList\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwvdg4_f8.scala:20:26\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m                \e[33mif\e[0m\
    \ (vowel(c)) {\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m\
    \   |\e[0m                          Found:    (c : Char)\n\e[31m   |\e[0m    \
    \                      Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpwvdg4_f8.scala:21:23 ------------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m                    (c.toUpperCase -> (c.toUpperCase -> c))\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     value toUpperCase is not a member of Char\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpwvdg4_f8.scala:23:29 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                    List( (c.toUpperCase -> c) ) \n\e\
    [31m\e[31m   |\e[0m                           ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                           value toUpperCase is not a member of Char\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpwvdg4_f8.scala:29:36 --------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mfiltered\e[0m = pairs.filter(isVowel)\n\
    \e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m   |\e\
    [0m                                    Found:    (c : (Char, Char))\n\e[31m  \
    \ |\e[0m                                    Required: Char\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwvdg4_f8.scala:30:17 --------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        filtered.toList\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    List[(Char, Char)]\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659979241
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newText : String = \"\"\n        for (i <- 0 until text.length)\n\
    \            if (text(i) == \"a\" || text(i) == \"e\" || text(i) == \"i\" || text(i)\
    \ == \"o\" || text(i) == \"u\")\n                text = text.substring(0, i) +\
    \ text.substring(i + 1, text.length)\n            newText += text(i)\n       \
    \ return newText\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpbh5pswjq.scala:18:16 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (text(i) == \e[31m\"a\"\e[0m\
    \ || text(i) == \e[31m\"e\"\e[0m || text(i) == \e[31m\"i\"\e[0m || text(i) ==\
    \ \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpbh5pswjq.scala:18:34\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m18 |\e[0m       \
    \     \e[33mif\e[0m (text(i) == \e[31m\"a\"\e[0m || text(i) == \e[31m\"e\"\e[0m\
    \ || text(i) == \e[31m\"i\"\e[0m || text(i) == \e[31m\"o\"\e[0m || text(i) ==\
    \ \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m                                  ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpbh5pswjq.scala:18:52 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (text(i) == \e[31m\"a\"\e[0m\
    \ || text(i) == \e[31m\"e\"\e[0m || text(i) == \e[31m\"i\"\e[0m || text(i) ==\
    \ \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                                                ^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m        Values of types Char and String cannot be compared with == or\
    \ !=\n\e[31m\e[31m-- Error: /tmp/tmpbh5pswjq.scala:18:70 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (text(i) == \e[31m\"a\"\e[0m\
    \ || text(i) == \e[31m\"e\"\e[0m || text(i) == \e[31m\"i\"\e[0m || text(i) ==\
    \ \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                                                                  ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpbh5pswjq.scala:18:88 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (text(i) == \e[31m\"a\"\e[0m\
    \ || text(i) == \e[31m\"e\"\e[0m || text(i) == \e[31m\"i\"\e[0m || text(i) ==\
    \ \e[31m\"o\"\e[0m || text(i) == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \            "
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels =  List('a','e','i','o','u')\n        val textWithoutVowels\
    \ = text.replaceAll(\"[aeiou]\", \"\").replaceAll(\"[^a-zA-Z]\", \"\")\n     \
    \   return textWithoutVowels\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmps3_vy0xs.scala:22)\n\tat Problem.main(tmps3_vy0xs.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979242
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      val vowels = \"AEIOUaeiou\".toList\n      val removed = text.filterNot(vowels.contains)\n\
    \      val chars = removed.toCharArray\n      val newString = new String(chars)\n\
    \      newString\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979243
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result : String = \"\"\n        var index = 0\n        var vowels\
    \ = \"AEIOUaeiou\".toCharArray\n        // remove first vowel\n        for(i <-\
    \ 0 until text.length) {\n            if(vowels(index) == text.charAt(i)) {\n\
    \                result += text.charAt(i)\n                index += 1\n      \
    \      } else {\n                result += text.charAt(index)\n            }\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\\
    nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\"\
    )).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\")));\n\
    \    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppdfkr51w.scala:32)\n\tat Problem.main(tmppdfkr51w.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979244
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def filterVowels(text : String) : String = {\n            def filterVowels(text\
    \ : String) : String = {\n                var temp = \"\"\n                for\
    \ (char <- text) {\n                    if (char == 'a' || char == 'e' || char\
    \ == 'i' || char == 'o' || char == 'u')\n                        temp = temp +\
    \ char\n                    else {\n                        temp = \"\"\n    \
    \                }\n                }\n                return temp\n         \
    \   }\n            return filterVowels(text)\n        }\n        var filterVowels_text\
    \ : String = filterVowels(text)\n        var filterVowels_text2 : String = (filterVowels_text\
    \ + \"z\")\n        return filterVowels_text2\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp1ows5v21.scala:35)\n\tat Problem.main(tmp1ows5v21.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979245
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"AEIOUaeiou\"\n        var text1 = text\n        for(c\
    \ <- text1 ) {\n            val index = vowels.indexOf (c)\n            if(index\
    \ != -1)\n                text1 = text1.replace (c,\"\")\n        }\n        text1\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpovjos4ln.scala:21:30 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                text1 = text1.replace (c,\e[31m\"\"\e\
    [0m)\n\e[31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mreplace\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: CharSequence,\
    \ x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char, x$1: Char): String\n\
    \e[31m   |\e[0mmatch arguments ((c : Char), (\e[32m\"\"\e[0m : String))\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979238
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if(text.isEmpty) {\n            return text\n        }\n        val vowels\
    \ = \"aeiou\"\n        val charList = text.toCharArray\n        val charArrayLen\
    \ = charList.length\n        val newArray = Array.ofDim[Char](charArrayLen)\n\
    \        val newLen = charArrayLen\n        val index = Array.ofDim[Int](charArrayLen)\n\
    \        var i = 0\n        var j = 0\n        while(i < charArrayLen) {\n   \
    \         val char = charList(i)\n            val isVowel = vowels.indexOf(char.charAt(0))\
    \ match {\n                case -1 => false\n                case 0 => true\n\
    \                case 1 => true\n            }\n            if(isVowel) {\n  \
    \              for(j <- i until (charArrayLen - 1)) {\n                    if(vowels.indexOf(charList(i+1).charAt(0))\
    \ match {\n                        case -1 => j\n                        case\
    \ 0 => j\n                        case 1 => j\n                    } != -1) {\n\
    \                        index(i) = j\n                        break\n       \
    \             }\n                }\n                newArray(i) = charList(i)\n\
    \                newLen = i + 1\n                i += 1\n            }\n     \
    \       else {\n                newArray(i) = charList(i)\n                newLen\
    \ = i + 1\n                i += 1\n            }\n        }\n        new String(newArray.take(newLen))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpbyvbtd8d.scala:40:22 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m                    } != -\e[31m1\e[0m) {\n\e[31m\e[31m\
    \   |\e[0m                      ^^\e[0m\n\e[31m   |\e[0m                     \
    \ ')' expected, but identifier found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbyvbtd8d.scala:29:46\
    \ ------------------------\e[0m\e[0m\n\e[31m29 |\e[0m            \e[33mval\e[0m\
    \ \e[36misVowel\e[0m = vowels.indexOf(char.charAt(\e[31m0\e[0m)) \e[33mmatch\e\
    [0m {\n\e[31m\e[31m   |\e[0m                                         ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                    value charAt is not a\
    \ member of Char\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbyvbtd8d.scala:36:52\
    \ ------------------------\e[0m\e[0m\n\e[31m36 |\e[0m                    \e[33mif\e\
    [0m(vowels.indexOf(charList(i+\e[31m1\e[0m).charAt(\e[31m0\e[0m)) \e[33mmatch\e\
    [0m {\n\e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                    value charAt is not a\
    \ member of Char\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbyvbtd8d.scala:37:35\
    \ --------------------\e[0m\e[0m\n\e[31m37 |\e[0m                        \e[33mcase\e\
    [0m -\e[31m1\e[0m => j\n\e[31m\e[31m   |\e[0m                                \
    \   ^\e[0m\n\e[31m   |\e[0m                                   Found:    (j : Int)\n\
    \e[31m   |\e[0m                                   Required: Boolean\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbyvbtd8d.scala:38:34 --------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m                        \e[33mcase\e[0m \e[31m0\e[0m\
    \ => j\n\e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m\
    \   |\e[0m                                  Found:    (j : Int)\n\e[31m   |\e\
    [0m                                  Required: Boolean\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbyvbtd8d.scala:39:34 --------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m               "
  stdout: ''
  timestamp: 1659979246
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toSet\n        text.replaceAll(\"[^\" + vowels\
    \ + \"]\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpi7p54ipm.scala:21)\n\tat Problem.main(tmpi7p54ipm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979247
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text match {\n            case \"\" => \"\"\n            case str =>\
    \ {\n                // create a mutable map that hold each letter and its vowel\
    \ counter\n                val vowels = new mutable.HashMap[Char, Int]()\n   \
    \             for (letter <- str) vowels += letter -> (vowels(letter)+1)\n   \
    \             // create an empty string\n                val newStr = \"\"\n \
    \               // iterate over the map\n                for (letter (key, value)\
    \ <- vowels.toSeq) if (value == 0) newStr += letter\n                // return\
    \ new string\n                newStr\n            }\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\"\
    )));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5oov14_u.scala:20:33 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mval\e[0m \e[36mvowels\e[0m = \e\
    [33mnew\e[0m mutable.HashMap[\e[35mChar\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                                 ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979240
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text.length <= 0)\n            return \"\"\n        var result =\
    \ \"\"\n        for (letter <- text.chars)\n        if (letter != 'a' && letter\
    \ != 'A' && letter != 'e' && letter != 'E' && letter != 'i' && letter != 'I' &&\
    \ letter != 'o' && letter != 'O' && letter != 'u' && letter != 'U')\n        \
    \    result += letter\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp409a3j_t.scala:19:23 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (letter <- text.chars)\n\e[31m\e\
    [31m   |\e[0m                       ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue foreach\
    \ is not a member of java.util.stream.IntStream - did you mean IntStream.forEach?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979244
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def removeVowel(text : String) : String = {\n            val textLength\
    \ = text.length\n            var removed = \"\"\n            for (i <- 0 until\
    \ textLength) {\n                val c = text(i).toChar\n                if ('a'\
    \ <= c && c <= 'z') {\n                    val nextChar = text(i + 1).toChar\n\
    \                    if ('a' <= nextChar && nextChar <= 'z') {\n             \
    \           removed += c\n                        removed += nextChar\n      \
    \              }\n                    else {\n                        removed\
    \ += c\n                    }\n                }\n            }\n            removed\n\
    \        }\n\n        val textLength = text.length\n        var removed = \"\"\
    \n        for (i <- 0 until textLength) {\n            val c = text(i).toChar\n\
    \            if ('a' <= c && c <= 'z') {\n                removed += c\n     \
    \           removed += text(i + 1).toChar\n            }\n            else {\n\
    \                removed += c\n            }\n        }\n        removed\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: String index out of range: 14\n\
    \tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:48)\n\tat java.base/java.lang.String.charAt(String.java:1515)\n\
    \tat scala.collection.StringOps$.apply$extension(StringOps.scala:185)\n\tat Problem$.removeVowels$$anonfun$1(tmp8powavjc.scala:41)\n\
    \tat scala.runtime.java8.JFunction1$mcVI$sp.apply(JFunction1$mcVI$sp.scala:18)\n\
    \tat scala.collection.immutable.Range.foreach(Range.scala:190)\n\tat Problem$.removeVowels(tmp8powavjc.scala:46)\n\
    \tat Problem$.main(tmp8powavjc.scala:51)\n\tat Problem.main(tmp8powavjc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979250
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\"\n        val newText = text.replace(\"a\"\
    , \"\").replace(\"A\", \"\").replace(\"e\", \"\").replace(\"E\", \"\").replace(\"\
    o\", \"\").replace(\"O\", \"\").replace(\"i\", \"\").replace(\"I\", \"\").replace(\"\
    u\", \"\").replace(\"U\", \"\")\n        val newTextWithoutVowels = newText.filterNot(c\
    \ => vowels.contains(c))\n        newTextWithoutVowels\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979250
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text == \"\" || text == \"A\" || text == \"a\" || text == \"B\" ||\
    \ text == \"b\" || text == \"C\" || text == \"c\" || text == \"D\" || text ==\
    \ \"d\")\n        {\n            return text\n        }\n        else\n      \
    \  {\n            var newText : String = \"\"\n            for (i <- 0 until text.length)\n\
    \            {\n                if (text.charAt(i) == 'a' || text.charAt(i) ==\
    \ 'A')\n                {\n                    newText += text.charAt(i)\n   \
    \             }\n            }\n            return newText\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3_r8fgdg.scala:35)\n\tat Problem.main(tmp3_r8fgdg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979251
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if(text.length == 0)\n            text\n        else {\n            val\
    \ vowels = \"aeiouAEIOU\"\n            val consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n            val new_text = text.filter(c => !vowels.contains(c) && !consonants.contains(c))\n\
    \            removeVowels(new_text)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979254
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text match {\n            case \"\" => \"\"\n            case _ => text.replaceAll(\"\
    [aeiouAEIOU]\", \"\")\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979250
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowelSet = Set(\"a\", \"e\", \"i\", \"o\", \"u\", \"y\", \"a\")\n\
    \        val resultSet = text.filterNot(vowelSet)\n        resultSet.toSet\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprt27krvu.scala:17:39\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mresultSet\e\
    [0m = text.filterNot(vowelSet)\n\e[31m\e[31m   |\e[0m                        \
    \               ^^^^^^^^\e[0m\n\e[31m   |\e[0m             Found:    (vowelSet\
    \ : scala.collection.mutable.Set[String])\n\e[31m   |\e[0m             Required:\
    \ Char => Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprt27krvu.scala:18:8\
    \ ---------------------\e[0m\e[0m\n\e[31m18 |\e[0m        resultSet.toSet\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:\
    \    Set[Char]\n\e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979254
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // removeVowels is the function which checks the input and returns the\
    \ string without vowels.\n        // >>> removeVowels(\"\") \n        // \"\"\n\
    \        // >>> removeVowels(\"abcd\")\n        // \"bc\"\n        // >>> removeVowels(\"\
    aaBAA\")\n        // \"B\"\n        \n        // Write your code in here\n   \
    \     if(text.length < 1){\n            return text\n        }\n        var vowels\
    \ =  List(\"a\", \"e\", \"i\", \"o\", \"u\")\n        var result = text\n    \
    \    for(i <- 0 to text.length){\n            if(vowels.contains(text.charAt(i))){\n\
    \                result = result.replace(text.charAt(i), \"\")\n            }\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmp3cdqw8zf.scala:32:32 -----------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m                result = result.replace(text.charAt(i),\
    \ \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e\
    [35mreplace\e[0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e\
    [0m (x$0: CharSequence, x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char,\
    \ x$1: Char): String\n\e[31m   |\e[0mmatch arguments (Char, (\e[32m\"\"\e[0m :\
    \ String))\n1 error found\n"
  stdout: ''
  timestamp: 1659979249
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = List(\"a\", \"e\", \"i\", \"o\", \"u\", \"A\", \"E\", \"\
    I\", \"O\", \"U\")\n        val result = text\n        for(vowel <- vowels) result\
    \ = result.filterNot(x => x == vowel)\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp4sranml5.scala:18:60 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(vowel <- vowels) result = result.filterNot(\e\
    [36mx\e[0m => x == vowel)\n\e[31m\e[31m   |\e[0m                             \
    \                               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types Char and String cannot be compared with == or !=\n1 error found\n"
  stdout: ''
  timestamp: 1659979253
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var outStr = \"\"\n        for (i <- text.indices) {\n            if\
    \ (text(i) != \"a\"(0) && text(i) != \"e\"(0) && text(i) != \"i\"(0) && text(i)\
    \ != \"o\"(0) && text(i) != \"u\"(0)) {\n                outStr += text(i)\n \
    \           }\n        }\n        return outStr\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq1s4eohv.scala:29)\n\tat Problem.main(tmpq1s4eohv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979259
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        def getVowels(text : String) : List[Char] = {\n            var vowels:\
    \ List[Char] = Nil\n            var index = 0\n            while (index < text.length)\
    \ {\n                val c = text.charAt(index)\n                if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                    vowels\
    \ ::= c\n                    index += 1\n                }\n                index\
    \ += 1\n            }\n            vowels\n        }\n        var textList = text.split(\"\
    [^aeiouAEIOU]\".toRegex)\n        val vowels = getVowels(text)\n        val lengthOfStringWithOutVowels\
    \ = textList.length\n        val resultStringWithOutVowels = textList.map((v)\
    \ => vowels.filterNot(_ == v).mkString).mkString(\"\")\n        if (resultStringWithOutVowels.length\
    \ < lengthOfStringWithOutVowels) {\n            textList = textList.map((v) =>\
    \ vowels.filter(_ == v).mkString).mkString(\"\")\n            val vowels = getVowels(textList(0))\n\
    \            resultStringWithOutVowels = textList.map((v) => vowels.filterNot(_\
    \ == v).mkString).mkString(\"\")\n        }\n        resultStringWithOutVowels\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwrpcrtku.scala:29:50 ------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mvar\e[0m \e[36mtextList\e[0m = text.split(\e\
    [31m\"[^aeiouAEIOU]\"\e[0m.toRegex)\n\e[31m\e[31m   |\e[0m                   \
    \               ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \                 value toRegex is not a member of String\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpwrpcrtku.scala:32:77 -----------------------------------------\e[0m\e\
    [0m\n\e[31m32 |\e[0m        \e[33mval\e[0m \e[36mresultStringWithOutVowels\e[0m\
    \ = textList.map((\e[36mv\e[0m) => vowels.filterNot(_ == v).mkString).mkString(\e\
    [31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                                        \
    \                                     ^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types Char and String cannot be compared with == or !=\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpwrpcrtku.scala:34:57 -----------------------------------------\e[0m\e\
    [0m\n\e[31m34 |\e[0m            textList = textList.map((\e[36mv\e[0m) => vowels.filter(_\
    \ == v).mkString).mkString(\e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \                                              ^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \      Values of types Char and String cannot be compared with == or !=\n\e[31m\e\
    [31m-- Error: /tmp/tmpwrpcrtku.scala:36:77 -----------------------------------------\e\
    [0m\e[0m\n\e[31m36 |\e[0m            resultStringWithOutVowels = textList.map((\e\
    [36mv\e[0m) => vowels.filterNot(_ == v).mkString).mkString(\e[31m\"\"\e[0m)\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                   ^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and\
    \ String cannot be compared with == or !=\n4 errors found\n"
  stdout: ''
  timestamp: 1659979257
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      text.filter( c => c != 'a' && c != 'e' && c != 'i' && c != 'o' && c !=\
    \ 'u' )\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7b7oplo3.scala:23)\n\tat Problem.main(tmp7b7oplo3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979255
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        for (i <- 0 to text.length-1) {\n            if (text.charAt(i) == 'a'\
    \ || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o' ||\
    \ text.charAt(i) == 'u' || text.charAt(i) == 'y')\n            {\n           \
    \     text = text.drop(i)\n            }\n        }\n        text\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpy8ox_yg_.scala:19:21 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                text = text.drop(i)\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val text\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979251
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Write your code here.\n        var result : String = \"\";\n     \
    \   var vowels : Set[Char] = Set('a','e','i','o','u');\n        var letters =\
    \ Array(\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\",\"i\",\"j\",\"k\",\"l\"\
    ,\"m\",\"n\",\"o\",\"p\",\"q\",\"r\",\"s\",\"t\",\"u\",\"v\",\"w\",\"x\",\"y\"\
    ,\"z\")\n        var index = 0;\n        var j = 0;\n        while (index < text.length)\
    \ {\n            if (letters(j).equals(text.charAt(index))) {\n              \
    \  result += letters(j);\n                j++;\n                index++;\n   \
    \         } else if (letters(j).equals(text.charAt(index))) {\n              \
    \  result += letters(j);\n                j++;\n            } else if (letters(j).equals(text.charAt(index)))\
    \ {\n                result += letters(j);\n                index++;\n       \
    \     }\n        }\n        result += letters(j);\n        return result;\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp02n74d08.scala:25:19 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                j++;\n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m';'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp02n74d08.scala:26:23\
    \ ---------------------------\e[0m\e[0m\n\e[31m26 |\e[0m                index++;\n\
    \e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m          \
    \             expression expected but \e[31m';'\e[0m found\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E018] Syntax Error: /tmp/tmp02n74d08.scala:29:19 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m                j++;\n\e[31m\e[31m   |\e[0m         \
    \          ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m';'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp02n74d08.scala:32:23\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m                index++;\n\
    \e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m          \
    \             expression expected but \e[31m';'\e[0m found\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979253
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Create an empty StringBuilder object\n        var newText = new StringBuilder\n\
    \        // Initialize a boolean value to false\n        var removeVowel = false\n\
    \        // Iterate over the string text\n        for (i <- text) {\n        \
    \    // If the character is vowel\n            if (vowels.contains(i)) {\n   \
    \             // Set removeVowel = true and append the character in string\n \
    \               removeVowel = true\n            }\n            // If removeVowel\
    \ is true, append the character in string\n            if (removeVowel) {\n  \
    \              newText.append(i)\n            }\n        }\n        // Return\
    \ newText as String\n        return newText.toString\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppm5us3fb.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (vowels.contains(i)) {\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \  Not found: vowels\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979253
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = List(\"a\",\"e\",\"i\",\"o\",\"u\")\n        val newText\
    \ = text.filterNot(vowels.contains)\n        newText.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0m_fl50i.scala:18:16\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        newText.toList\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    List[Char]\n\
    \e[31m   |\e[0m        Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979258
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val filtered\
    \ = text.filter(letter => !vowels.contains(letter))\n        return filtered.mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5rtz3vpr.scala:17:62\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mfiltered\e\
    [0m = text.filter(\e[36mletter\e[0m => !vowels.contains(letter))\n\e[31m\e[31m\
    \   |\e[0m                                                              ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                               Found:    (letter\
    \ : Char)\n\e[31m   |\e[0m                                               Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979260
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // create a mutable string from the given text.\n        val strText\
    \ = mutable.MutableString(text)\n        // remove all vowels from the mutable\
    \ string.\n        strText.filter(_ != vowels)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9s8q73kt.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mstrText\e[0m = mutable.MutableString(text)\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979254
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // use regex to filter the vowels\n        import scala.util.matching._\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val regex\
    \ = \"\"\"[aeiou]\"\"\".r\n        // use pattern matching to filter string using\
    \ regex\n        text match {\n            case regex(_) => text\n           \
    \ case _ => text.filter(c => vowels.contains(c))\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9kmvtber.scala:23:55\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m            \e[33mcase\e[0m _\
    \ => text.filter(c => vowels.contains(c))\n\e[31m\e[31m   |\e[0m             \
    \                                          ^\e[0m\n\e[31m   |\e[0m           \
    \                                         Found:    (c : Char)\n\e[31m   |\e[0m\
    \                                                    Required: String\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979261
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var charArray = text.toCharArray\n        var charArrayLength = charArray.length\n\
    \        for (charIndex <- 0 until charArrayLength) {\n            if (charArray[charIndex]\
    \ == 'a' || charArray[charIndex] == 'e' || charArray[charIndex] == 'i' || charArray[charIndex]\
    \ == 'o' || charArray[charIndex] == 'u') {\n                charArray = charArray.drop(charIndex)\n\
    \                charArrayLength = charArray.length\n            }\n        }\n\
    \        return (new String(charArray))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4p0cu4ee.scala:19:26 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (charArray[\e[35mcharIndex\e\
    [0m] == \e[31m'a'\e[0m || charArray[\e[35mcharIndex\e[0m] == \e[31m'e'\e[0m ||\
    \ charArray[\e[35mcharIndex\e[0m] == \e[31m'i'\e[0m || charArray[\e[35mcharIndex\e\
    [0m] == \e[31m'o'\e[0m || charArray[\e[35mcharIndex\e[0m] == \e[31m'u'\e[0m) {\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                          Not found: type charIndex\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979256
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // removeVowels(\"\") returns empty string\n        if (text.nonEmpty)\
    \ {\n            val lowercase = text.toLowerCase\n            val vowels = mutable.Set[Char]()\n\
    \            lowercase.toList.foreach {\n            case letter: Char if (letter\
    \ == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u')\
    \ => vowels += letter\n            case letter => letter\n            }\n    \
    \        // if there's any character in vowels\n            if (vowels.nonEmpty)\
    \ {\n                val filtered = lowercase.toList.filterNot(vowels.contains)\n\
    \                text -> filtered.mkString\n            }\n            else {\n\
    \                text\n            }\n        }\n        // if there's no text,\
    \ return empty string\n        else {\n            text\n        }\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxwt42yqt.scala:19:25 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mvowels\e[0m = mutable.Set[\e\
    [35mChar\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxwt42yqt.scala:27:16 --------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                text -> filtered.mkString\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \            Found:    \e[1m\e[31m(\e[0m\e[1m\e[31mString\e[0m\e[1m\e[31m,\e[0m\e\
    [1m\e[31m \e[0mString\e[1m\e[31m)\e[0m\n\e[31m   |\e[0m                Required:\
    \ String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979262
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n   \
    \     val vowels = \"aeiou\"\n        val textWithoutVowels = text.replaceAll(\"\
    [\" + vowels + \"]\", \"\")\n        val newChar = consonants.indexOf(textWithoutVowels)\n\
    \        if (newChar != -1) {\n            return newChar +: textWithoutVowels.split(\"\
    \").toList\n        }\n        return \"\"\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd4fmbl55.scala:21:19\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mreturn\e[0m\
    \ newChar +: textWithoutVowels.split(\e[31m\"\"\e[0m).toList\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Found:    List[Matchable]\n\e[31m   |\e[0m      \
    \             Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979263
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = \"aeiou\"\n        val result = text.mkString.filter(c =>\
    \ vowels.contains(c))\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpptns7d62.scala:22)\n\tat Problem.main(tmpptns7d62.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979267
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val s = text.split(\"\").filter(_ != 'a' && _ != 'e' && _ != 'i' && _\
    \ != 'o' && _ != 'u')\n        s.mkString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpbqrfy_bb.scala:16:38 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36ms\e[0m = text.split(\e[31m\"\
    \"\e[0m).filter(_ != \e[31m'a'\e[0m && _ != \e[31m'e'\e[0m && _ != \e[31m'i'\e\
    [0m && _ != \e[31m'o'\e[0m && _ != \e[31m'u'\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                 Wrong number of parameters,\
    \ expected: 1\n1 error found\n"
  stdout: ''
  timestamp: 1659979261
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels: Set[Char] = Set('a','e','i','o','u')\n        var newText\
    \ = text\n        vowels.toIterator.foreach(x => newText = newText.replaceAll(x\
    \ + \"\\\\\", \"\")\n        newText\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpxxdwgksj.scala:19:15 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        newText\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979263
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var newText = \"\"\n        var temp = \"\"\n        for( i <- 0 until\
    \ text.length){\n            if(text.charAt(i)==\"0\"||text.charAt(i)==\"1\"||text.charAt(i)==\"\
    2\"||text.charAt(i)==\"3\"||text.charAt(i)==\"4\"||text.charAt(i)==\"5\"||text.charAt(i)==\"\
    6\"||text.charAt(i)==\"7\"||text.charAt(i)==\"8\"||text.charAt(i)==\"9\"){\n \
    \               temp = text.substring(i)\n            }\n        }\n        newText\
    \ = temp\n        return newText\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp84e4ai8y.scala:19:15 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(text.charAt(i)==\e[31m\"0\"\
    \e[0m||text.charAt(i)==\e[31m\"1\"\e[0m||text.charAt(i)==\e[31m\"2\"\e[0m||text.charAt(i)==\e\
    [31m\"3\"\e[0m||text.charAt(i)==\e[31m\"4\"\e[0m||text.charAt(i)==\e[31m\"5\"\e\
    [0m||text.charAt(i)==\e[31m\"6\"\e[0m||text.charAt(i)==\e[31m\"7\"\e[0m||text.charAt(i)==\e\
    [31m\"8\"\e[0m||text.charAt(i)==\e[31m\"9\"\e[0m){\n\e[31m\e[31m   |\e[0m    \
    \           ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp84e4ai8y.scala:19:36\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m19 |\e[0m       \
    \     \e[33mif\e[0m(text.charAt(i)==\e[31m\"0\"\e[0m||text.charAt(i)==\e[31m\"\
    1\"\e[0m||text.charAt(i)==\e[31m\"2\"\e[0m||text.charAt(i)==\e[31m\"3\"\e[0m||text.charAt(i)==\e\
    [31m\"4\"\e[0m||text.charAt(i)==\e[31m\"5\"\e[0m||text.charAt(i)==\e[31m\"6\"\e\
    [0m||text.charAt(i)==\e[31m\"7\"\e[0m||text.charAt(i)==\e[31m\"8\"\e[0m||text.charAt(i)==\e\
    [31m\"9\"\e[0m){\n\e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Values of types Char and String cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp84e4ai8y.scala:19:57 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(text.charAt(i)==\e[31m\"0\"\
    \e[0m||text.charAt(i)==\e[31m\"1\"\e[0m||text.charAt(i)==\e[31m\"2\"\e[0m||text.charAt(i)==\e\
    [31m\"3\"\e[0m||text.charAt(i)==\e[31m\"4\"\e[0m||text.charAt(i)==\e[31m\"5\"\e\
    [0m||text.charAt(i)==\e[31m\"6\"\e[0m||text.charAt(i)==\e[31m\"7\"\e[0m||text.charAt(i)==\e\
    [31m\"8\"\e[0m||text.charAt(i)==\e[31m\"9\"\e[0m){\n\e[31m\e[31m   |\e[0m    \
    \                                                     ^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m        Values of types Char and String cannot be compared with\
    \ == or !=\n\e[31m\e[31m-- Error: /tmp/tmp84e4ai8y.scala:19:78 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(text.charAt(i)==\e[31m\"0\"\
    \e[0m||text.charAt(i)==\e[31m\"1\"\e[0m||text.charAt(i)==\e[31m\"2\"\e[0m||text.charAt(i)==\e\
    [3"
  stdout: ''
  timestamp: 1659979272
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\"\n        var result = \"\"\n        var current\
    \ = text\n        while (current != \"\") {\n            if (vowels.contains(current))\
    \ {\n                result += (current + \"\")\n                current = current.substring(0,1)\n\
    \            } else {\n                result += current\n                current\
    \ = current.substring(0,1)\n            }\n        }\n        return result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979271
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text.filter(!('a' <= _ && _ <= 'z')).filter(!('z' <= _ && _ <= 'z')).filter(!('a'\
    \ <= _ && _ <= 'z')).filter(!('z' <= _ && _ <= 'z')).mkString.replaceAll(\"\\\\\
    W\", \"\")\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E081] Type Error: /tmp/tmpytvh5xpv.scala:16:29 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        text.filter(!(\e[31m'a'\e[0m <= _ && _ <= \e\
    [31m'z'\e[0m)).filter(!(\e[31m'z'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).filter(!(\e\
    [31m'a'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).filter(!(\e[31m'z'\e[0m <= _ && _ <=\
    \ \e[31m'z'\e[0m)).mkString.replaceAll(\e[31m\"\\\\W\"\e[0m, \e[31m\"\"\e[0m)\n\
    \e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m   Missing\
    \ parameter type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type\
    \ of the parameter _$1 of expanded function:\n\e[31m   |\e[0m   (_$1, _$2) =>\
    \ \e[31m'a'\e[0m <= _$1 && _$2 <= \e[31m'z'\e[0m.\n\e[31m\e[31m-- [E081] Type\
    \ Error: /tmp/tmpytvh5xpv.scala:16:34 -----------------------------\e[0m\e[0m\n\
    \e[31m16 |\e[0m        text.filter(!(\e[31m'a'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).filter(!(\e\
    [31m'z'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).filter(!(\e[31m'a'\e[0m <= _ && _ <=\
    \ \e[31m'z'\e[0m)).filter(!(\e[31m'z'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).mkString.replaceAll(\e\
    [31m\"\\\\W\"\e[0m, \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                  \
    \                ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m   I could not infer the type of the parameter _$2 of expanded\
    \ function:\n\e[31m   |\e[0m   (_$1, _$2) => \e[31m'a'\e[0m <= _$1 && _$2 <= \e\
    [31m'z'\e[0m.\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmpytvh5xpv.scala:16:61\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        text.filter(!(\e\
    [31m'a'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).filter(!(\e[31m'z'\e[0m <= _ && _ <=\
    \ \e[31m'z'\e[0m)).filter(!(\e[31m'a'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).filter(!(\e\
    [31m'z'\e[0m <= _ && _ <= \e[31m'z'\e[0m)).mkString.replaceAll(\e[31m\"\\\\W\"\
    \e[0m, \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m                               \
    \                              ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter\
    \ _$3 of expanded function:\n\e[31m   |\e[0m   (_$3, _$4) => \e[31m'z'\e[0m <=\
    \ _$3 && _$4 <= \e[31m'z'\e[0m.\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmpytvh5xpv.scala:16:66\
    \ -----------------------------\e"
  stdout: ''
  timestamp: 1659979264
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\", \"e\", \"i\", \"o\", \"u\")\n        val noVowels\
    \ = text.toString.filter(c => !vowels.contains(c))\n        noVowels.mkString\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpihvt_avs.scala:17:66\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mnoVowels\e\
    [0m = text.toString.filter(\e[36mc\e[0m => !vowels.contains(c))\n\e[31m\e[31m\
    \   |\e[0m                                                                  ^\e\
    [0m\n\e[31m   |\e[0m                                                    Found:\
    \    (c : Char)\n\e[31m   |\e[0m                                             \
    \       Required: String\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979268
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        for (i <- 0 until text.length)\n            if (text.charAt(i) == 'a'\
    \ || text.charAt(i) == 'e' || text.charAt(i) == 'i' || text.charAt(i) == 'o' ||\
    \ text.charAt(i) == 'u' || text.charAt(i) == 'A' || text.charAt(i) == 'E' || text.charAt(i)\
    \ == 'I' || text.charAt(i) == 'O' || text.charAt(i) == 'U' || text.charAt(i) ==\
    \ 'z')\n                text = text.substring(0, i) + text.substring(i + 1)\n\
    \        else\n            text = text\n        text\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpezh_ryca.scala:19:8 ------------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33melse\e[0m\n\e[31m\e[31m   |\e[0m      \
    \  ^^^^\e[0m\n\e[31m   |\e[0m        end of statement expected but 'else' found\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpezh_ryca.scala:18:21 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                text = text.substring(\e[31m0\e[0m, i)\
    \ + text.substring(i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val text\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979265
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = List(\"a\",\"e\",\"i\",\"o\",\"u\",\"y\",\"\xE6\",\"\xF8\
    \",\"\xE5\")\n        var newText = \"\"\n        for ( a <- text.charIterator)\
    \ {\n            a match {\n                case _ if vowels.contains(a) => newText\
    \ +=  a // if the letter matches a vowel, add it to the result\n             \
    \   case _ => newText += a // if the letter does not match a vowel, just add it\
    \ to the result\n            }\n        }\n        newText\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2etosutp.scala:18:24 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m ( a <- text.charIterator) {\n\e\
    [31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value charIterator is not a member of String\n1 error found\n"
  stdout: ''
  timestamp: 1659979271
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \      val vowels = Set('a','e','i','o','u')\n      var result = \"\"\n      for(ch\
    \ <- text) {\n        if(vowels.contains(ch)) {\n          result += ch\n    \
    \    } else {\n          result += (ch)\n        }\n      }\n      result\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph8yq990e.scala:29)\n\tat Problem.main(tmph8yq990e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979275
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Write your code here\n        var newText : String = text.filterNot(text\
    \ => text == \"a\" || text == \"e\" || text == \"i\" || text == \"o\" || text\
    \ == \"u\")\n        return newText\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp8uyf68kg.scala:17:54 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mnewText\e[0m : \e[35mString\e\
    [0m = text.filterNot(\e[36mtext\e[0m => text == \e[31m\"a\"\e[0m || text == \e\
    [31m\"e\"\e[0m || text == \e[31m\"i\"\e[0m || text == \e[31m\"o\"\e[0m || text\
    \ == \e[31m\"u\"\e[0m)\n\e[31m\e[31m   |\e[0m                                \
    \                      ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types\
    \ Char and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp8uyf68kg.scala:17:69\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m17 |\e[0m       \
    \ \e[33mvar\e[0m \e[36mnewText\e[0m : \e[35mString\e[0m = text.filterNot(\e[36mtext\e\
    [0m => text == \e[31m\"a\"\e[0m || text == \e[31m\"e\"\e[0m || text == \e[31m\"\
    i\"\e[0m || text == \e[31m\"o\"\e[0m || text == \e[31m\"u\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \  ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char and String cannot\
    \ be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp8uyf68kg.scala:17:84\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m17 |\e[0m       \
    \ \e[33mvar\e[0m \e[36mnewText\e[0m : \e[35mString\e[0m = text.filterNot(\e[36mtext\e\
    [0m => text == \e[31m\"a\"\e[0m || text == \e[31m\"e\"\e[0m || text == \e[31m\"\
    i\"\e[0m || text == \e[31m\"o\"\e[0m || text == \e[31m\"u\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \                 ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values of types Char\
    \ and String cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmp8uyf68kg.scala:17:99\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m17 |\e[0m       \
    \ \e[33mvar\e[0m \e[36mnewText\e[0m : \e[35mString\e[0m = text.filterNot(\e[36mtext\e\
    [0m => text == \e[31m\"a\"\e[0m || text == \e[31m\"e\"\e[0m || text == \e[31m\"\
    i\"\e[0m || text == \e[31m\"o\"\e[0m || text == \e[31m\"u\"\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \                                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Values\
    \ of types Char and String cannot be compa"
  stdout: ''
  timestamp: 1659979274
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = Set.empty[Char]\n        for (c <- text) if (c == 'a' ||\
    \ c == 'e' || c == 'i' || c == 'o' || c == 'u') vowels += c\n        text = text.replaceAll(\"\
    [^\" + vowels + \"]\", \"\")\n        for (c <- text) if (vowels.contains(c))\
    \ text = text.replace(c, \"\")\n        text\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpi8m8s10i.scala:18:13 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        text = text.replaceAll(\e[31m\"[^\"\e[0m + vowels\
    \ + \e[31m\"]\"\e[0m, \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Reassignment to val text\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E134] Type Error: /tmp/tmpi8m8s10i.scala:19:60 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (c <- text) \e[33mif\e[0m (vowels.contains(c))\
    \ text = text.replace(c, \e[31m\"\"\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \                                          ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone\
    \ of the overloaded alternatives of \e[33mmethod\e[0m \e[35mreplace\e[0m in \e\
    [33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: CharSequence,\
    \ x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char, x$1: Char): String\n\
    \e[31m   |\e[0mmatch arguments ((c : Char), (\e[32m\"\"\e[0m : String))\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979269
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // create a mutable list of characters in text\n        val textChars\
    \ = mutable.ArrayBuffer.empty[Char]\n        for (char <- text) {\n          \
    \  textChars += char\n        }\n\n        // create an empty mutable list which\
    \ will store characters that will be removed\n        val vowels = mutable.ArrayBuffer.empty[Char]\n\
    \        vowels += 'a'\n        vowels += 'e'\n        vowels += 'i'\n       \
    \ vowels += 'o'\n        vowels += 'u'\n\n        // loop over characters of text\n\
    \        for (char <- textChars) {\n            if (vowels.contains(char)) {\n\
    \                // remove the character from the text\n                textChars\
    \ -= char\n            } else {\n                // if the character is not in\
    \ vowels then add it to the list\n                vowels += char\n           \
    \ }\n        }\n        textChars.mkString\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_kq3jvn5.scala:17:24 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mtextChars\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp_kq3jvn5.scala:23:21 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mvowels\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979268
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = \"\"\n        var vowels = \"aeiouAEIOU\".toCharArray\n\
    \        var length = text.length()\n        var i = 0\n        for (i <- 0 until\
    \ length) {\n            if (vowels(i) != 'a') {\n                result += text(i\
    \ , i)\n            }\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2m5s3tz1.scala:22:23 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                result += text(i , i)\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is\
    \ not a member of String - did you mean String.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp2m5s3tz1.scala:22:31 --------------------\e[0m\e[0m\n\
    \e[31m22 |\e[0m                result += text(i , i)\n\e[31m\e[31m   |\e[0m  \
    \                             ^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \           Found:    (Int, Int)\n\e[31m   |\e[0m                            \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979274
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\".toCharArray\n        val newString = new StringBuilder\n\
    \        for (i <- 0 to text.length-1) {\n            if (vowels.contains(text.charAt(i)))\
    \ newString.append(text.charAt(i))\n            else newString.append(\" \")\n\
    \        }\n        newString.toString()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpi41ptgj4.scala:26)\n\tat Problem.main(tmpi41ptgj4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val list = text.toList\n        val newList = mutable.ListBuffer.empty[Char]\n\
    \        for(str <- list) {\n            if(str matches \"[aeiouAEIOU]\") {\n\
    \                newList.append(str)\n            }\n        }\n        newList.toString()\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6nq73jqb.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mnewList\e[0m = mutable.ListBuffer.empty[\e\
    [35mChar\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6nq73jqb.scala:19:19 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(str matches \e[31m\"[aeiouAEIOU]\"\
    \e[0m) {\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \               value matches is not a member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659979276
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var new_text = text\n        var index = 0\n        while (index < text.length\
    \ && text.substring(index, index + 1).equals(\"a\") || text.substring(index, index\
    \ + 1).equals(\"e\") || text.substring(index, index + 1).equals(\"i\") || text.substring(index,\
    \ index + 1).equals(\"o\") || text.substring(index, index + 1).equals(\"u\"))\
    \ {\n            index = index + 1\n        }\n        while ((index - 1) >= 0\
    \ && !text.substring(index - 1, index + 1).equals(\"a\") && !text.substring(index\
    \ - 1, index + 1).equals(\"e\") && !text.substring(index - 1, index + 1).equals(\"\
    i\") && !text.substring(index - 1, index + 1).equals(\"o\") && !text.substring(index\
    \ - 1, index + 1).equals(\"u\")) {\n            new_text = new_text.substring(0,\
    \ index - 1) + \"\\n\" + new_text.substring(index)\n            index = index\
    \ - 1\n        }\n        return new_text\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.StringIndexOutOfBoundsException: begin 0, end 1, length 0\n\t\
    at java.base/java.lang.String.checkBoundsBeginEnd(String.java:4604)\n\tat java.base/java.lang.String.substring(String.java:2707)\n\
    \tat Problem$.removeVowels(tmp5pgxub3p.scala:18)\n\tat Problem$.main(tmp5pgxub3p.scala:28)\n\
    \tat Problem.main(tmp5pgxub3p.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = Set(\"a\",\"e\",\"i\",\"o\",\"u\")\n        var result =\
    \ \"\"\n        for (x <- text) {\n            if (!vowels.contains(x)) {\n  \
    \              result = result + x\n            }\n        }\n        return result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\")).equals((\"\
    \")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\"\
    )));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"\
    eeeee\")).equals((\"\")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\"\
    )));\n    assert(removeVowels((\"EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    ybcd\")).equals((\"ybcd\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprvscg0tl.scala:19:33\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (!vowels.contains(x))\
    \ {\n\e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e\
    [0m                                 Found:    (x : Char)\n\e[31m   |\e[0m    \
    \                             Required: String\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979276
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        // Write your code here.\n        // Remove vowels from a given text\n\
    \        if (text == \"\") return \"\"\n        var textList = text.split\n  \
    \      var noVowelsText = \"\"\n        for (i <- 0 until textList.length) {\n\
    \            var item = textList(i)\n            if (!item.contains(\"a\")) textList\
    \ = textList.remove(i)\n        }\n        noVowelsText = textList.toString()\n\
    \        return noVowelsText\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E051] Reference Error: /tmp/tmpx97xbt34.scala:19:28 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m \e[36mtextList\e[0m = text.split\n\
    \e[31m\e[31m   |\e[0m                       ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mAmbiguous\
    \ overload. The overloaded alternatives of \e[33mmethod\e[0m \e[35msplit\e[0m\
    \ in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: String):\
    \ Array[String]\n\e[31m   |\e[0m (x$0: String, x$1: Int): Array[String]\n\e[31m\
    \   |\e[0mboth match expected type <?>\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979274
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiouAEIOU\".toCharArray\n        var noVowel = text\n\
    \        noVowel = noVowel.filter( c => vowels.indexOf(c) == -1 )\n        return\
    \ noVowel\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979279
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var vowels = \"aeiouAEIOU\"\n        var vowelsSet = scala.collection.mutable.Set[Char](vowels.toCharArray)\n\
    \        var result = \"\"\n        text foreach {\n            char => {\n  \
    \              if (vowelsSet.contains(char))\n                {\n            \
    \        result += char\n                }\n            }\n        }\n       \
    \ result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxac6cmdt.scala:17:59\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mvowelsSet\e\
    [0m = scala.collection.mutable.Set[\e[35mChar\e[0m](vowels.toCharArray)\n\e[31m\e\
    [31m   |\e[0m                                                           ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                   Found:\
    \    \e[1m\e[31mArray\e[0m\e[1m\e[31m[\e[0mChar\e[1m\e[31m]\e[0m\n\e[31m   |\e\
    [0m                                                   Required: Char\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979277
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        if (text.length == 0) return text\n        var vowels = \"aeiou\"\n \
    \       var removed = \"\"\n        var vowelChars = text.filter(x => vowels.contains(x))\n\
    \        var replaced = text.filter(x => !(vowels.contains(x)))\n        for (vowelChar\
    \ <- vowelChars) {\n            removed = removed + (vowelChar + replaced.head)\n\
    \        }\n        return removed\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"\
    abcdef\\nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"\
    fedcba\")).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\
    \")));\n    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg4uu6f41.scala:28)\n\tat Problem.main(tmpg4uu6f41.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979279
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result : String = \"\"\n        text match {\n        case letter\
    \ : String if letter.toLowerCase() in vowels => result += letter\n        case\
    \ letter : String if letter.toUpperCase() in vowels => result += letter\n    \
    \    case letter : String if letter in vowels => result += letter\n        }\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8qb29m3v.scala:18:53 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mcase\e[0m letter : String \e[33mif\e[0m\
    \ letter.toLowerCase() in vowels => result += letter\n\e[31m\e[31m   |\e[0m  \
    \                              ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                               value in is not a member of String\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp8qb29m3v.scala:18:56 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mcase\e[0m letter : String \e[33mif\e[0m\
    \ letter.toLowerCase() in vowels => result += letter\n\e[31m\e[31m   |\e[0m  \
    \                                                      ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                                       Not found: vowels\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8qb29m3v.scala:19:53\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mcase\e[0m letter\
    \ : String \e[33mif\e[0m letter.toUpperCase() in vowels => result += letter\n\e\
    [31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                value in is not a member of String\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8qb29m3v.scala:19:56 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mcase\e[0m letter : String \e[33mif\e[0m\
    \ letter.toUpperCase() in vowels => result += letter\n\e[31m\e[31m   |\e[0m  \
    \                                                      ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                                       Not found: vowels\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8qb29m3v.scala:20:39\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mcase\e[0m letter\
    \ : String \e[33mif\e[0m letter in vowels => result += letter\n\e[31m\e[31m  \
    \ |\e[0m                                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                          value in is not a member of String\n\e[31m\e[31m--\
    \ [E006]"
  stdout: ''
  timestamp: 1659979279
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = \"\"\n        text.foreach(c => if (c == 'a' || c == 'e'\
    \ || c == 'i' || c == 'o' || c == 'u') {result += c} else result += c.toUpperCase)\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjdjqddrc.scala:17:114 -----------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        text.foreach(\e[36mc\e[0m => \e[33mif\e[0m (c\
    \ == \e[31m'a'\e[0m || c == \e[31m'e'\e[0m || c == \e[31m'i'\e[0m || c == \e[31m'o'\e\
    [0m || c == \e[31m'u'\e[0m) {result += c} \e[33melse\e[0m result += c.toUpperCase)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                   ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            value += is not a member of String - did you mean String.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpjdjqddrc.scala:17:119 -----------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        text.foreach(\e[36mc\e[0m => \e[33mif\e[0m (c\
    \ == \e[31m'a'\e[0m || c == \e[31m'e'\e[0m || c == \e[31m'i'\e[0m || c == \e[31m'o'\e\
    [0m || c == \e[31m'u'\e[0m) {result += c} \e[33melse\e[0m result += c.toUpperCase)\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \                                                             ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value toUpperCase is not a\
    \ member of Char\n2 errors found\n"
  stdout: ''
  timestamp: 1659979279
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        text.foreach(char => {\n            if((char == 'a' || char == 'e' ||\
    \ char == 'i' || char == 'o' || char == 'u') && !(text.length == 1 && char ==\
    \ 'z')) {\n                text = text.replace(char, \"\")\n            }\n  \
    \      })\n        text\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmp27a76kte.scala:18:28 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                text = text.replace(char, \e[31m\"\"\e\
    [0m)\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mreplace\e\
    [0m in \e[33mclass\e[0m \e[35mString\e[0m with types\n\e[31m   |\e[0m (x$0: CharSequence,\
    \ x$1: CharSequence): String\n\e[31m   |\e[0m (x$0: Char, x$1: Char): String\n\
    \e[31m   |\e[0mmatch arguments ((char : Char), (\e[32m\"\"\e[0m : String))\n1\
    \ error found\n"
  stdout: ''
  timestamp: 1659979277
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        var result = text\n        for (c <- text) {\n            val index =\
    \ c match {\n                case \"a\" => 0\n                case \"e\" => 1\n\
    \                case \"i\" => 2\n                case \"o\" => 3\n          \
    \      case \"u\" => 4\n                case \"A\" => 5\n                case\
    \ \"E\" => 6\n                case \"I\" => 7\n                case \"O\" => 8\n\
    \                case \"U\" => 9\n                case _ => -1\n            }\n\
    \            if (index != -1) {\n                result = result.substring(0,\
    \ index) + result.substring(index + 1, result.length)\n            }\n       \
    \ }\n        return result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(removeVowels((\"\")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\\
    nghijklm\")).equals((\"bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\"\
    )).equals((\"fdcb\")));\n    assert(removeVowels((\"eeeee\")).equals((\"\")));\n\
    \    assert(removeVowels((\"acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"\
    EcBOO\")).equals((\"cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpecsdl1bx.scala:19:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                \e[33mcase\e[0m \e[31m\"a\"\e[0m => \e\
    [31m0\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m\
    \        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpecsdl1bx.scala:20:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mcase\e[0m \e[31m\"e\"\e[0m => \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m\
    \        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpecsdl1bx.scala:21:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                \e[33mcase\e[0m \e[31m\"i\"\e[0m => \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m\
    \        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpecsdl1bx.scala:22:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mcase\e[0m \e[31m\"o\"\e[0m => \e\
    [31m3\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m\
    \        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpecsdl1bx.scala:23:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                \e[33mcase\e[0m \e[31m\"u\"\e[0m => \e\
    [31m4\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m\
    \        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpecsdl1bx.scala:24:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                \e[33mcase\e[0m \e[31m\"A\"\e[0m => \e\
    [31m5\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m\
    \        Values of types String and Char cannot be compared with == or !=\n\e\
    [31m\e[31m-- Error: /tmp/tmpecsdl1bx.scala:25:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                \e[33mcase\e[0m \e[31m\"E\"\e[0m => \e\
    [31m6\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m\
    \       "
  stdout: ''
  timestamp: 1659979279
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // remove_vowels is a function that takes string and returns string without\
    \ vowels.\n    // >>> removeVowels((\"\"))\n    // (\"\")\n    // >>> removeVowels((\"\
    abcdef\"))\n    // (\"bcdf\")\n    // >>> removeVowels((\"aaaaa\"))\n    // (\"\
    \")\n    // >>> removeVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> removeVowels((\"\
    zbcd\"))\n    // (\"zbcd\")\n    def removeVowels(text : String) : String = {\n\
    \        val vowels = \"aeiou\"\n        val withoutVowels = text.filter(!vowels.contains(_))\n\
    \        withoutVowels\n    }\n    def main(args: Array[String]) = {\n    assert(removeVowels((\"\
    \")).equals((\"\")));\n    assert(removeVowels((\"abcdef\\nghijklm\")).equals((\"\
    bcdf\\nghjklm\")));\n    assert(removeVowels((\"fedcba\")).equals((\"fdcb\")));\n\
    \    assert(removeVowels((\"eeeee\")).equals((\"\")));\n    assert(removeVowels((\"\
    acBAA\")).equals((\"cB\")));\n    assert(removeVowels((\"EcBOO\")).equals((\"\
    cB\")));\n    assert(removeVowels((\"ybcd\")).equals((\"ybcd\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3igpaqx9.scala:25)\n\tat Problem.main(tmp3igpaqx9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979279

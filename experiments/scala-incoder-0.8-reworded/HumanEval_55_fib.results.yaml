language: scala
name: HumanEval_55_fib
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 1l\n        var b = 2l\n        while\
    \ (n > 2l) {\n            var tmp = a\n            a = b\n            b = tmp\
    \ + b\n            n -= 1\n        }\n        a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbhwtq4zd.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val a = mutable.ListBuffer(1l, 2l)\n     \
    \   val b = mutable.ListBuffer(1l, 2l)\n        val c = mutable.ListBuffer(1l,\
    \ 2l)\n        val d = mutable.ListBuffer(1l, 2l)\n        a(n-1) += b(n-1)\n\
    \        b(n-1) += c(n-1)\n        c(n-1) += d(n-1)\n        d(n-1) += a(n-1)\
    \ + b(n-1) + c(n-1) + d(n-1)\n        a(n-1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyxvxzzb4.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyxvxzzb4.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyxvxzzb4.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyxvxzzb4.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978657
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0 || n == 1) \n            1\n  \
    \      else if (n == 2) \n            1\n        else\n            fib(n - 1)\
    \ + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(1L, 2L)\n \
    \       for (i in 0 to n) {\n            fibs += fibs.head\n        }\n      \
    \  fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpup13vp24.scala:13:26 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (i in \e[31m0\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 '<-' expected, but '{' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpup13vp24.scala:17:4 ----------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e[0m    '<-' expected,\
    \ but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpup13vp24.scala:12:19\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m = mutable.ArrayBuffer(\e[31m1L\e[0m, \e[31m2L\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpup13vp24.scala:15:9\
    \ -------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        }\n\e[31m\e[31m\
    \   |\e[0m         ^\e[0m\n\e[31m   |\e[0mvalue withFilter is not a member of\
    \ Null, but could be made available as an extension method.\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties\
    \ AsScalaMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration\
    \ AsScalaIterator\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator\
    \ asScala\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.map\
    \ AsScalaConcurrentMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.set\
    \ asScala\n\e[31m   |\e[0m\n4 errors found\n"
  stdout: ''
  timestamp: 1659978662
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // To save memory, keep an array that stores\
    \ the current two Fibonacci numbers.\n        var a = mutable.ArrayBuffer(0L,\
    \ 1L)\n        var b = mutable.ArrayBuffer(0L, 1L)\n        val len = a.length\n\
    \        val len2 = b.length\n        for(i <- 0 until len) {\n            a(i)\
    \ = a(i) + b(i) // Add two fibonacci numbers.\n            b(i) = a(i) - b(i)\
    \ // Subtract two fibonacci numbers.\n        }\n        val ret = nth // Return\
    \ the n-th Fibonacci number if n is valid; else return 0L.\n        if(ret !=\
    \ len2) { // (If n is invalid, we have returned n times the same number.)\n  \
    \          return 0L\n        } else {\n            a.init.toList // Convert to\
    \ a list.\n        }\n        return a(0)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppbtnttk5.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m0L\e[0m, \e[31m1L\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmppbtnttk5.scala:14:16 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e\
    [31m0L\e[0m, \e[31m1L\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmppbtnttk5.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mret\e[0m = nth \e[34m//\
    \ Return the n-th Fibonacci number if n is valid; else return 0L.\e[0m\n\e[31m\e\
    [31m   |\e[0m                  ^^^\e[0m\n\e[31m   |\e[0m                  Not\
    \ found: nth\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibSeq = mutable.Stack[Long]()\n     \
    \   fibSeq push 1l\n        fibSeq push 0l\n        fibSeq push 0l\n        while(fibSeq.length\
    \ <= n) {\n            val top = fibSeq.peek\n            val newTop = top + fibSeq.pop\n\
    \            fibSeq push newTop\n        }\n        fibSeq.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwreqoufd.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibSeq\e[0m = mutable.Stack[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a : Long = 0\n        var b : Long = 1\n\
    \        var c : Long = 1\n\n        for {\n            i <- 0 until n\n     \
    \   } yield {\n            c = a + b\n            a = b\n            b = c\n \
    \           c\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9i0n6zix.scala:17:25\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            i <- \e[31m0\e[0m\
    \ until n\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e\
    [0m                         Found:    (n : Long)\n\e[31m   |\e[0m            \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val nums = mutable.ArrayBuffer[(Long, Long)]()\n\
    \        nums += ((1l, 1l))\n        nums += ((2l, 1l))\n        var i = 0\n \
    \       while (i <= n) {\n            nums += nums.head._1 -> nums.head._1 + nums.head._2\n\
    \            i += 1\n        }\n        nums.head._2\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3m24vhz2.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer[(\e\
    [35mLong\e[0m, \e[35mLong\e[0m)]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n<2l) return 1l\n        if (n>2l) return\
    \ fib(2l) + fib(1l-1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk4n89fhq.scala:13:8\
    \ ---------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (n>\e\
    [31m2l\e[0m) \e[33mreturn\e[0m fib(\e[31m2l\e[0m) + fib(\e[31m1l\e[0m-\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m        Found:    Unit\n\e[31m   |\e[0m        Required: Long\n\
    \e[31m   |\e[0m        Maybe you are missing an else part for the conditional?\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978659
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n<=0) throw new Exception(\"fib function\
    \ argument 'n' must be positive.\")\n        if (n==1) return 1\n        if (n==2)\
    \ return 1l\n        val nums = Vector(fib(n-1) + fib(n-2))\n        nums(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg3j5ozih.scala:16:13\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        nums(n)\n\e[31m\e[31m\
    \   |\e[0m             ^\e[0m\n\e[31m   |\e[0m             Found:    (n : Long)\n\
    \e[31m   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Base cases for n <= 0 and n >= 2 are handled\
    \ separately.\n        if (n <= 0) 1\n        else if (n >= 2) 2\n        else\
    \ fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplltfve4f.scala:18)\n\tat Problem.main(tmplltfve4f.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n==0) 1\n        else if (n==1) 1\n  \
    \      else fib(n-2) + fib(n-1)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph9d3e5jn.scala:17)\n\tat Problem.main(tmph9d3e5jn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978660
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      if (n == 0 || n == 1) {\n        n\n      }\n\
    \      else {\n        fib(n - 1) + fib(n - 2)\n      }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs: Seq[Long] = Seq(1l,2l,3l,5l,8l,13l,21l)\n\
    \        if (fibs.size <= n) fibs(n)\n        else fib(fibs.tail).+(fib(fibs.init))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmperaep1xn.scala:13:33\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (fibs.size\
    \ <= n) fibs(n)\n\e[31m\e[31m   |\e[0m                                 ^\e[0m\n\
    \e[31m   |\e[0m                                 Found:    (n : Long)\n\e[31m \
    \  |\e[0m                                 Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmperaep1xn.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m fib(fibs.tail).+(fib(fibs.init))\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \ Found:    scala.collection.mutable.Seq[Long @uncheckedVariance]\n\e[31m   |\e\
    [0m         Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmperaep1xn.scala:14:39 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33melse\e[0m fib(fibs.tail).+(fib(fibs.init))\n\e[31m\e[31m\
    \   |\e[0m                                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \       Found:    scala.collection.mutable.Seq[Long @uncheckedVariance]\n\e[31m\
    \   |\e[0m         Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0)\n            return 1\n      \
    \  else if (n == 1)\n            return 1\n        else\n            return fib(n-1)\
    \ + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpjndfiidl.scala:20)\n\tat Problem.main(tmpjndfiidl.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val a = scala.math.BigInt(0)\n        val\
    \ b = scala.math.BigInt(1)\n        var tmp = 0\n\n        if (n < 2) return n\n\
    \        while (tmp < n) {\n            tmp = a\n            a = a + b\n     \
    \       b = tmp + b\n        }\n\n        return a\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp78_2t2fc.scala:18:18\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            tmp = a\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (a : BigInt)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp78_2t2fc.scala:19:14 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            a = a + b\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp78_2t2fc.scala:20:14 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            b = tmp + b\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val b\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp78_2t2fc.scala:23:15\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mreturn\e[0m a\n\
    \e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m               Found:\
    \    (a : BigInt)\n\e[31m   |\e[0m               Required: Long\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // base case\n        if (n == 0 || n == 1)\n\
    \            return n\n        else\n            // recursive case\n         \
    \   return fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978661
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) {\n            return n\n   \
    \     }\n        return fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978661
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n==0) 0\n        else if (n==1) 1\n  \
    \      else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val cache = mutable.LinkedHashMap[Int, Long]()\n\
    \        cache.put(0, 1l)\n        if (cache.containsKey(n)) {\n            return\
    \ cache.get(n)\n        }\n        val fib0 = (fib(n-1) + fib(n-2))\n        cache.put(n,\
    \ fib0)\n        fib0\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpl9_s5wap.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcache\e[0m = mutable.LinkedHashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978658
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fib_nums = mutable.MutableList[Long](1l,1l)\n\
    \        var i = 0\n        var j = 1\n        while(i < n) {\n            j +=\
    \ fib_nums(i)\n            fib_nums(i) = j\n            i += 1\n        }\n  \
    \      fib_nums(n-1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp17l6wc70.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib_nums\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m](\e[31m1l\e[0m,\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978658
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val n2 = n+n\n        val n3 = n2+n2\n   \
    \     val n4 = n3+n3\n        val n5 = n4+n4\n        n5\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8mtgw0ud.scala:19)\n\tat Problem.main(tmp8mtgw0ud.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a : Long = 0l\n        var b : Long =\
    \ 1l\n        for(i <- 0 to n-1){\n          val temp = a\n          a = b\n \
    \         b = temp + a\n        }\n        b\n      }\n\n    def main(args: Array[String])\
    \ {\n        val l = fib(10l)\n        println(l)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp_fe25ykm.scala:22:34 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e\
    [35mArray\e[0m[\e[35mString\e[0m]) {\n\e[31m\e[31m   |\e[0m                  \
    \                ^\e[0m\n\e[31m   |\e[0m                                  '='\
    \ expected, but '{' found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_fe25ykm.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m to n-\e[31m1\e[0m){\n\e[31m\e[31m   |\e[0m                      ^^^\e\
    [0m\n\e[31m   |\e[0m                      Found:    Long\n\e[31m   |\e[0m    \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E120] Naming Error:\
    \ /tmp/tmp_fe25ykm.scala:26:8 ----------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e\
    [35mString\e[0m]) = {\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m  \
    \  Double definition:\n\e[31m   |\e[0m    def main(args: Array[String]): Null\
    \ in \e[33mobject\e[0m \e[35mProblem\e[0m at line 22 and\n\e[31m   |\e[0m    def\
    \ main(args: Array[String]): Unit in \e[33mobject\e[0m \e[35mProblem\e[0m at line\
    \ 26\n\e[31m   |\e[0m    have matching parameter types.\n3 errors found\n"
  stdout: ''
  timestamp: 1659978661
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if(n<=1) n else fib(n-1)+fib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978666
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Initialize Fib(n).\n        // Note that\
    \ Fib(0) = 0 and Fib(1) = 1.\n        val Fib : mutable.Long = mutable.Long(0);\n\
    \        val Fib1 : int = Fib + 1;\n\n        // Update Fib(n).\n        // Fib(n)\
    \ = Fib(n-1) + Fib(n-2) + 1.\n        while (Fib > n)\n        {\n           \
    \ Fib.update(Fib1 - 1);\n            Fib1.update(0);\n            Fib1.update(1);\n\
    \        }\n        Fib\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffewodf5.scala:14:18 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mFib\e[0m : mutable.Long\
    \ = mutable.Long(\e[31m0\e[0m);\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpffewodf5.scala:14:33 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mFib\e[0m : mutable.Long\
    \ = mutable.Long(\e[31m0\e[0m);\n\e[31m\e[31m   |\e[0m                       \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                                 Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffewodf5.scala:15:19\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mFib1\e[0m : \e[35mint\e[0m = Fib + \e[31m1\e[0m;\n\e[31m\e[31m   |\e[0m  \
    \                 ^^^\e[0m\n\e[31m   |\e[0m                   Not found: type\
    \ int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978664
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val a = 1;\n        val b = 1;\n        var\
    \ i = 1;\n        var x = a\n        while ( i <= n ) {\n            x =  ( a\
    \ + b )\n            i += 1\n            b = a\n            a = x\n        }\n\
    \        return x\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp20l2gf46.scala:19:14 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            b = a\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp20l2gf46.scala:20:14 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            a = x\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978665
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978561
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      def fib_seq(n : Long) =\n        if (n <= 1)\
    \ 1\n        else fib_seq(n - 1) + fib_seq(n - 2)\n      fib_seq(n)\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E044] Cyclic Error: /tmp/tmpcszyl541.scala:14:13 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m fib_seq(n - \e[31m1\e[0m) + fib_seq(n\
    \ - \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m             ^\e[0m\n\e[31m   |\e[0m \
    \            Overloaded or recursive \e[33mmethod\e[0m \e[35mfib_seq\e[0m needs\
    \ return type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978665
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs: mutable.Set[Long] = mutable.Set()\n\
    \        // Set fibs to contain all Fibonacci numbers up to n.\n        fibs.add(0l)\n\
    \        fibs.add(1l)\n        for (i <- 2 to n) {\n            fibs.add(i + fibs.head)\n\
    \        }\n        fibs.head\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpq_1fdyjh.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m: mutable.Set[\e\
    [35mLong\e[0m] = mutable.Set()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpq_1fdyjh.scala:12:38 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m: mutable.Set[\e\
    [35mLong\e[0m] = mutable.Set()\n\e[31m\e[31m   |\e[0m                        \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                                 \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpq_1fdyjh.scala:16:23 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to n) {\n\e[31m\e[31m   |\e\
    [0m                       ^\e[0m\n\e[31m   |\e[0m                       Found:\
    \    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659978668
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val rec : Long => Long = { rec : Long =>\n\
    \            if (n <= 1) rec(n)\n            else rec(n-1) + rec(n-2)\n      \
    \  }\n        rec(0l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpsi8btjwn.scala:12:46 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mrec\e[0m : \e[35mLong\e\
    [0m => \e[35mLong\e[0m = { \e[36mrec\e[0m : \e[35mLong\e[0m =>\n\e[31m\e[31m \
    \  |\e[0m                                              ^\e[0m\n\e[31m   |\e[0mparentheses\
    \ are required around the parameter of a lambda\n\e[31m   |\e[0mThis construct\
    \ can be rewritten automatically under -rewrite -source 3.0-migration.\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpsi8btjwn.scala:13:24 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mif\e[0m (n <= \e[31m1\e[0m) rec(n)\n\
    \e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m       \
    \                 \e[33mparameter\e[0m \e[35mrec\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpsi8btjwn.scala:14:17 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33melse\e[0m rec(n-\e[31m1\e[0m) + rec(n-\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                 ^^^\e[0m\n\e[31m   |\e[0m \
    \                \e[33mparameter\e[0m \e[35mrec\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978665
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1L)\n            1L\n        else\n\
    \            fib(n - 1) + fib(n - 2L)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfz4rgtvz.scala:18)\n\tat Problem.main(tmpfz4rgtvz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978668
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val l = n.toInt\n        var prev = 0\n  \
    \      var current = 1\n        for(i <- 1 until l)\n        {\n            prev\
    \ = current\n            current = current + prev\n        }\n        current\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp__rtx9ii.scala:23)\n\tat Problem.main(tmp__rtx9ii.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978671
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var fib0 = 1L\n        var fib1 = 1L\n   \
    \     var fib2 = 1L\n        var fib3 = 1L\n        var fib4 = fib0\n        fib0\
    \ += (fib1 + fib2)\n        fib1 = fib0\n        fib0 += fib3\n        fib1 =\
    \ fib0\n        fib0 += fib4\n        fib3 = fib0\n        fib0 += fib4\n    \
    \    fib3 = fib0\n        fib4 = fib0\n        fib0 += fib3\n        fib3 = fib0\n\
    \        fib0 += fib4\n        fib4 = fib0\n        fib0 += fib4\n        fib4\
    \ = fib0\n        fib0 += fib3\n        fib3 = fib0\n        fib0 += fib4\n  \
    \      fib4 = fib0\n        fib0 += fib4\n        fib4 = fib0\n        fib0 +=\
    \ fib3\n        fib3 = fib0\n        fib0 += fib4\n        fib4 = fib0\n     \
    \   fib0 += fib4\n        fib4 = fib0\n        fib0 += fib3\n        fib3 = fib0\n\
    \        fib0 += fib4\n        fib4 = fib0\n        fib0 += fib4\n        fib4\
    \ = fib0\n        fib0 += fib3\n        fib3 = fib0\n        fib0 += fib4\n  \
    \      fib4 = fib0\n        fib0 += fib4\n        fib4 = fib0\n        fib0 +=\
    \ fib3\n        fib3 = fib0\n        fib0 += fib4\n        fib4 = fib0\n     \
    \   fib0 += fib4\n        fib4 = fib0\n        fib0 += fib3\n        fib3 = fib0\n\
    \        fib0 += fib4\n        fib4 = fib0\n        fib0 += fib4\n        fib4\
    \ = fib0\n        fib0 += fib3\n        fib3 = fib0\n        fib0 += fib4\n  \
    \      fib4 = fib0\n        fib0 += fib4\n        fib4 = fib0\n        fib0 +=\
    \ fib3\n        fib3 = fib0\n        fib0 += fib4\n        fib4 = fib0\n     \
    \   fib0 += fib4\n        fib4 = fib0\n        fib0 += fib3\n        fib3 = fib0\n\
    \        fib0 += fib4\n        fib4 = fib0\n        fib0 += fib4\n        fib4\
    \ = fib0\n        fib0 += fib3\n        fib3 = fib0\n        fib0 += fib4\n  \
    \      fib4 = fib0\n        fib0 += fib4\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp54pwhye5.scala:90:8\
    \ ---------------------\e[0m\e[0m\n\e[31m90 |\e[0m        fib0 += fib4\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Unit\n\
    \e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978670
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        require(n > 1, \"fib: n is invalid\")\n  \
    \      if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IllegalArgumentException: requirement failed: fib: n is invalid\n\
    \tat scala.Predef$.require(Predef.scala:337)\n\tat Problem$.fib(tmposkqns1y.scala:12)\n\
    \tat Problem$.fib(tmposkqns1y.scala:14)\n\tat Problem$.fib(tmposkqns1y.scala:14)\n\
    \tat Problem$.fib(tmposkqns1y.scala:14)\n\tat Problem$.fib(tmposkqns1y.scala:14)\n\
    \tat Problem$.fib(tmposkqns1y.scala:14)\n\tat Problem$.fib(tmposkqns1y.scala:14)\n\
    \tat Problem$.fib(tmposkqns1y.scala:14)\n\tat Problem$.fib(tmposkqns1y.scala:14)\n\
    \tat Problem$.fib(tmposkqns1y.scala:14)\n\tat Problem$.main(tmposkqns1y.scala:17)\n\
    \tat Problem.main(tmposkqns1y.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978671
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 0) throw new IllegalArgumentException(s\"\
    Negative number $n\")\n        if (n <= 2) n\n        else\n            {val f1\
    \ = fib(n - 1l) ; val f2 = fib(n - 2l) ; f1 + f2}\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphsnbu_mo.scala:18)\n\tat Problem.main(tmphsnbu_mo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978671
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978562
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val memo = new Array[Long](2l)\n        (memo(0)),\
    \ (memo(1))\n        val x = memo.indexOf((memo(1) + memo(2))) % memo.length\n\
    \        memo(x)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp2j2vicrx.scala:13:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        (memo(\e[31m0\e[0m)), (memo(\e[31m1\e[0m))\n\e\
    [31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m                 end\
    \ of statement expected but ',' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmp2j2vicrx.scala:12:35 --------------------\e[0m\e[0m\n\e[31m12 |\e[0m\
    \        \e[33mval\e[0m \e[36mmemo\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e\
    [0m](\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                                   ^^\e\
    [0m\n\e[31m   |\e[0m                                   Found:    (\e[31m2L\e[0m\
    \ : Long)\n\e[31m   |\e[0m                                   Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0L) {\n            return 0L\n  \
    \      }\n        val a = mutable.ArrayBuffer(2L); a.append(1L); a.append(0L)\n\
    \        val b = mutable.ArrayBuffer(2L); b.append(0L); b.append(1L)\n       \
    \ while (a(1) < n ) {\n            val a : mutable.ArrayBuffer[Long] = a\n   \
    \         val b : mutable.ArrayBuffer[Long] = b\n            val sum : Long =\
    \ (a(1) + (b(1))).toInt\n            val index : Int = (sum - a(1)) + 1\n    \
    \        val value : Long = a.slice(index, index+1).sum\n            val i : Long\
    \ = value.toLong\n            if (sum > n) {\n                val t : mutable.ArrayBuffer[Long]\
    \ = b\n                val u : mutable.ArrayBuffer[Long] = a\n               \
    \ u.concat(t.slice(1, t.size))\n                return value\n            }\n\
    \            a.append(value)\n            b.append(value)\n        }\n       \
    \ a\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wsjnqu3.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m2L\e[0m); a.append(\e[31m1L\e[0m); a.append(\e[31m0L\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wsjnqu3.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mb\e[0m = mutable.ArrayBuffer(\e[31m2L\e[0m); b.append(\e[31m0L\e[0m); b.append(\e\
    [31m1L\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1wsjnqu3.scala:18:20 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            \e[33mval\e[0m \e[36ma\e[0m : mutable.ArrayBuffer[\e\
    [35mLong\e[0m] = a\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp1wsjnqu3.scala:19:20 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mb\e[0m : mutable.ArrayBuffer[\e\
    [35mLong\e[0m] = b\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp1wsjnqu3.scala:25:24 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                \e[33mval\e[0m \e[36mt\e[0m : mutable.ArrayBuffer[\e\
    [35mLong\e[0m] = b\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                        Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp1wsjnqu3.scala:26:24 -------------------"
  stdout: ''
  timestamp: 1659978667
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val n = if(n < 2) 1 else n\n        val fib_matrix\
    \ = mutable.ArrayBuffer(\n            mutable.ArrayBuffer(0, 1),\n           \
    \ mutable.ArrayBuffer(0, 1)\n        )\n        for (i <- 0 until n) {\n     \
    \       fib_matrix += i to 0\n        }\n        fib_matrix += 1 to 1\n      \
    \  fib_matrix += 2 to 2\n        fib_matrix += 3 to 3\n        fib_matrix += 4\
    \ to 5\n        fib_matrix += 5 to 8\n        fib_matrix += 6 to 13\n        fib_matrix\
    \ += 7 to 21\n        fib_matrix += 8 to 34\n        fib_matrix += 9 to 55\n \
    \       fib_matrix += 10 to 89\n        fib_matrix += 11 to 144\n        fib_matrix\
    \ += 12 to 233\n        fib_matrix += 13 to 377\n        fib_matrix += 14 to 610\n\
    \        fib_matrix += 15 to 987\n        fib_matrix += 16 to 1597\n        fib_matrix\
    \ += 17 to 2584\n        fib_matrix += 18 to 4181\n        fib_matrix += 19 to\
    \ 6765\n        fib_matrix += 20 to 10946\n        fib_matrix += 21 to 17711\n\
    \        fib_matrix += 22 to 28657\n        fib_matrix += 23 to 46368\n      \
    \  fib_matrix += 24 to 75025\n        fib_matrix += 25 to 121393\n        fib_matrix\
    \ += 26 to 196418\n        fib_matrix += 27 to 317811\n        fib_matrix += 28\
    \ to 514229\n        fib_matrix += 29 to 832040\n        fib_matrix += 30 to 1346269\n\
    \        fib_matrix += 31 to 2036501\n        fib_matrix += 32 to 2971215\n  \
    \      fib_matrix += 33 to 4150783\n        fib_matrix += 34 to 6755103\n    \
    \    fib_matrix += 35 to 10946301\n        fib_matrix += 36 to 17711773\n    \
    \    fib_matrix += 37 to 28657143\n        fib_matrix += 38 to 41810671\n    \
    \    fib_matrix += 39 to 67650071\n        fib_matrix += 40 to 109466301\n   \
    \     fib_matrix += 41 to 177086663\n        fib_matrix += 42 to 286572237\n \
    \       fib_matrix += 43 to 418110767\n        fib_matrix += 44 to 675501093\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp19j24zhe.scala:12:19 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = \e[33mif\e[0m(n\
    \ < \e[31m2\e[0m) \e[31m1\e[0m \e[33melse\e[0m n\n\e[31m\e[31m   |\e[0m      \
    \             ^\e[0m\n\e[31m   |\e[0m                   Recursive \e[33mvalue\e\
    [0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmp19j24zhe.scala:12:33 ---------------------------\e[0m\e[0m\n\e[31m12\
    \ |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = \e[33mif\e[0m(n < \e[31m2\e[0m)\
    \ \e[31m1\e[0m \e[33melse\e[0m n\n\e[31m\e[31m   |\e[0m                      \
    \           ^\e[0m\n\e[31m   |\e[0m                                 Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp19j24zhe.scala:13:25 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfib_matrix\e[0m = mutable.ArrayBuffer(\n\
    \e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978668
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2L\n        var b = 3L\n        var\
    \ tmp = b\n        while(tmp <= n) {\n            tmp = a\n            a = a +\
    \ b\n            b = tmp\n        }\n        return a\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpmhkkhz8h.scala:23)\n\tat Problem.main(tmpmhkkhz8h.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val memo: mutable.HashMap[Long, Long] = mutable.HashMap(0\
    \ -> 0, 1 -> 1)\n        val fib_cache: mutable.HashMap[Long, Long] = mutable.HashMap(0\
    \ -> 0)\n        def fib_aux(n : Long, cache: mutable.HashMap[Long, Long]) : Long\
    \ = {\n            val fib : Long = cache.get(n)\n            if (fib == null)\
    \ {\n                val result = fib_aux(n + (n % 2), cache) + fib_aux(n - (n\
    \ % 2), cache)\n                cache.put(fib_aux(n + (n % 2), cache), result)\n\
    \                result\n            } else {\n                fib\n         \
    \   }\n        }\n        fib_aux(n, memo)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidgs1ufh.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmemo\e[0m: mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m] = mutable.HashMap(\e[31m0\e[0m -> \e[31m0\e[0m,\
    \ \e[31m1\e[0m -> \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpidgs1ufh.scala:12:48 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmemo\e[0m: mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m] = mutable.HashMap(\e[31m0\e[0m -> \e[31m0\e[0m,\
    \ \e[31m1\e[0m -> \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                       \
    \                         ^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \                          Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpidgs1ufh.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfib_cache\e[0m: mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m] = mutable.HashMap(\e[31m0\e[0m -> \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpidgs1ufh.scala:13:53 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfib_cache\e[0m: mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m] = mutable.HashMap(\e[31m0\e[0m -> \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidgs1ufh.scala:14:37\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mdef\e[0m \e\
    [36mfib_aux\e[0m("
  stdout: ''
  timestamp: 1659978669
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2l;\n        var b = 1l;\n       \
    \ var sum = 0L;\n        while (true) {\n            sum += b\n            if\
    \ (sum > n) break;\n            b = a;\n            a = a + b;\n        }\n  \
    \      return sum\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_aiw50mt.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (sum > n) break;\n\e[31m\e\
    [31m   |\e[0m                         ^^^^^\e[0m\n\e[31m   |\e[0m            \
    \             Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978668
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 2) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978670
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var result = 1L\n        var temp2 = 0L\n\
    \        while (temp2 < n) {\n            result = result + temp2\n          \
    \  temp2 = temp2 + 1L\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_8oanx_0.scala:21)\n\tat Problem.main(tmp_8oanx_0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978671
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val x = 0\n        val y = 0\n        while(\
    \ x < n ){\n            val temp = x\n            x = y + x\n            y = temp\n\
    \        }\n        y\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpkc72iecx.scala:16:14 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            x = y + x\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val x\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpkc72iecx.scala:17:14 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            y = temp\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val y\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978668
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var fibs = [1l,2l,3l,5l,8l] \n        while(fibs.size\
    \ < n) fibs = fibs.++:(fibs.drop(1) + fibs.drop(2))\n        fibs(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw66j2r6d.scala:12:20 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mfibs\e[0m = [\e[31m1l\e\
    [0m,\e[31m2l\e[0m,\e[31m3l\e[0m,\e[31m5l\e[0m,\e[31m8l\e[0m] \n\e[31m\e[31m  \
    \ |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    an identifier\
    \ expected, but long literal found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw66j2r6d.scala:12:23\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mfibs\e[0m = [\e[31m1l\e[0m,\e[31m2l\e[0m,\e[31m3l\e[0m,\e[31m5l\e[0m,\e\
    [31m8l\e[0m] \n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       an identifier expected, but long literal found\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmpw66j2r6d.scala:12:26 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mfibs\e[0m = [\e[31m1l\e\
    [0m,\e[31m2l\e[0m,\e[31m3l\e[0m,\e[31m5l\e[0m,\e[31m8l\e[0m] \n\e[31m\e[31m  \
    \ |\e[0m                          ^\e[0m\n\e[31m   |\e[0m                    \
    \      an identifier expected, but long literal found\n\e[31m\e[31m-- [E040] Syntax\
    \ Error: /tmp/tmpw66j2r6d.scala:12:29 ---------------------------\e[0m\e[0m\n\e\
    [31m12 |\e[0m        \e[33mvar\e[0m \e[36mfibs\e[0m = [\e[31m1l\e[0m,\e[31m2l\e\
    [0m,\e[31m3l\e[0m,\e[31m5l\e[0m,\e[31m8l\e[0m] \n\e[31m\e[31m   |\e[0m       \
    \                      ^\e[0m\n\e[31m   |\e[0m                          an identifier\
    \ expected, but long literal found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw66j2r6d.scala:12:32\
    \ ---------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m\
    \ \e[36mfibs\e[0m = [\e[31m1l\e[0m,\e[31m2l\e[0m,\e[31m3l\e[0m,\e[31m5l\e[0m,\e\
    [31m8l\e[0m] \n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e\
    [31m   |\e[0m                          an identifier expected, but long literal\
    \ found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpw66j2r6d.scala:13:0 ----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mwhile\e[0m(fibs.size < n) fibs = fibs.++:(fibs.drop(\e\
    [31m1\e[0m) + fibs.drop(\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m^^^^^\e[0m\n\e[31m\
    \   |\e[0m'=>' expected, but 'end of statement' found\n\e[31m\e[31m-- [E008]"
  stdout: ''
  timestamp: 1659978674
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fib: mutable.MutableList[Long] = mutable.MutableList.empty[Long]\n\
    \        fib(0) = 0\n        fib(1) = 1\n        fib.add(2)\n        fib.add(\
    \ fib(0)+fib(1)) \n        while (fib.size < n) { fib.add(fib(0) + fib(1))}\n\
    \        fib(n) \n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps9wf7hs_.scala:12:17 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m: mutable.MutableList[\e\
    [35mLong\e[0m] = mutable.MutableList.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                 ^^^^^^^\e[0m\n\e[31m   |\e[0m                 Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps9wf7hs_.scala:12:45\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfib\e[0m: mutable.MutableList[\e[35mLong\e[0m] = mutable.MutableList.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                        \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                                          \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978668
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if(n<0L || n>20) -1L\n        else (n>0L)\
    \ ? fib(n-1L) + fib(n-2L) : n\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfpyp8wsy.scala:13:46 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33melse\e[0m (n>\e[31m0L\e[0m) ? fib(n-\e\
    [31m1L\e[0m) + fib(n-\e[31m2L\e[0m) : n\n\e[31m\e[31m   |\e[0m               \
    \                               ^\e[0m\n\e[31m   |\e[0m                      \
    \                        Not found: type n\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpfpyp8wsy.scala:13:20 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33melse\e[0m (n>\e[31m0L\e[0m) ? fib(n-\e[31m1L\e\
    [0m) + fib(n-\e[31m2L\e[0m) : n\n\e[31m\e[31m   |\e[0m             ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m             value ? is not a member of Boolean\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978671
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0l\n        var b = 5l\n        var\
    \ i = 0l\n        while (i < n) {\n            val temp = a\n            a = b\n\
    \            b = temp + b\n            i += 1\n        }\n        a\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpb_6gk8ky.scala:24)\n\tat Problem.main(tmpb_6gk8ky.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978675
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib_aux (n1 : Long, n2 : Long) : Long\
    \ = {\n            if (n1 < n2) \n                fib_aux(n1+n2, n1)\n       \
    \     else \n                n2\n        }\n        return fib_aux(n, 1l)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbcqfncjh.scala:21)\n\tat Problem.main(tmpbcqfncjh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978674
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.empty[Long]\n\
    \        val b = mutable.ArrayBuffer.empty[Long]\n        a(0) = 0\n        a(1)\
    \ = 1\n        b(0) = 1\n        var n = 0\n        while (n < n){\n         \
    \   n += 1\n            a += b(0)\n            b += b(1)\n        }\n        a(0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn349fncx.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpn349fncx.scala:13:16 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978671
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib_iter(n: Long, n1: Long, n2: Long):\
    \ Long = {\n            if (n == 0) n1\n            else {\n                val\
    \ newN = n1 + n2\n                fib_iter(n + 1, n1, newN)\n            }\n \
    \       }\n        fib_iter(n, n, n).asInstanceOf[Long]\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659978679
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib1(n: Long, x: Long, y: Long): Long\
    \ = {\n            if(n == 0) x\n            else fib1(n-1, x+1, y+x)\n      \
    \  }\n        fib1(n.toInt, 1l, 1l)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyizpcs9u.scala:19)\n\tat Problem.main(tmpyizpcs9u.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978676
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var last = 1\n        var next = 2\n     \
    \   var sum = 0\n        while (n > 2) {\n            sum += next\n          \
    \  next += last\n            last = next\n            n -= 1\n        }\n    \
    \    sum\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7xwwc3ih.scala:19:14 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978677
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 2) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpglz26qwh.scala:16)\n\tat Problem.main(tmpglz26qwh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978677
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var fibonacci : Long = 0l\n        var fibonacciTail\
    \ = 0l\n        if (n <= 2l)\n            fibonacciTail = 0l\n        else if\
    \ (n == 2l)\n            fibonacciTail = 1l\n        else\n            fibonacciTail\
    \ = fibonacciTail + fibonacciTail\n            fibonacci = fibonacciTail + fibonacci\n\
    \            fibonacciTail = fibonacciTail + fibonacciTail\n            fibonacciTail\
    \ = fibonacciTail + fibonacciTail\n            fibonacciTail = fibonacciTail +\
    \ fibonacciTail\n            fibonacciTail = fibonacciTail + fibonacciTail\n \
    \           fibonacciTail = fibonacciTail + fibonacciTail\n            fibonacciTail\
    \ = fibonacciTail + fibonacciTail\n            fibonacciTail = fibonacciTail +\
    \ fibonacciTail\n            fibonacciTail = fibonacciTail + fibonacciTail\n \
    \           fibonacciTail = fibonacciTail + fibonacciTail\n            fibonacciTail\
    \ = fibonacciTail + fibonacciTail\n            fibonacciTail = fibonacciTail +\
    \ fibonacciTail\n            fibonacciTail = fibonacciTail + fibonacciTail\n \
    \           fibonacciTail = fibonacciTail + fibonacciTail\n            fibonacciTail\
    \ = fibonacciTail + fibonacciTail\n            fibonacciTail = fibonacciTail +\
    \ fibonacciTail\n            fibonacciTail = fibonacciTail + fibonacciTail\n \
    \           fibonacciTail = fibonacciTail + fibonacciTail\n            fibonacciTail\
    \ = fibonacciTail + fibonacciTail\n            fibonacciTail = fibonacciTail +\
    \ fibonacciTail\n            fibonacciTail = fibonacciTail + fibonacciTail\n \
    \           fibonacciTail = fibonacciTail + fibonacciTail\n            fibonacciTail\
    \ = fibonacciTail + fibonacciTail\n            fibonacciTail = fi\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxtskm3g2.scala:15:26\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            fibonacciTail = \e\
    [31m0l\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            Found:    Unit\n\e[31m   |\e[0m            Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxtskm3g2.scala:17:26\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            fibonacciTail = \e\
    [31m1l\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            Found:    Unit\n\e[31m   |\e[0m            Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxtskm3g2.scala:43:28\
    \ ------------------------\e[0m\e[0m\n\e[31m43 |\e[0m            fibonacciTail\
    \ = fi\n\e[31m\e[31m   |\e[0m                            ^^\e[0m\n\e[31m   |\e\
    [0m                            Not found: fi\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978678
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 1\n        else if (n <= 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpado8wfkd.scala:17)\n\tat Problem.main(tmpado8wfkd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978677
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Factor not found.\n        if (n < 2) 1\n\
    \        // Factor not found.\n        else if (n <= 3) return n\n        // Factor\
    \ not found.\n        else if (n % 2 == 0) fib(n - 1) + fib(n - 2)\n        //\
    \ Factor not found.\n        else fib(n / 2) + fib(3 * n / 2)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:17)\n\tat Problem$.fib(tmpby7n7h1y.scala:19)\n\
    \tat Problem$.fib(tmpby7n7h1y.scala:19)\n\tat Problem$.fib(tmpby7n7h1y.scala:17)\n\
    \tat"
  stdout: ''
  timestamp: 1659978678
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var fib1 : Long = 1\n        var fib2 : Long\
    \ = 1\n        var fib_list : mutable.ListBuffer[Long] = new mutable.ListBuffer[Long]()\n\
    \        fib_list += fib2\n        fib_list += fib1\n        var sum : Long =\
    \ 1\n        while (fib2 <= n){\n            fib2 = fib1 + fib2\n            fib_list\
    \ += fib2\n            sum += fib2\n        }\n        fib_list.sum\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprxrxajhr.scala:14:23 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mfib_list\e[0m : mutable.ListBuffer[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmprxrxajhr.scala:14:54 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mvar\e[0m \e[36mfib_list\e[0m : mutable.ListBuffer[\e[35mLong\e\
    [0m] = \e[33mnew\e[0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                                                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978675
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbuwradib.scala:16)\n\tat Problem.main(tmpbuwradib.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793309
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n<2)\n            return n\n        else\n\
    \            return fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978678
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fib = new mutable.ArrayBuffer[Long](2l,\
    \ (3l - 2l), 1l)\n        for (x <- 1 to n-1)\n            fib += fib(fib(fib.last))\n\
    \        fib.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpexqllt45.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ mutable.ArrayBuffer[\e[35mLong\e[0m](\e[31m2l\e[0m, (\e[31m3l\e[0m - \e[31m2l\e\
    [0m), \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpexqllt45.scala:13:23 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mfor\e[0m (x <- \e[31m1\e[0m to n-\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0m  \
    \                     Found:    Long\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978679
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a: Long = 1\n        var b: Long = 1\n\
    \        var c: Long = 1\n        var i: Long = 1\n        while (i <= n) {\n\
    \            c = a + b\n            a = b\n            b = c\n            i =\
    \ i + 1\n        }\n        c\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgmka74tj.scala:25)\n\tat Problem.main(tmpgmka74tj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978679
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 2l)\n            1l\n        else\n\
    \            fib(n - 1) + fib(n - 2l)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpd083mlp1.scala:18)\n\tat Problem.main(tmpd083mlp1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978679
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978561
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1) 1\n        else fib(n - 1) + fib(n\
    \ - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpywpsk7wn.scala:16)\n\tat Problem.main(tmpywpsk7wn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var n1 = 1l\n        var n2 = 1l\n       \
    \ var n3 = 1l\n        var n4 = 1l\n        var ret = 0l\n        if(n < 2l) ret\
    \ = 1l\n        else {\n            var k = 0l\n            while(n<4l) {\n  \
    \              n3 = n1+n2\n                n2 = n1\n                n1 = n3\n\
    \                k = k+1\n                if((k%5l) == 0) ret = (n3).toLong\n\
    \            }\n            n4 = ret\n        }\n        n4\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyuolxg6p.scala:32)\n\tat Problem.main(tmpyuolxg6p.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978679
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val nums = scala.collection.mutable.ListBuffer(1,\
    \ 1, 2)\n        val result = nums.takeWhile(_ < n)\n        if (result ne nums)\
    \ {\n            fib(n, result)\n        } else {\n            result\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk92tpjy4.scala:15:16\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            fib(n, result)\n\e\
    [31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \   Found:    (Long, scala.collection.mutable.ListBuffer[Int])\n\e[31m   |\e[0m\
    \              Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpk92tpjy4.scala:17:12 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            result\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m           Found:    (result : scala.collection.mutable.ListBuffer[Int])\n\
    \e[31m   |\e[0m           Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val cache = mutable.LinkedHashMap[Long, Int]()\n\
    \        def lookup(x: Long) : Int = cache.get(x)\n        if (cache.size < n)\n\
    \            lookup(0)\n        else\n            cache.updated(n, lookup(n +\
    \ 1) + lookup(n))\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnw9212su.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcache\e[0m = mutable.LinkedHashMap[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978678
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else fib(n - 1) + fib(n\
    \ - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmpq4d16dmi.scala:11)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat Problem$.fib(tmpq4d16dmi.scala:13)\n\tat Problem$.fib(tmpq4d16dmi.scala:13)\n\
    \tat"
  stdout: ''
  timestamp: 1659978680
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2\n        var b = 1\n        var\
    \ c = 1\n        var ret: Long = 1\n        while (n < 2l) {\n            var\
    \ tmp = c\n            c = a + b\n            a = b\n            b = tmp\n   \
    \         n += 1\n        }\n        ret\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0y52_cs1.scala:21:14 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            n += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978680
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib2(n: Long, acc: Long): Long = \n  \
    \          if (n == 0) acc\n            else fib2(n - 1, acc + n)\n        fib2(n,\
    \ 0)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpoagkecit.scala:20)\n\tat Problem.main(tmpoagkecit.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978680
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // The first two numbers in the Fibonacci\
    \ sequence are 0 and 1.\n        var i = 0\n        var j = 1\n        while (i\
    \ <= n) {\n            // We want the second number in the sequence.\n       \
    \     j += 1\n            i += j\n        }\n        // Now we want the nth number.\
    \ Remember that the number in the Fibonacci\n        // sequence is also the sum\
    \ of the previous two numbers. So if we\n        // want to know the nth number\
    \ in the Fibonacci sequence, we need\n        // to add the previous two numbers.\n\
    \        val fib: Long = j + i\n        return fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwanhz0lu.scala:28)\n\tat Problem.main(tmpwanhz0lu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n       val fibs = mutable.ArrayBuffer(0,1)\n     \
    \  for {\n         i <- 0 to n\n         j <- 1 to i\n         fibs(j) <- fibs(j)\
    \ + fibs(j-1)\n       } yield fibs(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpme0v4cfi.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m       \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m,\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpme0v4cfi.scala:14:19 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m         i <- \e[31m0\e[0m to n\n\e[31m\e[31m   |\e[0m\
    \                   ^\e[0m\n\e[31m   |\e[0m                   Found:    (n : Long)\n\
    \e[31m   |\e[0m                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978681
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Initializing with 0 is required since we\
    \ are using recursion here.\n        // Also using 'if' instead of 'case' will\
    \ make code more readable\n        // and avoid writing a lot of 'breaks' in the\
    \ code.\n        if( n == 0l ) return 0\n        if( n == 1l ) return 1\n    \
    \    if( n < 2l ) return fib(n - 2l) + fib(n - 1l)\n\n        // Return n-th Fibonacci\
    \ number using recursion.\n        // Each time the function is called, \n   \
    \     // the previously returned value should be returned again.\n        // For\
    \ example, fib(2) -> fib(1) + fib(0) \n        //                  -> fib(1) +\
    \ fib(1) \n        //                  -> fib(1) + fib(2) + fib(1) \n        //\
    \                  -> ...\n        fib(n - 1l) + fib(n - 2l) // Recursive call\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978684
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = new mutable.HashSet[Long]\n   \
    \     var fibs2 = new mutable.HashSet[Long]\n        var a = fibs.head\n     \
    \   var b = fibs.tail.head\n        fibs.clear()\n        while (fibs.size() <\
    \ n){\n            fibs2 += b\n            b = a\n            a = fibs2.head\n\
    \            fibs2.clear()\n        }\n        a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4ka6xivz.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = \e[33mnew\e\
    [0m mutable.HashSet[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                  \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4ka6xivz.scala:13:24\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e\
    [36mfibs2\e[0m = \e[33mnew\e[0m mutable.HashSet[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                        ^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \          Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var fibVal : Long = 0\n        var fibSeq\
    \ : mutable.Seq[Long] = null\n        if(n==0) fibSeq = Seq(fibVal)\n        else\
    \ {\n            fibSeq = fibSeq.::(fib(n - 1))\n            fibVal = fibSeq.last\n\
    \        }\n        fibVal\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5_l6x1u3.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mfibSeq\e[0m : mutable.Seq[\e\
    [35mLong\e[0m] = \e[31mnull\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978681
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val n1: Long = n - 1l\n        val n2: Long\
    \ = n - 2l\n        if (n2 == 0l) n1\n        else fib(n1) + fib(n2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\tat Problem$.fib(tmp4cfwf4ur.scala:15)\n\
    \tat"
  stdout: ''
  timestamp: 1659978684
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fibs(n: Long, acc: Long): Long = n match\
    \ {\n            case 0 => acc\n            case 1 => acc\n            case 2\
    \ => acc\n            case x => fibs(n - 1, acc + x)\n        }\n        fibs(n,\
    \ 0l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt0pwiimy.scala:21)\n\tat Problem.main(tmpt0pwiimy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978686
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibArray = mutable.ArrayBuffer.fill(n+1){0\
    \ }\n        fibArray(1) = 1\n        fibArray(2) = 1\n        fibArray.drop(1).dropRight(1){\n\
    \            i =>\n            val nextFib = fibArray(i-1)+fibArray(i-2)\n   \
    \         fibArray(i) = nextFib\n            nextFib\n        }.get\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqyzovt0z.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibArray\e[0m = mutable.ArrayBuffer.fill(n+\e\
    [31m1\e[0m){\e[31m0\e[0m }\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978682
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def getFib(n: Long, a: Long, b: Long) = {\n\
    \            if (n == 0) a\n            else getFib(n-1, b, a+b)\n        }\n\
    \        getFib(n,0,1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E044] Cyclic Error: /tmp/tmp61hziy67.scala:14:17 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33melse\e[0m getFib(n-\e[31m1\e[0m, b,\
    \ a+b)\n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m        \
    \         Overloaded or recursive \e[33mmethod\e[0m \e[35mgetFib\e[0m needs return\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978683
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fib0 = fibonacci(0)\n        val fib1\
    \ = fibonacci(1)\n        val fib2 = fibonacci(2)\n        val fib3 = fibonacci(3)\n\
    \        val fib4 = fibonacci(4)\n        val fib5 = fibonacci(5)\n        val\
    \ fib6 = fibonacci(6)\n        val fib7 = fibonacci(7)\n        val fib8 = fibonacci(8)\n\
    \        val fib9 = fibonacci(9)\n        val fib10 = fibonacci(10)\n        if\
    \ (n == 0) fib0\n        else fibonacci(fib0.get(n).get(n + 1).get(n + 2).get(n\
    \ + 3).get(n + 4))\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyp6xxh8f.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib0\e[0m = fibonacci(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                   Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyp6xxh8f.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfib1\e[0m = fibonacci(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                   Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyp6xxh8f.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mfib2\e[0m = fibonacci(\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                   Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyp6xxh8f.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mfib3\e[0m = fibonacci(\e\
    [31m3\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                   Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyp6xxh8f.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib4\e[0m = fibonacci(\e\
    [31m4\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                   Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpyp6xxh8f.scala:17:19 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mfib5\e[0m = fibonacci(\e\
    [31m5\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e["
  stdout: ''
  timestamp: 1659978683
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var f : Long = 0\n        var s : Long = 1\n\
    \        var i : Long = 1\n        while (i <= n) {\n            f = f + s\n \
    \           s = s + f\n            i = i + 1\n        }\n        f\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpo63dxnou.scala:23)\n\tat Problem.main(tmpo63dxnou.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2\n        var b = 1\n        var\
    \ ret = n\n        while (n > 1) {\n            ret = a + b\n            b = a\n\
    \            a = ret\n            n -= 1\n        }\n        ret\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3saqzng4.scala:18:16\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            a = ret\n\e[31m\e\
    [31m   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m                Found: \
    \   (ret : Long)\n\e[31m   |\e[0m                Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp3saqzng4.scala:19:14 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978687
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer(0)\n      \
    \  fibs += 0\n        fibs += 1\n        n match {\n            case 0 | 1 =>\
    \ fibs(0)\n            case x => fibs(x) match {\n                case 0 | 1 =>\
    \ fibs(0)\n                case x => fibs(x - 1) + fibs(x - 2)\n            }\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvb1ywqyh.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978683
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 1l) 1l else fib(n-2) + fib(n-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\tat Problem$.fib(tmpx_v4yqd6.scala:12)\n\
    \tat"
  stdout: ''
  timestamp: 1659978687
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      if (n <= 2L) 1L\n      else fib(n-2) + fib(n-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val first = 0\n        val second = 1\n  \
    \      val fibs = new mutable.ListBuffer[Long]()\n        fibs.update(0, first)\n\
    \        fibs.update(1, second)\n        fibs foreach { _ =>\n            if (n\
    \ < 0) {\n                fibs(0) += fibs(1)\n                fibs(1) = 0\n  \
    \          } else {\n                val f = fibs(0) - fibs(1)\n             \
    \   fibs(0) = fibs(1)\n                fibs(1) = f\n            }\n        }\n\
    \        fibs.apply(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppkeh7t1g.scala:14:23 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978686
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val nfib = mutable.Stack[Long]()\n       \
    \ nfib.push(0l)\n        nfib.push(1l)\n        while (n > 0) {\n            val\
    \ current = nfib.last()\n            nfib.push(current + nfib.last())\n      \
    \      n -= 1\n        }\n        nfib.last()\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp26uw4kih.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnfib\e[0m = mutable.Stack[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp26uw4kih.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var fib : BigInt = BigInt(1)\n        var\
    \ fib1 = BigInt(2)\n        for(i <- 2 to n-1){\n            fib = fib1 + fib\n\
    \            fib1 = fib\n        }\n        return fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn_j3rqt4.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n-\e[31m1\e[0m){\n\e[31m\e[31m   |\e[0m                      ^^^\e\
    [0m\n\e[31m   |\e[0m                      Found:    Long\n\e[31m   |\e[0m    \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpn_j3rqt4.scala:18:15 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mreturn\e[0m fib\n\e[31m\e[31m   |\e[0m               ^^^\e\
    [0m\n\e[31m   |\e[0m               Found:    (fib : BigInt)\n\e[31m   |\e[0m \
    \              Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 1l) 1l\n        else fib((n - 1l)\
    \ + fib((n - 2l)))\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat Problem$.fib(tmp17wtq3ye.scala:13)\n\tat Problem$.fib(tmp17wtq3ye.scala:13)\n\
    \tat"
  stdout: ''
  timestamp: 1659978690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibonacci = new collection.mutable.TreeMap[Long,\
    \ Long]()\n        fibonacci.put(0l, 1l)\n        fibonacci.put(1l, 1l)\n    \
    \    n -= 2\n        n match {\n            case 0 => fibonacci.get(0l)\n    \
    \        case 1 => fibonacci.get((1l))\n            case 2 => fibonacci.get(fibonacci.get((1l)))\n\
    \            case _ => fibonacci.get(fibonacci.get((fibonacci.get((1l))) + fibonacci.get((0l))))\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpguurjela.scala:15:10 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        n -= \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^\e[0m\n\e[31m   |\e[0m        value -= is not a member of Long - did\
    \ you mean n.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpguurjela.scala:17:35\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mcase\e[0m \e\
    [31m0\e[0m => fibonacci.get(\e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \          ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Found:\
    \    Option[Long]\n\e[31m   |\e[0m                      Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpguurjela.scala:18:35 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mcase\e[0m \e[31m1\e[0m => fibonacci.get((\e\
    [31m1l\e[0m))\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Found:    Option[Long]\n\e[31m   |\e\
    [0m                      Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpguurjela.scala:19:49 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mcase\e[0m \e[31m2\e[0m => fibonacci.get(fibonacci.get((\e\
    [31m1l\e[0m)))\n\e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                    Found:    Option[Long]\n\
    \e[31m   |\e[0m                                    Required: Long\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpguurjela.scala:20:72 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mcase\e[0m _ => fibonacci.get(fibonacci.get((fibonacci.get((\e\
    [31m1l\e[0m))) + fibonacci.get((\e[31m0l\e[0m))))\n\e[31m\e[31m   |\e[0m     \
    \                                             ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue + is not a member of Option[Long], but could be made available\
    \ as an extensi"
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 1\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc7gdaur9.scala:17)\n\tat Problem.main(tmpc7gdaur9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659793315
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 2)\n            n\n        else\n\
    \            fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // We use a mutable.ArrayBuffer to keep track\
    \ of the previous two numbers.\n        val buffer = new mutable.ArrayBuffer[Long]()\n\
    \        buffer.append(0L)\n        buffer.append(1L)\n        var next = 1L\n\
    \        while (buffer.length < n) {\n            next = buffer.last + next\n\
    \            buffer += next\n        }\n        buffer.dropRight(n).toList //\
    \ List the required number of elements\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk02d_xih.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mbuffer\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m            \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978686
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 2l) 1l else fib(n - 2l) + fib(n -\
    \ 1l)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbmjda649.scala:15)\n\tat Problem.main(tmpbmjda649.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var prev = 0\n        var current = 1\n  \
    \      var next = 1\n\n        for (i <- 1 to n) {\n            val next = prev\
    \ + current\n            prev = current\n            current = next\n        }\n\
    \n        next\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2vb_8qaq.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978691
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a : Long = 1l\n        var b : Long =\
    \ 1l\n        var tmp : Long = 1l\n\n        if (n <= 1l) {\n            return\
    \ n\n        } else {\n            while (n != 0l) {\n                tmp = a\
    \ ;\n                a = b ;\n                b = tmp + b ;\n                n\
    \ -= 1l\n            }\n            return b\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv2g4qqkw.scala:23:18 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                n -= \e[31m1l\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value -= is not a\
    \ member of Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Your code goes here\n        // You will\
    \ need to use the fibonacci function from earlier\n        val fibs = new Array[Long](n)\n\
    \        fibs(0) = 1\n        fibs(1) = 1\n        for (i<-2 until fibs.length-1){\n\
    \            fibs(i) = fibs(i-1)+fibs(i-2)\n        }\n        fibs(fibs.length-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1vyg7x06.scala:14:35\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                   ^\e[0m\n\e[31m   |\e[0m                \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978691
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) throw new IllegalArgumentException\n\
    \        val fibs = mutable.ListBuffer(1,0)\n        while(fibs.size < n) {\n\
    \            fibs = fibs +: fibs\n        }\n        fibs.last\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzdljjriz.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m,\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpzdljjriz.scala:15:17 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            fibs = fibs +: fibs\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val fibs\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ListBuffer(1)\n       \
    \ (fibs ::: fibs).find(_._2 == fibs.length + 1).map(_._1).getOrElse(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf1hge5yg.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978688
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fib = Stream.iterate(1L)(_ + _).takeWhile(_\
    \ <= n).head\n        println(n + \": \" + fib)\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp87ceuhhg.scala:12:37 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = Stream.iterate(\e\
    [31m1L\e[0m)(_ + _).takeWhile(_ <= n).head\n\e[31m\e[31m   |\e[0m            \
    \                         ^^^^^\e[0m\n\e[31m   |\e[0m                        \
    \         Wrong number of parameters, expected: 1\n1 error found\n"
  stdout: ''
  timestamp: 1659978689
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // The Fibonacci numbers are 0, 1, 1, 2, 3,\
    \ 5, 8, 13, \u2026\n        val fibTable = new mutable.LinkedHashMap[Int, Int]()\n\
    \        fibTable.put(0, 0); // 0th Fibonacci is 0\n        fibTable.put(1, 1);\
    \ // 1st Fibonacci is 1\n        fibTable.put(2, 1); // 2nd Fibonacci is 1\n \
    \       var fibNum = 0\n        while (fibTable.size < n){\n            // fibTable.put(n,fibTable.getOrElse(n-1,fibTable.getOrElse(n-2,0)\
    \ + fibTable.getOrElse(n-3,fibTable.getOrElse(n-4,0))))\n            fibNum =\
    \ fibTable.getOrElse(n-1,fibNum)\n            fibTable.put(n, fibNum)\n      \
    \  }\n        return fibNum\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp92whhu3f.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfibTable\e[0m = \e[33mnew\e\
    [0m mutable.LinkedHashMap[\e[35mInt\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val x = scala.math.BigInt(n)\n        if ((x\
    \ == 0l) || (x == 1l)) {\n            return x\n        }\n        val y = scala.math.BigInt(x)\
    \ + 1\n        x := y\n        val z = scala.math.BigInt(x) + 2\n        x :=\
    \ z\n        y\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4imls4fw.scala:14:19\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m            \e[33mreturn\e[0m\
    \ x\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m         \
    \          Found:    (x : BigInt)\n\e[31m   |\e[0m                   Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmp4imls4fw.scala:16:16\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e\
    [0m \e[36my\e[0m = scala.math.BigInt(x) + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35mapply\e[0m in \e[33mobject\e[0m \e[35mBigInt\e\
    [0m with types\n\e[31m   |\e[0m (x: java.math.BigInteger): BigInt\n\e[31m   |\e\
    [0m (x: String, radix: Int): BigInt\n\e[31m   |\e[0m (x: String): BigInt\n\e[31m\
    \   |\e[0m (numbits: Int, rnd: scala.util.Random): BigInt\n\e[31m   |\e[0m (bitlength:\
    \ Int, certainty: Int, rnd: scala.util.Random): BigInt\n\e[31m   |\e[0m (signum:\
    \ Int, magnitude: Array[Byte]): BigInt\n\e[31m   |\e[0m (x: Array[Byte]): BigInt\n\
    \e[31m   |\e[0m (l: Long): BigInt\n\e[31m   |\e[0m (i: Int): BigInt\n\e[31m  \
    \ |\e[0mmatch arguments ((x : BigInt))\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp4imls4fw.scala:17:10 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        x := y\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0m   \
    \     value := is not a member of BigInt - did you mean x.!=?\n\e[31m\e[31m--\
    \ [E134] Type Error: /tmp/tmp4imls4fw.scala:18:16 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mz\e[0m = scala.math.BigInt(x)\
    \ + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mapply\e\
    [0m in \e[33mobject\e[0m \e[35mBigInt\e[0m with types\n\e[31m   |\e[0m (x: java.math.BigInteger):\
    \ BigInt\n\e[31m   |\e[0m (x: String, radix: Int): BigInt\n\e[31m   |\e[0m (x:\
    \ String): BigInt\n\e[31m   |\e[0m (numbits: Int, rnd: scala.util.Random): BigInt\n\
    \e[31m   |\e[0m (bitlength: Int, certainty:"
  stdout: ''
  timestamp: 1659978695
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      require(n > 0, \"Fibonacci number should > 0!\"\
    )\n      var first = 0l\n      var second = 0l\n      loop {\n        val sum\
    \ = first + second\n        first = second\n        second = sum\n        if (sum\
    \ >= n)\n          return sum\n      }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplmxc1v6o.scala:15:6 -------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m      loop {\n\e[31m\e[31m   |\e[0m      ^^^^\e[0m\n\e\
    [31m   |\e[0m      Not found: loop\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978690
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibList = mutable.LinkedList[Long]()\n\
    \        fibList += 0\n        fibList += 1\n        while(fibList.size > n) {\n\
    \            fibList -= fibList(1)\n        }\n        fibList(n)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp44dp735_.scala:12:22 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibList\e[0m = mutable.LinkedList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978691
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Base cases.\n        n match {\n      \
    \      case 0 | 1 | 2 => 1\n            case n => fib(n-1) + fib(n-2)\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978696
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var f = 0l\n        var s1 = 1l\n        var\
    \ s2 = 1l\n        while (n > 0) {\n            f = (s1 + s2) % n\n          \
    \  s1 = s2\n            s2 = f\n            n -= 1\n        }\n        f\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjts6m7wr.scala:19:14 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978696
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a : Long = 0l\n        var b : Long =\
    \ 1l\n        while (a < n) (a,b) = (a+b, b);\n        a\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp4r67o4gp.scala:14:28 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mwhile\e[0m (a < n) (a,b) = (a+b, b);\n\e\
    [31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m       \
    \                     end of statement expected but '=' found\n1 error found\n"
  stdout: ''
  timestamp: 1659978692
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val cache = new Array[Long](n)\n        cache(0)\
    \ = 0\n        cache(1) = 1\n        var i = 2\n        while (i < n) {\n    \
    \        cache(i % 2) = cache((i - 1) % 2) + cache((i + 1) % 2)\n            i\
    \ = i + 1\n        }\n        cache(n % 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpq7aw9fpp.scala:12:36\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcache\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                    ^\e[0m\n\e[31m   |\e[0m               \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpq7aw9fpp.scala:20:14 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        cache(n % \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m              ^^^^^\e\
    [0m\n\e[31m   |\e[0m              Found:    Long\n\e[31m   |\e[0m            \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978698
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fib = (0 until n).foldLeft((0l,0l))((t,x)\
    \ => t._1 + t._2)\n        if (n <= 1) fib._1\n        else fib\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1vs4lxid.scala:12:27\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib\e\
    [0m = (\e[31m0\e[0m until n).foldLeft((\e[31m0l\e[0m,\e[31m0l\e[0m))((\e[36mt\e\
    [0m,\e[36mx\e[0m) => t._1 + t._2)\n\e[31m\e[31m   |\e[0m                     \
    \      ^\e[0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\
    \e[31m   |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1vs4lxid.scala:12:57 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = (\e[31m0\e[0m\
    \ until n).foldLeft((\e[31m0l\e[0m,\e[31m0l\e[0m))((\e[36mt\e[0m,\e[36mx\e[0m)\
    \ => t._1 + t._2)\n\e[31m\e[31m   |\e[0m                                     \
    \                    ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                       \
    \                           Found:    Long\n\e[31m   |\e[0m                  \
    \                                Required: (Long, Long)\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp1vs4lxid.scala:14:13 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m fib\n\e[31m\e[31m   |\e[0m  \
    \           ^^^\e[0m\n\e[31m   |\e[0m             Found:    (fib : (Long, Long))\n\
    \e[31m   |\e[0m             Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978699
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978562
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fibRec(a : Long, b : Long, count : Long)\
    \ : Long = {\n            if (count == n) {\n                return b\n      \
    \      }\n            else\n            {\n                return fibRec(b,\n\
    \                    a\n                    + b\n                    , count +\
    \ 1\n                )\n            }\n        }\n        fibRec(0, 0, 0)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpk2ec5w0b.scala:28)\n\tat Problem.main(tmpk2ec5w0b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978698
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if(n > 0) fib(n - 1) + fib(n - 2)\n      \
    \  else 1\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphot4a2de.scala:16)\n\tat Problem.main(tmphot4a2de.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978699
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var sum = 0l\n        var num = 1l\n     \
    \   val fibSeq = Iterator.continually(num += 1).takeWhile(_ < n)\n        var\
    \ fibSeq2 = fibSeq.map(i => if (i == 0) 0 else 1)\n        var lastFib = fibSeq2.last\n\
    \        while (fibSeq2.nonEmpty) {\n            sum += lastFib\n            fibSeq2.last\
    \ = 0\n            lastFib = fibSeq2.last\n        }\n        sum\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp23l2w4vt.scala:14:64 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mfibSeq\e[0m = Iterator.continually(num\
    \ += \e[31m1\e[0m).takeWhile(_ < n)\n\e[31m\e[31m   |\e[0m                   \
    \                                           ^^^\e[0m\n\e[31m   |\e[0mvalue < is\
    \ not a member of Unit, but could be made available as an extension method.\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might fix the problem:\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Ordering.Unit.mkOrderingOps\n\e\
    [31m   |\e[0m  import math.Ordering.Implicits.infixOrderingOps\n\e[31m   |\e[0m\
    \  import math.Ordered.orderingToOrdered\n\e[31m   |\e[0m\n\e[31m\e[31m-- Error:\
    \ /tmp/tmp23l2w4vt.scala:15:42 -----------------------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mfibSeq2\e[0m = fibSeq.map(\e\
    [36mi\e[0m => \e[33mif\e[0m (i == \e[31m0\e[0m) \e[31m0\e[0m \e[33melse\e[0m \e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                                          ^^^^^^\e\
    [0m\n\e[31m   |\e[0m           Values of types Unit and Int cannot be compared\
    \ with == or !=\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp23l2w4vt.scala:16:30\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e\
    [36mlastFib\e[0m = fibSeq2.last\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue last is not a member of Iterator[Int] - did you mean\
    \ Iterator[Int].wait?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp23l2w4vt.scala:19:20\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            fibSeq2.last\
    \ = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvalue last is not a member of Iterator[Int] - did you mean Iterator[Int].wait?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp23l2w4vt.scala:20:30 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            lastFib = fibSeq2.last\n\e[31m\e[31m   |\e\
    [0m                      ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue last is not a\
    \ member of Iterator[Int] - did you mean Iterator[Int].wait?\n5 errors found\n"
  stdout: ''
  timestamp: 1659978700
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var i = 2\n        var f = 0\n        while\
    \ (i <= n) {\n            f += i\n            i += 1\n        }\n        f\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp670v0y6l.scala:21)\n\tat Problem.main(tmp670v0y6l.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978699
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1L) 1L\n        else fib(n-1L) +\
    \ fib(n-2L)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpoff47dlc.scala:16)\n\tat Problem.main(tmpoff47dlc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978699
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0l\n        var b = 1l\n        for\
    \ (i <- 0 until n) {\n            val x = a + b\n            a = b\n         \
    \   b = x\n        }\n        x\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbph8ujc4.scala:14:26\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpbph8ujc4.scala:19:8 -------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        x\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e\
    [0m        Not found: x\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978699
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 1 else fib(n-1) + fib(n-2)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\tat Problem$.fib(tmpfbo4l2fz.scala:12)\n\
    \tat"
  stdout: ''
  timestamp: 1659978699
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 2) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978670
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // return if (n == 0 || n == 1) n else fib(n-1)\
    \ + fib(n-2)\n        def fib(n: Int) : Int = {\n            if (n == 0 || n ==\
    \ 1) n else fib(n-1) + fib(n-2)\n        }\n\n        // return if (n <= 2) n\
    \ else fib(n-1) + fib(n-2)\n        def fib(n: Int) : Int = {\n            if\
    \ (n <= 2) n else fib(n-1) + fib(n-2)\n        }\n\n        // return if (n <=\
    \ 2) n else fib(n-1) + fib(n-2)\n        def fib(n: Int) : Int = {\n         \
    \   if (n <= 2) n else fib(n-1) + fib(n-2)\n        }\n        val fibs = mutable.ListBuffer[Int]()\n\
    \        val a = fib(0)\n        val b = fib(1)\n        fibs += a\n        fibs\
    \ += b\n        fibs.drop(1).foreach(n => {\n            fibs += fib(n-1) + fib(n-2)\n\
    \        })\n        fibs.take(n).toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpoln61wbd.scala:18:12 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mdef\e[0m \e[36mfib\e[0m(\e[36mn\e[0m: \e\
    [35mInt\e[0m) : \e[35mInt\e[0m = {\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m\
    \   |\e[0mfib is already defined as \e[33mmethod\e[0m \e[35mfib\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m19 |\e[0m            \e[33mif\e\
    [0m (n <= \e[31m2\e[0m) n \e[33melse\e[0m fib(n-\e[31m1\e[0m) + fib(n-\e[31m2\e\
    [0m)\n\e[31m20 |\e[0m        }\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpoln61wbd.scala:23:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mdef\e[0m\
    \ \e[36mfib\e[0m(\e[36mn\e[0m: \e[35mInt\e[0m) : \e[35mInt\e[0m = {\n\e[31m\e\
    [31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0mfib is already defined as \e[33mmethod\e\
    [0m \e[35mfib\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m24 |\e\
    [0m            \e[33mif\e[0m (n <= \e[31m2\e[0m) n \e[33melse\e[0m fib(n-\e[31m1\e\
    [0m) + fib(n-\e[31m2\e[0m)\n\e[31m25 |\e[0m        }\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpoln61wbd.scala:26:19 ------------------------\e[0m\e[0m\n\
    \e[31m26 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978697
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fib = mutable.MutableList[Long]()\n  \
    \      var i = 0\n        fib.push(i)\n        while (i<n) fib.push(fib.last()\
    \ + fib.last())\n        fib.last\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpngnsjhi3.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978696
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Declare a variable named fibonacci which\
    \ has type scala.collection.mutable.ListBuffer.\n        var fibonacci = new ListBuffer[Long]()\n\
    \        var current = 1\n        var next = 1\n\n        // For each number smaller\
    \ than n, call fibonacci function again with (current + 1) until you reach n.\n\
    \        while (current < n) {\n            fibonacci += next\n            current\
    \ += next\n            next = current + current\n        }\n\n        // Return\
    \ the last element of fibonacci.\n        fibonacci.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzjvt0drz.scala:28)\n\tat Problem.main(tmpzjvt0drz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val l = new mutable.LinkedList[Long]\n   \
    \     l.headOption\n            .foreach(n => {\n                if (n <= 2) l.addLast(n)\n\
    \                else l.removeLast\n            })\n        l.headOption\n   \
    \         .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n => {\n                l.addLast(l.headOption.getOrElse(1)\
    \ + l.headOption.getOrElse(2))\n            })\n        l.headOption\n       \
    \     .foreach(n => {\n                if (n <= n) l.addLast(n)\n            })\n\
    \        l.headOption\n            .foreach(n \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpz_d3n9pw.scala:84:4 ----------------------------\e\
    [0m\e[0m\n\e[31m84 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz_d3n9pw.scala:12:20\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36ml\e[0m = \e[33mnew\e[0m mutable.LinkedList[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978698
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val a = 0l\n        val b = 1l\n        for\
    \ (x <- 0 until n) {\n            val c = b\n            b <- a + c\n        \
    \    a <- c\n        }\n        b\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp_3wti6tm.scala:16:14 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            b <- a + c\n\e[31m\e[31m   |\e[0m       \
    \       ^^\e[0m\n\e[31m   |\e[0m              end of statement expected but '<-'\
    \ found\n\e[31m\e[31m-- Error: /tmp/tmp_3wti6tm.scala:17:14 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            a <- c\n\e[31m\e[31m   |\e[0m           \
    \   ^^\e[0m\n\e[31m   |\e[0m              end of statement expected but '<-' found\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_3wti6tm.scala:14:26 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (x <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[33m\e[33m-- [E129] Potential Issue Warning:\
    \ /tmp/tmp_3wti6tm.scala:16:12 ----------------\e[0m\e[0m\n\e[33m16 |\e[0m   \
    \         b <- a + c\n\e[33m\e[33m   |\e[0m            ^\e[0m\n\e[33m   |\e[0mA\
    \ pure expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1659978701
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 2) {\n            return n\n    \
    \    } else {\n            return fib(n - 1) + fib(n - 2)\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgycjpxfx.scala:19)\n\tat Problem.main(tmpgycjpxfx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978700
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib1(n:Long, f:mutable.Queue[Long], s:mutable.Queue[Long],\
    \ n:Long) : Unit = {\n            if (n == 0)\n                f += 0\n      \
    \      else if (n == 1)\n                s += 0\n            else {\n        \
    \        fib1(n-1, f, s, n-2)\n                f += f(n-2) + f(n-1)\n        \
    \        s += s(n-2)+s(n-1)\n            }\n        }\n        var f = mutable.Queue[Long]()\n\
    \        var s = mutable.Queue[Long]()\n        fib1(n, f, s, n)\n        if (f.size\
    \ < n)\n            throw new Exception(\"Not found\")\n        f.dequeue\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp1u65x6us.scala:12:71 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mdef\e[0m \e[36mfib1\e[0m(\e[36mn\e[0m:\e\
    [35mLong\e[0m, \e[36mf\e[0m:mutable.Queue[\e[35mLong\e[0m], \e[36ms\e[0m:mutable.Queue[\e\
    [35mLong\e[0m], \e[36mn\e[0m:\e[35mLong\e[0m) : \e[35mUnit\e[0m = {\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \       ^^^^^^\e[0m\n\e[31m   |\e[0mn is already defined as \e[33mparameter\e\
    [0m \e[35mn\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp1u65x6us.scala:12:27 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mdef\e[0m \e[36mfib1\e[0m(\e[36mn\e[0m:\e\
    [35mLong\e[0m, \e[36mf\e[0m:mutable.Queue[\e[35mLong\e[0m], \e[36ms\e[0m:mutable.Queue[\e\
    [35mLong\e[0m], \e[36mn\e[0m:\e[35mLong\e[0m) : \e[35mUnit\e[0m = {\n\e[31m\e\
    [31m   |\e[0m                           ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp1u65x6us.scala:12:50 ------------------------\e[0m\e\
    [0m\n\e[31m12 |\e[0m        \e[33mdef\e[0m \e[36mfib1\e[0m(\e[36mn\e[0m:\e[35mLong\e\
    [0m, \e[36mf\e[0m:mutable.Queue[\e[35mLong\e[0m], \e[36ms\e[0m:mutable.Queue[\e\
    [35mLong\e[0m], \e[36mn\e[0m:\e[35mLong\e[0m) : \e[35mUnit\e[0m = {\n\e[31m\e\
    [31m   |\e[0m                                                  ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                                  Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1u65x6us.scala:23:16\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mvar\e[0m \e\
    [36mf\e[0m = mutable.Queue[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m         \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1u"
  stdout: ''
  timestamp: 1659978698
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Still to do\n        val fib = new mutable.HashSet[Long]()\n\
    \        fib += (1 -> 1L)\n        fib += (0 -> 0L)\n        fib.foreach(x =>\
    \ fib += (x -> fib.get(x - 1) + fib.get(x - 2)))\n        fib.get(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplh_jl9mo.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m = \e[33mnew\e[0m\
    \ mutable.HashSet[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                  \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978698
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 0) throw new IllegalArgumentException(\"\
    n is negative\")\n        if (n < 2) n\n        else fib(n-1) + fib(n-2)\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978700
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // We know that the Fibonacci sequence converges\
    \ to its first fibonacci number.\n        // So we can calculate its first two\
    \ numbers in O(1).\n        // The first two numbers are:\n        // a = (a +\
    \ b) / 2, b = b - a.\n        // If a = 0 then b = 1 and the first fibonacci number\
    \ is b.\n        val a = n\n        val b = n + 1\n        // If a = 0 then b\
    \ = 1 and the first fibonacci number is b.\n        if (a == 0) 1\n        //\
    \ else calculate a fibonacci number.\n        else (a + b) / 2\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpegarwx7a.scala:25)\n\tat Problem.main(tmpegarwx7a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978702
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val numbers = Vector.fill(n+2)(0) ++ Vector.fill(n+2)(1)\n\
    \        numbers.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9axiinqf.scala:12:34\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e\
    [0m = Vector.fill(n+\e[31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n+\e[31m2\e[0m)(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                                  ^^^\e[0m\n\
    \e[31m   |\e[0m                                  Found:    Long\n\e[31m   |\e\
    [0m                                  Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp9axiinqf.scala:12:57 --------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e[0m = Vector.fill(n+\e\
    [31m2\e[0m)(\e[31m0\e[0m) ++ Vector.fill(n+\e[31m2\e[0m)(\e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                                         ^^^\e[0m\n\
    \e[31m   |\e[0m                                                         Found:\
    \    Long\n\e[31m   |\e[0m                                                   \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978703
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0l || n == 1l) return n\n       \
    \ else fib(n-1l) + fib(n-2l)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978705
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val arr = new Array[Long](100l)(0)\n     \
    \   val fibs = arr.zipWithIndex.map({ x =>\n            if(x._2 < n) x._1 + x._2\
    \ else x._1 }).takeWhile(_ < n).drop(1)\n        fibs.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv1bgmn3c.scala:12:34\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36marr\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](\e[31m100l\e[0m)(\e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                  ^^^^\e[0m\n\e[31m\
    \   |\e[0m                                  Found:    (\e[31m100L\e[0m : Long)\n\
    \e[31m   |\e[0m                                  Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpv1bgmn3c.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = arr.zipWithIndex.map({\
    \ \e[36mx\e[0m =>\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   value zipWithIndex is not a member of Long\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0L) 0L\n        else if (n <= 1L)\
    \ 1L\n        else fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 2) 1 else fib(n - 1) + fib(n - 2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwaw4z3r9.scala:15)\n\tat Problem.main(tmpwaw4z3r9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = b = 0\n        while (n > 2) {\n \
    \           val x = a\n            a = b\n            b = x + a\n            n\
    \ -= 2\n        }\n        b\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3vfvf4iy.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = b = \e[31m0\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3vfvf4iy.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            a = b\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3vfvf4iy.scala:16:12\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            b = x + a\n\e\
    [31m\e[31m   |\e[0m            ^\e[0m\n\e[31m   |\e[0m            Not found: b\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3vfvf4iy.scala:17:14\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            n -= \e[31m2\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp3vfvf4iy.scala:19:8 -------------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        b\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m      \
    \  Not found: b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659978707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibList = new mutable.ListBuffer[Long]()\n\
    \        fibList += 1\n        fibList += 2\n        fibList += 3\n        if\
    \ (n > 0) {\n            fibList += fib(n-1) + fib(n-2)\n        }\n        fibList(0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprx9in6uv.scala:12:26 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibList\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978704
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib1(n1 : Long, n2 : Long) : Long = n2\
    \ match {\n            case 0 => n1\n            case 1 => n2\n            case\
    \ _ => fib1(n1, n2 - 1)\n        }\n        fib1(0, n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpk69bfwvn.scala:20)\n\tat Problem.main(tmpk69bfwvn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978708
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 2) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978670
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978485
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = scala.collection.mutable.ArrayBuffer(0)\n\
    \        fibs += 0\n        fibs += 1\n        n match {\n            case 0 =>\
    \ fibs\n            case 1 => fibs(0)\n            case _ => {\n             \
    \   val temp = fibs(0)\n                fibs(0) = fibs(1)\n                fibs(1)\
    \ = temp\n                fibs\n            }\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj02ob51c.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mcase\e[0m \e\
    [31m0\e[0m => fibs\n\e[31m\e[31m   |\e[0m                      ^^^^\e[0m\n\e[31m\
    \   |\e[0m            Found:    (fibs : scala.collection.mutable.ArrayBuffer[Int])\n\
    \e[31m   |\e[0m            Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpj02ob51c.scala:22:16 --------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m                fibs\n\e[31m\e[31m   |\e[0m              \
    \  ^^^^\e[0m\n\e[31m   |\e[0m            Found:    (fibs : scala.collection.mutable.ArrayBuffer[Int])\n\
    \e[31m   |\e[0m            Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Create a list from 0 to n inclusive.\n\
    \        val list = mutable.MutableList[Long](1l)(2l)(3l)\n        val n = list.length\n\
    \        if (n > 1) {\n            list.remove(n-1) // Remove the last element.\n\
    \        }\n        if (n > 2) {\n            list.add(list.get(0) - list.get(1))\
    \ // Subtract the first two elements.\n        }\n        list\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfxxtu2fv.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m](\e[31m1l\e[0m)(\e[31m2l\e[0m)(\e[31m3l\e[0m)\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978704
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // If n < 2 return n.\n        if( n < 2){\n\
    \            return n\n        }\n        // Create fibonacci numbers.\n     \
    \   var fib1 : mutable.Map[Long, Long] = mutable.Map(0 -> 1,\n        1 -> 1)\n\
    \        var fib2 : mutable.Map[Long, Long] = mutable.Map(0 -> 1,\n        1 ->\
    \ 1)\n        // Loop over fibonacci numbers.\n        for(fibNum <- 0 until n){\n\
    \            fib1 += (fibNum -> fib2.getOrElse(fibNum, fibNum + fib1.getOrElse(fibNum,\
    \ 0)))\n            fib2 += (fibNum -> fib1.getOrElse(fibNum, fibNum + fib2.getOrElse(fibNum,\
    \ 0)))\n        }\n        // Return n-th fibonacci number.\n        fib1.get(n)\
    \ match {\n            case Some(x) => x\n            case None => n\n       \
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphn8shvq_.scala:17:19 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mfib1\e[0m : mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m] = mutable.Map(\e[31m0\e[0m -> \e[31m1\e[0m,\n\e\
    [31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmphn8shvq_.scala:17:45 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mvar\e[0m \e[36mfib1\e[0m : mutable.Map[\e[35mLong\e[0m, \e[35mLong\e\
    [0m] = mutable.Map(\e[31m0\e[0m -> \e[31m1\e[0m,\n\e[31m\e[31m   |\e[0m      \
    \                                       ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                                     Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmphn8shvq_.scala:19:19 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m \e[36mfib2\e[0m : mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m] = mutable.Map(\e[31m0\e[0m -> \e[31m1\e[0m,\n\e\
    [31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmphn8shvq_.scala:19:45 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        \e[33mvar\e[0m \e[36mfib2\e[0m : mutable.Map[\e[35mLong\e[0m, \e[35mLong\e\
    [0m] = mutable.Map(\e[31m0\e[0m -> \e[31m1\e[0m,\n\e[31m\e[31m   |\e[0m      \
    \                                       ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                                     Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphn8shvq_.scala:22:30 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mfor\e[0m(fibNum <- \e[31m0\e[0m until n){\n\
    \e[31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m   \
    \                           Found: "
  stdout: ''
  timestamp: 1659978708
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if(n == 0) 0\n        if(n == 1) 1\n     \
    \   fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat Problem$.fib(tmpq2csi4nx.scala:14)\n\tat Problem$.fib(tmpq2csi4nx.scala:14)\n\
    \tat"
  stdout: ''
  timestamp: 1659978708
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n<=0) throw new IndexOutOfBoundsException(\"\
    Fibonacci number does not exist for negative or zero inputs\")\n        if (n==1)\
    \ 1\n        if (n==2) 1\n        if (n==3) 2\n        if (n==4) return 3\n  \
    \      var a = fib(n - 2)\n        var b = fib(n - 1)\n        return a + b\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.IndexOutOfBoundsException: Fibonacci number does not exist for\
    \ negative or zero inputs\n\tat Problem$.fib(tmpveddgw_b.scala:12)\n\tat Problem$.fib(tmpveddgw_b.scala:17)\n\
    \tat Problem$.fib(tmpveddgw_b.scala:17)\n\tat Problem$.fib(tmpveddgw_b.scala:17)\n\
    \tat Problem$.fib(tmpveddgw_b.scala:18)\n\tat Problem$.fib(tmpveddgw_b.scala:17)\n\
    \tat Problem$.fib(tmpveddgw_b.scala:17)\n\tat Problem$.main(tmpveddgw_b.scala:22)\n\
    \tat Problem.main(tmpveddgw_b.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = (0 until n)\n            .toVector\n\
    \            .map(e => e + e)\n            .toArray\n            .sort\n     \
    \       .zipWithIndex\n            .toSeq\n            .map {\n              \
    \  case (n, i) => n\n            }\n            .toArray\n            .reverse\n\
    \            .toVector\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbl9oi7n3.scala:12:28\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = (\e[31m0\e[0m until n)\n\e[31m\e[31m   |\e[0m                          \
    \  ^\e[0m\n\e[31m   |\e[0m                            Found:    (n : Long)\n\e\
    [31m   |\e[0m                            Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbl9oi7n3.scala:25:5 ---------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m    }\n\e[31m\e[31m   |\e[0m     ^\e[0m\n\e[31m   |\e\
    [0m     Found:    Unit\n\e[31m   |\e[0m     Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659978709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs : mutable.ListBuffer[Long] = mutable.ListBuffer.empty\n\
    \        fibs.clear()\n        fibs += 0l\n        fibs += 1l\n        var fibsTail\
    \ : List[Long] = List()\n        while(fibs.size < n) {\n            fibsTail\
    \ ::= fibs.head :: fibsTail\n            fibs += fibsTail.last\n        }\n  \
    \      fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpib5h1ddz.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m : mutable.ListBuffer[\e\
    [35mLong\e[0m] = mutable.ListBuffer.empty\n\e[31m\e[31m   |\e[0m             \
    \      ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpib5h1ddz.scala:12:46\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36mfibs\e[0m : mutable.ListBuffer[\e[35mLong\e[0m] = mutable.ListBuffer.empty\n\
    \e[31m\e[31m   |\e[0m                                              ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                              Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpib5h1ddz.scala:18:21\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            fibsTail ::=\
    \ fibs.head :: fibsTail\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m   value ::= is not a member of List[Long] - did you mean List[Long].::?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659978709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val cache = mutable.HashMap[Long, Long]()\n\
    \        def fibHelper(n : Long) : Long = {\n            if (cache(n) == null)\
    \ {\n                cache(n) = if (n < 2) 1 else fibHelper(n - 1) + fibHelper(n\
    \ - 2)\n            }\n            cache(n)\n        }\n        fibHelper(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyz5w4si4.scala:12:20 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mcache\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978706
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0) 0\n        else if (n == 1) 1\n\
    \        else fib(n - 1) + fib(n - 2)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978485
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0)\n            return 0\n      \
    \  else if (n <= 2)\n            return 1\n        else\n            return fib(n\
    \ - 2) + fib(n - 1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978709
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0l\n        var b = 1l\n        while\
    \ (b <= n) {\n            var c = a + b\n            a = b\n            b = c\n\
    \        }\n        return b\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpyljhflco.scala:22)\n\tat Problem.main(tmpyljhflco.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978710
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      val F = new mutable.LinkedList[Long]\n     \
    \ F.add(0l)\n      F.add(1l)\n      F.foreach(_ += _)\n      F.tail.drop(2).takeRight(n).reverse.foldLeft(F.head)(_\
    \ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) ==\
    \ (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n \
    \   assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjom0fk5l.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m      \e[33mval\e[0m \e[36mF\e[0m = \e[33mnew\e[0m mutable.LinkedList[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978707
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 2L\n        var b = 2L\n        while\
    \ (n > 0) \n            { a = b; b = a + b; n -= 1L }\n        return b\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpw7qa4vaj.scala:15:34 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            { a = b; b = a + b; n -= \e[31m1L\e[0m }\n\
    \e[31m\e[31m   |\e[0m                                ^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value -= is not a member of Long - did you mean n.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978710
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0 || n == 1) 1\n        else fib(n-1)\
    \ + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpg4701ew_.scala:16)\n\tat Problem.main(tmpg4701ew_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978568
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if(n == 0) 1l\n        else fib(n-1)+fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat Problem$.fib(tmp2pre6qxe.scala:13)\n\tat Problem$.fib(tmp2pre6qxe.scala:13)\n\
    \tat"
  stdout: ''
  timestamp: 1659978711
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1)\n            n\n        else\n\
    \            fib(n-1) + fib(n-2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978712
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n       val fibs = mutable.ListBuffer[Long](1l)\n \
    \      fibs += fibs(0l)\n       fibs += fibs(1l)\n       fibs.take(n).last\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpieaoly5d.scala:12:18 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m       \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m](\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978709
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibSeq = mutable.ArrayBuffer(1l, 2l)\n\
    \        fibSeq.update((1l) -> (1l))\n        fibSeq.update((2l) -> (fibSeq.get(2l)\
    \ + fibSeq.get(1l)))\n        fibSeq.update((n) -> (fibSeq.get(n) - fibSeq.get(n-1)))\n\
    \        fibSeq.get(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8emey1r2.scala:12:21 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibSeq\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978710
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var first = 0l\n        var second = 1l\n\
    \        var fib = 2l\n        var counter = 1l\n        while(counter < n) {\n\
    \            first = second\n            second = fib\n            fib = first\
    \ + second\n            counter += 1\n        }\n        fib\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5x88lvga.scala:25)\n\tat Problem.main(tmp5x88lvga.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978715
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      if (n <= 2) 1\n      else if (n == 3) return\
    \ 3\n      else fib(n-2) + fib(n-1)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmphrf9bhbr.scala:17)\n\tat Problem.main(tmphrf9bhbr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978715
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var prev = 0\n        var curr = 1\n     \
    \   for(i <- 0 until n){\n            prev = curr\n            curr = prev + curr\n\
    \        }\n        curr\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpry8fo6sg.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      var result : Long = 0\n      var a : Long =\
    \ 1l\n      var b : Long = 1l\n      var c = 0\n      for(c <- 1 to n){\n    \
    \      result = a + b\n          a = b\n          b = result\n      }\n      b\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplyvf6oro.scala:16:20\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m      \e[33mfor\e[0m(c <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e\
    [0m                    Found:    (n : Long)\n\e[31m   |\e[0m                 \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978715
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 0) 0\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpp69elzxv.scala:16)\n\tat Problem.main(tmpp69elzxv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978715
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 2l) 1\n        else fib(n-1l) + fib(n-2l)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978716
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 2) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpglz26qwh.scala:16)\n\tat Problem.main(tmpglz26qwh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978677
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var f1 = 1\n        var f2 = 1\n        var\
    \ result = 0\n\n        // Write your solution here\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk8n9lc7j.scala:17:5\
    \ ---------------------\e[0m\e[0m\n\e[31m17 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978716
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = Vector.fill(5)(1L)\n        fibs(0)\
    \ += fibs(1)\n        for(i <- 1 to 5){\n            fibs(i) += fibs(i - 1) +\
    \ fibs(i - 2)\n        }\n        fibs(5)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr9qj__ba.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        fibs(\e[31m0\e[0m) += fibs(\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is\
    \ not a member of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpr9qj__ba.scala:15:20 ------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m            fibs(i) += fibs(i - \e[31m1\e[0m) + fibs(i - \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean Long.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 1\n        var b = 1\n        var\
    \ next = 1\n        if (n < 2)\n            next\n        else {\n           \
    \ while (n > 0) {\n                var c = a + b\n                a = b\n    \
    \            b = c\n                n -= 1\n            }\n            next\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpoz5zrw_k.scala:22:18 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value -= is not a\
    \ member of Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978717
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0l\n        var b = 1l\n        var\
    \ c = a + b\n        while (c < n){\n            b = c\n            c = a + b\n\
    \            a = c\n        }\n        c\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuwf4zlzy.scala:23)\n\tat Problem.main(tmpuwf4zlzy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978718
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val a = fibs(n)\n        if (a > 0) a else\
    \ -a - 1\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb0452vg_.scala:12:16 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = fibs(n)\n\e[31m\e\
    [31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ fibs\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978714
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l)\n            1l\n        else\n\
    \            fib((n - 1l) + 1l) + fib((n - 2l))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat Problem$.fib(tmp2uleebj8.scala:15)\n\tat Problem$.fib(tmp2uleebj8.scala:15)\n\
    \tat"
  stdout: ''
  timestamp: 1659978718
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val s = scala.math.BigInt(\"1\");\n      \
    \  val t = scala.math.BigInt(\"1\");\n        for (i <- 0 to n-1) {\n        \
    \    t += s\n            s = t\n        }\n        s\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdf02lo9x.scala:14:23\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m to n-\e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                   \
    \    ^^^\e[0m\n\e[31m   |\e[0m                       Found:    Long\n\e[31m  \
    \ |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpdf02lo9x.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            t += s\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of BigInt - did\
    \ you mean t.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpdf02lo9x.scala:16:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            s = t\n\e\
    [31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val s\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdf02lo9x.scala:18:8\
    \ ---------------------\e[0m\e[0m\n\e[31m18 |\e[0m        s\n\e[31m\e[31m   |\e\
    [0m        ^\e[0m\n\e[31m   |\e[0m        Found:    (s : BigInt)\n\e[31m   |\e\
    [0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659978719
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n      val fibs = mutable.Stack[Int]()\n      fibs.push(1)\
    \ \n      fibs.push(1) \n      while(fibs.size < n)\n        fibs.push(fibs.last+fibs.last)\n\
    \      fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_b5hw60u.scala:12:17 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m      \e[33mval\e[0m \e[36mfibs\e[0m = mutable.Stack[\e\
    [35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                 ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978715
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var sum = 0\n        var sum2 = 1\n      \
    \  var i = 1\n        while(i < n){\n            sum = sum + sum2\n          \
    \  sum2 = sum2 - sum\n            i = i + 1\n        }\n        return sum\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgzhthgjn.scala:23)\n\tat Problem.main(tmpgzhthgjn.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978719
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val nums = mutable.ListBuffer(1, 2)\n    \
    \    while(nums.size < n){\n            val tmp = nums.head + nums.last\n    \
    \        nums.clear()\n            nums += tmp\n        }\n        nums.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfe1gr5gi.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659978715
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var f1 = 1\n        var f2 = 1\n        f1\
    \ += f2\n        f2 += f1\n        f1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwn3zarrf.scala:19)\n\tat Problem.main(tmpwn3zarrf.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978719
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib0(n : Long) : Long = {\n          \
    \  if (n == 0 || n == 1) {\n                return n\n            } else {\n \
    \               return fib0(n - 1) + fib0(n - 2)\n            }\n        }\n \
    \       fib0(n)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978719
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var i : Long = 0\n        var prev : Long\
    \ = 1\n        var ans : Long = 1\n        while (i<n) {\n            ans = prev\
    \ + ans\n            prev = ans\n            i += 1\n        }\n        ans\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4gj_cina.scala:23)\n\tat Problem.main(tmp4gj_cina.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978719
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n==0L || n==1L)\n            1L\n    \
    \    else if (n==2L)\n            1L\n        else\n            fib(n-1L) + fib(n-2L)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978719
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val x0 = 1l\n        val x1 = 1l\n       \
    \ var i = 2\n        val fib = 0l\n        fib += x0\n        while(i <n) {\n\
    \            x1 += x0\n            x0 = x1\n            fib += x0\n          \
    \  i += 1\n        }\n        fib\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfldk0pll.scala:17:16 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mwhile\e[0m(i <n) {\n\e[31m\e[31m   |\e\
    [0m                ^\e[0m\n\e[31m   |\e[0m                ')' expected, but $XMLSTART$<\
    \ found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfldk0pll.scala:16:12 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        fib += x0\n\e[31m\e[31m   |\e[0m        ^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value += is not a member of Long - did you mean fib.!=?\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfldk0pll.scala:17:14 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mwhile\e[0m(i <n) {\n\e[31m\e[31m   |\e\
    [0m              ^\e[0m\n\e[31m   |\e[0m              Found:    (i : Int)\n\e\
    [31m   |\e[0m              Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpfldk0pll.scala:18:15 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            x1 += x0\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long -\
    \ did you mean x1.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpfldk0pll.scala:19:15\
    \ -----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            x0 = x1\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val x0\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfldk0pll.scala:20:16\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            fib += x0\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value +=\
    \ is not a member of Long - did you mean fib.!=?\n6 errors found\n"
  stdout: ''
  timestamp: 1659978721
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.ArrayBuffer.empty[(Long,\
    \ Long)]\n        fibs += (0, 1)\n        fibs += (1, 1)\n        fibs match {\n\
    \            case Nil => n\n            case a :: b => fib(a - b) match {\n  \
    \              case x if x == n => fibs(x)\n                case x => fibs(x)\
    \ + fibs(x + 1)\n            }\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu_hoa_sd.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.empty[(\e\
    [35mLong\e[0m, \e[35mLong\e[0m)]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpu_hoa_sd.scala:17:31 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mcase\e[0m a :: b => fib(a - b) \e[33mmatch\e\
    [0m {\n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e\
    [0m                               Not found: a\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978718
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0l) 0\n        else if (n == 1l)\
    \ 1\n        else fib((n - 1l) + fib((n - 2l))) }\n}\n\n\"\"\"\n\nval fib_code\
    \ = s\"\"\"\nimport scala.collection.mutable.ListBuffer\nimport scala.collection.immutable.List\n\
    import scala.collection.immutable._\nimport scala.math.Ordering.Implicits._\n\
    object Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    def fib(n : Long) : Long = {\n        def fib2(n: Long): Long = {\n\
    \            if (n == 0l) 0\n            else if (n == 1l) 1\n            else\
    \ fib2(n - 1l) + fib2(n - 2l) }\n        val xs = List.range(1, n+1)\n       \
    \ xs.sortWith(_ < _)\n        .tail match {\n            case 0 => 0\n       \
    \     case 1 => 1\n            case _ => fib2(xs.last) } }\n}\n\"\"\"\nval fib_code\
    \ = \"\"\"\nimport scala.collection.mutable.ListBuffer\nimport scala.collection.immutable.List\n\
    import scala.collection.immutable._\nimport scala.math.Ordering.Implicits._\n\
    object Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\
    \ (21l)\n    def fib(n : Long) : Long = {\n        def fib2(n: Long): Long = {\n\
    \            if (n == 0l) 0\n            else if (n == 1l) 1\n            else\
    \ fib2(n - 1l) + fib2(n - 2l) }\n        val xs = List.range(1, n+1)\n       \
    \ xs.sortWith(_ < _)\n        .tail match {\n            case 0 => 0\n       \
    \     case 1 => 1\n            case _ => fib2(xs.last) } }\n}\"\"\"\nval fib_code\
    \ = \"\"\"\nimport scala.collection.mutable.ListBuffer\nimport scala.collection.immutable.List\n\
    import scala.collection.immutable._\nimport scala.math.Ordering.Implicits._\n\
    object Problem {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n\
    \    // (55l)\n    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    //\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E103] Syntax Error: /tmp/tmpy09n9fof.scala:17:0 ----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m\"\"\"\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0mIllegal\
    \ start of toplevel definition\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E103] Syntax Error:\
    \ /tmp/tmpy09n9fof.scala:44:0 ----------------------------\e[0m\e[0m\n\e[31m44\
    \ |\e[0m\"\"\"\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0mIllegal start of toplevel\
    \ definition\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmpy09n9fof.scala:69:1\
    \ ------------------------------------------\e[0m\e[0m\n\e[31m69 |\e[0m}\"\"\"\
    \n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m end of toplevel definition expected\
    \ but string literal found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpy09n9fof.scala:92:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m92 |\e[0m}\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0meof expected, but '}' found\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmpy09n9fof.scala:24:0 ----------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m\e[33mobject\e[0m \e[35mProblem\e[0m {\n\e[31m\e[31m   |\e[0m^\e\
    [0m\n\e[31m   |\e[0mProblem is already defined as \e[33mobject\e[0m \e[35mProblem\e\
    [0m in /tmp/tmpy09n9fof.scala\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpy09n9fof.scala:50:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m50 |\e[0m\e[33mobject\e[0m \e\
    [35mProblem\e[0m {\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0mProblem is already\
    \ defined as \e[33mobject\e[0m \e[35mProblem\e[0m in /tmp/tmpy09n9fof.scala\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpy09n9fof.scala:75:0 ----------------------------\e\
    [0m\e[0m\n\e[31m75 |\e[0m\e[33mobject\e[0m \e[35mProblem\e[0m {\n\e[31m\e[31m\
    \   |\e[0m^\e[0m\n\e[31m   |\e[0mProblem is already defined as \e[33mobject\e\
    [0m \e[35mProblem\e[0m in /tmp/tmpy09n9fof.scala\n\e[31m\e[31m-- Error: /tmp/tmpy09n9fof.scala:37:35\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m37 |\e[0m       \
    \ \e[33mval\e[0m \e[36mxs\e[0m = List.range(\e[31m1\e[0m, n+\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                                   ^\e[0m\n\e[31m   |\e[0m\
    \                     "
  stdout: ''
  timestamp: 1659978722
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibo = (1l) :: (1l) :: Nil\n        if\
    \ (n > fibo.size - 1) 0\n        else {\n            fibo(n)\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf3vh2osr.scala:15:17\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            fibo(n)\n\e[31m\e\
    [31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m                 Found: \
    \   (n : Long)\n\e[31m   |\e[0m                 Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) {\n            n\n        } else\
    \ {\n            fib(n-1) + fib(n-2)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val memo = mutable.ListBuffer.empty[Long]\n\
    \        def fib(x: Long) = {\n            memo += x\n            if (x < (2l*n\
    \ - 2l)) fib(x+1l) else\n            memo.remove(0)\n        }\n        fib(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpur1khfke.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmemo\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E044] Cyclic Error: /tmp/tmpur1khfke.scala:15:33 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mif\e[0m (x < (\e[31m2l\e[0m*n - \e\
    [31m2l\e[0m)) fib(x+\e[31m1l\e[0m) \e[33melse\e[0m\n\e[31m\e[31m   |\e[0m    \
    \                             ^\e[0m\n\e[31m   |\e[0m                    Overloaded\
    \ or recursive \e[33mmethod\e[0m \e[35mfib\e[0m needs return type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659978721
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a : Long = 1\n        var b : Long = 1\n\
    \        for (i <- 0 until n) {\n            val temp = a\n            a = b\n\
    \            b = temp\n        }\n        a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbrucj9vk.scala:14:26\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978724
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val fibs = mutable.Stack[Long]()\n       \
    \ fibs.push(1)\n        fibs.push(2)\n        for (i <- 3 until n) {\n       \
    \     fibs.push((fibs.head + fibs.last))\n        }\n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfdv_b6ru.scala:12:19 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.Stack[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfdv_b6ru.scala:15:26 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m3\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659978725
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1l) {\n            n\n        } else\
    \ {\n            fib(n-1l) + fib(n-2l)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978724
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1L) n\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978725
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val a = 0\n        val b = 1\n        var\
    \ fib = 0\n        if (n < 2)\n            fib\n        else\n            fib\
    \ += fib((n - 1l)) * (n - 1l)\n        fib +=  a * b\n        fib +=  a\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfgyqhg6_.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            fib += fib((n - \e[31m1l\e[0m)) * (n - \e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \          value += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m--\
    \ [E050] Type Error: /tmp/tmpfgyqhg6_.scala:18:19 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            fib += fib((n - \e[31m1l\e[0m)) * (n - \e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^\e[0m\n\e[31m   |\e[0m\
    \                   \e[33mvariable\e[0m \e[35mfib\e[0m does not take parameters\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfgyqhg6_.scala:20:8\
    \ ---------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fib +=  a\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Unit\n\e\
    [31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659978725
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib(n : Long, acc1 : Long, acc2 : Long)\
    \ : Long = {\n            if(n < 1) acc1\n            else if(n < 3) acc2\n  \
    \          else fib(n-1, acc2, acc1 + acc2)\n        }\n        fib(n.toInt, 1,\
    \ 1)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978725
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var fib : scala.math.BigInt = BigInt(0)\n\
    \        var fib1 : scala.math.BigInt = BigInt(1)\n        for (i <- 1 to n)\n\
    \            fib2 = fib.add(fib1)\n            fib = fib2\n        fib1\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n   \
    \ assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6uoe0_zc.scala:14:23\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m\
    \   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m       \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6uoe0_zc.scala:15:12 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            fib2 = fib.add(fib1)\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            Not found: fib2\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp6uoe0_zc.scala:15:23 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m            fib2 = fib.add(fib1)\n\e[31m\e[31m   |\e[0m  \
    \                 ^^^^^^^\e[0m\n\e[31m   |\e[0m          value add is not a member\
    \ of BigInt - did you mean BigInt.abs?\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6uoe0_zc.scala:16:18 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m            fib = fib2\n\e[31m\e[31m   |\e[0m                  ^^^^\e[0m\n\e\
    [31m   |\e[0m                  Not found: fib2\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6uoe0_zc.scala:17:8 ---------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fib1\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\
    \e[31m   |\e[0m        Found:    (fib1 : BigInt)\n\e[31m   |\e[0m        Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 0) throw new Exception(\"Negative\
    \ fib number\");\n        if (n <= 1) return n;\n        val first: Long = fib(n-1)\
    \ + fib(n-2);\n        fib(n) = first;\n        first;\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) ==\
    \ (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9o8ccjs5.scala:15:8 -------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        fib(n) = first;\n\e[31m\e[31m   |\e[0m      \
    \  ^^^\e[0m\n\e[31m   |\e[0m        value update is not a member of Long => Long\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n < 2) 1\n        else fib(n-1) + fib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpglz26qwh.scala:16)\n\tat Problem.main(tmpglz26qwh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978677
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        val nums = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \        while(n > 0) {\n            nums.append(n); n -= 1\n        }\n     \
    \   nums.reverse.head\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4egu4w33.scala:14:30 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            nums.append(n); n -= \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m                            ^^^^\e[0m\n\e[31m   |\e[0m          \
    \         value -= is not a member of Long - did you mean n.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659978725
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        def fib2(n: Long): Long = {\n            def\
    \ fib3(n: Long): Long = {\n                if (n == 0) 1\n                else\
    \ if (n == 1) 1\n                else {\n                    val m = fib2(n -\
    \ 1)\n                    fib3(n - 1) + m\n                }\n            }\n\
    \            fib3(n)\n        }\n        fib2(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpru__nf_e.scala:26)\n\tat Problem.main(tmpru__nf_e.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        var a = 0\n        var b = 1\n        var\
    \ result = 1\n        for(i <- 0 until n) {\n            result = a + b\n    \
    \        a = b\n            b = result\n        }\n        result\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n    assert(fib((1l))\
    \ == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l)) == (89l));\n\
    \    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd5ppz_f0.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        // Use recursive function to return Fibonacci\
    \ numbers in tail recursion\n        def fib1(n : Long, sum : Long) : Long = {\n\
    \            if (n == 0) sum\n            else fib1(n - 1, sum + sum)\n      \
    \  }\n        fib1(n.toInt, 0L)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(fib((10l)) == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l))\
    \ == (21l));\n    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_zmj0e2v.scala:20)\n\tat Problem.main(tmp_zmj0e2v.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n <= 1) {\n            return 1L\n   \
    \     }\n        else {\n            return fib(n - 1) + fib(n - 2)\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(fib((10l)) == (55l));\n\
    \    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n    assert(fib((11l))\
    \ == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpydg6pjyj.scala:20)\n\tat Problem.main(tmpydg6pjyj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659978726
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return n-th Fibonacci number.\n    // >>> fib((10l))\n    // (55l)\n\
    \    // >>> fib((1l))\n    // (1l)\n    // >>> fib((8l))\n    // (21l)\n    def\
    \ fib(n : Long) : Long = {\n        if (n == 0 || n == 1) n\n        else fib(n\
    \ - 1) + fib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(fib((10l))\
    \ == (55l));\n    assert(fib((1l)) == (1l));\n    assert(fib((8l)) == (21l));\n\
    \    assert(fib((11l)) == (89l));\n    assert(fib((12l)) == (144l));\n    }\n\n\
    }\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659978726

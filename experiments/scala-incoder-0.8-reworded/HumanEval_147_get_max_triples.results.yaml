language: scala
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val array = new Array[Long](n)\n\
    \        val triplesCount = 0\n        for(i <- 1 to n) {\n            for(j <-\
    \ i to n) {\n                for(k <- j to n) {\n                    if(i != j\
    \ && j != k) {\n                        array(i) = i * i - i + 1\n           \
    \             if(array(i) == array(i + 1) + array(j) + array(k) && array(i) %\
    \ 3 == 0) {\n                            triplesCount += 1\n                 \
    \       }\n                    }\n                }\n            }\n        }\n\
    \        return triplesCount\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp85l83r4y.scala:15:36\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36marray\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                    ^\e[0m\n\e[31m   |\e[0m               \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp85l83r4y.scala:17:22 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m\
    \                      ^\e[0m\n\e[31m   |\e[0m                      Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp85l83r4y.scala:18:26 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m(j <- i to n) {\n\e[31m\e[31m\
    \   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m                  \
    \        Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp85l83r4y.scala:19:30\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k\
    \ <- j to n) {\n\e[31m\e[31m   |\e[0m                              ^\e[0m\n\e\
    [31m   |\e[0m                              Found:    (n : Long)\n\e[31m   |\e\
    [0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp85l83r4y.scala:23:41 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                            triplesCount += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m         value += is not a member of Int - did you mean triplesCount.!=?\n\
    5 errors found\n"
  stdout: ''
  timestamp: 1660028812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var result = 0\n        for\
    \ (i <- 1l to n) {\n            for (j <- 1l to i) {\n                for (k <-\
    \ i to j) {\n                    result = result + (i + j + k) * (i + j + k) /\
    \ 2\n                }\n            }\n        }\n        return result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptejs51vq.scala:19:29\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                    result =\
    \ result + (i + j + k) * (i + j + k) / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m   \
    \                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                             Found:    Long\n\e[31m   |\e[0m       \
    \                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028808
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      var a = new mutable.ArrayList[Int](n+1);\n\
    \      for(i<- 1 to n){\n        a(i) = i*i-i+1;\n      }\n      var triples =\
    \ 0\n      var tripleCount = 0\n      for(i<- 1 to n){\n        for(j<- i to n){\n\
    \          for(k <- j to n){\n            if(k<i){\n              triples+=(k+1)\n\
    \            }else{\n              triples+=(a(i+k+j));\n            }\n     \
    \     }\n        }\n        if(triples%3 != 0){\n          triples+=tripleCount\n\
    \        }\n      }\n      return triples.toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp11qt0f7h.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m      \e[33mvar\e[0m \e[36ma\e[0m = \e[33mnew\e[0m mutable.ArrayList[\e\
    [35mInt\e[0m](n+\e[31m1\e[0m);\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp11qt0f7h.scala:16:19 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m      \e[33mfor\e[0m(i<- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   Found:\
    \    (n : Long)\n\e[31m   |\e[0m                   Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp11qt0f7h.scala:21:19 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m      \e[33mfor\e[0m(i<- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   Found:\
    \    (n : Long)\n\e[31m   |\e[0m                   Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp11qt0f7h.scala:22:21 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mfor\e[0m(j<- i to n){\n\e[31m\e[31m   |\e\
    [0m                     ^\e[0m\n\e[31m   |\e[0m                     Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                     Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp11qt0f7h.scala:23:24 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m          \e[33mfor\e[0m(k <- j to n){\n\e[31m\e[31m\
    \   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                    \
    \    Found:    (n : Long)\n\e[31m   |\e[0m                        Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660028810
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // Initialize our list of\
    \ triples and our counter of invalid triples.\n        var triples = Vector.empty[Int]\n\
    \        var invalidTriples = 0\n        // We start with n = 5\n        var a\
    \ = List.fill(5)(1l)\n        for (i <- 1 until n) {\n            // We have two\
    \ possible candidates for a[i]\n            val min = a(i).min(j)\n          \
    \  val max = a(i).max(j)\n            // If a[i] < min and a[i] < max, then we\
    \ found an invalid triple\n            // and we update our list of invalid triples.\n\
    \            if (a(i) < min && a(i) < max) {\n                invalidTriples +=\
    \ 1\n            }\n            // If a[i] >= min and a[i] >= max, then we found\
    \ a valid triple.\n            // We add our triple.\n            if (a(i) >=\
    \ min && a(i) >= max) {\n                triples += i\n            }\n       \
    \     // If a[i] > max or < min, then we know we have an invalid triple.\n   \
    \         // We increase our invalid triple.\n            if (a(i) > max || a(i)\
    \ < min) {\n                invalidTriples += 1\n            }\n            //\
    \ We increment our candidate for a[i]\n            i += 1\n        }\n       \
    \ // We found 1 invalid triple (which we can also find with a single loop over\
    \ the list of triples),\n        // so we return 1.\n        return invalidTriples\
    \ + 1\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7668047o.scala:20:26\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp7668047o.scala:22:31 ------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m            \e[33mval\e[0m \e[36mmin\e[0m = a(i).min(j)\n\e\
    [31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp7668047o.scala:23:31 ------------------------\e[0m\e\
    [0m\n\e[31m23 |\e[0m            \e[33mval\e[0m \e[36mmax\e[0m = a(i).max(j)\n\e\
    [31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m    \
    \                           Not found: j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp7668047o.scala:32:24 ------------------------\e[0m\e\
    [0m\n\e[31m32 |\e[0m                triples += i\n\e[31m\e[31m   |\e[0m      \
    \          ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  value += is not a member of Vector[Int]\
    \ - did you mean Vector[Int].!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7668047o.scala:40:14\
    \ ------------------------\e[0m\e[0m\n\e[31m40 |\e[0m            i += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.MutableList[Long]\
    \ = mutable.MutableList(1l)\n        var i : Int = 0\n        var count : Int\
    \ = 0\n        var j : Int = 0\n        while (i < n){\n            while (j <\
    \ n && a(j) < 0){\n                j = j + 1\n            }\n            while\
    \ (i < n && a(j) >= 0){\n                i = i + 1\n                j = j + 1\n\
    \            }\n            a.add(i)\n            count = count + a.size()\n \
    \           j = j + 1\n        }\n        count = count + 1\n        return count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_nau31nf.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.MutableList[\e\
    [35mLong\e[0m] = mutable.MutableList(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_nau31nf.scala:15:44\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m : mutable.MutableList[\e[35mLong\e[0m] = mutable.MutableList(\e[31m1l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028805
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        def findNextIndex(i: Long)\
    \ : Long = {\n            while (i > 0) {\n                if (a[i - 1] < i +\
    \ 1) {\n                    i -= 1\n                } else {\n               \
    \     val ret = a[i - 1] + i + 1\n                    if (ret >= 3) ret\n    \
    \                else i\n                }\n            }\n        }\n       \
    \ val a = List.fill(n.toInt)(0)\n        for (i = 1; i < n; i += 1)\n        \
    \    a(i) = i * i - i + 1\n        a(0) = 1\n        a.toList.reverse.takeWhile(i\
    \ => i >= 3)\n            .map(i => (i, findNextIndex(i))).foldLeft((0l), 0)(_\
    \ + _._2)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp7pi3w25j.scala:27:15 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i < n; i +=\
    \ \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m \
    \              ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmp7pi3w25j.scala:27:25 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i < n; i += \e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               '<-' expected, but ';' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmp7pi3w25j.scala:27:33 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i < n; i += \e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m  \
    \                               '<-' expected, but ')' found\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp7pi3w25j.scala:17:24 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m                \e[33mif\e[0m (a[\e[35mi\e[0m \e[35m-\e[0m\
    \ \e[31m1\e[0m] < i + \e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                 \
    \       ^\e[0m\n\e[31m   |\e[0m                        Not found: type -\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7pi3w25j.scala:18:22 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                    i -= \e[31m1\e[0m\n\e[31m\e[31m \
    \  |\e[0m                    ^^^^\e[0m\n\e[31m   |\e[0m                   value\
    \ -= is not a member of Long - did you mean i.!=?\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmp7pi3w25j.scala:20:34 ------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                    \e[33mval\e[0m \e[36mret\e[0m = a[\e[35mi\e[0m \e\
    [35m-\e[0m \e[31m1\e[0m] + i + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m           \
    \                       ^\e[0m\n\e[31m   |\e[0m                              \
    \    Not found: type -\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7pi3w25j.scala:27:18\
    \ ------------------------"
  stdout: ''
  timestamp: 1660028812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        val\
    \ a = mutable.ListBuffer.empty[Long]\n        for (i <- 1 to n) a += (i * i -\
    \ i + 1)\n        for (i <- 1 to n) {\n            val c = a(i) + a(i+1) + a(i-1)\n\
    \            count += if (c % 3 == 0) 1 else 0\n        }\n        count\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpt8layed3.scala:20:21 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            count += \e[33mif\e[0m (c % \e[31m3\e[0m\
    \ == \e[31m0\e[0m) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m   |\e\
    [0m                     ^^\e[0m\n\e[31m   |\e[0m                     expression\
    \ expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpt8layed3.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer.empty[\e[35mLong\e\
    [0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpt8layed3.scala:17:23 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) a += (i * i - i + \e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m    \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt8layed3.scala:18:23\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpt8layed3.scala:20:18 ------------------------\e[0m\e[0m\n\e[31m20 |\e\
    [0m            count += \e[33mif\e[0m (c % \e[31m3\e[0m == \e[31m0\e[0m) \e[31m1\e\
    [0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ Int.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660028810
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // Write your code here.\n\
    \        val a = Vector(1 to n).map(x => (x * x - x + 1))\n        val b = Vector(a)(0)\
    \ to a(n)(1)\n        val c = b.drop(1) to a(n)(n)\n        c.filter(x => x %\
    \ 3 == 0).length\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpigyhajue.scala:16:28\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Vector(\e[31m1\e[0m to n).map(\e[36mx\e[0m => (x * x - x + \e[31m1\e[0m))\n\
    \e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m     \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpigyhajue.scala:16:43 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36ma\e[0m = Vector(\e[31m1\e[0m to n).map(\e[36mx\e\
    [0m => (x * x - x + \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                    \
    \                     ^^^\e[0m\n\e[31m   |\e[0mvalue * is not a member of scala.collection.immutable.Range.Inclusive,\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might make progress towards fixing the\
    \ problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpigyhajue.scala:17:34 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = Vector(a)(\e[31m0\e\
    [0m) to a(n)(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                            \
    \      ^\e[0m\n\e[31m   |\e[0m                                  Found:    (n :\
    \ Long)\n\e[31m   |\e[0m                                  Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpigyhajue.scala:18:18 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = b.drop(\e[31m1\e\
    [0m) to a(n)(n)\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue drop is not a member of Nothing, but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following i"
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        var\
    \ triple = scala.collection.mutable.ListBuffer[Long]()\n        for(i<-0 until\
    \ (n-1)) {\n            for(j <-0 until (n-1)) {\n                for(k <-0 until\
    \ (n-1)) {\n                    if(j<k) {\n                        triple+=(i*i)+(i*j+i+1)+(i*k+k+1)\n\
    \                    } else {\n                        triple+=(i*i)+(i*j+k+1)+(i*k+k+1)\n\
    \                    }\n                    count += triple.lastOption match {\n\
    \                        case Some(i) => i\n                        case None\
    \ => 0\n                    }\n                }\n            }\n        }\n \
    \       triple.lastOption match {\n            case Some(i) => count\n       \
    \     case None => 0\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5hceytnq.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i<-\e\
    [31m0\e[0m until (n-\e[31m1\e[0m)) {\n\e[31m\e[31m   |\e[0m                  \
    \      ^^^\e[0m\n\e[31m   |\e[0m                        Found:    Long\n\e[31m\
    \   |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp5hceytnq.scala:18:29 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m(j <-\e[31m0\e[0m until (n-\e\
    [31m1\e[0m)) {\n\e[31m\e[31m   |\e[0m                             ^^^\e[0m\n\e\
    [31m   |\e[0m                             Found:    Long\n\e[31m   |\e[0m    \
    \                         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5hceytnq.scala:19:33 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k <-\e[31m0\e[0m until (n-\e\
    [31m1\e[0m)) {\n\e[31m\e[31m   |\e[0m                                 ^^^\e[0m\n\
    \e[31m   |\e[0m                                 Found:    Long\n\e[31m   |\e[0m\
    \                                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp5hceytnq.scala:25:26 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                    count += triple.lastOption \e[33mmatch\e\
    [0m {\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                  value += is not a member of Int - did you mean Int.!=?\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val m = n / 3\n        var\
    \ triple : Long = 0\n        var i = 0\n        var j = 0\n        var k = 0\n\
    \        val result = mutable.ArrayBuffer.empty[Int]\n        val list = mutable.ArrayBuffer.empty[Int]\n\
    \        while (i <= n && j <= n && k <= n){\n            if (i == 0 || j == 0\
    \ || k == 0 || a(i) == a(j) + a(k)) {\n                triple = triplet + a(i)\
    \ + a(j) + a(k) \n                result.add(triple)\n            }\n        \
    \    i += 1\n            j += 1\n            k += 1\n        }\n        (result.max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuk9xwpti.scala:20:21 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuk9xwpti.scala:21:19 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpuk9xwpti.scala:23:46 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mif\e[0m (i == \e[31m0\e[0m || j ==\
    \ \e[31m0\e[0m || k == \e[31m0\e[0m || a(i) == a(j) + a(k)) {\n\e[31m\e[31m  \
    \ |\e[0m                                              ^\e[0m\n\e[31m   |\e[0m\
    \                                              Not found: a\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuk9xwpti.scala:24:25 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                triple = triplet + a(i) + a(j) + a(k)\
    \ \n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                         Not found: triplet\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val result = new mutable.Array[Long](n)\n\
    \        // Use forAll in scala collection\n        (0 to n-1).forall(_ => { \n\
    \            val a = 2l\n            (0 to n-1).foreach(j => { \n            \
    \    (0 to n-1).foreach(k => { \n                    if (j < k) {\n          \
    \              result(k) = a\n                    } else if (j == k) {\n     \
    \                   result(k) = a\n                    } else {\n            \
    \            result(k) = a + a + a\n                    }\n                })\
    \ \n            })\n        })\n        // Use foldLeft in scala collection\n\
    \        result.foldLeft(1l) { (sum, a) => { \n            (sum, a) => if (sum\
    \ + a + a + a == 3l) sum + a + a + a else sum + a + a + a + 1\n        }}\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv1yd91bn.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = \e[33mnew\e\
    [0m mutable.Array[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv1yd91bn.scala:17:14\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        (\e[31m0\e[0m to n-\e\
    [31m1\e[0m).forall(_ => { \n\e[31m\e[31m   |\e[0m              ^^^\e[0m\n\e[31m\
    \   |\e[0m              Found:    Long\n\e[31m   |\e[0m              Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv1yd91bn.scala:19:18\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            (\e[31m0\e[0m to\
    \ n-\e[31m1\e[0m).foreach(\e[36mj\e[0m => { \n\e[31m\e[31m   |\e[0m          \
    \        ^^^\e[0m\n\e[31m   |\e[0m                  Found:    Long\n\e[31m   |\e\
    [0m                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpv1yd91bn.scala:20:22 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m                (\e[31m0\e[0m to n-\e[31m1\e[0m).foreach(\e[36mk\e[0m\
    \ => { \n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m\
    \                      Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Array.fill(n)(0)\n\
    \        var count = 0\n        for (i <- 0 until n) {\n            val tmp =\
    \ i * i - i + 1\n            val pos = a.indexOf(tmp)\n            val j = (pos\
    \ + 1) until (pos + n).find(_ == tmp)\n            if (j.isDefined) {\n      \
    \          val k = j.get\n                if (i + j + k == 3 * tmp) {\n      \
    \              count += 1\n                    a(pos) = i\n                  \
    \  a(j) = k\n                    a(k) = j\n                }\n            }\n\
    \        }\n        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmi4qd4rc.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = Array.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \      ^\e[0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\
    \e[31m   |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpmi4qd4rc.scala:17:26 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmi4qd4rc.scala:20:46\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mval\e[0m\
    \ \e[36mj\e[0m = (pos + \e[31m1\e[0m) until (pos + n).find(_ == tmp)\n\e[31m\e\
    [31m   |\e[0m                                    ^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                                    value find is not a member of Long\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmi4qd4rc.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (j.isDefined) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  value isDefined is\
    \ not a member of Range - did you mean j.isDefinedAt?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpmi4qd4rc.scala:22:26 ------------------------\e[0m\e[0m\n\
    \e[31m22 |\e[0m                \e[33mval\e[0m \e[36mk\e[0m = j.get\n\e[31m\e[31m\
    \   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue get is not\
    \ a member of Range, but could be made available as an extension method.\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mOne of the following imports might fix the problem:\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e"
  stdout: ''
  timestamp: 1660028812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0l).toList\n\
    \        var count = 0\n        for (i1 <- 0 until n) {\n            for (i2 <-\
    \ i1 until n if i1 < i2) {\n                for (i3 <- i2 until n if i2 < i3)\
    \ {\n                    if (i1 + i2 + i3 == 3 && i1 + i2 + i3 == i1 +i3 + i2){\n\
    \                        a(i1) = a(i1) + 1\n                        a(i2) = a(i2)\
    \ + 1\n                        a(i3) = a(i3) + 1\n                        count\
    \ += 1\n                    }\n                }\n            }\n        }\n \
    \       count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpd1_tn917.scala:17:27\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i1 <-\
    \ \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                           ^\e\
    [0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\e[31m  \
    \ |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpd1_tn917.scala:18:32 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m (i2 <- i1 until n \e[33mif\e\
    [0m i1 < i2) {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e\
    [31m   |\e[0m                                Found:    (n : Long)\n\e[31m   |\e\
    [0m                                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpd1_tn917.scala:19:36 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m (i3 <- i2 until n \e[33mif\e\
    [0m i2 < i3) {\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\
    \e[31m   |\e[0m                                    Found:    (n : Long)\n\e[31m\
    \   |\e[0m                                    Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpd1_tn917.scala:21:24 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                        a(i1) = a(i1) + \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m    value\
    \ update is not a member of List[Long] - did you mean a.updated?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpd1_tn917.scala:22:24 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                        a(i2) = a(i2) + \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m    value\
    \ update is not a member of List[Long] - did you mean a.updated?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpd1_tn917.scala:23:24 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                "
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = mutable.ArrayBuffer(1l)\n\
    \        var i = 1\n        var j = 1\n        var k = 1\n        var max = Integer.MIN_VALUE\n\
    \        while( i <= n ){\n            a(i) = (i*i)-(i+1) + 1\n            if(\
    \ (i+j+k) ==  (i*i)-(i+1)){\n                val t = a(i) + a(i+j) + a(i+k)\n\
    \                if(t > max){\n                    max = t\n                }\n\
    \            }\n            i += 1\n        }\n        return max\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9fjr69xj.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028804
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        if (n <= 0) return 0l\n \
    \       val a = mutable.ArrayBuffer.fill(n.toInt)(0)\n        val result = mutable.ListBuffer[Long]()\n\
    \        for (i1 <- 1l to n) {\n            val a1 = a(i1)\n            val sum\
    \ = a1.toLong + a(i1) + a(i1)\n            if (sum % 3 == 0l) {\n            \
    \    result.add(a(i1) + a(i1) + a(i1))\n            }\n        }\n        result.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplu3en_uu.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmplu3en_uu.scala:17:21 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028806
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(n)\n\
    \        for( i <- 1 until n ) {\n            a(i) = i*i - i + 1 // 1 \u2264 i\
    \ \u2264 n\n        }\n        val m = a.max\n        for( i <- 1 until m ) {\n\
    \            val j = a.drop(i).max\n            val k = a.take(i).min\n      \
    \      val sum = a.drop(i).take(j).sum\n            if(sum == 0) return 0\n  \
    \          if(sum == 1) return 1\n            if(sum > 1) return sum\n       \
    \ }\n        return -1\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp49s224vc.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp49s224vc.scala:16:26 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mfor\e[0m( i <- \e[31m1\e[0m until n ) {\n\e[31m\e[31m  \
    \ |\e[0m                          ^\e[0m\n\e[31m   |\e[0m                    \
    \      Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028808
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(i)\n\
    \        val m = a.map(_.asInstanceOf[Int]).filterNot(_.isZero)\n        (m.filter(_\
    \ + _ + _.isOdd).length)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2m2mzi8u.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(i)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp2m2mzi8u.scala:15:44 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(i)\n\e[31m\e\
    [31m   |\e[0m                                            ^\e[0m\n\e[31m   |\e\
    [0m                                            Not found: i\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660028804
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = ListBuffer(1)\n \
    \       var i = 0\n        var j = 0\n        var k = 0\n        var max = 0\n\
    \        while(i < n) {\n            i = i + 1\n            while(j < n && k<n)\
    \ {\n                j = j + 1\n                while(k < n && a(j) == a(k) +\
    \ a(i)) {\n                    k = k + 1\n                }\n                max\
    \ = Math.max(max, a(i) + a(j) + a(k))\n            }\n            a = a :+ i*i\
    \ - i + 1\n        }\n        max = Math.max(max, a(n))\n        return max\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1qcilnx8.scala:31:30\
    \ --------------------\e[0m\e[0m\n\e[31m31 |\e[0m        max = Math.max(max, a(n))\n\
    \e[31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m   \
    \                           Found:    (n : Long)\n\e[31m   |\e[0m            \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028808
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var max = 0L\n        var\
    \ a = new mutable.ArrayBuffer[Long](n)\n        for (i <- 1 to n){\n         \
    \   a.clear()\n            for (j <- 1 to n){\n                for (k <- 1 to\
    \ n){\n                    val temp = a(j)\n                    if (temp != 0L)\
    \ a(k) += temp\n                }\n                if (a(j) != 0L) a(j) += 1\n\
    \                if (a(j) != 0L) a(j) += 1\n            }\n            max = Math.max(max,\
    \ a(j))\n        }\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprt1pm9pn.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.ArrayBuffer[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m             \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprt1pm9pn.scala:17:23\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmprt1pm9pn.scala:19:27 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m            \e[33mfor\e[0m (j <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                           ^\e[0m\n\e[31m   |\e[0m                        \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                           Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprt1pm9pn.scala:20:31\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m                \e[33mfor\e[0m\
    \ (k <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                           \
    \    ^\e[0m\n\e[31m   |\e[0m                               Found:    (n : Long)\n\
    \e[31m   |\e[0m                               Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        //\
    \ use mutable.HashMap\n        var map = scala.collection.mutable.HashMap[Long,\
    \ Long]()\n        // use mutable.ListBuffer\n        var list = scala.collection.mutable.ListBuffer[Long]()\n\
    \        while(n > 1) {\n            list.clear()\n            map = scala.collection.mutable.HashMap[Long,\
    \ Long]()\n            // use mutable.ListBuffer\n            var list = scala.collection.mutable.ListBuffer[Long]()\n\
    \            for(i <- 1 to n) {\n                map = scala.collection.mutable.HashMap[Long,\
    \ Long]()\n                var list = scala.collection.mutable.ListBuffer[Long]()\n\
    \                for(j <- 1 to n) {\n                    if(i != j && map.get(i\
    \ + j) != null) {\n                        val triple = i + j\n              \
    \          val val = map.get(i + j)\n                        if(val % 3 == 0)\
    \ {\n                            map.remove(triple.toString)\n               \
    \             count += triple.toLong\n                            list+=triple.toLong\n\
    \                        }\n                    }\n                }\n       \
    \         while(map.size > 0) {\n                    val value = map.firstEntry\n\
    \                    map.remove(value._1)\n                    count += value._2.toLong\n\
    \                    list+=value._2.toLong\n                }\n            }\n\
    \            while(map.size > 0) {\n                val value = map.firstEntry\n\
    \                map.remove(value._1)\n                count += value._2.toLong\n\
    \                list+=value._2.toLong\n            }\n            n -= 1\n  \
    \      }\n        count += list.size - 1\n        map\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpyaew5neb.scala:31:28 ---------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m                        \e[33mval\e[0m \e[33mval\e[0m\
    \ = map.get(i + j)\n\e[31m\e[31m   |\e[0m                            ^^^\e[0m\n\
    \e[31m   |\e[0m                            pattern expected\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E018] Syntax Error: /tmp/tmpyaew5neb.scala:32:27 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m                        \e[33mif\e[0m(\e[33mval\e[0m\
    \ % \e[31m3\e[0m == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m                   \
    \        ^^^\e[0m\n\e[31m   |\e[0m                           expression expected\
    \ but \e[31mval\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpyaew5neb.scala:25:26 --------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m            \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyaew5neb.scala:28:30\
    \ --------------------\e[0m\e[0m\n\e[31m28 |\e[0m                \e[33mfor\e[0m(j\
    \ <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                             \
    \ ^\e[0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e\
    [31m   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyaew5neb.scala:33:39 --------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m                            map.remove(triple.toString)\n\
    \e[31m\e[31m   |\e[0m                                       ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                       Found:    String\n\e\
    [31m   |\e[0m                                       Required: Long\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longe"
  stdout: ''
  timestamp: 1660028812
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val m = math.pow(n, 3) \n\
    \        var a = (1 to n).map(i => (i * i - i + 1): Long)\n        \n        var\
    \ count = 0\n        while (a.size != 0) {\n            val n = a.head\n     \
    \       val m = a.last\n            val m1 = a.size - 1\n            val m2 =\
    \ a.size - 2\n            val p = (n * (n + 1)) / 2\n            if (p < m1) {\n\
    \                if (p < m2) {\n                    println(\"Invalid triple.\"\
    )\n                    System.exit(0)\n                } else {\n            \
    \        println(\"Invalid triple.\")\n                    System.exit(0)\n  \
    \              }\n            } else {\n                println(\"Invalid triple.\"\
    )\n                System.exit(0)\n            }\n            count += m\n   \
    \         a -= m\n        }\n        count.toLong\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjagehc5y.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = (\e[31m1\e[0m to n).map(\e[36mi\e[0m => (i * i - i + \e[31m1\e[0m): \e[35mLong\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjagehc5y.scala:37:18\
    \ ------------------------\e[0m\e[0m\n\e[31m37 |\e[0m            count += m\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpjagehc5y.scala:38:14 ------------------------\e[0m\e[0m\n\
    \e[31m38 |\e[0m            a -= m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0mvalue -= is not a member of IndexedSeq[Long] - did you mean IndexedSeq[Long].!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Long](n)\n\
    \        val b = mutable.ArrayBuffer.empty[Long]\n        a.map(_ => b += _)\n\
    \        for (i<-0 until n) {\n            var k = 0\n            for(j <- 0 until\
    \ n) {\n                if(b(i) + b(j) + b(k) % 3 == 0) k += 1\n            }\n\
    \            a += i\n            a += i\n            a += k\n        }\n     \
    \   a.sum\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsg_b9p_z.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsg_b9p_z.scala:16:16\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mb\e[0m = mutable.ArrayBuffer.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmpsg_b9p_z.scala:17:24 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        a.map(_ => b += _)\n\e[31m\e[31m   |\e[0m   \
    \                     ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter _$2\
    \ of expanded function:\n\e[31m   |\e[0m   _$2 => b += _$2.\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpsg_b9p_z.scala:18:24 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i<-\e[31m0\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                 \
    \       Found:    (n : Long)\n\e[31m   |\e[0m                        Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsg_b9p_z.scala:20:29\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mfor\e[0m(j\
    \ <- \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          \
    \   ^\e[0m\n\e[31m   |\e[0m                             Found:    (n : Long)\n\
    \e[31m   |\e[0m                             Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found E"
  stdout: ''
  timestamp: 1660028811
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        // Find the max value.\n        for(i <- 1 to n){\n            if(a(i)\
    \ != 0){\n                a(i) = a(i)*a(i)-a(i)+1\n            }\n        }\n\
    \        // Find the index of maximum.\n        val maxIndex = a.indexOf(a(a.length-1))\n\
    \        // Get the value at maximum.\n        val maxValue = a(a.length-1)\n\
    \        // Get the last 3 indexes and sum them up\n        val count = (maxIndex+1)+maxIndex+maxIndex+2\n\
    \        if(count % 3 == 0)\n            count\n        else\n            count+1\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpefdb2e79.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpefdb2e79.scala:17:22 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m\
    \                      ^\e[0m\n\e[31m   |\e[0m                      Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660028810
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        def getMaxTriple(a: mutable.Array[Long])\
    \ = {\n            val max = (Math.pow(3, a.length) - 1)\n            val maxIndex\
    \ = a.length\n            var index = 0\n            while (index != maxIndex)\
    \ {\n                val aMinus1 = a(index + 1) - a(index)\n                if\
    \ (aMinus1 % 3 == 0) {\n                    index++\n                } else {\n\
    \                    return a\n                }\n            }\n            return\
    \ a\n        }\n        val res = mutable.Array[Long](n)\n        for (i <- 0\
    \ until n) {\n            res(i) = i * i - i + 1\n        }\n        val a = res.toArray\n\
    \        getMaxTriple(a)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpjxoeco_5.scala:22:27 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                    index++\n\e[31m\e[31m   |\e[0m  \
    \                         ^\e[0m\n\e[31m   |\e[0m                           expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpjxoeco_5.scala:15:28 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mdef\e[0m \e[36mgetMaxTriple\e[0m(\e[36ma\e[0m: mutable.Array[\e\
    [35mLong\e[0m]) = {\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E089] Syntax Error: /tmp/tmpjxoeco_5.scala:24:20 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                    \e[33mreturn\e[0m a\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m      \e[33mmethod\e\
    [0m \e[35mgetMaxTriple\e[0m has a return statement; it needs a result type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E089] Syntax Error: /tmp/tmpjxoeco_5.scala:27:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            \e[33mreturn\e\
    [0m a\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m      \e\
    [33mmethod\e[0m \e[35mgetMaxTriple\e[0m has a return statement; it needs a result\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjxoeco_5.scala:29:18\
    \ ------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e\
    [36mres\e[0m = mutable.Array[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m      \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjxoeco_5.scala:30:26\
    \ --------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31"
  stdout: ''
  timestamp: 1660028817
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array(n+1)\n    \
    \    // a[0] = 1\n        // a[1] = 3\n        // a[2] = 7\n        // ...\n \
    \       // a[n] = 21\n        a.init \n        a.map(_+1).foreach {\n        \
    \    i => \n            val a = i+1\n            val a1 = a*a-1\n            val\
    \ a2 = a1*a-1\n            val a3 = a2*a-1\n            val a4 = a3*a-1\n    \
    \        val a5 = a4*a-1\n            val a6 = a5*a-1\n            val a7 = a6*a-1\n\
    \            val a8 = a7*a-1\n            val a9 = a8*a-1\n            val a10\
    \ = a9*a-1\n            val a11 = a10*a-1\n            val a12 = a11*a-1\n   \
    \         val a13 = a12*a-1\n            val a14 = a13*a-1\n            val a15\
    \ = a14*a-1\n            val a16 = a15*a-1\n            val a17 = a16*a-1\n  \
    \          val a18 = a17*a-1\n            val a19 = a18*a-1\n            val a20\
    \ = a19*a-1\n            val a1 = a2*a\n            val a2 = a1*a\n          \
    \  val a3 = a2*a\n            val a4 = a3*a\n            val a5 = a4*a\n     \
    \       val a6 = a5*a\n            val a7 = a6*a\n            val a8 = a7*a\n\
    \            val a9 = a8*a\n            val a10 = a9*a\n            val a11 =\
    \ a10*a\n            val a12 = a11*a\n            val a13 = a12*a\n          \
    \  val a14 = a13*a\n            val a15 = a14*a\n            val a16 = a15*a\n\
    \            val a17 = a16*a\n            val a18 = a17*a\n            val a19\
    \ = a18*a\n            val a20 = a19*a\n            val a1 = a2*a\n          \
    \  val a2 = a1*a\n            val a3 = a2*a\n            val a4 = a3*a\n     \
    \       val a5 = a4*a\n            val a6 = a5*a\n            val a7 = a6*a\n\
    \            val a8 = a7*a\n            val a9 = a8*a\n            val a10 = a9*a\n\
    \            val a11 = a10*a\n            val a12 = a11*a\n            val \n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmpxix7ctll.scala:77:15 ---------------------------\e\
    [0m\e[0m\n\e[31m77 |\e[0m            \e[33mval\e[0m \n\e[31m\e[31m   |\e[0m  \
    \             ^\e[0m\n\e[31m   |\e[0m               pattern expected\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxix7ctll.scala:87:0 ----------------------------\e\
    [0m\e[0m\n\e[31m87 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxix7ctll.scala:45:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m45 |\e[0m            \e[33mval\e\
    [0m \e[36ma1\e[0m = a2*a\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0ma1 is already defined as \e[33mvalue\e[0m \e[35ma1\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error:\
    \ /tmp/tmpxix7ctll.scala:46:16 ---------------------------\e[0m\e[0m\n\e[31m46\
    \ |\e[0m            \e[33mval\e[0m \e[36ma2\e[0m = a1*a\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma2 is already defined as \e[33mvalue\e\
    [0m \e[35ma2\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpxix7ctll.scala:47:16 ---------------------------\e\
    [0m\e[0m\n\e[31m47 |\e[0m            \e[33mval\e[0m \e[36ma3\e[0m = a2*a\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma3 is already defined\
    \ as \e[33mvalue\e[0m \e[35ma3\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m-- [E161] Naming Error: /tmp/tmpxix7ctll.scala:48:16 ---------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m            \e[33mval\e[0m \e[36ma4\e[0m = a3*a\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0ma4 is already defined\
    \ as \e[33mvalue\e[0m \e[35ma4\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that\
    \ overloaded methods must all be defined in the same group of toplevel definitions\n\
    \e[31m\e[31m--"
  stdout: ''
  timestamp: 1660028819
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var triplets = mutable.ArrayBuffer.empty[Long]\n\
    \        var max = 0\n        var sum = 0\n        for(i <- 1l to n){\n      \
    \      sum += i\n            triplets += i\n            if(sum > n) sum = 0\n\
    \        }\n        for(i <- 1l to n){\n            val triple = triplets get\
    \ i - 1\n            val triple2 = triplets get i\n            if(triple + triple2\
    \ > max) max = triple + triple2\n        }\n        return max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsbtbrysd.scala:15:23 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mtriplets\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsbtbrysd.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            sum += i\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean Int.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660028819
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.MutableList[Int]\
    \ = mutable.MutableList(n)\n        for( i <- 1 to n-1 ) {\n            a(i) =\
    \ i*i - i+1\n        }\n        var b = 0\n        var c = 0\n        var d =\
    \ 0\n        for( i <- 1 to n-1 ) {\n            for( j <- i+1 to n ) {\n    \
    \            for( k <- j+1 to n ) {\n                    val temp = a(i) + a(j)\
    \ + a(k) \n                    if( temp % 3 == 0 ) {\n                       \
    \ b+=1\n                        c = temp\n                        d = k\n    \
    \                }\n                }\n            }\n        }\n        return\
    \ b*3\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnowve8we.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.MutableList[\e\
    [35mInt\e[0m] = mutable.MutableList(n)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpnowve8we.scala:15:43 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.MutableList[\e\
    [35mInt\e[0m] = mutable.MutableList(n)\n\e[31m\e[31m   |\e[0m                \
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpnowve8we.scala:16:23 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m( i <- \e[31m1\e[0m to n-\e[31m1\e[0m\
    \ ) {\n\e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0m \
    \                      Found:    Long\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnowve8we.scala:22:23\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mfor\e[0m( i <-\
    \ \e[31m1\e[0m to n-\e[31m1\e[0m ) {\n\e[31m\e[31m   |\e[0m                  \
    \     ^^^\e[0m\n\e[31m   |\e[0m                       Found:    Long\n\e[31m \
    \  |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpnowve8we.scala:23:29 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mfor\e[0m( j <- i+\e[31m1\e[0m to n\
    \ ) {\n\e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e\
    [0m                             Found:    (n : Long)\n\e[31m   |\e[0m        \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compi"
  stdout: ''
  timestamp: 1660028820
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        var sum = 0\n        for(i<- 1 until n){\n            val x = i * i -\
    \ i + 1\n            val y = i * i + i + 3\n            if(x < 0){\n         \
    \       sum += (x * x) / 3\n            } else if(y < 0){\n                sum\
    \ = (y * y) / 3\n            } else {\n                sum += x\n            }\n\
    \            a.append(sum)\n        }\n        return a.max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvl_ri4ig.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i<- \e\
    [31m1\e[0m until n){\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\e\
    [31m   |\e[0m                        Found:    (n : Long)\n\e[31m   |\e[0m   \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028818
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var i = 0\n        var a\
    \ = scala.collection.mutable.ListBuffer[Long]()\n        for (j <- 1 until n)\
    \ {\n            if (i == a(j)) {\n                i -= 1\n            } else\
    \ {\n                a.update(i)\n                i += 1\n            }\n    \
    \        a.update(i)\n            a.update(i)\n        }\n        a.update(i)\n\
    \        a.remove(1)\n        a.filter(_.toString.length == 3).toList.length\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmq42kjt7.scala:17:26\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (j <-\
    \ \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpmq42kjt7.scala:21:24 -----------------------------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m                a.update(i)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing argument for parameter elem\
    \ of \e[33mmethod\e[0m \e[35mupdate\e[0m in \e[33mclass\e[0m \e[35mListBuffer\e\
    [0m: (idx: Int, elem: Long): Unit\n\e[31m\e[31m-- Error: /tmp/tmpmq42kjt7.scala:24:20\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m24 |\e[0m       \
    \     a.update(i)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mmissing argument for parameter elem of \e[33mmethod\e[0m \e[35mupdate\e\
    [0m in \e[33mclass\e[0m \e[35mListBuffer\e[0m: (idx: Int, elem: Long): Unit\n\e\
    [31m\e[31m-- Error: /tmp/tmpmq42kjt7.scala:25:20 -----------------------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            a.update(i)\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing argument for parameter elem of\
    \ \e[33mmethod\e[0m \e[35mupdate\e[0m in \e[33mclass\e[0m \e[35mListBuffer\e[0m:\
    \ (idx: Int, elem: Long): Unit\n\e[31m\e[31m-- Error: /tmp/tmpmq42kjt7.scala:27:16\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m27 |\e[0m       \
    \ a.update(i)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing\
    \ argument for parameter elem of \e[33mmethod\e[0m \e[35mupdate\e[0m in \e[33mclass\e\
    [0m \e[35mListBuffer\e[0m: (idx: Int, elem: Long): Unit\n5 errors found\n"
  stdout: ''
  timestamp: 1660028820
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var sum : Long = 0\n    \
    \    for (i <- 0 until n){\n            for (j <- 0 until i){\n              \
    \  for (k <- 0 until j){\n                    sum = sum + a(i) * a(j) * a(k)\n\
    \                }\n            }\n        }\n        if (sum % 3 == 0){\n   \
    \         return 1l\n        }\n        return 0l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzkm9gpa_.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m\
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpzkm9gpa_.scala:19:32 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m                    sum = sum + a(i) * a(j) * a(k)\n\e[31m\e\
    [31m   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m         \
    \                       Not found: a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028821
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.MutableList(1\
    \ until n).map(i => i * i - i + 1).asInstanceOf[mutable.MutableList[Int]]\n  \
    \      val c = mutable.MutableList(1 until n).map(i => i * i + 1).asInstanceOf[mutable.MutableList[Int]]\n\
    \        val d = mutable.MutableList(1 until n).map(i => i * i - 1).asInstanceOf[mutable.MutableList[Int]]\n\
    \        val res = mutable.MutableList(0l).asInstanceOf[mutable.MutableList[Int]]\n\
    \        for (i <- 0 until n) {\n            for (j <- 1 until n) {\n        \
    \        for (k <- 0 until n) {\n                    if (i == j && i == k || j\
    \ == k && i == j) continue \n                    else if (a(i) == a(j) && a(j)\
    \ == a(k) || a(i) == a(k) && a(j) == a(i)) continue\n                    else\
    \ \n                    {\n                        if (res(0) == 0 && a(i) + a(j)\
    \ + a(k) > 0) res += 1\n                    }\n                }\n           \
    \ }\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphphqaosd.scala:15:84 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.MutableList(\e\
    [31m1\e[0m until n).map(\e[36mi\e[0m => i * i - i + \e[31m1\e[0m).asInstanceOf[mutable.MutableList[\e\
    [35mInt\e[0m]]\n\e[31m\e[31m   |\e[0m                                        \
    \                                            ^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                                                   Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphphqaosd.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.MutableList(\e\
    [31m1\e[0m until n).map(\e[36mi\e[0m => i * i - i + \e[31m1\e[0m).asInstanceOf[mutable.MutableList[\e\
    [35mInt\e[0m]]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmphphqaosd.scala:16:80 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.MutableList(\e\
    [31m1\e[0m until n).map(\e[36mi\e[0m => i * i + \e[31m1\e[0m).asInstanceOf[mutable.MutableList[\e\
    [35mInt\e[0m]]\n\e[31m\e[31m   |\e[0m                                        \
    \                                        ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                                               Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphphqaosd.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = mutable.MutableList(\e\
    [31m1\e[0m until n).map(\e[36mi\e[0m => i * i + \e[31m1\e[0m).asInstanceOf[mutable.MutableList[\e\
    [35mInt\e[0m]]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E0"
  stdout: ''
  timestamp: 1660028822
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n       val a = scala.collection.mutable.ListBuffer.fill(n){0l}\n\
    \       for (i <- 0 until (n-1)){\n         val x = i * i - i + 1\n         for\
    \ (j <- i + 1 until (n)){\n             val y = i * i + j + 1\n             for\
    \ (k <- j until (n)){\n                 val z = j * j + k + 1\n              \
    \   if (x*x + y*y + z*z == 3 && x*i + y*j + z*k == 0){\n                     a.remove(i)\n\
    \                     a.remove(j)\n                     a.remove(k)\n        \
    \             return a.size\n                 }\n             }\n         }\n\
    \       }\n       return 0l\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc_q63gv3.scala:15:56\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m       \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ListBuffer.fill(n){\e[31m0l\e[0m}\n\e[31m\e[31m\
    \   |\e[0m                                                        ^\e[0m\n\e[31m\
    \   |\e[0m                                                    Found:    (n : Long)\n\
    \e[31m   |\e[0m                                                    Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc_q63gv3.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m       \e[33mfor\e[0m (i <- \e\
    [31m0\e[0m until (n-\e[31m1\e[0m)){\n\e[31m\e[31m   |\e[0m                   \
    \       ^^^\e[0m\n\e[31m   |\e[0m                          Found:    Long\n\e\
    [31m   |\e[0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpc_q63gv3.scala:18:32 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m         \e[33mfor\e[0m (j <- i + \e[31m1\e[0m until\
    \ (n)){\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m \
    \  |\e[0m                                Found:    (n : Long)\n\e[31m   |\e[0m\
    \                                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpc_q63gv3.scala:20:32 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m             \e[33mfor\e[0m (k <- j until (n)){\n\e[31m\e\
    [31m   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m         \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028823
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)\
    \ {\n            (i * i - i + 1).asInstanceOf[Long]\n        }.toList\n      \
    \  a.sortWith(_.lt(_.asInstanceOf[Long]))\n        a.takeWhile(_ < n).count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqn7qq3ww.scala:16:13 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            (i * i - i + \e[31m1\e[0m).asInstanceOf[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m             ^\e[0m\n\e[31m   |\e[0m    \
    \         Not found: i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpqn7qq3ww.scala:18:19\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        a.sortWith(_.lt(_.asInstanceOf[\e\
    [35mLong\e[0m]))\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Wrong number of parameters, expected: 2\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqn7qq3ww.scala:19:22 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        a.takeWhile(_ < n).count\n\e[31m\e[31m   |\e\
    [0m                    ^^^\e[0m\n\e[31m   |\e[0mvalue < is not a member of Nothing,\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import Byte.byte2double\n\e[31m   |\e[0m  import Byte.byte2float\n\
    \e[31m   |\e[0m  import Byte.byte2int\n\e[31m   |\e[0m  import Byte.byte2long\n\
    \e[31m   |\e[0m  import Byte.byte2short\n\e[31m   |\e[0m  import Char.char2double\n\
    \e[31m   |\e[0m  import Char.char2float\n\e[31m   |\e[0m  import Char.char2int\n\
    \e[31m   |\e[0m  import Char.char2long\n\e[31m   |\e[0m  import math.BigDecimal.RoundingMode.ValueOrdering.mkOrderingOps\n\
    \e[31m   |\e[0m\n3 errors found\n"
  stdout: ''
  timestamp: 1660028823
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = (0 until n).map(x=>x*x-x+1).toArray\n\
    \        a.foreach(x => {\n            val min = math.min(math.min(a(0),a(1)),a(2))\n\
    \            val max = math.max(math.max(a(0),a(1)),a(2))\n            val middle\
    \ = math.min(min,max)\n            val sum = (a(0) + a(1) + a(2))\n          \
    \  if (sum % 3 == 0) {\n                return sum\n            }\n        })\n\
    \        return 0\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnqgmtr92.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = (\e[31m0\e[0m until n).map(\e[36mx\e[0m=>x*x-x+\e[31m1\e[0m).toArray\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028822
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n       val a = mutable.ArrayBuffer(1l)\
    \ :+ n\n\n       val l = a.length\n       for (i<-0 until (l - 1) ) yield {\n\
    \          if ( a(i) < 3 )\n             0\n          else if ( a(i) > 3 ) {\n\
    \             if ( a(i) == (a(i-1) + a(i-2) + a(i-3))%3 )\n                1\n\
    \             else\n                0\n          }\n          else\n         \
    \    0\n       }\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5l31d50h.scala:15:15 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m       \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m) :+ n\n\e[31m\e[31m   |\e[0m               ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5l31d50h.scala:18:7 ---------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m       \e[33mfor\e[0m (i<-\e[31m0\e[0m until (l - \e[31m1\e\
    [0m) ) \e[33myield\e[0m {\n\e[31m\e[31m   |\e[0m       ^\e[0m\n\e[31m   |\e[0m\
    \       Found:    IndexedSeq[Int]\n\e[31m   |\e[0m       Required: Long\n\e[31m19\
    \ |\e[0m          \e[33mif\e[0m ( a(i) < \e[31m3\e[0m )\n\e[31m20 |\e[0m     \
    \        \e[31m0\e[0m\n\e[31m21 |\e[0m          \e[33melse\e[0m \e[33mif\e[0m\
    \ ( a(i) > \e[31m3\e[0m ) {\n\e[31m22 |\e[0m             \e[33mif\e[0m ( a(i)\
    \ == (a(i-\e[31m1\e[0m) + a(i-\e[31m2\e[0m) + a(i-\e[31m3\e[0m))%\e[31m3\e[0m\
    \ )\n\e[31m23 |\e[0m                \e[31m1\e[0m\n\e[31m24 |\e[0m            \
    \ \e[33melse\e[0m\n\e[31m25 |\e[0m                \e[31m0\e[0m\n\e[31m26 |\e[0m\
    \          }\n\e[31m27 |\e[0m          \e[33melse\e[0m\n\e[31m28 |\e[0m      \
    \       \e[31m0\e[0m\n\e[31m29 |\e[0m       }\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028822
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // base case\n        if\
    \ (n==0) return 1\n        // recursive case\n        else return getMaxTriples(n-1)\
    \ + getMaxTriples(n-2) + getMaxTriples(n-3)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\
    \tat Problem$.getMaxTriples(tmpvhzjpqyj.scala:18)\n\tat Problem$.getMaxTriples(tmpvh"
  stdout: ''
  timestamp: 1660028823
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Vector.tabulate(n)(i\
    \ => i * i - i + 1).map(_.toLong)\n        val b = Vector.tabulate(n)(i => a(i)\
    \ + a(i) + a(i))\n        if (b.sum % 3 == 0) 1\n        else 0\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuz4xne65.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Vector.tabulate(n)(\e[36mi\e[0m => i * i - i + \e[31m1\e[0m).map(_.toLong)\n\
    \e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m \
    \                               Found:    (n : Long)\n\e[31m   |\e[0m        \
    \                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpuz4xne65.scala:16:32 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = Vector.tabulate(n)(\e\
    [36mi\e[0m => a(i) + a(i) + a(i))\n\e[31m\e[31m   |\e[0m                     \
    \           ^\e[0m\n\e[31m   |\e[0m                                Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660028823
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        var\
    \ i = 0\n        var j = 1\n        var k = 2\n        var a = new Array[Long](n+1)\n\
    \        while (i < n && j < n && k < n) {\n            count += 1 // add 1 to\
    \ the count\n            a(i) = i * i - i + 1\n            i += 1\n          \
    \  j += 1\n            k += 1\n        }\n        val triples = a.toSeq.groupBy(_\
    \ + _ + _)\n        count += triples.map(_._3.toLong).reduce(_ + _)\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpun1qrt1i.scala:19:32\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n+\e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                ^^^\e[0m\n\e[31m   |\e[0m       \
    \                         Found:    Long\n\e[31m   |\e[0m                    \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmpun1qrt1i.scala:27:38 ---------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = a.toSeq.groupBy(_ + _ + _)\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                 Wrong number of parameters, expected:\
    \ 1\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpun1qrt1i.scala:28:14 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        count += triples.map(_._3.toLong).reduce(_ +\
    \ _)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpun1qrt1i.scala:28:31 ------------------------\e[0m\e[0m\n\
    \e[31m28 |\e[0m        count += triples.map(_._3.toLong).reduce(_ + _)\n\e[31m\e\
    [31m   |\e[0m                             ^^^^\e[0m\n\e[31m   |\e[0m value _3\
    \ is not a member of (Nothing, Seq[Long]) - did you mean _$4._1?\n4 errors found\n"
  stdout: ''
  timestamp: 1660028823
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(Long(n))(_\
    \ + _ + _)\n        a.map { i => (i,i,i) }.filter(_._2 % 3 == 0).length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpt48v2pm1.scala:15:27 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = Array.fill(Long(n))(_\
    \ + _ + _)\n\e[31m\e[31m   |\e[0m                           ^^^^\e[0m\n\e[31m\
    \   |\e[0m                   \e[33mobject\e[0m \e[35mLong\e[0m in \e[33mpackage\e\
    [0m \e[35mscala\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E081] Type Error: /tmp/tmpt48v2pm1.scala:15:36 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = Array.fill(Long(n))(_\
    \ + _ + _)\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e\
    [31m   |\e[0m   Missing parameter type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could\
    \ not infer the type of the parameter _$1 of expanded function:\n\e[31m   |\e\
    [0m   (_$1, _$2, _$3) => _$1 + _$2 + _$3.\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmpt48v2pm1.scala:15:40\
    \ -----------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e\
    [0m \e[36ma\e[0m = Array.fill(Long(n))(_ + _ + _)\n\e[31m\e[31m   |\e[0m     \
    \                                   ^\e[0m\n\e[31m   |\e[0m   Missing parameter\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter\
    \ _$2 of expanded function:\n\e[31m   |\e[0m   (_$1, _$2, _$3) => _$1 + _$2 +\
    \ _$3.\n\e[31m\e[31m-- [E081] Type Error: /tmp/tmpt48v2pm1.scala:15:44 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = Array.fill(Long(n))(_\
    \ + _ + _)\n\e[31m\e[31m   |\e[0m                                            ^\e\
    [0m\n\e[31m   |\e[0m   Missing parameter type\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \   I could not infer the type of the parameter _$3 of expanded function:\n\e\
    [31m   |\e[0m   (_$1, _$2, _$3) => _$1 + _$2 + _$3.\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpt48v2pm1.scala:16:43 ------------------------\e[0m\e[0m\n\
    \e[31m16 |\e[0m        a.map { \e[36mi\e[0m => (i,i,i) }.filter(_._2 % \e[31m3\e\
    [0m == \e[31m0\e[0m).length\n\e[31m\e[31m   |\e[0m                           \
    \           ^^^^^^\e[0m\n\e[31m   |\e[0mvalue % is not a member of Any, "
  stdout: ''
  timestamp: 1660028824
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var m = n - 1\n        var\
    \ a = new mutable.ArrayBuffer[Long](n)\n        var i = 1l\n        while (i <\
    \ n) {\n            a += (i to i + (i + 1l)).toArray\n            i += 2\n   \
    \     }\n        var j = 1l\n        while (j < n) {\n            a += (i + j\
    \ to i + (i + j + 1l)).toArray\n            j += 2\n        }\n        var k =\
    \ 1l\n        while (j < n) {\n            a += (i + j + k to i + (i + j + k +\
    \ 1l)).toArray\n            k += 2\n        }\n        var s = 0\n        a.zipWithIndex.foreach\
    \ { case (v, i) => s += (v.min * v.min * v.min * v.min * v.min).toLong }\n   \
    \     val l = (s * 3).toLong\n        if (l > n) l else n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbmbl_3_u.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.ArrayBuffer[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m             \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028820
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val m = mutable.ArrayBuffer(n)\n\
    \        val a = mutable.ArrayBuffer(n to 0)\n        val i = mutable.ArrayBuffer(n\
    \ to 0)\n        def findTriples(i : Long) : Unit = {\n            val x = a(i).product\n\
    \            m += (x to 0)\n            i += (i to 0)\n            if (x % 3 !=\
    \ 0) {\n                return\n            }\n            a(i) = a(i) + a(i).product\
    \ + 1 \n            a(m) = a(m) + a(m).product + 1\n        }\n        i foreach\
    \ { x => findTriples(x) }\n        val sum = a(m)\n        a(m) = a(m) + a(n).product\
    \ + 1\n        a(n) = a(m)\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6v4gdo84.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mm\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6v4gdo84.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(n to \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6v4gdo84.scala:17:16 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mval\e[0m \e[36mi\e[0m = mutable.ArrayBuffer(n to \e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp6v4gdo84.scala:21:14 ------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m            i += (i to \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Long - did you mean\
    \ i.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660028824
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1l to n) a += i * i - i + 1\n        val triples = a.filter\
    \ { t => t % 3 == 0 }\n        if (triples.length != 0l) triples.max\n       \
    \ else 0l\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpm82ridrm.scala:22)\n\tat Problem.main(tmpm82ridrm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660028825
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n+1)\n\
    \        a(0) = 1\n        for (i<- 1 to n-1) a(i) = i * i - i + 1\n        val\
    \ res = a.filter(_ % 3 == 0)\n        res.count(_ > 3) * 3\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2f4bn68t.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                              ^^^\e[0m\n\e[31m   |\e[0m                     \
    \             Found:    Long\n\e[31m   |\e[0m                                \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2f4bn68t.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n-\e[31m1\e[0m) a(i) = i * i - i + \e[31m1\e[0m\n\e[31m\e[31m  \
    \ |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m                      Found:\
    \    Long\n\e[31m   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660028824
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.MutableList(1L)\n\
    \        var count = 0\n        while(n > 0){\n            a.update(0, n * (n-1)\
    \ + n)\n            count = count + 1\n            n = n-1\n        }\n      \
    \  a.toList.last\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcdcg28cc.scala:15:41 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = scala.collection.mutable.MutableList(\e\
    [31m1L\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           value MutableList is not a member of scala.collection.mutable\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpcdcg28cc.scala:20:14 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            n = n-\e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val n\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028824
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = mutable.ListBuffer(1l)\n\
    \        for (i <- 1 until n) {\n            a += (i * i - i + 1)\n        }\n\
    \        return a.count{ x => x % 3 == 0 }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpty50_a9u.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = mutable.ListBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpty50_a9u.scala:16:26 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m               \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028824
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new mutable.ListBuffer[Long]()\n\
    \        // If n is odd, then there is no possible triple, so return 0\n     \
    \   if (n%2 == 1) return 0\n        // If n is even, then there are two possibilities:\n\
    \        //     (a) n = 1: there is no triple\n        //     (b) n = 3: there\
    \ is one triple\n        if (n == 1) return 1\n        // If n is odd, there are\
    \ two possibilities:\n        //     (a) n = 3: there is one triple\n        //\
    \     (b) n = 3: there is one triple\n        if (n == 3) return 1\n        //\
    \ The second possibility is when n = 6\n        if (n == 6) return 1\n       \
    \ // The third possibility is when n = 9\n        if (n == 9) return 1\n\n   \
    \     // Initialise the array a\n        for (i<- 1 until n) {\n            a.append(i\
    \ * i - i + 1)\n        }\n        val size = a.size\n        // Iterate from\
    \ i = 1 to n-1, and count the triples (i, j, k)\n        // which can be satisfied\
    \ by a[i] = i * i - i + 1 and a[j], a[k]\n        // and a[i] and a[j] are multiples\
    \ of 3\n        var count = 0\n        var last = -1L\n        for (i<- 1 until\
    \ n) {\n            val a = a(i) - 1 + last\n            last += 1\n         \
    \   if (a%3 == 0) count += 1\n            if (a%3 == 0 && i%2 == 0) count += 1\n\
    \            if (i == n - 1) {\n                if (a == 3) count += 1\n     \
    \       }\n        }\n        return count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp00n7elme.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m               \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp00n7elme.scala:32:25\
    \ --------------------\e[0m\e[0m\n\e[31m32 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp00n7elme.scala:41:25 --------------------\e[0m\e\
    [0m\n\e[31m41 |\e[0m        \e[33mfor\e[0m (i<- \e[31m1\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m                \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                         Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028825
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        a(0) = 1\n        a(n - 1) = 2 * n - 1\n        val count = 3 * a(0)\
    \ - n\n        val minI = n - 1\n        val maxI = n - 1\n        \n        var\
    \ isMinTriple = false\n        var isMaxTriple = false\n        \n        for\
    \ (i <- 0 until n) {\n            val sum = i * i - i + 1\n            \n    \
    \        isMinTriple |= i < minI\n            isMinTriple |= sum < 3 * minI\n\
    \            isMaxTriple |= i >= maxI\n            isMaxTriple |= sum < 3 * maxI\n\
    \            \n            if (sum % 3 == 0) {\n                a += 1\n     \
    \       }\n        }\n        \n        if (count) {\n            count += a.size\
    \ - n\n        }\n        if (isMinTriple && isMaxTriple) {\n            count\n\
    \        } else {\n            0\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj51fm79i.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj51fm79i.scala:17:10\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        a(n - \e[31m1\e[0m) =\
    \ \e[31m2\e[0m * n - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m          ^^^^^\e[0m\n\
    \e[31m   |\e[0m          Found:    Long\n\e[31m   |\e[0m          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj51fm79i.scala:17:19\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        a(n - \e[31m1\e[0m) =\
    \ \e[31m2\e[0m * n - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Found:    Long\n\e[31m   |\e[0m       \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpj51fm79i.scala:25:26 --------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj51fm79i.scala:38:12\
    \ --------------------\e[0m\e[0m\n\e[31m38 |\e[0m        \e[33mif\e[0m (count)\
    \ {\n\e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Found:\
    \    (count : Long)\n\e[31m   |\e[0m            Required: Boolean\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation availab"
  stdout: ''
  timestamp: 1660028832
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val list = ListBuffer[Long]()\n\
    \        for (i <- 1 until n){\n            list.append((i * i - i + 1).abs)\n\
    \        }\n        val res = list.toArray\n        list.clear()\n        res\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3g6royfa.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m until n){\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m\
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp3g6royfa.scala:21:8 ---------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m        res\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e[31m\
    \   |\e[0m        Found:    (res : Array[Long])\n\e[31m   |\e[0m        Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028832
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n)((0l))\n\
    \        a.foreach(x => a(x) = x*x - x + 1)\n        val triples = a.zipWithIndex.filter(p\
    \ => p._2 < n).flatMap(p => a(p))\n        return triples.distinct.reduce((a,\
    \ b) => a + b)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8rnwbk1w.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.fill(n)((\e[31m0l\e[0m))\n\e[31m\e[31m   |\e[0m                  \
    \         ^\e[0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\
    \e[31m   |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp8rnwbk1w.scala:16:25 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        a.foreach(\e[36mx\e[0m => a(x) = x*x - x + \e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e\
    [0m                         Found:    (x : Long)\n\e[31m   |\e[0m            \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp8rnwbk1w.scala:17:74 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = a.zipWithIndex.filter(\e[36mp\e\
    [0m => p._2 < n).flatMap(\e[36mp\e[0m => a(p))\n\e[31m\e[31m   |\e[0m        \
    \                                                                  ^\e[0m\n\e\
    [31m   |\e[0m                                             Found:    (p : (Long,\
    \ Int))\n\e[31m   |\e[0m                                             Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmp8rnwbk1w.scala:17:77 -----------------------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = a.zipWithIndex.filter(\e\
    [36mp\e[0m => p._2 < n).flatMap(\e[36mp\e[0m => a(p))\n\e[31m\e[31m   |\e[0m \
    \                                                                            ^\e\
    [0m\n\e[31m   |\e[0mno given instance of type Long => Iterable[B] was found for\
    \ parameter asIterable of \e[33mmethod\e[0m \e[35mflatMap\e[0m in \e[33mclass\e\
    [0m \e[35mArrayOps\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mwhere:    B is a type\
    \ variable\n4 errors found\n"
  stdout: ''
  timestamp: 1660028834
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // Code here.\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps5c1b8fr.scala:14:41\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m    \e[33mdef\e[0m \e[36mgetMaxTriples\e\
    [0m(\e[36mn\e[0m : \e[35mLong\e[0m) : \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e\
    [0m                                         ^\e[0m\n\e[31m   |\e[0m          \
    \                               Found:    Unit\n\e[31m   |\e[0m              \
    \                           Required: Long\n\e[31m15 |\e[0m        \e[34m// Code\
    \ here.\e[0m\n\e[31m16 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028831
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      var num = 3 * (n - 1l)\n  \
    \    var arr = ListBuffer[Long]()\n      for (i <- 1l to n) {\n        arr = arr.:+\
    \ i * i - i + 1\n      }\n      arr.sortWith(_ < _)\n      val result: Array[Long]\
    \ = (arr(0) + arr(1l) + arr(2l)) % 3 == 0\n      arr.remove(0)\n      (num + result.sum)\
    \ %% (3l) == 0\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf4tl2xws.scala:18:21 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        arr = arr.:+ i * i - i + \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m              ^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue i is not a member\
    \ of Long => scala.collection.mutable.ListBuffer[Long]\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpf4tl2xws.scala:18:23 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        arr = arr.:+ i * i - i + \e[31m1\e[0m\n\e[31m\e[31m\
    \   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                     \
    \  Not found: *\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf4tl2xws.scala:21:46\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m      \e[33mval\e[0m \e[36mresult\e\
    [0m: \e[35mArray\e[0m[\e[35mLong\e[0m] = (arr(\e[31m0\e[0m) + arr(\e[31m1l\e[0m)\
    \ + arr(\e[31m2l\e[0m)) % \e[31m3\e[0m == \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m\
    \                                              ^^\e[0m\n\e[31m   |\e[0m      \
    \                                        Found:    (\e[31m1L\e[0m : Long)\n\e\
    [31m   |\e[0m                                              Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf4tl2xws.scala:21:56 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m      \e[33mval\e[0m \e[36mresult\e[0m: \e[35mArray\e\
    [0m[\e[35mLong\e[0m] = (arr(\e[31m0\e[0m) + arr(\e[31m1l\e[0m) + arr(\e[31m2l\e\
    [0m)) % \e[31m3\e[0m == \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                  \
    \                                      ^^\e[0m\n\e[31m   |\e[0m              \
    \                                     Found:    (\e[31m2L\e[0m : Long)\n\e[31m\
    \   |\e[0m                                                   Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf4tl2xws.scala:23:25\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m      (num + result.sum)\
    \ %% (\e[31m3l\e[0m) == \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m      ^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |"
  stdout: ''
  timestamp: 1660028833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val count = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val array = scala.collection.mutable.ArrayBuffer.empty[Int]\n       \
    \ for (i <- 1l to n) { \n            count += i\n            if (i % 2 != 0 &&\
    \ i % 3 != 0) array += i\n        }\n        val ans = array.length - count.sum\n\
    \        if (ans > 0) ans else 0\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4yzs5qv_.scala:18:21\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            count += i\n\e[31m\e\
    [31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m                    \
    \ Found:    (i : Long)\n\e[31m   |\e[0m                     Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4yzs5qv_.scala:19:51\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (i\
    \ % \e[31m2\e[0m != \e[31m0\e[0m && i % \e[31m3\e[0m != \e[31m0\e[0m) array +=\
    \ i\n\e[31m\e[31m   |\e[0m                                                   ^\e\
    [0m\n\e[31m   |\e[0m                                                   Found:\
    \    (i : Long)\n\e[31m   |\e[0m                                             \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ListBuffer.empty[Int]\n\
    \        for (i <- 1 to n) a += i * i - i + 1\n        if (a.length != n) throw\
    \ new Exception(\"Invalid input\")\n        val n = a.length\n        val triples\
    \ = mutable.ListBuffer.empty[Int]\n        var max = 0\n        var i = 0\n  \
    \      for (j <- 1 to n - 1) {\n            for (k <- j + 1 to n) {\n        \
    \        val sum = a(i) + a(j) + a(k)\n                if (sum == 3)\n       \
    \             triples += 1\n                if (sum > max)\n                 \
    \   max = sum\n                i += 1\n            }\n        }\n        a.clear()\n\
    \        a.append(triples)\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5rd1zqak.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp5rd1zqak.scala:19:22 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ListBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028829
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1L)\n\
    \        var count = 0\n        for(i <- 1L until (n)){\n            val j = i\
    \ * i - i + 1\n            for(j <- 1 until (n)){\n                val k = i *\
    \ i + j + 1\n                if((j <- k) % (3L) == 0L){\n                    count\
    \ += (i + 1L) * (j + 1L) * (k + 1L)\n                }\n            }\n      \
    \      a.push(i)\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpid9os5u4.scala:21:22 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                \e[33mif\e[0m((j <- k) % (\e[31m3L\e\
    [0m) == \e[31m0L\e[0m){\n\e[31m\e[31m   |\e[0m                      ^^\e[0m\n\e\
    [31m   |\e[0m                      ')' expected, but '<-' found\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpid9os5u4.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1L\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpid9os5u4.scala:19:30 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m until (n)){\n\
    \e[31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m   \
    \                           Found:    (n : Long)\n\e[31m   |\e[0m            \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpid9os5u4.scala:22:26 ------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m                    count += (i + \e[31m1L\e[0m) * (j + \e[31m1L\e[0m) * (k\
    \ + \e[31m1L\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                  value += is not a member of Int - did you mean\
    \ Int.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660028835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ListBuffer[Long]()\n\
    \        (1l to n).map { x =>\n            a.clear()\n            val k = x.toInt\n\
    \            val i = x - k\n            val j = x + k\n            val v = i *\
    \ i - i + 1\n            a += k\n            a += j\n            a += v\n    \
    \        a.size\n        }.foldLeft(0l)(_ + _)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpx8egi6sd.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E051]\
    \ Reference Error: /tmp/tmpx8egi6sd.scala:26:25 ------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m        }.foldLeft(\e[31m0l\e[0m)(_ + _)\n\e[31m\e[31m   |\e\
    [0m                       ^^^\e[0m\n\e[31m   |\e[0mAmbiguous overload. The overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35m+\e[0m in \e[33mclass\e[0m \e[35mLong\e\
    [0m with types\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\
    \e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e\
    [0m (x: Byte): Long\n\e[31m   |\e[0mall match arguments ((_$2 : Nothing))\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028831
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.MutableList[Int]\
    \ = mutable.MutableList(n)\n        var c : scala.collection.mutable.ListBuffer[Int]\
    \ = scala.collection.mutable.ListBuffer(0, 0, 0)\n        var i : Long = 0\n \
    \       var j : Long = 0\n        var k : Long = 0\n        while (i < n) {\n\
    \            val a1 = i * i - i + 1\n            val a2 = a1 * i - i - 1\n   \
    \         if (a2 < k) {\n                k = a2\n            }\n            a.add(i)\n\
    \            if (i < n - 1) {\n                val a3 = a2 * i - i - 1\n     \
    \           val a4 = a3 * i - i + 1\n                if (a4 < k) {\n         \
    \           k = a4\n                }\n                a.add(i)\n            \
    \    if (i < n - 2) {\n                    val a5 = a4 * i - i + 1\n         \
    \           val a6 = a5 * i + i + 1\n                    if (a6 < k) {\n     \
    \                   k = a6\n                    }\n                    a.add(i)\n\
    \                    j += k\n                }\n            }\n            i +=\
    \ j\n            j = 0\n        }\n        c(0) = a.size\n        for (i <- 1\
    \ to a.size) {\n            c(i) = c(i) - c(i-1) * 3\n        }\n        c(a.size)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptuidnsks.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.MutableList[\e\
    [35mInt\e[0m] = mutable.MutableList(n)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmptuidnsks.scala:15:43 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.MutableList[\e\
    [35mInt\e[0m] = mutable.MutableList(n)\n\e[31m\e[31m   |\e[0m                \
    \                           ^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028833
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer(0l)\n\
    \        var k = 0\n        var i = 1\n        var j = 2\n        while (i <=\
    \ n && j <= n) {\n            a(i) = i * i - i + 1\n            i = j\n      \
    \      j += 2\n        }\n        a.filter(_ % 3 != 0).foreach(k += 1)\n     \
    \   a.reduce(_ + _)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7qtc8elg.scala:24:37\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m        a.filter(_ % \e[31m3\e\
    [0m != \e[31m0\e[0m).foreach(k += \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \                              ^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \                   Found:    Unit\n\e[31m   |\e[0m                          \
    \           Required: Long => Any\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var counter = mutable.Map[Long,\
    \ Long]()\n        var a = (0 until n).map(i => (i * i - i + 1l).toLong)\n   \
    \     for (i <- 0 until n) {\n            val j = i + a.length\n            val\
    \ k = j + a.length\n            if (counter.contains((i * i - i + 1l) + a)) {\n\
    \                continue\n            }\n            counter += 1\n         \
    \   if (k == a.length) {\n                counter += 1\n            }\n      \
    \      counter.put((i * i - i + 1l) + a, counter.getOrElse((i * i - i + 1l) +\
    \ a, 0L))\n        }\n        for (i <- 0 until n) {\n            if (counter.contains((i\
    \ * i - i + 1l) + a)) {\n                continue\n            }\n           \
    \ counter += 1\n        }\n        counter.valuesIterator.max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyikygh97.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mcounter\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyikygh97.scala:16:25 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = (\e[31m0\e[0m until\
    \ n).map(\e[36mi\e[0m => (i * i - i + \e[31m1l\e[0m).toLong)\n\e[31m\e[31m   |\e\
    [0m                         ^\e[0m\n\e[31m   |\e[0m                         Found:\
    \    (n : Long)\n\e[31m   |\e[0m                         Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyikygh97.scala:17:26 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpyikygh97.scala:21:16\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m                continue\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \      Not found: continue\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpyikygh97.scala:29:26 --------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy"
  stdout: ''
  timestamp: 1660028835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = ArrayBuffer.fill(n)(0)\n\
    \        for( i <- 1 until n)\n            if(a(i) + a(i-1) + a(i-2) % 3 > 0)\
    \ a(i) += 1\n        val result = a(n)\n        return result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo12w2j2l.scala:15:33\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m               \
    \                  ^\e[0m\n\e[31m   |\e[0m                                 Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                 Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo12w2j2l.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m( i <-\
    \ \e[31m1\e[0m until n)\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m\
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpo12w2j2l.scala:18:23 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = a(n)\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var counter = 0\n       \
    \ // The input is not empty\n        if ((n> 0l)){\n            val a = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \            // The list to add the values of each of the triples.\n         \
    \   val list = scala.collection.mutable.ListBuffer.empty[Long]\n            //\
    \ To add the values of each of the triples.\n            for (i <- 1l to n){\n\
    \                val temp = a(i).plus(a(i+1)).plus(a(i+2))\n                //\
    \ We add one to the value because of the constraint of the problem.\n        \
    \        a.update(i,temp+1)\n                list += temp\n                //\
    \ We update the counter to count the number of triples\n                counter\
    \ += 1\n            }\n            val max = list.max\n            // We check\
    \ if the max is divisible by 3\n            if ((max % 3 = 0l)){\n           \
    \     counter\n            }else{\n                // If it isn't we return -1\n\
    \                -1\n            }\n        }else{\n            // If n is negative\
    \ we return -1\n            -1\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp356qvxmu.scala:32:25 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m            \e[33mif\e[0m ((max % \e[31m3\e[0m = \e[31m0l\e\
    [0m)){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m\
    \                         ')' expected, but '=' found\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmp356qvxmu.scala:23:29 --------------------\e[0m\e[0m\n\
    \e[31m23 |\e[0m                \e[33mval\e[0m \e[36mtemp\e[0m = a(i).plus(a(i+\e\
    [31m1\e[0m)).plus(a(i+\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m                  \
    \           ^\e[0m\n\e[31m   |\e[0m                             Found:    (i :\
    \ Long)\n\e[31m   |\e[0m                             Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp356qvxmu.scala:23:39 --------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                \e[33mval\e[0m \e[36mtemp\e[0m = a(i).plus(a(i+\e\
    [31m1\e[0m)).plus(a(i+\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m                  \
    \                     ^^^\e[0m\n\e[31m   |\e[0m                              \
    \         Found:    Long\n\e[31m   |\e[0m                                    \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp356qvxmu.scala:25:25\
    \ --------------------\e[0m\e[0m\n\e[31m25 |\e[0m                a.update(i,temp+\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e\
    [0m                         Found:    (i : Long)\n\e[31m   |\e[0m            \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp356qvxmu.scala:32:17 --------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m            \e[33mif\e[0m ((max % \e[31m3\e[0m = \e[31m0l\e[0m)){\n\e\
    [31m\e[31m   |\e[0m                 ^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \     Found:    Long\n\e[31m   |\e[0m                 Required: Boolean\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`"
  stdout: ''
  timestamp: 1660028836
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var ans : Long = 0\n    \
    \    val list = Array[Long](n)\n        list.init\n        list foreach {i =>\
    \ \n            list foreach {j =>\n                list foreach {k =>\n     \
    \               if((i + j + k) % 3 == 0)\n                        ans += ((i +\
    \ j + k) / 3)\n                }\n            }\n        }\n        ans\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6xddiloa.scala:29)\n\tat Problem.main(tmp6xddiloa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660028836
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = ListBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            val r = i * i - i + 1\n            a\
    \ += r\n        }\n        val b = a.toList\n        var count = 0\n        val\
    \ set = Set()\n        val size = b.size\n        for (i <- 1 to size) {\n   \
    \         val r1 = a(i) + a(i+1) + a(i+2)\n            set.add(s\"$r1\")\n   \
    \         count += r1\n        }\n        set.forall(_.isMultipleOf(3, _))\n \
    \       count + (set.size - count) * 3\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3tt5l_dj.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp3tt5l_dj.scala:26:20 --------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m            set.add(\e[31ms\"\e[0m$r1\e[31m\"\e[0m)\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^\e[0m\n\e[31m   |\e[0m                    Found:\
    \    String\n\e[31m   |\e[0m                    Required: Nothing\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3tt5l_dj.scala:27:18 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            count += r1\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int\
    \ - did you mean Int.!=?\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmp3tt5l_dj.scala:29:19\
    \ ---------------------------\e[0m\e[0m\n\e[31m29 |\e[0m        set.forall(_.isMultipleOf(\e\
    [31m3\e[0m, _))\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Wrong number of parameters, expected: 1\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660028836
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val arr = new Array[Int](n)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var cnt = 0\n\
    \n        while (i < n) {\n            if (j < i && j > k) {\n               \
    \ arr(i) = i * i - i + 1\n                i += 1\n                j = 0\n    \
    \            k += 1\n            }\n            else if (k < i && k < j) {\n \
    \               arr(i) = arr(i) + arr(j) + arr(k)\n                i += 1\n  \
    \              k += 1\n                j += 1\n            }\n            else\
    \ {\n                arr(i) = arr(i) + arr(j) + arr(k)\n                i += 1\n\
    \                k += 1\n            }\n\n            if (arr(i) % 3 == 0) {\n\
    \                cnt += 1\n                i = 0\n                j = 0\n    \
    \            k = 0\n            }\n        }\n        cnt * 3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp46mkcccz.scala:15:33\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36marr\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m\
    \                                 ^\e[0m\n\e[31m   |\e[0m                    \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028836
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val arr = new ArrayList[Long](n)\n\
    \        for (i <- 0 until n) {\n            arr(i) = i * i - i + 1\n        }\n\
    \        val m = arr.toList sortBy { x => x }\n                .sliding(2) filterNot\
    \ { case (a, b) => a + b == 0 }\n                .sum\n        arr.toList filter\
    \ { x => m % x == 0 } size\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmps3fzyjzr.scala:22:50 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        arr.toList filter { \e[36mx\e[0m => m % x ==\
    \ \e[31m0\e[0m } size\n\e[31m\e[31m   |\e[0m                                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                    \
    \   expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmps3fzyjzr.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36marr\e[0m = \e[33mnew\e[0m\
    \ \e[35mArrayList\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m            \
    \          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: type\
    \ ArrayList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps3fzyjzr.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028835
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        def loop(i: Int, j: Int,\
    \ k: Int): Long = {\n            val res = if (i < j && j < k) (i * i * i + i\
    \ + 1) else 0\n            if (res == 0) {\n                if (i == k) i\n  \
    \              else if (j == k) j\n                else k\n            } else\
    \ {\n                if (res > res) res else loop(i, j, k)\n            }\n  \
    \      }\n        val ls = scala.collection.mutable.ListBuffer.empty[Int]\n  \
    \      for (i <- 1l until n) ls += loop(i ,i ,i)\n        ls.length\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo0e3bri5.scala:26:41\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1l\e[0m until n) ls += loop(i ,i ,i)\n\e[31m\e[31m   |\e[0m          \
    \                               ^\e[0m\n\e[31m   |\e[0m                      \
    \                   Found:    (i : Long)\n\e[31m   |\e[0m                    \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpo0e3bri5.scala:26:44 --------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m1l\e[0m until n) ls += loop(i ,i ,i)\n\
    \e[31m\e[31m   |\e[0m                                            ^\e[0m\n\e[31m\
    \   |\e[0m                                            Found:    (i : Long)\n\e\
    [31m   |\e[0m                                            Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo0e3bri5.scala:26:47 --------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1l\e[0m until n) ls\
    \ += loop(i ,i ,i)\n\e[31m\e[31m   |\e[0m                                    \
    \           ^\e[0m\n\e[31m   |\e[0m                                          \
    \     Found:    (i : Long)\n\e[31m   |\e[0m                                  \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028837
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        for (i <- 1 to n) \n            for (j <- 1 to n) \n                if\
    \ (i + j + 1 == 3 * n) a.update(i)(_ + _ + _)\n        a.sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptwnc7wx8.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptwnc7wx8.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) \n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmptwnc7wx8.scala:17:27 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mfor\e[0m (j <- \e[31m1\e[0m to n) \n\e[31m\e[31m   |\e\
    [0m                           ^\e[0m\n\e[31m   |\e[0m                        \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                           Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmptwnc7wx8.scala:18:48 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                \e[33mif\e[0m (i + j + \e[31m1\e[0m ==\
    \ \e[31m3\e[0m * n) a.update(i)(_ + _ + _)\n\e[31m\e[31m   |\e[0m            \
    \                            ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing argument\
    \ for parameter elem of \e[33mmethod\e[0m \e[35mupdate\e[0m in \e[33mclass\e[0m\
    \ \e[35mArrayBuffer\e[0m: (index: Int, elem: Int): Unit\n4 errors found\n"
  stdout: ''
  timestamp: 1660028837
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new mutable.MutableList[Long]()\n\
    \        for(i <- 1 until n) {\n            for(j <- 1 until n) {\n          \
    \      if(i != j && j != i && a(i) + a(j) + a(k)% 3 == 0) {\n                \
    \    a.append(i)\n                    a.append(j)\n                    a.append(k)\n\
    \                    //println(a.length)\n                }\n            }\n \
    \       }\n        return a.length\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpffdeiv6y.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.MutableList[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m              \
    \      ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpffdeiv6y.scala:16:25\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpffdeiv6y.scala:17:29 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m until n) {\n\e\
    [31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m      \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028836
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val nums = mutable.ArrayBuffer.fill(n)((0l))\n\
    \        val triples = mutable.ArrayBuffer.fill(n.toInt)((0l))\n        \n   \
    \     for(i <- 0 until n) {\n            for(j <- 0 until i) {\n             \
    \   for(k <- 0 until j) {\n                    val sum = 3 * (nums(i) + nums(j)\
    \ + nums(k)) \n                    if(sum % 3 == 0) {\n                      \
    \  triples(i) += 1\n                    }\n                }\n            }\n\
    \        }\n        triples\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5avt576q.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ArrayBuffer.fill(n)((\e\
    [31m0l\e[0m))\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp5avt576q.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.fill(n.toInt)((\e\
    [31m0l\e[0m))\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp5avt576q.scala:18:25 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m        \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028838
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0)\n\
    \        a(0) = 1 // First element\n        a(1) = 2 // First element\n      \
    \  a(2) = 4 // First element\n        val temp = a(0) // First element of the\
    \ result\n        val result = new ArrayBuffer[(Long, Long, Long)]\n        for\
    \ (i<-0 to n-1) result += (a,a(temp), a(i))\n        temp = a(n)\n        result\
    \ += (a,a(temp), a(n))\n        result.maxBy(_._1)._2._1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr_q33gk5.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpr_q33gk5.scala:21:21 --------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m        \e[33mfor\e[0m (i<-\e[31m0\e[0m to n-\e[31m1\e[0m) result += (a,a(temp),\
    \ a(i))\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m \
    \                    Found:    Long\n\e[31m   |\e[0m                     Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpr_q33gk5.scala:22:13\
    \ -----------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        temp = a(n)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Reassignment\
    \ to val temp\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr_q33gk5.scala:24:30\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        result.maxBy(_._1)._2._1\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \      value _1 is not a member of Long\n4 errors found\n"
  stdout: ''
  timestamp: 1660028839
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      val a = mutable.MutableList[Long]()\n\
    \      for(i<- 1 to n){\n        a+=(i * i - i + 1)\n      }\n      \n      a.map(x\
    \ => ((x - 1l) % 3l)).map(x => (x+1l)).filter(x => x % 3l == 0).length\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_gb12dqq.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m      \e[33mval\e[0m \e[36ma\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m              ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp_gb12dqq.scala:16:19 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m      \e[33mfor\e[0m(i<- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m  \
    \                 ^\e[0m\n\e[31m   |\e[0m                   Found:    (n : Long)\n\
    \e[31m   |\e[0m                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var result = 0\n        var\
    \ a = new mutable.MutableList[Long](n+1)\n        a.set(0)\n        \n       \
    \ // iterate over each element in the list\n        a.foreach(i => {\n       \
    \     val temp = a.remove(0)\n            // iterate over each element in the\
    \ list\n            for (j => a.remove(j)) {\n                for (k => a.remove(k))\
    \ {\n                    if (i!=j && i!=k && j!=k) {\n                       \
    \ if ((i*i + j*j + k*k) % 3 == 0) {\n                            result = result\
    \ + 1\n                            println((i*i + j*j + k*k))\n              \
    \          }\n                    }\n                }\n            }\n      \
    \      a.add(temp)\n        })\n        \n        return result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2pqotvuv.scala:23:19 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mfor\e[0m (j => a.remove(j)) {\n\e[31m\e\
    [31m   |\e[0m                   ^^\e[0m\n\e[31m   |\e[0m                   ')'\
    \ expected, but '=>' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2pqotvuv.scala:23:35\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            \e[33mfor\e\
    [0m (j => a.remove(j)) {\n\e[31m\e[31m   |\e[0m                              \
    \     ^\e[0m\n\e[31m   |\e[0m                                   '<-' expected,\
    \ but '{' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2pqotvuv.scala:34:8\
    \ ----------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        })\n\e[31m\e\
    [31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m        '<-' expected, but '}' found\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2pqotvuv.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.MutableList[\e[35mLong\e[0m](n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028838
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        var i = 0\n        while(i < n) {\n            a(i) = i * i - i + 1\n\
    \            i += 1\n        }\n        val count = mutable.HashMap.empty[(Long,\
    \ Long, Long)]\n        a.foreach { x =>\n            val key = x.asInstanceOf[Int]\n\
    \            val key1 = (key * key) - (key + 1) + 1\n            val key2 = (a(x)\
    \ - a(key1)) - (a(key1) - a(x) + 1) + 1\n            val key3 = key2 % 3\n   \
    \         if (key3 != 0)\n                count += ((key, key1, key3))\n     \
    \   }\n        (count.toSet * 3).length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpa7btqu53.scala:21:20 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = mutable.HashMap.empty[(\e\
    [35mLong\e[0m, \e[35mLong\e[0m, \e[35mLong\e[0m)]\n\e[31m\e[31m   |\e[0m     \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028840
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n)(0)\n\
    \        a.zipWithIndex.foreach(x => a(x) = x(0) + x(1) + x(2))\n        val sum\
    \ = 0\n        for (i <- 0 until a.length) sum += 1\n        sum % 3\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps4w8jcxr.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \      ^\e[0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\
    \e[31m   |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps4w8jcxr.scala:16:38 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        a.zipWithIndex.foreach(\e[36mx\e[0m => a(x) =\
    \ x(\e[31m0\e[0m) + x(\e[31m1\e[0m) + x(\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m\
    \                                      ^\e[0m\n\e[31m   |\e[0m               \
    \                       Found:    (x : (Int, Int))\n\e[31m   |\e[0m          \
    \                            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- Error:\
    \ /tmp/tmps4w8jcxr.scala:16:58 -----------------------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        a.zipWithIndex.foreach(\e[36mx\e[0m => a(x) = x(\e\
    [31m0\e[0m) + x(\e[31m1\e[0m) + x(\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m      \
    \                                                    ^\e[0m\n\e[31m   |\e[0m \
    \     Match type reduction failed since selector  EmptyTuple.type\n\e[31m   |\e\
    [0m      matches none of the cases\n\e[31m   |\e[0m\n\e[31m   |\e[0m         \
    \ case x *: xs => (\e[31m0\e[0m : Int)\e[33m match \e[0m{\n\e[31m   |\e[0m   \
    \     case (\e[31m0\e[0m : Int) => x\n\e[31m   |\e[0m        case scala.compiletime.ops.int.S[n1]\
    \ => scala.Tuple.Elem[xs, n1]\n\e[31m   |\e[0m      }\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmps4w8jcxr.scala:18:40 ------------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until a.length) sum +=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                                    ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  value += is not a member of Int - did you\
    \ mean sum.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660028844
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var i = 0\n        var a\
    \ = new mutable.MutableList[Int](n)\n        while (a.isEmpty) {\n           \
    \ i += 1\n            var b = 0\n            for (j <- 0 until i) {\n        \
    \        b += 1\n                var k = j + 1\n                a.set(j, k - j\
    \ + b - 1)\n            }\n            a.retainAll(a) // to remove triples (a,\
    \ b, c) where b > c\n        }\n        a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpatc5ze_i.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.MutableList[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m              \
    \      ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = ListBuffer[Long]()\n\
    \        var i = -1\n        while(i < n) {\n            i = i + 1\n         \
    \   a += (i * i).toLong\n            i = i + 1\n            a += (i * i - i +\
    \ 1).toLong\n        }\n        return a.groupBy(_ % 3).maxBy(_._2).length\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp9oqre78a.scala:23:43 -----------------------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mreturn\e[0m a.groupBy(_ % \e[31m3\e[0m).maxBy(_._2).length\n\
    \e[31m\e[31m   |\e[0m                                           ^\e[0m\n\e[31m\
    \   |\e[0mNo implicit Ordering defined for scala.collection.mutable.ListBuffer[Long]..\n\
    \e[31m   |\e[0mI found:\n\e[31m   |\e[0m\n\e[31m   |\e[0m    scala.math.Ordering.comparatorToOrdering[\n\
    \e[31m   |\e[0m      \e[35mscala.collection.mutable.ListBuffer[Long]\e[0m\n\e\
    [31m   |\e[0m    ](\n\e[31m   |\e[0m      /* missing */\n\e[31m   |\e[0m     \
    \   summon[java.util.Comparator[scala.collection.mutable.ListBuffer[Long]]]\n\e\
    [31m   |\e[0m    )\n\e[31m   |\e[0m\n\e[31m   |\e[0mBut no implicit values were\
    \ found that match type java.util.Comparator[scala.collection.mutable.ListBuffer[Long]].\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mThe following import might fix the problem:\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m  import math.Ordering.Implicits.seqOrdering\n\e\
    [31m   |\e[0m\n1 error found\n"
  stdout: ''
  timestamp: 1660028845
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        var i = 0\n        while(i < a.length) a(i) = i * i - i + 1 // fill a\
    \ with 0\n        val n = a.size - 1 // number of valid elements\n        var\
    \ count = 1\n        var j = 1\n        while(j < n) {\n            val r = a(i\
    \ + a[j])\n            count += r\n            j++\n        }\n        a.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpkqq8n7ud.scala:24:15 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            j++\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpkqq8n7ud.scala:18:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = a.size - \e[31m1\e[0m \e[34m// number of valid elements\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpkqq8n7ud.scala:22:28 ------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m            \e[33mval\e[0m \e[36mr\e[0m = a(i + a[\e[35mj\e\
    [0m])\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m\
    \                            Not found: type j\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028841
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        def getMax(i: Int, j: Int,\
    \ k: Int) : List[Int] = if (i == j && i == k) List(i) else List[Int]() \n    \
    \    def max(i: Int, j: Int, k: Int): Int = if (i > j && i > k) j else k\n   \
    \     def count(i: Int, j: Int, k: Int) : Int = a(i) + a(j) + a(k) - max(i + 1,\
    \ j + 1, k)\n        a: mutable.Buffer[Int] = mutable.Buffer()\n        val temp:\
    \ MutableList[Int] = MutableList(1, n)\n        val temp2: MutableList[Int] =\
    \ MutableList(1, n)\n        val temp3: MutableList[Int] = MutableList(1, n)\n\
    \        val temp4: MutableList[Int] = MutableList(1, n)\n        val temp5: MutableList[Int]\
    \ = MutableList(1, n)\n        val temp6: MutableList[Int] = MutableList(1, n)\n\
    \        val temp7: MutableList[Int] = MutableList(1, n)\n        val temp8: MutableList[Int]\
    \ = MutableList(1, n)\n        val temp9: MutableList[Int] = MutableList(1, n)\n\
    \        val temp10: MutableList[Int] = MutableList(1, n)\n        var i: Int\
    \ = 1\n        val res: Int = 1\n        while(i < temp.length) {\n          \
    \  while(temp(i) < temp(i + 1))\n                i += 1\n            while(temp(i)\
    \ > temp(i + 1))\n                i += 1\n            while(temp(i) == temp(i\
    \ + 1))\n                i += 1\n            while(temp(i) == temp(i + 2))\n \
    \               i += 1\n            while(temp(i) > temp(i + 2))\n           \
    \     i += 1\n            while(temp(i) == temp(i + 3))\n                i +=\
    \ 1\n            while(temp(i) == temp(i + 4))\n                i += 1\n     \
    \       while(temp(i) == temp(i + 5))\n                i += 1\n            while(temp(i)\
    \ == temp(i + 6))\n                i += 1\n            while(temp(i) == temp(i\
    \ + 7))\n                i += 1\n            while(temp(i) == temp(i + 8))\n \
    \               i += 1\n            while(temp(i) == temp(i + 9))\n          \
    \      i += 1\n            while(temp(i) == temp(i + 10))\n                i +=\
    \ 1\n            while(temp(i) == temp(i + 11))\n                i += 1\n    \
    \        while(temp(i) == temp(i + 12))\n                i += 1\n            while(temp(i)\
    \ == temp(i + 13))\n                i += 1\n            while(temp(i) == temp(i\
    \ + 14))\n                i += 1\n            while(temp(i) == temp(i + 15))\n\
    \                i += 1\n            while(temp(i) == temp(i + 16))\n        \
    \        i += 1\n            while(temp\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpt5fy6ae8.scala:18:31 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        a: mutable.Buffer[\e[35mInt\e[0m] = mutable.Buffer()\n\
    \e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m  \
    \                             end of statement expected but '=' found\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmpt5fy6ae8.scala:71:4 ----------------------------\e\
    [0m\e[0m\n\e[31m71 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpt5fy6ae8.scala:80:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m80 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpt5fy6ae8.scala:17:50 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m        \e[33mdef\e[0m \e[36mcount\e[0m(\e[36mi\e[0m: \e[35mInt\e\
    [0m, \e[36mj\e[0m: \e[35mInt\e[0m, \e[36mk\e[0m: \e[35mInt\e[0m) : \e[35mInt\e\
    [0m = a(i) + a(j) + a(k) - max(i + \e[31m1\e[0m, j + \e[31m1\e[0m, k)\n\e[31m\e\
    [31m   |\e[0m                                                  ^\e[0m\n\e[31m\
    \   |\e[0m                                                  Not found: a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt5fy6ae8.scala:18:11 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        a: mutable.Buffer[\e[35mInt\e[0m] = mutable.Buffer()\n\
    \e[31m\e[31m   |\e[0m           ^^^^^^^\e[0m\n\e[31m   |\e[0m           Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt5fy6ae8.scala:18:8\
    \ -------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        a: mutable.Buffer[\e\
    [35mInt\e[0m] = mutable.Buffer()\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m\
    \   |\e[0m        Not found: a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpt5fy6ae8.scala:19:18 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        \e[33mval\e[0m \e[36mtemp\e[0m: \e[35mMutable"
  stdout: ''
  timestamp: 1660028846
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0).iterator\n\
    \        for (i <- 1 to n) {\n            for (j <- 1 to n) {\n              \
    \  for (k <- 1 to n) {\n                    if(i+j+k == n.toInt) {\n         \
    \               if(a(i) == 0) a(i) = i+j+k\n                        else if(a(j)\
    \ == 0) a(j) = i+j+k\n                        else if(a(k) == 0) a(k) = i+j+k\n\
    \                        else if(a(i) + a(j) + a(k) == n.toInt) a(i) = a(i) +\
    \ a(j) + a(k) \n                        else a(i) = a(i) + a(j) + a(k) - n.toInt\n\
    \                    }\n                }\n            }\n        }\n        val\
    \ ans = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for (i <- 0\
    \ until a.length) {\n            ans(i) = a(i).toLong\n        }\n        ans.sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzu98si_a.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpzu98si_a.scala:17:27 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mfor\e[0m (j <- \e[31m1\e[0m to n) {\n\e[31m\e[31m  \
    \ |\e[0m                           ^\e[0m\n\e[31m   |\e[0m                   \
    \        Found:    (n : Long)\n\e[31m   |\e[0m                           Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzu98si_a.scala:18:31\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                \e[33mfor\e[0m\
    \ (k <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                          \
    \     ^\e[0m\n\e[31m   |\e[0m                               Found:    (n : Long)\n\
    \e[31m   |\e[0m                               Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E050] Type Error: /tmp/tmpzu98si_a.scala:20:27 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                        \e[33mif\e[0m(a(i) == \e[31m0\e\
    [0m) a(i) = i+j+k\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\e\
    [31m   |\e[0m                           \e[33mvalue\e[0m \e[35ma\e[0m does not\
    \ take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzu98si_a.scala:20:38\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                        \e\
    [33mif\e[0m(a(i) == \e[31m0\e[0m) a(i) = i+j+k\n\e[31m\e[31m   |\e[0m        \
    \                              ^\e[0m\n\e[31m   |\e[0m                       \
    \    value update is not a member of Iterator[Int]\n\e[31m\e[31m-- [E050] Type\
    \ Error: /tmp/tmpzu98si_a.scala:21:32"
  stdout: ''
  timestamp: 1660028847
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      require(n >= 0, s\"n is ${n}\"\
    )\n      val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n      for (i\
    \ <- 1 until n){\n        for ((j <- i; j <- i + 1 to n) if (j > 0)){\n      \
    \    val k = j - i\n          if (a(k) < 3 * i + j * j + k){\n            a +=\
    \ k\n          }\n        }\n      }\n      a.sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpyg93ghqa.scala:18:16 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m ((j <- i; j <- i + \e[31m1\e[0m\
    \ to n) \e[33mif\e[0m (j > \e[31m0\e[0m)){\n\e[31m\e[31m   |\e[0m            \
    \    ^^\e[0m\n\e[31m   |\e[0m                ')' expected, but '<-' found\n\e\
    [31m\e[31m-- [E040] Syntax Error: /tmp/tmpyg93ghqa.scala:18:49 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m ((j <- i; j <- i + \e[31m1\e[0m\
    \ to n) \e[33mif\e[0m (j > \e[31m0\e[0m)){\n\e[31m\e[31m   |\e[0m            \
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \                          'then' expected, but ')' found\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpyg93ghqa.scala:17:24 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m      \e[33mfor\e[0m (i <- \e[31m1\e[0m until n){\n\e[31m\e\
    [31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                 \
    \       Found:    (n : Long)\n\e[31m   |\e[0m                        Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyg93ghqa.scala:18:20\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m ((j\
    \ <- i; j <- i + \e[31m1\e[0m to n) \e[33mif\e[0m (j > \e[31m0\e[0m)){\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0mvalue foreach is not a\
    \ member of Null, but could be made available as an extension method.\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mOne of the following imports might fix the problem:\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\e[31m   |\e\
    [0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m\
    \  import collection.convert.ImplicitConversions.list asScalaBuffer\n\e[31m  \
    \ |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.itera"
  stdout: ''
  timestamp: 1660028848
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n)(0l)\n\
    \        a(0) = 1\n        for(i  <- 1 to n) {\n            for(j <- 1 to n) {\n\
    \                for(k <- 1 to n) {\n                    if((i==j)&&(j==k)) {\n\
    \                        a(i) = a(i) + a(k) + a(i)\n                    } else\
    \ {\n                        a(i) = a(i) + a(j) + a(k)\n                    }\n\
    \                    if((a(i) & 3) == 0) {\n                        return 1l\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ 0l\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqmldtl5o.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.fill(n)(\e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \       ^\e[0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\
    \e[31m   |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpqmldtl5o.scala:17:23 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i  <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqmldtl5o.scala:18:26\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m(j\
    \ <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpqmldtl5o.scala:19:30 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k <- \e[31m1\e[0m to n) {\n\
    \e[31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m   \
    \                           Found:    (n : Long)\n\e[31m   |\e[0m            \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028848
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(1)\n\
    \        val res = (1l, 0l, 0l)\n        val res2 = (1l, 0l, 0l)\n        \n \
    \       val l = (n-1).toInt\n        for(i <- 0 until l) {\n            val j\
    \ = (i+1).toInt\n            val k = (i+2).toInt\n            val t = (a(i) *\
    \ a(i) - a[i] + a[j] + a[k])\n            val t2 = (a(i) * a(i) - a[i] + a[j]\
    \ + a[k]) * (a(i) * a(i) - a[i] + a[j] + a[k])\n            if(t > res(2)) {\n\
    \                res = (t, i, j)\n                res2 = t\n            }\n  \
    \      }\n        res2\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuzkq6ad3.scala:23:37 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mval\e[0m \e[36mt\e[0m = (a(i) * a(i)\
    \ - a[\e[35mi\e[0m] + a[\e[35mj\e[0m] + a[\e[35mk\e[0m])\n\e[31m\e[31m   |\e[0m\
    \                                     ^\e[0m\n\e[31m   |\e[0m                \
    \                     Not found: type i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpuzkq6ad3.scala:24:38 ------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m            \e[33mval\e[0m \e[36mt2\e[0m = (a(i) * a(i) -\
    \ a[\e[35mi\e[0m] + a[\e[35mj\e[0m] + a[\e[35mk\e[0m]) * (a(i) * a(i) - a[\e[35mi\e\
    [0m] + a[\e[35mj\e[0m] + a[\e[35mk\e[0m])\n\e[31m\e[31m   |\e[0m             \
    \                         ^\e[0m\n\e[31m   |\e[0m                            \
    \          Not found: type i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpuzkq6ad3.scala:26:20 -----------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m                res = (t, i, j)\n\e[31m\e[31m   |\e[0m               \
    \ ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val res\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpuzkq6ad3.scala:27:21 -----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                res2 = t\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val\
    \ res2\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuzkq6ad3.scala:30:8\
    \ ---------------------\e[0m\e[0m\n\e[31m30 |\e[0m        res2\n\e[31m\e[31m \
    \  |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0m        Found:    (res2 : (Long, Long,\
    \ Long))\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660028847
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      var a = mutable.ListBuffer[Long](1l)\n\
    \      for (i <- 1 to n) {\n        for (j <- i to n) {\n          if (j - i >\
    \ 1) { \n            for (z <- i to j)\n              if (j - z > 1) { \n    \
    \            a += (i * i * i - i * j + j * z + z * z) - 3\n              }\n \
    \         }\n        }\n      }\n      a.toList.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9agphfxx.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m      \e[33mvar\e[0m \e[36ma\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m](\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m              ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9agphfxx.scala:16:21 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m      \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m                    \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                     Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9agphfxx.scala:17:23\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (j <-\
    \ i to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (n : Long)\n\e[31m   |\e[0m              \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028847
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a: mutable.MutableList[Long]\
    \ = mutable.MutableList.empty[Long]\n        var i: Long = 1\n        while (i\
    \ < n) {\n            if (a.contains(i * i - i + 1)) {\n                i += 1\n\
    \            } else {\n                a += i * i - i + 1\n            }\n   \
    \     }\n        // This loop will be terminated when i == n\n        var j: Long\
    \ = 1\n        var k: Long = 1\n        var m: Long = 0\n        while (j < n)\
    \ {\n            while (k < n && a.get(j + k - 1) < 3 * m) {\n               \
    \ k += 1\n            }\n            m += 3 * a.get(j)\n            if (m) % 3\
    \ = 0\n            if (m = 0)\n                m = 1\n            k += 1\n   \
    \         j += 1\n        }\n        // We need this because if a.get(k) % 3 !=\
    \ 0, then m can not be 0.\n        m = 1\n        var total: Long = 1\n      \
    \  while (j < n) {\n            while (k < n && a.get(j + k - 1) < 3 * m) {\n\
    \                k += 1\n            }\n            total += m\n            m\
    \ = 1\n            k += 1\n            j += 1\n        }\n        // Return the\
    \ number of triples (a[i], a[j], a[k]) of a where i < j < k,\n        // and a[i]\
    \ + a[j] + a[k] is a multiple of 3.\n        return total\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpldk7vmgz.scala:33:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m            \e[33mif\e[0m (m) % \e[31m3\e[0m = \e[31m0\e\
    [0m\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m       \
    \              end of statement expected but integer literal found\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpldk7vmgz.scala:15:15 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m: mutable.MutableList[\e\
    [35mLong\e[0m] = mutable.MutableList.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m               ^^^^^^^\e[0m\n\e[31m   |\e[0m               Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpldk7vmgz.scala:15:43\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m: mutable.MutableList[\e[35mLong\e[0m] = mutable.MutableList.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                        \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                                           Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpldk7vmgz.scala:33:16\
    \ --------------------\e[0m\e[0m\n\e[31m33 |\e[0m            \e[33mif\e[0m (m)\
    \ % \e[31m3\e[0m = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\
    \e[31m   |\e[0m                Found:    (m : Long)\n\e[31m   |\e[0m         \
    \       Required: Boolean\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpldk7vmgz.scala:33:19 ------------------------\e[0m\e[0m\n\e[31m33 |\e\
    [0m            \e[33mif\e[0m (m) % \e[31m3\e[0m = \e[31m0\e[0m\n\e[31m\e[31m \
    \  |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ %\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpldk7vmgz.scala:34:18\
    \ --------------------\e[0m\e[0m\n\e[31m34 |\e[0m            \e[33mif\e[0m (m\
    \ = \e[31m0\e[0m)\n\e[3"
  stdout: ''
  timestamp: 1660028848
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 until n) {\n            val tmp = a.remove(0)\n          \
    \  a.append((i * i) - i + 1)\n            if(tmp % 3 == 0) a.append(tmp)\n   \
    \     }\n        if(a.isEmpty) return 0\n        a.toList.filter(_ % 3 == 0).size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_krnoxr5.scala:16:25\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028848
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      val n = n.toInt\n      val\
    \ a = collection.mutable.ListBuffer[Long](n)\n      for(i <- 1 until n){\n   \
    \     a(i) = i*i - i + 1\n      }\n      a.zipWithIndex.filter(_._1 + _._1 + _._2\
    \ % 3 == 0).size\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp31q12hry.scala:15:14 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m      \e[33mval\e[0m \e[36mn\e[0m = n.toInt\n\e[31m\e\
    [31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Recursive \e[33mvalue\e\
    [0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error:\
    \ /tmp/tmp31q12hry.scala:20:28 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m      a.zipWithIndex.filter(_._1 + _._1 + _._2 % \e[31m3\e[0m == \e[31m0\e\
    [0m).size\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                            Wrong number of parameters, expected:\
    \ 1\n2 errors found\n"
  stdout: ''
  timestamp: 1660028845
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var triple = 0L\n       \
    \ var max = Long.MinValue\n        var k = 0L\n        for (i<- 1 to n) {\n  \
    \          k = i\n            triple = 0\n            while (k < (n + 1) ) {\n\
    \                if (a(k) == a(k + 1) && a(k) == a(k + 2)) {\n               \
    \     triple += 1\n                }\n                k += 1\n            }\n\
    \            if (triple > max) {\n                max = triple\n            }\n\
    \        }\n        return max\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp876qo5hv.scala:18:22\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp876qo5hv.scala:22:20 ------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m                \e[33mif\e[0m (a(k) == a(k + \e[31m1\e[0m) && a(k) == a(k +\
    \ \e[31m2\e[0m)) {\n\e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m  \
    \ |\e[0m                    Not found: a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028848
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // The list is initially\
    \ empty\n        var a = ListBuffer[Long]()\n        // To add the first element\n\
    \        a += n\n        // To find the next triples\n        val triples = a.drop(1).zipWithIndex.filter(_._2\
    \ % 3 != 0)\n        // To add the next triples\n        var i : Long = 0\n  \
    \      for(triple <- triples)\n            a += triple._1\n        // Return triples\
    \ sum\n        triples.sum\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpj_vqwlii.scala:26:19 -----------------------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        triples.sum\n\e[31m\e[31m   |\e[0m          \
    \         ^\e[0m\n\e[31m   |\e[0m           No implicit Ordering defined for B\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m           where:    B is a type variable with\
    \ constraint >: (Long, Int)\n\e[31m   |\e[0m           .\n1 error found\n"
  stdout: ''
  timestamp: 1660028847
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0)\n\
    \        var count = 0\n        var i = 0\n        while (i < n.toInt) {\n   \
    \         a(i) = i * i + i + 1\n            i += 1\n        }\n        var j =\
    \ 0\n        while (j < n.toInt) {\n            var k = j + 1\n            var\
    \ num = a(j) + a(k)\n            while (num % 3 != 0) {\n                k +=\
    \ 1\n                num = a(j) + a(k)\n            }\n            count += 1\n\
    \            j += 1\n        }\n        count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArrayIndexOutOfBoundsException: Index 5 out of bounds for length\
    \ 5\n\tat Problem$.getMaxTriples(tmp8op8zt0o.scala:28)\n\tat Problem$.main(tmp8op8zt0o.scala:36)\n\
    \tat Problem.main(tmp8op8zt0o.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660028849
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        for (i<-0 until n) {\n            a(i) = i * i - i + 1\n        }\n \
    \       val res: Long = 0\n        for (i<-0 until n-1) {\n            for (j<-(i+1)\
    \ until n) {\n                for (k<-(j+1) until n) {\n                    if\
    \ (a(i) + a(j) + a(k) == 3 * i * i * i * i)\n                        res += 1\n\
    \                }\n            }\n        }\n        res\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3tekwoly.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3tekwoly.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\e\
    [31m   |\e[0m                        Found:    (n : Long)\n\e[31m   |\e[0m   \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp3tekwoly.scala:20:24 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mfor\e[0m (i<-\e[31m0\e[0m until n-\e[31m1\e[0m) {\n\e[31m\e\
    [31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m               \
    \         Found:    Long\n\e[31m   |\e[0m                        Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3tekwoly.scala:21:32\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mfor\e[0m (j<-(i+\e\
    [31m1\e[0m) until n) {\n\e[31m\e[31m   |\e[0m                                ^\e\
    [0m\n\e[31m   |\e[0m                                Found:    (n : Long)\n\e[31m\
    \   |\e[0m                                Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp3tekwoly.scala:22:36 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mfor\e[0m (k<-(j+\e[31m1\e[0m) until\
    \ n) {\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m\
    \   |\e[0m               "
  stdout: ''
  timestamp: 1660028850
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val l = scala.collection.mutable.ArrayBuffer(scala.math.BigInt(1))\n\
    \        l += scala.math.BigInt(1)\n        l += scala.math.BigInt(2)\n      \
    \  l += scala.math.BigInt(3)\n        l += scala.math.BigInt(4)\n        l +=\
    \ scala.math.BigInt(5)\n        l += scala.math.BigInt(6)\n        l += scala.math.BigInt(7)\n\
    \        l += scala.math.BigInt(8)\n        l += scala.math.BigInt(9)\n      \
    \  l += scala.math.BigInt(10)\n        l.toList.zipWithIndex.foreach{\n      \
    \      case (i : BigInt, j : Int) => {\n                var k = i + j\n      \
    \          if (k < n && k % 3 == 0) {\n                    val temp = scala.math.BigInt(k).asInstanceOf[scala.math.BigInt]\n\
    \                    if (l.getOrElse(temp) == null) l.set(temp, scala.math.BigInt(1))\
    \ else l.set(temp, l.getOrElse(temp) + 1)\n                }\n            }\n\
    \        }\n        l.getOrElse(scala.math.BigInt(0))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmp0fxw8jji.scala:30:31 -----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m                    \e[33mval\e[0m \e[36mtemp\e[0m =\
    \ scala.math.BigInt(k).asInstanceOf[scala.math.BigInt]\n\e[31m\e[31m   |\e[0m\
    \                               ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of\
    \ the overloaded alternatives of \e[33mmethod\e[0m \e[35mapply\e[0m in \e[33mobject\e\
    [0m \e[35mBigInt\e[0m with types\n\e[31m   |\e[0m (x: java.math.BigInteger): BigInt\n\
    \e[31m   |\e[0m (x: String, radix: Int): BigInt\n\e[31m   |\e[0m (x: String):\
    \ BigInt\n\e[31m   |\e[0m (numbits: Int, rnd: scala.util.Random): BigInt\n\e[31m\
    \   |\e[0m (bitlength: Int, certainty: Int, rnd: scala.util.Random): BigInt\n\e\
    [31m   |\e[0m (signum: Int, magnitude: Array[Byte]): BigInt\n\e[31m   |\e[0m (x:\
    \ Array[Byte]): BigInt\n\e[31m   |\e[0m (l: Long): BigInt\n\e[31m   |\e[0m (i:\
    \ Int): BigInt\n\e[31m   |\e[0mmatch arguments ((k : BigInt))\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp0fxw8jji.scala:31:26 ------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m                    \e[33mif\e[0m (l.getOrElse(temp)\
    \ == \e[31mnull\e[0m) l.set(temp, scala.math.BigInt(\e[31m1\e[0m)) \e[33melse\e\
    [0m l.set(temp, l.getOrElse(temp) + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \                   ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue getOrElse is not a\
    \ member of scala.collection.mutable.ArrayBuffer[BigInt]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp0fxw8jji.scala:31:53 ------------------------\e[0m\e\
    [0m\n\e[31m31 |\e[0m                    \e[33mif\e[0m (l.getOrElse(temp) == \e\
    [31mnull\e[0m) l.set(temp, scala.math.BigInt(\e[31m1\e[0m)) \e[33melse\e[0m l.set(temp,\
    \ l.getOrElse(temp) + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   \
    \                                ^^^^^\e[0m\n\e[31m   |\e[0mvalue set is not a\
    \ member of scala.collection.mutable.ArrayBuffer[BigInt], but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConve"
  stdout: ''
  timestamp: 1660028851
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Int](n)\n\
    \        for(i <- 0 to n){\n            for(j <- 0 to n){\n                val\
    \ m = (i * i * i) + (j * j) + (k * (k * (k - 1)))\n                if(m == 3)\
    \ {\n                    a(i) = j\n                    a(j) = i\n            \
    \        a[k] = i\n                    k = 1\n                } else if (m > 3){\n\
    \                    k+=1\n                    a(i) = j\n                    a(j)\
    \ = i\n                }\n            }\n        }\n        \n        a.foldLeft((0,0,0)){\
    \ (acc, triple) => triple._1 + triple._2 + triple._3 }._1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpft__43gj.scala:22:25 -----------------------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                    a[\e[35mk\e[0m] = i\n\e[31m\e[31m\
    \   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m                   \
    \      end of statement expected but '=' found\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpft__43gj.scala:15:31 --------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\
    \e[31m   |\e[0m                               Found:    (n : Long)\n\e[31m   |\e\
    [0m                               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpft__43gj.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpft__43gj.scala:17:26\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mfor\e[0m(j\
    \ <- \e[31m0\e[0m to n){\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m\
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpft__43gj.scala:18:49 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m                \e[33mval\e[0m \e[36mm\e[0m = (i * i * i)\
    \ + (j * j) + (k * (k * (k - \e[31m1\e[0m)))\n\e[31m\e[31m   |\e[0m          \
    \                                       ^\e[0m\n\e[31m   |\e[0m              \
    \                                   Not found: k\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpft__43gj.scala:22:22"
  stdout: ''
  timestamp: 1660028852
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n)(0l)\n\
    \        a.drop(1).zipWithIndex.foreach { case (i, iIdx) =>\n            for (jIdx\
    \ <- i + 1 until n; jIdx < n; jIdx++) {\n                for (kIdx <- jIdx until\
    \ n if kIdx >= i) {\n                    val k = jIdx - i + 1\n              \
    \      a(iIdx) = a(iIdx)\n                    a(jIdx) = a(jIdx)\n            \
    \        a(kIdx) = a(kIdx)\n                    a(iIdx + 1) = a(iIdx + 1) + 1\n\
    \                    a(kIdx) = a(kIdx + 1)\n                }\n            }\n\
    \        }\n        val maxSum = a(0) + (a(1) + a(2) + a(n))\n        a.drop(1).filter(_\
    \ > maxSum).size\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpwdjqw_8u.scala:17:48 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mfor\e[0m (jIdx <- i + \e[31m1\e[0m\
    \ until n; jIdx < n; jIdx++) {\n\e[31m\e[31m   |\e[0m                        \
    \                        ^\e[0m\n\e[31m   |\e[0m                             \
    \               '<-' expected, but ';' found\n\e[31m\e[31m-- [E032] Syntax Error:\
    \ /tmp/tmpwdjqw_8u.scala:17:56 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            \e[33mfor\e[0m (jIdx <- i + \e[31m1\e[0m until n; jIdx < n;\
    \ jIdx++) {\n\e[31m\e[31m   |\e[0m                                           \
    \             ^\e[0m\n\e[31m   |\e[0m                                        \
    \                pattern expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpwdjqw_8u.scala:15:27 --------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = Array.fill(n)(\e[31m0l\e[0m)\n\e\
    [31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m        \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwdjqw_8u.scala:28:45\
    \ --------------------\e[0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mmaxSum\e\
    [0m = a(\e[31m0\e[0m) + (a(\e[31m1\e[0m) + a(\e[31m2\e[0m) + a(n))\n\e[31m\e[31m\
    \   |\e[0m                                             ^\e[0m\n\e[31m   |\e[0m\
    \                                             Found:    (n : Long)\n\e[31m   |\e\
    [0m                                             Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660028852
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        val count = 3l\n        for(i <- 1 to n) {\n            for(j <- 1 to\
    \ n) {\n                for(k <- 1 to n) {\n                    if(i>j && i>k)\
    \ {\n                        a.add(i*i-i+1)\n                        a.add(j*j-i+1)\n\
    \                        a.add(k*k-i+1)\n                        count = a.filter(_%3\
    \ === 0).sum\n                        break\n                    }\n         \
    \       }\n            }\n        }\n        a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7j3yss7l.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp7j3yss7l.scala:18:26 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7j3yss7l.scala:19:30\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                             \
    \ ^\e[0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e\
    [31m   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp7j3yss7l.scala:21:26 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                        a.add(i*i-i+\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue add\
    \ is not a member of scala.collection.mutable.ArrayBuffer[Int], but could be made\
    \ available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the\
    \ following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m \
    \ import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m   |\e\
    [0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\e\
    [31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.c"
  stdout: ''
  timestamp: 1660028854
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = List.fill(n.toInt)(0l).map(x\
    \ => x * x - x + 1).toList\n        val b = List(1l).foldLeft(List[Long]()) {\
    \ (acc, cur) =>\n            if(cur < acc.last) acc :+ acc.last\n            else\
    \ {\n                if(cur.last + 1 > 3) acc.last :+ (cur.last + 1)\n       \
    \         else acc :+ cur\n            }\n        }\n        val l = b.size\n\
    \        val r = 3 * (l - 1)\n        val q = r.toDouble / 3\n        val ans\
    \ = math.ceil(q)\n        if(ans > 3L) ans else {\n            val n = math.ceil((n\
    \ - ans + 1) / 3)\n            if(n < 3) ans else n\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgck3xnc_.scala:19:23 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                \e[33mif\e[0m(cur.last + \e[31m1\e[0m\
    \ > \e[31m3\e[0m) acc.last :+ (cur.last + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                   ^^^^^^^^\e[0m\n\e[31m   |\e[0m                   value last\
    \ is not a member of Long\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgck3xnc_.scala:19:46\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mif\e\
    [0m(cur.last + \e[31m1\e[0m > \e[31m3\e[0m) acc.last :+ (cur.last + \e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                     ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                     value :+ is not a member\
    \ of Long\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgck3xnc_.scala:19:54\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mif\e\
    [0m(cur.last + \e[31m1\e[0m > \e[31m3\e[0m) acc.last :+ (cur.last + \e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                                  ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                      value last is not a\
    \ member of Long\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgck3xnc_.scala:27:21\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m        \e[33mif\e[0m(ans > \e\
    [31m3L\e[0m) ans \e[33melse\e[0m {\n\e[31m\e[31m   |\e[0m                    \
    \ ^^^\e[0m\n\e[31m   |\e[0m                     Found:    (ans : Double)\n\e[31m\
    \   |\e[0m                     Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmpgck3xnc_.scala:28:31 ---------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            \e[33mval\e[0m \e[36mn\e[0m = math.ceil((n\
    \ - ans + \e[31m1\e[0m) / \e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m               \
    \                ^\e[0m\n\e[31m   |\e[0m                               Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpgck3xnc_.scala:29:22 --------------------\e[0m\e\
    [0m\n\e[31m29 |\e[0m            \e[33m"
  stdout: ''
  timestamp: 1660028854
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array[Int](n, 0)\n\
    \        a(0) = 1\n        for (i <- 1 until a.size) {\n            for (j <-\
    \ i until a.size) {\n                for (k <- j+1 until a.size) {\n         \
    \           val v = a(i) + a(j) + a(k) + 3\n                    if (v % 3 == 0)\
    \ \n                        a(i) = v\n                }\n            }\n     \
    \   }\n        a(0) match {\n            case 0 => 1\n            case _ => a.size\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpp9mi17n1.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array[\e[35mInt\e[0m](n, \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m          \
    \                 ^\e[0m\n\e[31m   |\e[0m                           Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                           Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660028853
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 to n) {\n            val temp = a(i)\n            val temp2\
    \ = temp * temp - temp + temp\n            if (temp2 % 3 == 0) {\n           \
    \     a.add(temp)\n            }\n        }\n        a.length\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpny3spb67.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpny3spb67.scala:16:23 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028853
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var max = 0\n        var\
    \ result = 0\n        val a = Array[Int](n)\n        // fill array a\n       \
    \ for (i <- 1 until a.length) {\n            a(i) = i * i - i + 1\n        }\n\
    \        // find max triples\n        for (j <- 1 until a.length) {\n        \
    \    for (k <- 1 until a.length) {\n                if (j == k) {\n          \
    \          continue;\n                }\n                result += (a(j) * a(j)\
    \ + a(k)) * 3\n                if (result > max) {\n                    max =\
    \ result\n                }\n            }\n        }\n        // print max\n\
    \        println(max)\n        return max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl_plt4vj.scala:17:27\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m                        \
    \   ^\e[0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\e\
    [31m   |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpl_plt4vj.scala:26:20 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                    continue;\n\e[31m\e[31m   |\e[0m\
    \                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ continue\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028854
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Vector.fill(n)(3l)\n\
    \        val v = Vector.fill(n)(3l)\n        val k = Vector.fill(n)(3l)\n\n  \
    \      var i = 0\n        var j = 1\n        var k = 2\n        while(i < n &&\
    \ j < n && k < n) {\n            if(i+j+k == n) i += 1\n            else if(j+k\
    \ == n) j += 1\n            else k += 1\n            a(i) = i * i - i + 1\n  \
    \          v(j) = i * i - i + 1\n            v(k) = i * i - i + 1\n        }\n\
    \        i = 2\n        j = 1\n        k = 2\n        while(i < n && j < n &&\
    \ k < n) {\n            if(i+j+k == n) i += 1\n            else if(j+k == n) j\
    \ += 1\n            else k += 1\n            a(i) = i * i - i + 1\n          \
    \  v(j) = i * i - i + 1\n            v(k) = i * i - i + 1\n        }\n       \
    \ i = 2\n        j = 3\n        k = 2\n        while(i < n && j < n && k < n)\
    \ {\n            if(i+j+k == n) i += 1\n            else if(j+k == n) j += 1\n\
    \            else k += 1\n            a(i) = i * i - i + 1\n            v(j) =\
    \ i * i - i + 1\n            v(k) = i * i - i + 1\n        }\n        i += 1\n\
    \        j = 2\n        k = 2\n        while(i < n && j < n && k < n) {\n    \
    \        if(i+j+k == n) i += 1\n            else if(j+k == n) j += 1\n       \
    \     else k += 1\n            a(i) = i * i - i + 1\n            v(j) = i * i\
    \ - i + 1\n            v(k) = i * i - i + 1\n        }\n        i += 1\n     \
    \   j = 3\n        k = 3\n        while(i < n && j < n && k < n) {\n         \
    \   if(i+j+k == n) i += 1\n            else if(j+k == n) j += 1\n            else\
    \ k += 1\n            a(i) = i * i - i + 1\n            v(j) = i * i - i + 1\n\
    \            v(k) = i * i - i + 1\n        }\n        i += 1\n        j = 3\n\
    \        j = k = 3\n        while(i < n && j < n && k < n) {\n            if(i+j+k\
    \ == n) i += 1\n            else if(j+k == n) j += 1\n            else k += 1\n\
    \            a(i) = i * i - i + 1\n            v(j) = i * i - i + 1\n        \
    \    v(k) = i * i - i + 1\n        }\n        i += 1\n        j = k = 3\n    \
    \    k = k = 2\n        while(i < n && j < n && k < n) {\n            if(i+j+k\
    \ == n) i += 1\n            else if(j+k == n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvzy74lhx.scala:91:4 ----------------------------\e\
    [0m\e[0m\n\e[31m91 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvzy74lhx.scala:100:0\
    \ ---------------------------\e[0m\e[0m\n\e[31m100 |\e[0m\n\e[31m\e[31m    |\e\
    [0m^\e[0m\n\e[31m    |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E161]\
    \ Naming Error: /tmp/tmpvzy74lhx.scala:21:12 ---------------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m \e[36mk\e[0m = \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mk is already defined as \e\
    [33mvalue\e[0m \e[35mk\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded\
    \ methods must all be defined in the same group of toplevel definitions\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpvzy74lhx.scala:15:28 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = Vector.fill(n)(\e\
    [31m3l\e[0m)\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m\
    \   |\e[0m                            Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpvzy74lhx.scala:16:28 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mv\e[0m = Vector.fill(n)(\e[31m3l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m\
    \                            Found:    (n : Long)\n\e[31m   |\e[0m           \
    \                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpvzy74lhx.scala:17:28 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mval\e[0m \e[36mk\e[0m = Vector.fill(n)(\e[31m3l\e[0m)\n\e\
    [31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m       \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m"
  stdout: ''
  timestamp: 1660028865
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        if (n%3 != 0) {\n       \
    \     return 0\n        }\n        val a = mutable.ArrayBuffer.empty[Long]\n \
    \       (1 until n).foreach(i => a += i*i*i+1)\n        a.toList // return mutable\
    \ list\n            .sortBy (_ % 3) // sort on multiples of 3\n            .sliding(3)\
    \ // split list into chunks of 3\n            .foldLeft(0)((sum, chunk) => {\n\
    \                if (sum + chunk.last % 3 == 0) sum + chunk.last else 0\n    \
    \        })\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3whr3vrr.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp3whr3vrr.scala:19:17 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        (\e[31m1\e[0m until n).foreach(\e[36mi\e[0m => a +=\
    \ i*i*i+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m  \
    \ |\e[0m                 Found:    (n : Long)\n\e[31m   |\e[0m               \
    \  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028858
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var sum = 0l\n        for\
    \ (i<-0 until n)\n            sum += i * i - i + 1\n        sum % 3 == 0\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk1gv9bbe.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m0\e[0m until n)\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\e[31m\
    \   |\e[0m                        Found:    (n : Long)\n\e[31m   |\e[0m      \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpk1gv9bbe.scala:18:8 ---------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        sum % \e[31m3\e[0m == \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Boolean\n\e[31m   |\e\
    [0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028859
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.ListBuffer[Long]\
    \ = mutable.ListBuffer[Long]()\n        var cnt = 0\n        for( i <- 1 to n){\
    \ \n            for( j <- 1 to n){\n                for( k <- 1 to n ){\n    \
    \                if ( i != j && i != k && j != k ){\n                        var\
    \ triple = ( i * i - i + 1, i * j + i + 1, i * k + j + 1 )\n                 \
    \       if ( triple.sum % 3 == 0 ) a.append(triple)\n                    }\n \
    \               }\n            }\n        }\n        cnt = a.sum\n        return\
    \ cnt\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz15ic9qx.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.ListBuffer[\e\
    [35mLong\e[0m] = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpz15ic9qx.scala:15:43\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m : mutable.ListBuffer[\e[35mLong\e[0m] = mutable.ListBuffer[\e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                                           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                           Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpz15ic9qx.scala:17:23\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m( i <-\
    \ \e[31m1\e[0m to n){ \n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpz15ic9qx.scala:18:27 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m( j <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                           ^\e[0m\n\e[31m   |\e[0m                        \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                           Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpz15ic9qx.scala:19:31\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(\
    \ k <- \e[31m1\e[0m to n ){\n\e[31m\e[31m   |\e[0m                           \
    \    ^\e[0m\n\e[31m   |\e[0m                               Found:    (n : Long)\n\
    \e[31m   |\e[0m                               Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer "
  stdout: ''
  timestamp: 1660028860
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var triples = 0\n       \
    \ var list = mutable.ListBuffer[Long]()\n        for(i <- 1 to n){\n         \
    \   list+=i\n        }\n        for(i<-list.indices) {\n            for(j <- list.indices)\
    \ {\n                for(k <- list.indices) {\n                    if (i < j <\
    \ k) {\n                        if (list(i) * list(i) - list(i) * list(j) * list(k)\
    \ % 3 == 0){\n                            triples = triples + 1\n            \
    \            }\n                    }\n                }\n            }\n    \
    \    }\n        list.clear()\n        triples.toLong\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6tsdc175.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mlist\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6tsdc175.scala:17:22 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028857
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.empty[Long]\n\
    \        (1l to n).foreach {\n            i =>\n            val j = i * i - i\
    \ + 1\n            val k = i * i - i + 1\n            a += i\n            a +=\
    \ j\n            a += k\n        }\n        val count = a.count(_ % 3 == 0)\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvukf7790.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028855
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.Array[Long]\
    \ = Array()\n        var count : Long = 0\n        \n        for (i <- 1 to n)\
    \ {\n            val j = i*i-1\n            val k = i*i+1\n            val iAdj\
    \ : Long = i + j\n            val jAdj : Long = i + k\n            val kAdj :\
    \ Long = j + k\n            \n            if (iAdj + jAdj + kAdj == n) { a +=\
    \ i; a += j; a += k; count += 1}\n        }\n        \n        a\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbh4zh4r1.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.Array[\e\
    [35mLong\e[0m] = Array()\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ Error: /tmp/tmpbh4zh4r1.scala:15:45 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.Array[\e\
    [35mLong\e[0m] = Array()\n\e[31m\e[31m   |\e[0m                              \
    \               ^\e[0m\n\e[31m   |\e[0m                                      \
    \    No ClassTag available for T\n\e[31m   |\e[0m\n\e[31m   |\e[0m           \
    \                               where:    T is a type variable\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpbh4zh4r1.scala:18:23 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028860
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0L)\n\
    \        for (i<-0 until n) {\n            a(i) = i*i.toLong + i.toLong + 1L\n\
    \        }\n        var max = 0L\n        for (i<-0 until n) {\n            for\
    \ (j<-0 until n) {\n                for (k<-0 until n) {\n                   \
    \ if (a(i) + a(j) + a(k) > max) {\n                        max = a(i) + a(j) +\
    \ a(k) \n                    }\n                }\n            }\n        }\n\
    \        max\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7y42n4lv.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\e\
    [31m   |\e[0m                        Found:    (n : Long)\n\e[31m   |\e[0m   \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp7y42n4lv.scala:20:24 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mfor\e[0m (i<-\e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e\
    [0m                        ^\e[0m\n\e[31m   |\e[0m                        Found:\
    \    (n : Long)\n\e[31m   |\e[0m                        Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7y42n4lv.scala:21:28 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mfor\e[0m (j<-\e[31m0\e[0m until n)\
    \ {\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m\
    \                            Found:    (n : Long)\n\e[31m   |\e[0m           \
    \                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp7y42n4lv.scala:22:32 --------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m                \e[33mfor\e[0m (k<-\e[31m0\e[0m until n) {\n\e[31m\e[31m\
    \   |\e[0m                                ^\e[0m\n\e[31m   |\e[0m            \
    \                    Found:    (n : Long)\n\e[31m   |\e[0m                   \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028860
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = ListBuffer.empty[Long]\n\
    \        var i = 0\n        while (i < n) {\n            val x = i * i - i + 1\n\
    \            a.append(x)\n            i += 1\n        }\n        val re = a.map(x\
    \ => x * x - x + 1L).filter(x => x % 3 == 0)\n        re.size\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmplewqpad8.scala:26)\n\tat Problem.main(tmplewqpad8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660028861
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Vector.fill(n.toInt)(((n\
    \ * n - n * n + 1) * 3).toInt)\n        a.sortWith((a, b) => a.compareTo(b) ==\
    \ -1)\n        a(0)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpl9mt10so.scala:20)\n\tat Problem.main(tmpl9mt10so.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660028861
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array(1, 3, 7, 13,\
    \ 21)\n        val result = a.reduceLeft((i,j,k) =>\n                if(i < j\
    \ && j < k) (i+j+k) % 3 == 0\n                else ( (j-i)*(k-j))\n        )\n\
    \        result match {\n            case 0 => 1l\n            case _ => result\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpvat0u30j.scala:16:42 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = a.reduceLeft((\e\
    [36mi\e[0m,\e[36mj\e[0m,\e[36mk\e[0m) =>\n\e[31m\e[31m   |\e[0m              \
    \                    ^\e[0m\n\e[31m   |\e[0m                                 Wrong\
    \ number of parameters, expected: 2\n\e[31m17 |\e[0m                \e[33mif\e\
    [0m(i < j && j < k) (i+j+k) % \e[31m3\e[0m == \e[31m0\e[0m\n\e[31m18 |\e[0m  \
    \              \e[33melse\e[0m ( (j-i)*(k-j))\n1 error found\n"
  stdout: ''
  timestamp: 1660028857
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArraySeq.fill(3).toList\n\
    \        for (i <- 1 until n){\n            a(i) = i * i - i + 1\n        }\n\
    \        a.filter(i => i < a.size && a(i) == a.last).size match {\n          \
    \  case 0 => 0\n            case 1 => 1\n            case _ => (a.last).filter(_\
    \ % 3 == 0).size\n        }\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7bo2qdo6.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArraySeq.fill(\e\
    [31m3\e[0m).toList\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp7bo2qdo6.scala:16:26 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m until n){\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028860
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var triplesCount : Long =\
    \ 0\n        val numTriples = 2l\n        for (i <- 1l to n) {\n            val\
    \ a = i * i - i + 1\n            val b = i * i - i + 1\n            if (b % 3\
    \ == 0){\n                triplesCount += 1\n            }\n        }\n      \
    \  return triplesCount\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfrrgdkhu.scala:27)\n\tat Problem.main(tmpfrrgdkhu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660028863
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = scala.collection.mutable.ListBuffer[Long]()\n\
    \        var count = 0\n        for (i<-1 to n) {\n            for (j <- i until\
    \ n) {\n                for (k <- j to n) {\n                    if ((i+j+k) ==\
    \ i*i*k && (i+j+k) == j*j*k && (i+j+k) == k*k) {\n                        count\
    \ += 1\n                        a.add(i)\n                        a.add(j)\n \
    \                       a.add(k)\n                    }\n                }\n \
    \           }\n        }\n        a.size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpiotx_15g.scala:17:21\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m \
    \  |\e[0m                     Found:    (n : Long)\n\e[31m   |\e[0m          \
    \           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpiotx_15g.scala:18:30 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m (j <- i until n) {\n\e[31m\e[31m   |\e[0m \
    \                             ^\e[0m\n\e[31m   |\e[0m                        \
    \      Found:    (n : Long)\n\e[31m   |\e[0m                              Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpiotx_15g.scala:19:31\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m\
    \ (k <- j to n) {\n\e[31m\e[31m   |\e[0m                               ^\e[0m\n\
    \e[31m   |\e[0m                               Found:    (n : Long)\n\e[31m   |\e\
    [0m                               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpiotx_15g.scala:22:26 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                        a.add(i)\n\e[31m\e[31m   |\e\
    [0m                        ^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member\
    \ of scala.collection.mutable.ListBuffer[Long], but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitCo"
  stdout: ''
  timestamp: 1660028864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var list : Array[Int] = Array.fill(n)(0)\n\
    \        var max = 1l\n        var min = 0l\n        while(n > 0){\n         \
    \   val t = list.sum\n            if(t > max) max = t\n            if(t < min)\
    \ min = t\n            n-=1\n        }\n        var count = 0l\n        for(i\
    \ <- 0 to n){\n            for(j <- 0 to n){\n                val k = (i + j)\
    \ * 3 - min\n                for(k <- 0 to n){\n                    if((i+j)*3\
    \ + k == min){\n                        count += 1\n                        break\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe58ult5h.scala:15:43\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mlist\e\
    [0m : \e[35mArray\e[0m[\e[35mInt\e[0m] = Array.fill(n)(\e[31m0\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                           ^\e[0m\n\e[31m   |\e[0m\
    \                                           Found:    (n : Long)\n\e[31m   |\e\
    [0m                                           Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpe58ult5h.scala:22:13 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            n-=\e[31m1\e[0m\n\e[31m\e[31m   |\e[0m  \
    \          ^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long\
    \ - did you mean n.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe58ult5h.scala:25:22\
    \ --------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpe58ult5h.scala:26:26 --------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m            \e[33mfor\e[0m(j <- \e[31m0\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe58ult5h.scala:28:30\
    \ --------------------\e[0m\e[0m\n\e[31m28 |\e[0m                \e[33mfor\e[0m(k\
    \ <- \e[31m0\e[0m to n){\n\e[31m\e[31m   |\e[0m                              ^\e\
    [0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e[31m\
    \   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpe58ult5"
  stdout: ''
  timestamp: 1660028864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val arr = new mutable.ListBuffer[Int](n)\n\
    \        var count = 1\n        var temp = 1\n        while (count != n) {\n \
    \           if (count < n) arr(count) = count\n            val mid = n / 2\n \
    \           while (count <= mid - 1) {\n                count += 1\n         \
    \       arr(count) = count\n            }\n            val mid2 = mid / 2\n  \
    \          while (count > mid2) {\n                count -= 1\n              \
    \  arr(count) = count\n            }\n            temp = arr(0)\n            val\
    \ temp2 = arr(mid2)\n            for (i <- 1 until arr.length) {\n           \
    \     val value = arr(i)\n                val temp3 = value + temp\n         \
    \       val temp4 = temp2 + temp3\n                if (temp4 % 3 == 0) return\
    \ count\n            }\n        }\n        return -1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmph8ulf50s.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36marr\e[0m = \e[33mnew\e[0m\
    \ mutable.ListBuffer[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m               \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028861
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        val\
    \ a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n        a.view.zipWithIndex.foreach\
    \ { case (i, j) =>\n            if (j < i) return\n            a(i) = a(i) + 1\n\
    \            if (a(i) + a(i + 1) == 0) count += 2\n            else if (a(i) +\
    \ a(i + 2) == 0) count += 2\n            else count += 3\n        }\n        count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoyi_q881.scala:16:58\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoyi_q881.scala:18:23\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mif\e[0m (j\
    \ < i) \e[33mreturn\e[0m\n\e[31m\e[31m   |\e[0m                       ^^^^^^\e\
    [0m\n\e[31m   |\e[0m                       Found:    Unit\n\e[31m   |\e[0m   \
    \                    Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count : Long = 0\n  \
    \      val nums = mutable.ListBuffer[Long]()\n        var i = 0\n        while(i\
    \ < n) {\n            val j = i\n            val k = i + j\n            val m\
    \ = i * i + j * j + k * k\n            if(m == 3L) {\n                count =\
    \ count + 1\n                nums += k\n            }\n            i = k\n   \
    \     }\n        (count).asInstanceOf[Long]\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpw_ms6xcb.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028860
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Vector.empty[Int]\n\
    \        var sum = 0\n        var max = 0\n        var k = 0\n        var i =\
    \ 0\n        while (i < n) {\n            sum = sum + i\n            k += 1\n\
    \            while (j < k) {\n                j++\n            }\n           \
    \ while (k < n) {\n                sum = sum + k\n                max += 1\n \
    \               while (j < k) {\n                    j++\n                }\n\
    \                while (j < n) {\n                    k = k + 1\n            \
    \    }\n            }\n            i = i + 1\n        }\n        sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp0mcd8gtk.scala:24:19 ---------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                j++\n\e[31m\e[31m   |\e[0m          \
    \         ^\e[0m\n\e[31m   |\e[0m                   expression expected but \e\
    [31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp0mcd8gtk.scala:30:23\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m                    j++\n\
    \e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m          \
    \             expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mcd8gtk.scala:23:19 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            \e[33mwhile\e[0m (j < k) {\n\e[31m\e[31m\
    \   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mcd8gtk.scala:24:16\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                j++\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mcd8gtk.scala:29:23\
    \ ------------------------\e[0m\e[0m\n\e[31m29 |\e[0m                \e[33mwhile\e\
    [0m (j < k) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Not found: j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0mcd8gtk.scala:30:20 ------------------------\e[0m\e\
    [0m\n\e[31m30 |\e[0m                    j++\n\e[31m\e[31m   |\e[0m           \
    \         ^\e[0m\n\e[31m   |\e[0m                    Not found: j\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mcd8gtk.scala:32:23 ----------------"
  stdout: ''
  timestamp: 1660028862
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var max = 0\n        val\
    \ a = mutable.ArrayBuilder.make[Long](n)\n        for (i <- 1 until n) {\n   \
    \         a(i) = i * i - i + 1\n            max = a.max(max)\n        }\n    \
    \    return max\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpnnkzc92n.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuilder.make[\e\
    [35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpnnkzc92n.scala:17:26 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028864
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var m = 2\n        var count\
    \ = Long.MinValue\n        var a = mutable.ArrayBuffer(n)\n        for(i <- 0\
    \ until n){\n            for(j <- 0 until n){\n                for(k <- 0 until\
    \ n){\n                    if(j > i){\n                        if(k > j){\n  \
    \                          a(i+1).map(a(j+1).map(a(k+1).+))\n                \
    \            if(a(i+1).sum % 3 != 0 || a(i+1).sum ==0) return Long.MinValue\n\
    \                            if(a(j+1).sum % 3 != 0 || a(j+1).sum == 0) return\
    \ Long.MinValue\n                            if(a(k+1).sum % 3 != 0 || a(k+1).sum\
    \ == 0) return Long.MinValue\n                        }\n                    \
    \    else{\n                            if(i+1 > j){\n                       \
    \         if(k > j){\n                                    a(i+1).map(a(j+1).map(a(k+1).+))\n\
    \                                    if(a(i+1).sum % 3 != 0 || a(i+1).sum == 0)\
    \ return Long.MinValue\n                                    if(a(j+1).sum % 3\
    \ != 0 || a(j+1).sum == 0) return Long.MinValue\n                            \
    \        if(a(k+1).sum % 3 != 0 || a(k+1).sum == 0) return Long.MinValue\n   \
    \                             }\n                                else{\n     \
    \                               a(i+1).map(a(j+1).map(a(k+1).+))\n           \
    \                         if(a(i+1).sum % 3 != 0 || a(i+1).sum == 0) return Long.MinValue\n\
    \                                    if(a(j+1).sum % 3 != 0 || a(j+1).sum == 0)\
    \ return Long.MinValue\n                                    if(a(k+1).sum % 3\
    \ != 0 || a(k+1).sum == 0) return Long.MinValue\n                            \
    \    }\n                            }\n                            else{\n   \
    \                             if(i+1 > j){\n                                 \
    \   if(k > j){\n                                        a(i+1).map(a(j+1).map(a(k+1).+))\n\
    \                                        if(a(i+1).sum % 3 != 0 || a(i+1).sum\
    \ == 0) return Long.MinValue\n                                        if(a(j+1).sum\
    \ % 3 != 0 || a(j+1).sum == 0) return Long.MinValue\n                        \
    \                if(a(k+1).sum % 3 != 0 || a(k+1).sum == 0) return Long.MinValue\n\
    \                                    }\n                                    else{\n\
    \                                        a(i+1).map(a(j+1).map(a(k+1).+))\n  \
    \                                      if(a(i+1).sum % \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmps6fo04ck.scala:53:55 ---------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m                                        \e[33mif\e[0m(a(i+\e\
    [31m1\e[0m).sum % \n\e[31m\e[31m   |\e[0m                                    \
    \                   ^\e[0m\n\e[31m   |\e[0m                                  \
    \     expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmps6fo04ck.scala:63:0 ----------------------------\e\
    [0m\e[0m\n\e[31m63 |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected,\
    \ but eof found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps6fo04ck.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m = mutable.ArrayBuffer(n)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps6fo04ck.scala:18:25 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m          \
    \               Found:    (n : Long)\n\e[31m   |\e[0m                        \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps6fo04ck.scala:19:29\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m(j\
    \ <- \e[31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                           \
    \  ^\e[0m\n\e[31m   |\e[0m                             Found:    (n : Long)\n\e\
    [31m   |\e[0m                             Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps6fo04ck.scala:20:33 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mfor\e[0m(k <- \e[31m0\e[0m until\
    \ n){\n\e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m  \
    \ |\e[0m   "
  stdout: ''
  timestamp: 1660028868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Long](n)\n\
    \        for (i = 1; i < a.length; ++i) {\n            a(i) = i * i - i + 1\n\
    \        }\n        var count = 0\n        for (i = 1; i < a.length; ++i) {\n\
    \            var j = 0\n            while (j + 1 < a.length && a(j + 1) < a(i))\
    \ {\n                j = j + 1\n            }\n            while (j < a.length\
    \ && a(j) < a(i)) {\n                count = count + 1\n                j = j\
    \ + 1\n            }\n        }\n        count + 1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2u05ugb9.scala:16:15 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i < a.length;\
    \ ++i) {\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m        \
    \       ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2u05ugb9.scala:16:32\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m1\e[0m; i < a.length; ++i) {\n\e[31m\e[31m   |\e[0m             \
    \                   ^\e[0m\n\e[31m   |\e[0m                                '<-'\
    \ expected, but ';' found\n\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp2u05ugb9.scala:16:37\
    \ ---------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m1\e[0m; i < a.length; ++i) {\n\e[31m\e[31m   |\e[0m             \
    \                        ^\e[0m\n\e[31m   |\e[0m                             \
    \        pattern expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmp2u05ugb9.scala:20:15 ---------------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i < a.length; ++i) {\n\e[31m\e\
    [31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m               ')' expected,\
    \ but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2u05ugb9.scala:20:32\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m1\e[0m; i < a.length; ++i) {\n\e[31m\e[31m   |\e[0m             \
    \                   ^\e[0m\n\e[31m   |\e[0m                                '<-'\
    \ expected, but ';' found\n\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp2u05ugb9.scala:20:37\
    \ ---------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m1\e[0m; i < a.length; ++i) {\n\e[31m\e[31m   |\e[0m             \
    \                        ^\e[0m\n\e[31m   |\e[0m                             \
    \        pattern expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp2u05ugb9.scala:15:32 --------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mval\e[0m \e[36ma\e"
  stdout: ''
  timestamp: 1660028869
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      val (a, b) = (n, n) -+ 1\n\
    \      var triples = scala.math.ceil(b / 3).toInt\n      for (i = 1 until n) (a\
    \ += a) += a\n      for((x, y, z) <- a zip b zip a with ((a, b) => if (x + y +\
    \ z % 3 == 0) (triples = triples + 1, triples)) ) yield (x, y, z)\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpb7z3kw9v.scala:17:13 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m      \e[33mfor\e[0m (i = \e[31m1\e[0m until n) (a +=\
    \ a) += a\n\e[31m\e[31m   |\e[0m             ^\e[0m\n\e[31m   |\e[0m         \
    \    ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpb7z3kw9v.scala:17:26\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m      \e[33mfor\e[0m (i\
    \ = \e[31m1\e[0m until n) (a += a) += a\n\e[31m\e[31m   |\e[0m               \
    \           ^\e[0m\n\e[31m   |\e[0m                          '<-' expected, but\
    \ '(' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb7z3kw9v.scala:15:26\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m      \e[33mval\e[0m (a,\
    \ b) = (n, n) -+ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue -+ is not a member of (Long, Long) - did you mean (Long,\
    \ Long).++?\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpb7z3kw9v.scala:15:11\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m      \e[33mval\e[0m (a,\
    \ b) = (n, n) -+ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m           ^\e[0m\n\e[31m\
    \   |\e[0m           Recursive \e[33mvalue\e[0m \e[35m$1$\e[0m needs type\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpb7z3kw9v.scala:15:14\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m      \e[33mval\e[0m (a,\
    \ b) = (n, n) -+ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\e[31m\
    \   |\e[0m              Recursive \e[33mvalue\e[0m \e[35m$1$\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb7z3kw9v.scala:17:39\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m      \e[33mfor\e[0m (i =\
    \ \e[31m1\e[0m until n) (a += a) += a\n\e[31m\e[31m   |\e[0m                 \
    \                      ^\e[0m\n\e[31m   |\e[0mvalue foreach is not a member of\
    \ Null, but could be made available as an extension method.\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\e[31m "
  stdout: ''
  timestamp: 1660028867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val list = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        for (i<-0 until n) list += i*i*(i+1)\n        list.foldLeft(0)((x,y)\
    \ => x+y)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9c356ilh.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m0\e[0m until n) list += i*i*(i+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \                  ^\e[0m\n\e[31m   |\e[0m                        Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                        Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660028868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0)\n\
    \        a.update(0, 1l)\n        var sum = 0l\n        for(i <- 1 to n)\n   \
    \         sum += a[i]\n        for(i <- 1 to n-1)\n            sum += a[i] - a[i+1]\n\
    \        for(i <- 1 to n-1)\n            sum += a[i] - a[i-1]\n        for(i <-\
    \ 1 to n-1)\n            sum += a[i] - a[i+1]\n        for(i <- 1 to n-1)\n  \
    \          sum += a[i] - a[i-1]\n        if(sum % 3 != 0)\n            return\
    \ -1\n        1\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3u4g1fex.scala:16:20\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        a.update(\e[31m0\e[0m,\
    \ \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                    ^^\e[0m\n\e[31m   |\e\
    [0m                    Found:    (\e[31m1L\e[0m : Long)\n\e[31m   |\e[0m     \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp3u4g1fex.scala:18:22 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m\
    \                      ^\e[0m\n\e[31m   |\e[0m                      Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3u4g1fex.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            sum += a[\e[35mi\e[0m]\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3u4g1fex.scala:19:21\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += a[\e[35mi\e\
    [0m]\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m      \
    \               Not found: type i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp3u4g1fex.scala:20:22 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n-\e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m                 \
    \     Found:    Long\n\e[31m   |\e[0m                      Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3u4g1fex.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            sum += a[\e[35mi\e[0m] - a[\e[35mi+\e[31m1\e\
    [0m]\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \  value += is not a membe"
  stdout: ''
  timestamp: 1660028872
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var i = n / 3\n        var\
    \ j = (3 * i) / 2\n        var k = n - 3 * i - j\n        var a = new Array[Int](3\
    \ * n)\n        a(0) = 1\n        a(1) = 3\n        a(2) = 7\n        while(i--\
    \ > 0){\n            a(3 * i + 1) = i * i - i + 1\n        }\n        var ans\
    \ = 0\n        for(i<-0 to n-1){\n            for(j<-0 to n-1){\n            \
    \    for(k <-0 to n-1){\n                    if(i!=j&&i!=k&&j!=k&&a(i+1) + a(j+1)\
    \ + a(k+1) + 3(a(i) + a(j) + a(k)) % 3 != 0)\n                        ans++\n\
    \                }\n            }\n        }\n        ans\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpxyc22f53.scala:22:20 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mwhile\e[0m(i-- > \e[31m0\e[0m){\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    ')'\
    \ expected, but integer literal found\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpxyc22f53.scala:30:29\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m                     \
    \   ans++\n\e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m  \
    \ |\e[0m                             expression expected but \e[31munindent\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxyc22f53.scala:18:31\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mInt\e[0m](\e[31m3\e[0m * n)\n\e[31m\e\
    [31m   |\e[0m                               ^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                         Found:    Long\n\e[31m   |\e[0m                    \
    \           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpxyc22f53.scala:22:15 ------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m        \e[33mwhile\e[0m(i-- > \e[31m0\e[0m){\n\e[31m\e[31m   |\e[0m      \
    \        ^^^\e[0m\n\e[31m   |\e[0m              value -- is not a member of Long\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxyc22f53.scala:22:18 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mwhile\e[0m(i-- > \e[31m0\e[0m){\n\e[31m\e\
    [31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ >\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxyc22f53.scala:23:14\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m            a(\e[31m3\e[0m *\
    \ i + \e[31m1\e[0m) = i * i - i + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m        \
    \      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m              Found:    Long\n\e[31m   |\e\
    [0m              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanatio"
  stdout: ''
  timestamp: 1660028873
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(0l)\n\
    \        a(0) = 1\n        a(1) = 2\n        val numTriples = 0 \n        val\
    \ pairs = mutable.Stack[mutable.Seq[(Long, Long, Long)]]()\n        for (i <-\
    \ 1 until n) \n        { \n            for (j <- 1 until n) \n            {\n\
    \                for (k <- 1 until n) \n                {\n                  \
    \  if (i != j &&  j != k) \n                    {\n                        val\
    \ sum = (i * i - i + 1) * (j * j - j + 1) * (k * k - k + 1)\n                \
    \        if (sum % 3 == 0) \n                        {\n                     \
    \       val triple = (a(i), a(j), a(k))\n                            pairs +=\
    \ triple\n                            numTriples += 1\n                      \
    \  } \n                    }\n                }\n            }\n        }\n  \
    \      val result = {\n            if (pairs.size == 0) 0 else pairs.last.head._3\
    \ * numTriples\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwhxsdtvv.scala:19:34 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mpairs\e[0m = mutable.Stack[mutable.Seq[(\e\
    [35mLong\e[0m, \e[35mLong\e[0m, \e[35mLong\e[0m)]]()\n\e[31m\e[31m   |\e[0m  \
    \                                ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpwhxsdtvv.scala:19:20 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mpairs\e[0m = mutable.Stack[mutable.Seq[(\e\
    [35mLong\e[0m, \e[35mLong\e[0m, \e[35mLong\e[0m)]]()\n\e[31m\e[31m   |\e[0m  \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwhxsdtvv.scala:20:26\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m until n) \n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m\
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpwhxsdtvv.scala:22:30 --------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m            \e[33mfor\e[0m (j <- \e[31m1\e[0m until n) \n\e\
    [31m\e[31m   |\e[0m                              ^\e[0m\n\e[31m   |\e[0m     \
    \                         Found:    (n : Long)\n\e[31m   |\e[0m              \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpwhxsdtvv.scala:24:34 --------------------\e[0m\e[0m\n\e[31m24\
    \ |\e[0m                \e[33mfor\e[0m (k <- \e[31m1\e[0m until n) \n\e[31m\e\
    [31m   |\e[0m                                  ^\e[0m\n\e[31m   |\e[0m       \
    \                           Found:    (n : Long)\n\e[31m   |\e[0m            \
    \                      Required:"
  stdout: ''
  timestamp: 1660028872
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        val sum = mutable.ArrayBuffer(1l)\n        val counter = mutable.ArrayBuffer(1l)\n\
    \        val counter2 = mutable.ArrayBuffer(1l)\n        var k = 1l\n        a.clear()\n\
    \        sum.clear()\n        counter.clear()\n        counter2.clear()\n    \
    \    val j = 0\n        while(j<n){\n            a(j) = j\n            sum +=\
    \ a(j)\n            counter(j) = counter2(j) = k\n            if((sum % k) ==\
    \ 0){\n                k+=1\n                j+=1\n            }else{\n      \
    \          k=1\n                j+=1\n            }\n        }\n        return\
    \ counter.last\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2o9rdnns.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2o9rdnns.scala:16:18 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp2o9rdnns.scala:17:22 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mcounter\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmp2o9rdnns.scala:18:23 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mcounter2\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp2o9rdnns.scala:31:17 ------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m                j+=\e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \                ^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean j.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2o9rdnns.scala:34:17\
    \ ------------------------\e[0m\e[0m\n\e[31m34 |\e[0m                j+=\e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^\e[0m\n\e[31m   |\e[0m          \
    \      value += is not a member of Int - did you mean j.!=?\n6 errors found\n"
  stdout: ''
  timestamp: 1660028871
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(n)\n\
    \        for( i <- 0 until n ) a.update(i) = i * i - i + 1\n        \n       \
    \ val aList = a.toList\n        \n        var count = 0\n        var triplesMax\
    \ = 0\n        for(i <- 0 until aList.size) {\n            val triples = aList.filter(_\
    \ <= i)\n            triplesMax = math.max(triplesMax, triples.size)\n       \
    \     for(j <- 0 until aList.size) {\n                if(i != j) {\n         \
    \           val triples = aList.filter(_ <= i && _ > j)\n                    count\
    \ = math.max(count, triples.size)\n                }\n            }\n        }\n\
    \        count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3j8hw_fj.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp3j8hw_fj.scala:16:26 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mfor\e[0m( i <- \e[31m0\e[0m until n ) a.update(i) = i *\
    \ i - i + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m\
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028871
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ListBuffer(1,\
    \ 2, 3, n).reverse\n        var sum = 0L\n        for(i <- 0 until a.length) {\n\
    \            for(j <- 0 until a.length) {\n                for(k <- 0 until a.length)\
    \ {\n                    sum += a(i) * a(j) * a(k)\n                    if(sum\
    \ % 3 == 0) {\n                        return sum\n                    }\n   \
    \             }\n            }\n        }\n        return -1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpemtq_y37.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m, \e[31m3\e[0m, n).reverse\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028869
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = ListBuffer.empty[Long]\n\
    \        a.append(1)\n        \n        (1 to n) foreach (i => a(i) = i * i -\
    \ i + 1)\n        \n        var triples = ListBuffer.empty[Int]\n        \n  \
    \      for (i <- a.indices) {\n            if (a(i) < 0) {\n                triples.append(-1)\n\
    \            } else {\n                triples.append(a.take(i + 1).sum)\n   \
    \         }\n        }\n        \n        triples.toList match {\n           \
    \ case a if a.sum % 3 == 0 => a.sum\n            case _ => 0\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjxvkupu5.scala:18:14\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        (\e[31m1\e[0m to n) foreach\
    \ (\e[36mi\e[0m => a(i) = i * i - i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \           ^\e[0m\n\e[31m   |\e[0m              Found:    (n : Long)\n\e[31m\
    \   |\e[0m              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E134]\
    \ Type Error: /tmp/tmpjxvkupu5.scala:26:24 -----------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m                triples.append(a.take(i + \e[31m1\e[0m).sum)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone\
    \ of the overloaded alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e\
    [33mtrait\e[0m \e[35mBuffer\e[0m with types\n\e[31m   |\e[0m (elems: Int*): scala.collection.mutable.ListBuffer[Int]\n\
    \e[31m   |\e[0m (elem: Int): scala.collection.mutable.ListBuffer[Int]\n\e[31m\
    \   |\e[0mmatch arguments (Long)\n2 errors found\n"
  stdout: ''
  timestamp: 1660028873
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = (0 until n)\n   \
    \     val b = (0 until n)\n        val c = a.toList\n        \n        var count\
    \ = 0\n        \n        for(i <- 0 until n){\n            for(j <- 0 until n){\n\
    \                for(k <- 0 until n){\n                    if(j > i){\n      \
    \                  if(k > j){\n                            if(c.contains((a(i),\
    \ a(j), a(k)))){\n                                count += 1\n               \
    \             }\n                        }\n                    }\n          \
    \      }\n            }\n        }\n        \n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsk9ue2rd.scala:15:25\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = (\e[31m0\e[0m until n)\n\e[31m\e[31m   |\e[0m                         ^\e\
    [0m\n\e[31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e\
    [0m                         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpsk9ue2rd.scala:16:25 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = (\e[31m0\e[0m until\
    \ n)\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e[0m  \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsk9ue2rd.scala:21:25\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpsk9ue2rd.scala:22:29 --------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m            \e[33mfor\e[0m(j <- \e[31m0\e[0m until n){\n\e\
    [31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m      \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpsk9ue2rd.scala:23:33 --------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                \e[33mfor\e[0m(k <- \e[31m0\e[0m until n){\n\e[31m\e[31m\
    \   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m           \
    \                      Found:    (n : Long)\n\e[31m   |\e[0m                 \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer ex"
  stdout: ''
  timestamp: 1660028874
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val count = scala.collection.mutable.HashSet[Long]()\n\
    \        for(i <- 1 until n) if(scala.math.gcd(i * i - i + 1, 3) == 0) count +=\
    \ i\n        count.toSet.count(_ * _ * _ == 3)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmph3jc5pf0.scala:16:25\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m until n) \e[33mif\e[0m(scala.math.gcd(i * i - i + \e[31m1\e[0m, \e\
    [31m3\e[0m) == \e[31m0\e[0m) count += i\n\e[31m\e[31m   |\e[0m               \
    \          ^\e[0m\n\e[31m   |\e[0m                         Found:    (n : Long)\n\
    \e[31m   |\e[0m                         Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmph3jc5pf0.scala:16:42 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m until n) \e\
    [33mif\e[0m(scala.math.gcd(i * i - i + \e[31m1\e[0m, \e[31m3\e[0m) == \e[31m0\e\
    [0m) count += i\n\e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                               value gcd is not a member of\
    \ math\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmph3jc5pf0.scala:17:26 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        count.toSet.count(_ * _ * _ == \e[31m3\e[0m)\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                          Wrong number of parameters, expected: 1\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028873
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var i = 0\n        var j\
    \ = 0\n        var k = 0\n        var c = 0\n        var b : Array[Long] = new\
    \ Array[Long](n)\n        var a : Array[Long] = new Array[Long](n)\n        var\
    \ a0 = 1\n        var a1 = 1\n        var a2 = 1\n        var b0 = 1\n       \
    \ var b1 = 1\n        var b2 = 1\n        var a3 : Array[Long] = new Array[Long](n)\n\
    \        while (i < n && j < n && k < n) {\n            b[i] = a0\n          \
    \  a[i] = a0\n            a[j] = a0\n            b[j] = a0\n            b[k] =\
    \ a0\n            k += 1\n        }\n        while (i < n) {\n            b[i]\
    \ = a0\n            a[i] = a0\n            a[j] = a0\n            b[j] = a0\n\
    \            b[k] = a0\n            i += 1\n        }\n        while (j < n) {\n\
    \            b[i] = a0\n            a[i] = a0\n            a[j] = a0\n       \
    \     b[j] = a0\n            b[k] = a0\n            j += 1\n        }\n      \
    \  while (j < n) {\n            b[i] = a0\n            a[i] = a0\n           \
    \ a[j] = a0\n            b[j] = a0\n            b[k] = a0\n            j += 1\n\
    \            k += 1\n        }\n        while (k < n) {\n            b[i] = a0\n\
    \            a[i] = a0\n            a[j] = a0\n            b[j] = a0\n       \
    \     b[k] = a0\n            k += 1\n        }\n        b0 = a[0]\n        b1\
    \ = a[0]\n        b2 = a[0]\n        b3 = a[0]\n        for (i = 1; i < n; i++)\
    \ {\n            b[i] = bi - b1\n            a[i] = ai\n            k = i + 1\n\
    \            while (k < n) {\n                a[k] = aj\n                j = k\
    \ + 1\n            }\n            while (i < n) {\n                a[i] = aj\n\
    \                i += 1\n            }\n            while (j < n) {\n        \
    \        a[i] = aj\n                j += 1\n            }\n            b3 = ai\n\
    \            b2 = ai\n            b1 = ai\n            ai = a0\n            aj\
    \ = a1\n            a0 = a0 + 1\n            a1 = aj\n            a2 = ai\n  \
    \      }\n        c = b0 + b1 + b2\n        for (i = 1; i < n; i++) {\n      \
    \      c += a[i];\n        }\n        return c;\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:29:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            b[\e[35mi\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:30:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m            a[\e[35mi\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:31:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m            a[\e[35mj\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:32:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m            b[\e[35mj\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:33:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m            b[\e[35mk\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:37:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m37 |\e[0m            b[\e[35mi\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:38:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m            a[\e[35mi\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Error: /tmp/tmpr4z5ehxb.scala:39:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m            a[\e[35mj\e[0m] = a0\n\e[31m\e[31m   |\e\
    [0m                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but '=' found\n\e[31m\e[31m-- Err"
  stdout: ''
  timestamp: 1660028876
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Int](n)\n\
    \        for( i <- 0 until n){\n            a(i) = i * i - i + 1\n        }\n\
    \        val ans = a.filter(i => i % 3 == 0).size\n        a\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqghemdal.scala:15:31\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m\
    \                               ^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                              \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqghemdal.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m( i <-\
    \ \e[31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\
    \e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m\
    \                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpqghemdal.scala:20:8 ---------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m        a\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e\
    [0m        Found:    (a : Array[Int])\n\e[31m   |\e[0m        Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028875
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)(math.pow(3,n.toInt)).toArray\n\
    \        for (i<-0 until n-1) {\n            a(i) = math.pow(a(i),2)\n       \
    \ }\n        for (i<-0 until n-1) {\n            for(j<-0 until n-1) {\n     \
    \           for (k<-0 until n-1) {\n                    if(i<j && i<k && a(i)+a(j)+a(k)\
    \ == math.pow(a(i)+a(j),2)) {\n                        return i+j+k\n        \
    \            }\n                }\n            }\n        }\n        return 0\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbsilkpdy.scala:16:24\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m0\e[0m until n-\e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                    \
    \    ^^^\e[0m\n\e[31m   |\e[0m                        Found:    Long\n\e[31m \
    \  |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpbsilkpdy.scala:19:24 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (i<-\e[31m0\e[0m until n-\e[31m1\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Long\n\e[31m   |\e[0m                     \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbsilkpdy.scala:20:27\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mfor\e[0m(j<-\e\
    [31m0\e[0m until n-\e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                    \
    \       ^^^\e[0m\n\e[31m   |\e[0m                           Found:    Long\n\e\
    [31m   |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpbsilkpdy.scala:21:32 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                \e[33mfor\e[0m (k<-\e[31m0\e[0m until\
    \ n-\e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                                ^^^\e\
    [0m\n\e[31m   |\e[0m                                Found:    Long\n\e[31m   |\e\
    [0m                                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028875
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array[Long](n)\n\
    \        for (i <- 1 until n) {\n            val j = i * i - i + 1 \n        \
    \    if (j < 3) {\n                a(i - 1) = a(i - 1) + 1\n                a(j)\
    \ = a(j) + 1 \n            }\n        }\n        var sum = 0\n        for (i <-\
    \ 0 until n) {\n            val k = a(i) + a(i) + a(i)\n            if (k == 3)\
    \ sum = sum + 1\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp5vgwk0nd.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5vgwk0nd.scala:24:26 --------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m               \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028875
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.ArrayBuffer[Long]\
    \ = new mutable.ArrayBuffer[Long](n)\n        for(i <- 1 until n){\n         \
    \   for(j <- 1 until n){\n                if(i<j){\n                    if(j<n){\n\
    \                        if(a(i) + a(j) + a(j+1) <= 3*a(i+1))\n              \
    \              a.insert(i, a(i) + a(j) + a(j+1))\n                    }\n    \
    \            }\n            }\n        }\n        a.toList.length\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmbwfsx8f.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.ArrayBuffer[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m mutable.ArrayBuffer[\e[35mLong\e[0m](n)\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmbwfsx8f.scala:15:48\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m : mutable.ArrayBuffer[\e[35mLong\e[0m] = \e[33mnew\e[0m mutable.ArrayBuffer[\e\
    [35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                                     \
    \           ^^^^^^^\e[0m\n\e[31m   |\e[0m                                    \
    \            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpmbwfsx8f.scala:16:25 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m until n){\n\e[31m\e[31m   |\e\
    [0m                         ^\e[0m\n\e[31m   |\e[0m                         Found:\
    \    (n : Long)\n\e[31m   |\e[0m                         Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmbwfsx8f.scala:17:29 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mfor\e[0m(j <- \e[31m1\e[0m until n){\n\
    \e[31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m    \
    \                         Found:    (n : Long)\n\e[31m   |\e[0m              \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028877
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array[Int](n+1)\n\
    \        val b = Array[Int](n+1)\n        val c = Array[Int](n+1)\n        a(0)\
    \ = 1\n        a(n) = n+1\n        b.updated(0,0) = a(0)\n        c.updated(0,0)\
    \ = a(0)\n        // Update b and c using previous values of a\n        for(i\
    \ <- 0 until a.length-1)\n            b.updated(i,0) = a(i) * a(i) - a(i) + b(i+1)\n\
    \        for(i <- 0 until a.length-1)\n            c.updated(i,0) = a(i) * a(i)\
    \ - a(i) + c(i+1)\n        val sum = a(0) * b(0) * (a.length-1) + c(0) * c((a.length-1))\n\
    \        if(sum % 3 == 0) \n            1\n        else\n            return 0\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj7e7f0_h.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array[\e[35mInt\e[0m](n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m           \
    \                ^^^\e[0m\n\e[31m   |\e[0m                           Found:  \
    \  Long\n\e[31m   |\e[0m                           Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj7e7f0_h.scala:16:27 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = Array[\e[35mInt\e\
    [0m](n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^\e[0m\n\
    \e[31m   |\e[0m                           Found:    Long\n\e[31m   |\e[0m    \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpj7e7f0_h.scala:17:27 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = Array[\e[35mInt\e[0m](n+\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^\e[0m\n\e[31m\
    \   |\e[0m                           Found:    Long\n\e[31m   |\e[0m         \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpj7e7f0_h.scala:19:10 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        a(n) = n+\e[31m1\e[0m\n\e[31m\e[31m   |\e[0m          ^\e[0m\n\
    \e[31m   |\e[0m          Found:    (n : Long)\n\e[31m   |\e[0m          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj7e7f0_h.scala:19:15\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        a(n) = n+\e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m               ^^^\e[0m\n\e[31m   |\e[0m               Found:\
    \    Long\n\e[31m   |\e[0m               Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpj7e7f0_h.scala:2"
  stdout: ''
  timestamp: 1660028879
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var sum = 0\n        val\
    \ a = Array.fill(n.toInt)(1l)\n        a.update(1l,2l)\n        for(i <- 1l to\
    \ n) sum += a(i) * a(i) - a(i) + a(i)\n        if(sum % 3 == 0) 1\n        else\
    \ 0\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr7ijk5xy.scala:17:17\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        a.update(\e[31m1l\e[0m,\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                 ^^\e[0m\n\e[31m   |\e[0m \
    \                Found:    (\e[31m1L\e[0m : Long)\n\e[31m   |\e[0m           \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr7ijk5xy.scala:18:30\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i\
    \ <- \e[31m1l\e[0m to n) sum += a(i) * a(i) - a(i) + a(i)\n\e[31m\e[31m   |\e\
    [0m                          ^^^^^^\e[0m\n\e[31m   |\e[0m                  value\
    \ += is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpr7ijk5xy.scala:18:35 --------------------\e[0m\e[0m\n\
    \e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1l\e[0m to n) sum += a(i) * a(i)\
    \ - a(i) + a(i)\n\e[31m\e[31m   |\e[0m                                   ^\e[0m\n\
    \e[31m   |\e[0m                                   Found:    (i : Long)\n\e[31m\
    \   |\e[0m                                   Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr7ijk5xy.scala:18:42 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1l\e[0m to n) sum +=\
    \ a(i) * a(i) - a(i) + a(i)\n\e[31m\e[31m   |\e[0m                           \
    \               ^\e[0m\n\e[31m   |\e[0m                                      \
    \    Found:    (i : Long)\n\e[31m   |\e[0m                                   \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr7ijk5xy.scala:18:49\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1l\e[0m to n) sum += a(i) * a(i) - a(i) + a(i)\n\e[31m\e[31m   |\e[0m    \
    \                                             ^\e[0m\n\e[31m   |\e[0m        \
    \                                         Found:    (i : Long)\n\e[31m   |\e[0m\
    \                "
  stdout: ''
  timestamp: 1660028879
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var arr : mutable.Seq[Long]\
    \ = mutable.Seq.empty[Long]\n        var i : Long = 1\n        while(i <= n) {\n\
    \            arr = arr :+ (i * i - i + 1)\n            i = i + 1\n        }\n\
    \        var res = 0\n        for (i <- 0 until arr.size) {\n            val sum\
    \ = arr(i)\n            if (sum % 3 == 0) {\n                res += 1\n      \
    \      }\n        }\n        res\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpocw76poc.scala:15:18 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36marr\e[0m : mutable.Seq[\e\
    [35mLong\e[0m] = mutable.Seq.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m   \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpocw76poc.scala:15:38\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36marr\e[0m : mutable.Seq[\e[35mLong\e[0m] = mutable.Seq.empty[\e[35mLong\e[0m]\n\
    \e[31m\e[31m   |\e[0m                                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                      Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660028875
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.MutableList(1\
    \ to n)\n        var sum = 0\n        for(i<- 1 to n) {\n            sum += a(i)\
    \ * a(i) * a(i)\n            if((sum % 3) == 0) {\n                val temp =\
    \ a(i) * a(i) * a(i) - 1\n                sum = sum + temp\n                a(i)\
    \ = temp\n            }\n        }\n        a.toSeq.length\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps646c76h.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.MutableList(\e\
    [31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmps646c76h.scala:17:21 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i<- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m                    \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                     Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028877
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var i = 0\n        var j\
    \ = n\n        var count = 0\n        while(i <= j) {\n            i += 1\n  \
    \          if(i % 3 == 0) count = 3 * count\n            if(i % 5 == 0) count\
    \ = 3 * count + 1\n            if(i % 7 == 0) count = 3 * count + 2\n        \
    \    if(i % 11 == 0) count = 3 * count + 3\n            j += 1\n        }\n  \
    \      return count\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660028881
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var triplesCount : Long =\
    \ 0\n        var tripletList : mutable.MutableList[Long] = mutable.MutableList()\n\
    \        for (i<- 1 to n) {\n            val j = (i * i) - i + 1\n           \
    \ val k = i * i\n            if (j < k) tripletList += k\n            else if\
    \ (tripletList.contains(k)) triplesCount += 1\n            else tripletList +=\
    \ k\n        }\n        triplesCount\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h6j8l1u.scala:16:26 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mtripletList\e[0m : mutable.MutableList[\e\
    [35mLong\e[0m] = mutable.MutableList()\n\e[31m\e[31m   |\e[0m                \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4h6j8l1u.scala:16:54\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e\
    [36mtripletList\e[0m : mutable.MutableList[\e[35mLong\e[0m] = mutable.MutableList()\n\
    \e[31m\e[31m   |\e[0m                                                      ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4h6j8l1u.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028879
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.MutableList[Long]\
    \ = mutable.MutableList(1)\n        for (i<-0 to n-1) a += i * i - i + 1\n   \
    \     val triples = a.filter(_ % 3 == 0).size\n        return triples \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj1xfhyua.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.MutableList[\e\
    [35mLong\e[0m] = mutable.MutableList(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj1xfhyua.scala:15:44\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m : mutable.MutableList[\e[35mLong\e[0m] = mutable.MutableList(\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                            ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj1xfhyua.scala:16:21\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m0\e[0m to n-\e[31m1\e[0m) a += i * i - i + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m                     ^^^\e[0m\n\e[31m   |\e[0m                     Found: \
    \   Long\n\e[31m   |\e[0m                     Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660028880
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        if (n < 3L) {\n         \
    \   return 0L\n        }\n        val a = mutable.ArrayBuffer.fill(3L)(0L)\n \
    \       a(3L) = n\n        for (i <- 3L to (n + 1L)) {\n            a(i) = a(i\
    \ + 1L) + a(i + 1L + 1L)\n        }\n        val triples = a.sliding(3).filter(_(_)\
    \ * _(_) * _(_) == 3).toList\n        return triples.map(s => s.last).sum\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpksug_so4.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(\e\
    [31m3L\e[0m)(\e[31m0L\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028877
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        var count : Long = 0\n        for (i <- 1l to n){\n            if (a.contains(i\
    \ * i - i + 1) && i * a[i] - i - i % 3 == 0){\n                count += 1\n  \
    \              a.remove(i)\n            }\n        }\n        count\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzto_ze1y.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028878
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n)(0)\n\
    \        val m = scala.math.pow(n, 3) - 1\n        for(i <- 0 until n ) {\n  \
    \          for(j <- 0 until n) {\n                for(k <- 0 until n) {\n    \
    \                if(i >= j && i >= k && j >= k) {\n                        if(m\
    \ * a[i] + a[j] + a[k] == m) {\n                            a.update(i,1)\n  \
    \                          a.update(j,1)\n                            a.update(k,1)\n\
    \                        }\n                    }\n                }\n       \
    \     }\n        }\n        a.length\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfkrne632.scala:15:58\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ArrayBuffer.fill(n)(\e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                                                          ^\e[0m\n\e\
    [31m   |\e[0m                                                    Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                                   \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfkrne632.scala:17:25\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n ) {\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\
    \e[31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m\
    \                         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpfkrne632.scala:18:29 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m(j <- \e[31m0\e[0m until n) {\n\e\
    [31m\e[31m   |\e[0m                             ^\e[0m\n\e[31m   |\e[0m      \
    \                       Found:    (n : Long)\n\e[31m   |\e[0m                \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpfkrne632.scala:19:33 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m                \e[33mfor\e[0m(k <- \e[31m0\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m        \
    \                         Found:    (n : Long)\n\e[31m   |\e[0m              \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpfkrne632.scala:21:33 ------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m                        \e[33mif\e[0m(m * a[\e[35mi\e[0m] + a[\e[35mj\e[0m]\
    \ + a[\e[35mk\e[0m] == m) {\n\e[31m\e[31m   |\e[0m             "
  stdout: ''
  timestamp: 1660028883
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        var i = 0l\n        while(i < a.length) {\n            val x = i * i\
    \ - i + 1\n            a.update(i)(x)\n            i += 1\n        }\n       \
    \ a.toSet.count(_ % 3 == 0)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsatoekjk.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028880
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ListBuffer(1\
    \ to n)\n        \n        for (i = 1 until n by 3) {\n            val triple\
    \ = scala.collection.mutable.ListBuffer((a(i), a(i + 1), a(i + 2)))\n        \
    \    \n            for( k <- a if a(i) < a(k) && a(i + a(a(i))) < a(k + a(a(k))))\
    \ triple.append(a(i))\n            \n            if(triple.length == 3 && triple.forall(x=>\
    \ x == x*x + x - 1))\n                a.append(triple)\n        }\n        a.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpue1d51l0.scala:17:15 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m until n by \e\
    [31m3\e[0m) {\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m   \
    \            ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpue1d51l0.scala:17:33 ---------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m until n by \e[31m3\e[0m) {\n\e\
    [31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e[0m  \
    \                               '<-' expected, but '{' found\n\e[31m\e[31m-- [E040]\
    \ Syntax Error: /tmp/tmpue1d51l0.scala:26:4 ----------------------------\e[0m\e\
    [0m\n\e[31m26 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e[0m  \
    \  '<-' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpue1d51l0.scala:15:57\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = scala.collection.mutable.ListBuffer(\e[31m1\e[0m to n)\n\e[31m\e[31m   |\e\
    [0m                                                         ^\e[0m\n\e[31m   |\e\
    [0m                                                    Found:    (n : Long)\n\e\
    [31m   |\e[0m                                                    Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpue1d51l0.scala:24:9\
    \ -------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        }\n\e[31m\e[31m\
    \   |\e[0m         ^\e[0m\n\e[31m   |\e[0mvalue foreach is not a member of Null,\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties\
    \ AsScalaMap\n\e[31m"
  stdout: ''
  timestamp: 1660028884
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = mutable.ArrayBuffer.fill(n)\n\
    \        a.update(0, 1l)\n        var tripleCount = 0\n        var i = 2\n   \
    \     var j = a.length - 1\n        while (i < j) {\n            var k = i\n \
    \           while (k <= j) {\n                val product = a.updateOrElse(k,\
    \ (a.get(k) + a.get(k + 1)) * 3)\n                val currentSum = a.get(k) +\
    \ a.get(k + 1)\n                if (product % 3 == 0 && currentSum == 3) {\n \
    \                   tripleCount += 1\n                }\n                k -=\
    \ 1\n            }\n            i += 1\n            j = k - 1\n        }\n   \
    \     return tripleCount\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpot75pi6b.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028881
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var sum = 0\n        var\
    \ a = Array[Long](n)\n        for (i <- 1 to a.length) {\n            a(i) = i\
    \ * i - i + 1\n        }\n        for (i <- 1 to a.length - 1) {\n           \
    \ for(j <- 1 to a.length - 1) {\n                for(k <- 1 to a.length - 1) {\n\
    \                    if(i != j && j != k && k != i) {\n                      \
    \  sum += a(i) + a(j) + a(k) == 3\n                    }\n                }\n\
    \            }\n        }\n        return sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn4xam52f.scala:24:28 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                        sum += a(i) + a(j) + a(k) ==\
    \ \e[31m3\e[0m\n\e[31m\e[31m   |\e[0m                        ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  value += is not a member of Int - did you mean Int.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660028885
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        for\
    \ (i <- 1L until n) count += compute(i, i, i)\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeyaftisf.scala:16:36 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1L\e[0m until n) count\
    \ += compute(i, i, i)\n\e[31m\e[31m   |\e[0m                              ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  value += is not a member of Int - did you\
    \ mean Int.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpeyaftisf.scala:16:39\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i\
    \ <- \e[31m1L\e[0m until n) count += compute(i, i, i)\n\e[31m\e[31m   |\e[0m \
    \                                      ^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                              Not found: compute\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028885
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : mutable.WrappedArray[Long]\
    \ = mutable.WrappedArray.empty[Long]\n        for (i<- 0 until n)\n          \
    \  a += i * i - i + 1\n        var count : Long = 0\n        for (i<- 1 until\
    \ a.length) {\n            var sum = 0\n            for (var j <- 1 until a.length)\
    \ {\n                var k = 0\n                var jk : Long = 0\n          \
    \      for (k <- 0 until a.length) {\n                    jk = j + k\n       \
    \             if (a(i) == a(ik) && a(j) == a(jk) && a(k) == a(ik+jk))\n      \
    \                  sum++\n                }\n            }\n            if (sum\
    \ > 3) {\n                count = count + 1\n                println(\"count :\
    \ \"+count)\n            }\n        }\n        return count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E032] Syntax Error: /tmp/tmp0gqm01fv.scala:21:17 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mfor\e[0m (\e[33mvar\e[0m j <- \e[31m1\e\
    [0m until a.length) {\n\e[31m\e[31m   |\e[0m                 ^^^\e[0m\n\e[31m\
    \   |\e[0m                 pattern expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmp0gqm01fv.scala:21:44 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mfor\e[0m (\e[33mvar\e[0m j <- \e[31m1\e\
    [0m until a.length) {\n\e[31m\e[31m   |\e[0m                                 \
    \           ^\e[0m\n\e[31m   |\e[0m                                          \
    \  '<-' expected, but '{' found\n\e[31m\e[31m-- [E020] Syntax Error: /tmp/tmp0gqm01fv.scala:34:8\
    \ ----------------------------\e[0m\e[0m\n\e[31m34 |\e[0m        }\n\e[31m\e[31m\
    \   |\e[0m        ^\e[0m\n\e[31m   |\e[0m        \e[33myield\e[0m or \e[33mdo\e\
    [0m expected\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0gqm01fv.scala:15:16\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m : mutable.WrappedArray[\e[35mLong\e[0m] = mutable.WrappedArray.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp0gqm01fv.scala:15:45 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.WrappedArray[\e\
    [35mLong\e[0m] = mutable.WrappedArray.empty[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e\
    [0m                                             ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                             Not found: mutable\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0gqm01fv.scala:16:25 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<- \e[31m0\e[0m until n)\n\e\
    [31m\e[31m  "
  stdout: ''
  timestamp: 1660028887
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Long](n)\n\
    \        var i = 0\n        for (i <- 0 until n) {\n            val j = i + 1\n\
    \            val k = i + 2\n            a(i) = i * i - i + 1\n            a(j)\
    \ = (j + 1) * j - j + 1\n            a(k) = (k + 1) * k - k + 1\n        }\n \
    \       val triples = a.map(_ * _ * _)\n        val valid = triples.filter(_ %\
    \ 3 != 0)\n        valid.length\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxye41yfm.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxye41yfm.scala:17:26\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E086]\
    \ Syntax Error: /tmp/tmpxye41yfm.scala:24:28 ---------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = a.map(_ * _ *\
    \ _)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                            Wrong number of parameters, expected: 1\n\
    \e[31m\e[31m-- Error: /tmp/tmpxye41yfm.scala:24:38 -----------------------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = a.map(_ *\
    \ _ * _)\n\e[31m\e[31m   |\e[0m                                      ^\e[0m\n\e\
    [31m   |\e[0m                                      No ClassTag available for B\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m                                      where: \
    \   B is a type variable\n4 errors found\n"
  stdout: ''
  timestamp: 1660028886
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Long](n.toInt)\n\
    \        // Fill the array with n (i = 1...n) values.\n        for (i <- 1 to\
    \ a.length) a(i) = i * i - i + 1\n        // Scan from right to left.\n      \
    \  var max = 0\n        var i = 0\n        for (j <- (a.length to 1) by -1)\n\
    \            for (k <- (j + 1 to a.length) by -1)\n                if (a(i) >\
    \ a(j) + a(k)\n                    && a(i) > max {\n                    max =\
    \ a(i)\n                    i = j\n                    k = k\n               \
    \ }\n        return max\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpnwppbnii.scala:29:8 ----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mreturn\e[0m max\n\e[31m\e[31m   |\e[0m\
    \        ^^^^^^\e[0m\n\e[31m   |\e[0m        ')' expected, but 'return' found\n\
    \e[31m\e[31m-- [E050] Type Error: /tmp/tmpnwppbnii.scala:24:30 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                    && a(i) > max {\n\e[31m\e[31m   |\e\
    [0m                              ^^^\e[0m\n\e[31m   |\e[0m                   \
    \           \e[33mvariable\e[0m \e[35mmax\e[0m does not take parameters\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnwppbnii.scala:25:27 --------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                    max = a(i)\n\e[31m\e[31m   |\e[0m\
    \                          ^^^^\e[0m\n\e[31m   |\e[0m                        \
    \  Found:    Long\n\e[31m   |\e[0m                          Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpnwppbnii.scala:27:22 -----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                    k = k\n\e[31m\e[31m   |\e[0m    \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                    Reassignment to\
    \ val k\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmpnwppbnii.scala:30:4\
    \ -----------------\e[0m\e[0m\n\e[33m29 |\e[0m        \e[33mreturn\e[0m max\n\e\
    [33m30 |\e[0m    }\n\e[33m\e[33m   |\e[0m                  ^\e[0m\n\e[33m   |\e\
    [0mA pure expression does nothing in statement position; you may be omitting necessary\
    \ parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 warning found\n4 errors found\n"
  stdout: ''
  timestamp: 1660028885
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var counter = 0\n       \
    \ var max = 0\n        var index = 0\n        val a = new Array[Long](n)\n   \
    \     for (i <- 0 until n) {\n            a(i) = i * i - i + 1\n        }\n  \
    \      for (i <- 0 until n) {\n            if (a(i) >= max) {\n              \
    \  max = a(i)\n                index = i\n            }\n        }\n        if\
    \ (max % 3 == 0) {\n            counter = counter + 1\n        }\n        return\
    \ (counter, max)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptzhr3uz2.scala:18:32\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptzhr3uz2.scala:19:26\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmptzhr3uz2.scala:22:26 --------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m               \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptzhr3uz2.scala:24:23\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m                max = a(i)\n\e\
    [31m\e[31m   |\e[0m                      ^^^^\e[0m\n\e[31m   |\e[0m          \
    \            Found:    Long\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptzhr3uz2.scala:31:15\
    \ --------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mreturn\e[0m (counter,\
    \ max)\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m               Found:    (Int, Int)\n\e[31m   |\e[0m               Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 err"
  stdout: ''
  timestamp: 1660028887
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(n)\n\
    \        var i = 0\n        while (i < a.size) {\n            val j = (i + 1)\
    \ %a.size\n            val k = (j + 1) %a.size\n            a(i) = i * i - i +\
    \ 1\n            i += 1\n        }\n        return a.foldLeft(0)((x, y) => math.max(x,\
    \ y)).asInstanceOf[Long]\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6d30pn1_.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(n)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028883
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // Initialize an array\n\
    \        var array = new Array[Long](n)\n        val a = new mutable.MutableList[Long]\n\
    \n        // Initialization\n        a(0) = 1\n        for(i<- 1 to (n-1)){\n\
    \            a(i) = i * i - i + 1\n        }\n\n        // Get the number of triples\
    \ that satisfy our condition\n        var totalTriple = 0\n        for(i <- 0\
    \ to a.size - 1){\n            val j = a.size - i - 1\n            val k = a.size\
    \ - j - 1\n            // We only want to count the triple where i < j < k\n \
    \           val temp = if (i < j) i else j\n            val triple_num = temp\
    \ * temp\n            // The number should equal the square of i\n           \
    \ val isTriple = triple_num == i\n            // We only want to count the triple\
    \ where a[i] + a[j] + a[k] is multiple of 3\n            val isMultipleOfThree\
    \ = triple_num % 3 == 0\n            val total = if (isTriple && isMultipleOfThree)\
    \ totalTriple + 1\n            else totalTriple\n            array.update(i)(total)\n\
    \        }\n\n        array.size + 1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6n1yluxm.scala:16:36\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36marray\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                    ^\e[0m\n\e[31m   |\e[0m               \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp6n1yluxm.scala:17:20 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m mutable.MutableList[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6n1yluxm.scala:21:22 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mfor\e[0m(i<- \e[31m1\e[0m to (n-\e[31m1\e\
    [0m)){\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m \
    \                     Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- Error: /tmp/tmp6n1yluxm.scala:39:24 -----------------------------------------\e\
    [0m\e[0m\n\e[31m39 |\e[0m            array.update(i)(total)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mmissing argument for parameter\
    \ x of \e[33mmethod\e[0m \e[35mupdate\e[0m in \e[33mclass\e[0m \e[35mArray\e[0m:\
    \ (i: Int, x: Long): Unit\n4 errors found\n"
  stdout: ''
  timestamp: 1660028887
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // your implementation here\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2k3h6kfk.scala:14:41\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m    \e[33mdef\e[0m \e[36mgetMaxTriples\e\
    [0m(\e[36mn\e[0m : \e[35mLong\e[0m) : \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e\
    [0m                                         ^\e[0m\n\e[31m   |\e[0m          \
    \                               Found:    Unit\n\e[31m   |\e[0m              \
    \                           Required: Long\n\e[31m15 |\e[0m        \e[34m// your\
    \ implementation here\e[0m\n\e[31m16 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028886
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var maxTriples = 0 // initialize\
    \ maximum triples count\n        var a : mutable.ListBuffer[Long] = mutable.ListBuffer(1l)\
    \ // (1) Initialize an integer list \n        val max = (1l) // (2) Initialize\
    \ the max value as 1\n        val aLen = a.length\n        val numTriplets = (3l)\
    \ // (3) Initialize the number of triplets \n        for (i = 1 until n) // (4)\
    \ For each index i, do ...\n        {\n            val current = a.last // (5)\
    \ Get the last value in a\n            a.remove(current) // (6) Remove it from\
    \ a\n            val next = aLen // (7) Get the length of a\n            if (current\
    \ < next) // (8) If the current value is smaller than the next one\n         \
    \   {\n                val newValue = (current + next - 1) // (9) Get the current\
    \ value + the next value - 1 and store it in newValue\n                a = (a\
    \ :+ newValue) // (10) Add newValue to the end of a\n            }\n         \
    \   else // (11) Else\n            {\n                val newValue = (current\
    \ * 3 - 3) // (12) Get the current value * 3 - 3 and store it in newValue\n  \
    \              a = (a :+ newValue) // (13) Add newValue to the end of a\n    \
    \        }\n            if (newValue % 3 = 0) // (14) If the newValue is a multiple\
    \ of 3\n            {\n                maxTriples = numTriplets++ // (15) Increment\
    \ the number of triples by 1\n            }\n        }\n        return maxTriples\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvawn824q.scala:20:15 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m until n) \e\
    [34m// (4) For each index i, do ...\e[0m\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               ')' expected, but '=' found\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmpvawn824q.scala:21:0 ----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        {\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e\
    [0m'<-' expected, but 'end of statement' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tmp/tmpvawn824q.scala:16:16 ------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.ListBuffer[\e[35mLong\e\
    [0m] = mutable.ListBuffer(\e[31m1l\e[0m) \e[34m// (1) Initialize an integer list\
    \ \e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpvawn824q.scala:16:43 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.ListBuffer[\e[35mLong\e[0m] =\
    \ mutable.ListBuffer(\e[31m1l\e[0m) \e[34m// (1) Initialize an integer list \e\
    [0m\n\e[31m\e[31m   |\e[0m                                           ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                           Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028883
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 until n) {\n            a += (i * i - i + 1)\n        }\n\
    \        val b = 0\n        for (i <- a.view.zipWithIndex) {\n            if (b\
    \ == 3) break\n            val t = (a(i), a(i+1), a(i+2))\n            if (t*t\
    \ % 3 == 0) {\n                b+=1\n            }\n        }\n        b\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjvzu7p_y.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpjvzu7p_y.scala:21:24 ------------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m            \e[33mif\e[0m (b == \e[31m3\e[0m) break\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0m             \
    \           Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpjvzu7p_y.scala:22:23 --------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m            \e[33mval\e[0m \e[36mt\e[0m = (a(i), a(i+\e[31m1\e[0m), a(i+\e\
    [31m2\e[0m))\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e\
    [0m                       Found:    (i : (Long @uncheckedVariance, Int))\n\e[31m\
    \   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpjvzu7p_y.scala:22:30 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mval\e[0m \e[36mt\e[0m = (a(i), a(i+\e\
    [31m1\e[0m), a(i+\e[31m2\e[0m))\n\e[31m\e[31m   |\e[0m                       \
    \      ^^\e[0m\n\e[31m   |\e[0mvalue + is not a member of (Long @uncheckedVariance,\
    \ Int), but could be made available as an extension method.\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mOne of the following imports might make progress towards fixing\
    \ the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpjvzu7p_y.scala:22:38 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mva"
  stdout: ''
  timestamp: 1660028892
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill[Long](n)(0l)\n\
    \        for(i <- 1 to n) {\n            a(i) = i * i - i + 1\n        }\n   \
    \     val pairs = (0 until n).map( i => {\n            (i, a(i), a(i + 1))\n \
    \       })\n        val triples = (0 until n).filter( i => \n            pairs.exists\
    \ { case (i, j, k) => \n                if((j < k) && (j > i) && (k > i))\n  \
    \                  a(i) + a(i + 1) + a(k + 1) === 3\n                else\n  \
    \                  false\n            }\n        ).size\n        if(n > 3) {\n\
    \            triples - (triples % (triples % (triples * 2)))\n        } else {\n\
    \            triples * (triples * (triples * 2))\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvkaa7mt4.scala:15:33\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.fill[\e[35mLong\e[0m](n)(\e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                              ^\e[0m\n\e[31m   |\e[0m                       \
    \          Found:    (n : Long)\n\e[31m   |\e[0m                             \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvkaa7mt4.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpvkaa7mt4.scala:19:29 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mval\e[0m \e[36mpairs\e[0m = (\e[31m0\e[0m until n).map(\
    \ \e[36mi\e[0m => {\n\e[31m\e[31m   |\e[0m                             ^\e[0m\n\
    \e[31m   |\e[0m                             Found:    (n : Long)\n\e[31m   |\e\
    [0m                             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpvkaa7mt4.scala:22:31 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mtriples\e[0m = (\e[31m0\e\
    [0m until n).filter( \e[36mi\e[0m => \n\e[31m\e[31m   |\e[0m                 \
    \              ^\e[0m\n\e[31m   |\e[0m                               Found:  \
    \  (n : Long)\n\e[31m   |\e[0m                               Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvkaa7mt4.scala:25:40\
    \ --------------------\e[0m\e[0m\n\e[31m25 |\e[0m                    a(i) + a(i\
    \ + \e[31m1\e[0m) + a(k + \e[31m1\e[0m) === \e[31m3\e[0m\n\e[31m\e[31m   |\e[0m\
    \                                        ^^^^^\e[0m\n\e[31m   |\e[0m     "
  stdout: ''
  timestamp: 1660028890
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var result : Long = 0\n \
    \       val a = List(n)\n        for (i = 1 until n) {\n            val j = i\
    \ + 1\n            val k = n - 1\n            result += if (a[i] + a[j] + a[k]\
    \ == 3) 1 \n                else 0\n        }\n        return result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzf2f51gm.scala:17:15 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m               ')'\
    \ expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzf2f51gm.scala:17:28\
    \ ---------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                        \
    \    ^\e[0m\n\e[31m   |\e[0m                            '<-' expected, but '{'\
    \ found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzf2f51gm.scala:22:9 -------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        }\n\e[31m\e[31m   |\e[0m         ^\e[0m\n\e[31m\
    \   |\e[0mvalue foreach is not a member of Null, but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator asScala\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.map AsScalaConcurrentMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.set asScala\n\e\
    [31m   |\e[0m\n3 errors found\n"
  stdout: ''
  timestamp: 1660028890
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.fill(n.toInt)(0)\n\
    \        var i = 0\n        while(i < n) {\n            a(i) = i * i - i + 1 \n\
    \            i += 1\n        }\n        var count = 0\n        a.foreach { x =>\n\
    \            val xx = x + x\n            if (xx < 3) count = count + 1\n     \
    \   }\n        a.clear()\n        return count\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8c7rpbf8.scala:30)\n\tat Problem.main(tmp8c7rpbf8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660028892
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Int]\n\
    \        var triplesCounter = 0\n        var i = scala.math.BigInt(1l)\n     \
    \   while(i <  n) {\n            var j = scala.math.BigInt(i)\n            while(j\
    \ <  n) {\n                var k = scala.math.BigInt(j)\n                while(k\
    \ < n) {\n                    val result = i * i * i + j * j + k * k\n       \
    \             if (result % 3 == 0) {\n                        triplesCounter +=\
    \ 1\n                        a.clear()\n                        a.append(i)\n\
    \                        a.append(j)\n                        a.append(k)\n  \
    \                  }\n                    k += 1\n                }\n        \
    \        j += 1\n            }\n            i += 1\n        }\n        a.toList.size\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmp460t9dtb.scala:19:20 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mvar\e[0m \e[36mj\e[0m = scala.math.BigInt(i)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35mapply\e[0m in\
    \ \e[33mobject\e[0m \e[35mBigInt\e[0m with types\n\e[31m   |\e[0m (x: java.math.BigInteger):\
    \ BigInt\n\e[31m   |\e[0m (x: String, radix: Int): BigInt\n\e[31m   |\e[0m (x:\
    \ String): BigInt\n\e[31m   |\e[0m (numbits: Int, rnd: scala.util.Random): BigInt\n\
    \e[31m   |\e[0m (bitlength: Int, certainty: Int, rnd: scala.util.Random): BigInt\n\
    \e[31m   |\e[0m (signum: Int, magnitude: Array[Byte]): BigInt\n\e[31m   |\e[0m\
    \ (x: Array[Byte]): BigInt\n\e[31m   |\e[0m (l: Long): BigInt\n\e[31m   |\e[0m\
    \ (i: Int): BigInt\n\e[31m   |\e[0mmatch arguments ((i : BigInt))\n\e[31m\e[31m--\
    \ [E134] Type Error: /tmp/tmp460t9dtb.scala:27:26 -----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                        a.append(i)\n\e[31m\e[31m   |\e\
    [0m                        ^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e\
    [0m with types\n\e[31m   |\e[0m (elems: Int*): (a : scala.collection.mutable.ArrayBuffer[Int])\n\
    \e[31m   |\e[0m (elem: Int): (a : scala.collection.mutable.ArrayBuffer[Int])\n\
    \e[31m   |\e[0mmatch arguments ((i : BigInt))\n2 errors found\n"
  stdout: ''
  timestamp: 1660028888
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ListBuffer.empty[Long]\n\
    \        (1 to n).foreach { i =>\n            (1 to i).foreach { j =>\n      \
    \          val k = i + j\n                if ((i <  j) && (j < k)) {\n       \
    \             if (a(i) + a(j) + a(k) == 9) {\n                        a += i\n\
    \                    }\n                }\n            }\n        }\n        if\
    \ (a exists (_ % 3 == 0)) {\n            a.length\n        } else {\n        \
    \    -1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4jou1hmd.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp4jou1hmd.scala:16:14 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        (\e[31m1\e[0m to n).foreach { \e[36mi\e[0m =>\n\e\
    [31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Found: \
    \   (n : Long)\n\e[31m   |\e[0m              Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028891
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var result = new collection.mutable.ArrayBuffer[(Long,\
    \ Long, Long)]\n        for (i <- 1 to n) {\n            var sum = 0L\n      \
    \      for (j <- i to n) {\n                sum += i\n                if (sum\
    \ < 3L)\n                    sum = sum + 3L\n            }\n            if (sum\
    \ == 3L)\n                result += (i -> i -> i).toArray\n        }\n       \
    \ result.foldLeft(0L)(_ maxBy (_ _))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6tv7ej60.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp6tv7ej60.scala:18:27 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m (j <- i to n) {\n\e[31m\e[31m   |\e[0m    \
    \                       ^\e[0m\n\e[31m   |\e[0m                           Found:\
    \    (n : Long)\n\e[31m   |\e[0m                           Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6tv7ej60.scala:24:40 --------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                result += (i -> i -> i).toArray\n\e[31m\e\
    [31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                          Found:    Array[Object]\n\e[31m   |\e[0m        \
    \                  Required: (Long, Long, Long)\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E086] Syntax Error: /tmp/tmp6tv7ej60.scala:26:28 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        result.foldLeft(\e[31m0L\e[0m)(_ maxBy (_ _))\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                            Wrong number of parameters, expected: 2\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660028891
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // Create a list a with length\
    \ n\n        var a : mutable.ListBuffer[Long] = new mutable.ListBuffer[Long]()\n\
    \        // For each i from 1 to n, add the value a[i]\n        for(i<- 1 to n){\n\
    \            a += i\n        }\n        // Now a = [1, 3, 7, 13, 21]\n       \
    \ // For each a[i], add a[j], a[k]\n        var ans : Long = 0\n        for(i<-\
    \ 0 until a.size){\n            for(j <- i until a.size){\n                for(k\
    \ <- j until a.size){\n                    if(i + j + k == a(i) * a(j) * a(k))\
    \ ans += 1\n                }\n            }\n        }\n        // Return the\
    \ answer\n        return ans\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps7x4h__3.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : mutable.ListBuffer[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps7x4h__3.scala:16:47\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e\
    [36ma\e[0m : mutable.ListBuffer[\e[35mLong\e[0m] = \e[33mnew\e[0m mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                                      \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                                      \
    \         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmps7x4h__3.scala:18:21 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mfor\e[0m(i<- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m\
    \                     ^\e[0m\n\e[31m   |\e[0m                     Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                     Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660028891
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n.toInt)(0l)\n\
    \        for (i <- 1l to n + 1l) {\n            for (j <- i + 1 to n + 1l) {\n\
    \                if (i * i + j * j == n * (n + 1) * (n + 1))\n               \
    \     a(i) += 1\n            }\n        }\n        a.foldLeft(0l)(_ + _)\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk52ikbzb.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n.toInt)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028889
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      val a = Array.ofDim[Long](n)\n\
    \      var i = 0\n      var j = 0\n      var k = 0\n      var count = 0\n    \
    \  while (i < n && j < n && k < n) {\n        a(i) = i * i - i + 1\n        i\
    \ += 1\n        if (i < n) {\n          j += 1\n          if (j < n) {\n     \
    \       k += 1\n          }\n        }\n        count += 1\n      }\n      count\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy510ce5n.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m      \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \               ^\e[0m\n\e[31m   |\e[0m                                Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028893
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      var counts = mutable.HashMap[Long,\
    \ Long]()\n      for( i <- 1L to n by 1L ) {\n        val tmp = 1L\n        var\
    \ k = 1L\n        for(j <- 1L to n by 1L ) {\n          val tmp2 = k + j\n   \
    \       if( tmp2 < n) k = tmp2\n        }\n        val count = (i * i - i + 1)\
    \ * (k - j + 1)\n        counts(i) = counts.getOrElse(i, count) + 1\n      }\n\
    \      var max = 0L\n      for( i <- 1 to n by 1L ) {\n        val count = counts(i)\n\
    \        if( count > max ) max = count\n      }\n      max\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt3gn5jmi.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m      \e[33mvar\e[0m \e[36mcounts\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpt3gn5jmi.scala:23:43 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m \e[36mcount\e[0m = (i * i - i\
    \ + \e[31m1\e[0m) * (k - j + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \                               ^\e[0m\n\e[31m   |\e[0m                      \
    \                     Not found: j\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpt3gn5jmi.scala:27:21 --------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m      \e[33mfor\e[0m( i <- \e[31m1\e[0m to n by \e[31m1L\e[0m ) {\n\e\
    [31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m              \
    \       Found:    (n : Long)\n\e[31m   |\e[0m                     Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpt3gn5jmi.scala:27:26\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m      \e[33mfor\e[0m( i <- \e\
    [31m1\e[0m to n by \e[31m1L\e[0m ) {\n\e[31m\e[31m   |\e[0m                  \
    \        ^^\e[0m\n\e[31m   |\e[0m                          Found:    (\e[31m1L\e\
    [0m : Long)\n\e[31m   |\e[0m                          Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660028894
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = List.fill(n)(math.abs(1l)).toList\n\
    \        for (i <- 1l to n) a(math.abs(i)).foreach(t => a(t).foreach(x => a(t).map(b\
    \ => a(t).filter(_ != b).map(c => a(t).filter(_ != c).filter(d => d != b).map(_\
    \ != c).filter(d => d != c).filter(f => f != c).map(_ != c).filter(d => d != c).filter(f\
    \ => f != c).filter(_ != d).map(e => a(t).filter(_ != d).filter(e != b).map(e\
    \ => a(t).filter(_ != d).filter(e != c).filter(e != d).filter(f => f != d).filter(_\
    \ != e).map(e => a(t).filter(_ != e).filter(e != b).map(e => a(t).filter(_ !=\
    \ e).filter(e != c).filter(e != d).filter(f => f != e).filter(_ != f).map(f =>\
    \ a(t).filter(_ != f).filter(f != b).map(f => a(t).filter(_ != f).filter(f !=\
    \ c).filter(f != d).filter(f != e).filter(f != f).filter(_ != g).map(g => a(t).filter(_\
    \ != g).filter(g != b).map(g => a(t).filter(_ != g).filter(g != c).filter(g !=\
    \ d).filter(g != e).filter(g != f).filter(g != g).filter(_ != h).map(h => a(t).filter(_\
    \ != h).filter(h != b).map(h => a(t).filter(_ != h).filter(h != c).filter(h !=\
    \ d).filter(h != e).filter(h != f).filter(h != g).filter(h != h).filter(_ != i).map(i\
    \ => a(t).filter(_ != i).filter(i != b).map(i => a(t).filter(_ != i).filter(i\
    \ != c).filter(i != d).filter(i != e).filter(i != f).filter(i != g).filter(i !=\
    \ h).filter(i != i).filter(_ != j).map(j => a(t).filter(_ != j).filter(j != b).map(j\
    \ => a(t).filter(_ != j).filter(j != c).filter(j != d).filter(j != e).filter(j\
    \ != f).filter(j != g).filter(j != h).filter(j != i).filter(j != j).filter(_\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpnbcx6hrl.scala:17:4 ----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpnbcx6hrl.scala:15:26 --------------------\e[0m\e[0m\n\e[31m15 |\e[0m\
    \        \e[33mval\e[0m \e[36ma\e[0m = List.fill(n)(math.abs(\e[31m1l\e[0m)).toList\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnbcx6hrl.scala:16:38\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1l\e[0m to n) a(math.abs(i)).foreach(\e[36mt\e[0m => a(t).foreach(\e[36mx\e\
    [0m => a(t).map(\e[36mb\e[0m => a(t).filter(_ != b).map(\e[36mc\e[0m => a(t).filter(_\
    \ != c).filter(\e[36md\e[0m => d != b).map(_ != c).filter(\e[36md\e[0m => d !=\
    \ c).filter(\e[36mf\e[0m => f != c).map(_ != c).filter(\e[36md\e[0m => d != c).filter(\e\
    [36mf\e[0m => f != c).filter(_ != d).map(\e[36me\e[0m => a(t).filter(_ != d).filter(e\
    \ != b).map(\e[36me\e[0m => a(t).filter(_ != d).filter(e != c).filter(e != d).filter(\e\
    [36mf\e[0m => f != d).filter(_ != e).map(\e[36me\e[0m => a(t).filter(_ != e).filter(e\
    \ != b).map(\e[36me\e[0m => a(t).filter(_ != e).filter(e != c).filter(e != d).filter(\e\
    [36mf\e[0m => f != e).filter(_ != f).map(\e[36mf\e[0m => a(t).filter(_ != f).filter(f\
    \ != b).map(\e[36mf\e[0m => a(t).filter(_ != f).filter(f != c).filter(f != d).filter(f\
    \ != e).filter(f != f).filter(_ != g).map(\e[36mg\e[0m => a(t).filter(_ != g).filter(g\
    \ != b).map(\e[36mg\e[0m => a(t).filter(_ != g).filter(g != c).filter(g != d).filter(g\
    \ != e).filter(g != f).filter(g != g).filter(_ != h).map(\e[36mh\e[0m => a(t).filter(_\
    \ != h).filter(h != b).map(\e[36mh\e[0m => a(t).filter(_ != h).filter(h != c).filter(h\
    \ != d).filter(h != e).filter(h != f).filter(h != g).filter(h != h).filter(_ !=\
    \ i).map(\e[36mi\e[0m => a(t).filter(_ != i).filter(i != b).map(\e"
  stdout: ''
  timestamp: 1660028895
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer(1l)\n\
    \        for (i <- 1 to n)\n            a += (i * i - i + 1l)\n        val max\
    \ = a.max\n        val result = a.filter { i => max == (i * i - i + 1l) }.size\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpd23264d8.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpd23264d8.scala:16:23 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n)\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028895
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Vector.tabulate(n)((_,\
    \ _) => 0)\n        var m = 1\n        a.map(_ + 1).foreach { n =>\n         \
    \   a.map(_ + 2).foreach { m =>\n                if((n + m + 3) % 3 == 0)\n  \
    \                  println(a._1, a._2, a._3)\n            }\n        }\n     \
    \   a.map(_ + 1).foreach { n =>\n            a.map(_ + 2).foreach { m =>\n   \
    \             if((n + m + 3) % 3 == 0)\n                    println(a._1, a._2,\
    \ a._3)\n            }\n        }\n        a.map(_ + 1).foreach { n =>\n     \
    \       a.map(_ + 2).foreach { m =>\n                if((n + m + 3) % 3 == 0)\n\
    \                    println(a._1, a._2, a._3)\n            }\n        }\n   \
    \     a.map(_ + 1).foreach { n =>\n            a.map(_ + 2).foreach { m =>\n \
    \               if((n + m + 3) % 3 == 0)\n                    println(a._1, a._2,\
    \ a._3)\n            }\n        }\n        a.map(_ + 1).foreach { n =>\n     \
    \       a.map(_ + 2).foreach { m =>\n                if((n + m + 3) % 3 == 0)\n\
    \                    println(a._1, a._2, a._3)\n            }\n        }\n   \
    \     a.map(_ + 1).foreach { n =>\n            a.map(_ + 2).foreach { m =>\n \
    \               if((n + m + 3) % 3 == 0)\n                    println(a._1, a._2,\
    \ a._3)\n            }\n        }\n        return a.sum.toLong\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmtlxrtmr.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = Vector.tabulate(n)((_, _) => \e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m      \
    \                          ^\e[0m\n\e[31m   |\e[0m                           \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                                Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpmtlxrtmr.scala:15:42\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m\
    \ \e[36ma\e[0m = Vector.tabulate(n)((_, _) => \e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                                   ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                           Wrong number of parameters, expected: 1\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpmtlxrtmr.scala:20:30 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                    println(a._1, a._2, a._3)\n\e[31m\e\
    [31m   |\e[0m                            ^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  value _1 is not a member of Vector[Int]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpmtlxrtmr.scala:20:36 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                    println(a._1, a._2, a._3)\n\e[31m\e[31m\
    \   |\e[0m                                  ^^^^\e[0m\n\e[31m   |\e[0m       \
    \                          value _2 is not a member of Vector[Int]\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpmtlxrtmr.scala:20:42 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                    println(a._1, a._2, a._3)\n\e[31m\e\
    [31m   |\e[0m                                        ^^^^\e[0m\n\e[31m   |\e[0m\
    \                                 value _3 is not a member of Vector[Int]\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpmtlxrtmr.scala:26:30 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                    println(a._1, a._2, a._3)\n\e[31m\e\
    [31m   |\e[0m                            ^^^^\e[0m\n\e[31m   |\e[0m          \
    \                  value _1 is not a member of Vector[Int]\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpm"
  stdout: ''
  timestamp: 1660028900
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Long](n)\n\
    \        val sum = 0\n        for (i <- 0 until a.size) {\n            a(i) =\
    \ i * i - i + 1\n            sum += a(i)\n        }\n        sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n  \
    \  assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n\
    \    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2ennng20.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2ennng20.scala:19:16\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            sum += a(i)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean sum.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660028896
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new mutable.MutableList[Int](n)\n\
    \        var c = 0\n        val b = n - 1\n        while (b >= 0) {\n        \
    \    val d = (n * b) - 3\n            a(c) = d\n            c += 1\n         \
    \   b -= 1\n        }\n        var triples = 0\n        for (a <- a.view.zipWithIndex)\
    \ {\n            triples += a._1 * a._2 * a._3\n        }\n        triples\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1upzq6_p.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.MutableList[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m              \
    \      ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1upzq6_p.scala:22:14\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            b -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean b.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660028897
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = new Array[Int](n)\n\
    \        var i = 0\n        var j = 0\n        var k = 0\n        var numTriples\
    \ = 0\n\n        while(i < a.length && j < a.length && k < a.length) {\n     \
    \       if(i == j && j == k) {\n                a(i) = a(i) + a(i) + a(i)\n  \
    \              numTriples += 1\n            }\n            else if(i == j) {\n\
    \                a(i) = a(i) + a(i)\n                numTriples += 1\n       \
    \     }\n            else if(i == k) {\n                a(i) = a(i) + a(i)\n \
    \               numTriples += 1\n            }\n            else if(i == j) {\n\
    \                a(i) = a(i) + a(i)\n                numTriples += 1\n       \
    \     }\n            else if(i == k) {\n                a(i) = a(i) + a(i)\n \
    \               numTriples += 1\n            }\n            else if(i == j &&\
    \ j != k) {\n                a(i) = a(i) + a(i) + a(i)\n                numTriples\
    \ += 1\n            }\n            else {\n                a(i) = a(i) + a(i)\
    \ + a(i)\n                numTriples += 1\n            }\n            i += 1\n\
    \            j += 1\n            k += 1\n        }\n        \n        if(numTriples\
    \ == 0) {\n            for(i <- 0 until a.length) {\n                a(i) = a(i)\
    \ + a(i)\n                numTriples += 1\n            }\n        }\n        return\
    \ numTriples\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe7o25jx2.scala:15:31\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m\
    \                               ^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                              \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028897
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n      val a = List.fill(n.toInt)(0l)\n\
    \      a(0) = 1l\n      for(i <- 1 to n.toInt) {\n        for(j <- i to (if (i\
    \ > 0) n else 1l)) {\n          for(k <- i to (if (i > 0) n else 1l)) {\n    \
    \        if(a(i) + a(j) + a(k)%3 == 0) \n              return a(i) + a(j) + a(k)\n\
    \          }\n        }\n      }\n      return 0l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6vf67u7w.scala:16:6 -------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m      a(\e[31m0\e[0m) = \e[31m1l\e[0m\n\e[31m\e[31m \
    \  |\e[0m      ^\e[0m\n\e[31m   |\e[0m    value update is not a member of List[Long]\
    \ - did you mean a.updated?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6vf67u7w.scala:18:34\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(j <- i\
    \ to (\e[33mif\e[0m (i > \e[31m0\e[0m) n \e[33melse\e[0m \e[31m1l\e[0m)) {\n\e\
    [31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m   |\e[0m \
    \                                 Found:    (n : Long)\n\e[31m   |\e[0m      \
    \                            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp6vf67u7w.scala:18:41 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(j <- i to (\e[33mif\e[0m (i > \e[31m0\e\
    [0m) n \e[33melse\e[0m \e[31m1l\e[0m)) {\n\e[31m\e[31m   |\e[0m              \
    \                           ^^\e[0m\n\e[31m   |\e[0m                         \
    \                Found:    (\e[31m1L\e[0m : Long)\n\e[31m   |\e[0m           \
    \                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp6vf67u7w.scala:19:36 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m          \e[33mfor\e[0m(k <- i to (\e[33mif\e[0m (i\
    \ > \e[31m0\e[0m) n \e[33melse\e[0m \e[31m1l\e[0m)) {\n\e[31m\e[31m   |\e[0m \
    \                                   ^\e[0m\n\e[31m   |\e[0m                  \
    \                  Found:    (n : Long)\n\e[31m   |\e[0m                     \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp6vf67u7w.scala:19:43 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m          \e[33mfor\e[0m(k <- i to (\e[33mif\e[0m (i > \e[31m0\e[0m) n\
    \ \e[33melse\e[0m \e[31m1l\e[0m)) {\n\e[31m\e[31m   |\e[0m                   \
    \                        ^^\e[0m\n\e[31m   |\e[0m                  "
  stdout: ''
  timestamp: 1660028898
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        val\
    \ a = Array.ofDim[Long](n)\n        for(i<- 1 to n-1){\n            for(j<- i+1\
    \ to n){\n                for(k<- j+1 to n){\n                    if(i<j && i<k\
    \ && j<k){\n                        count += (a(i)+a(j)+a(k))\n              \
    \      }\n                }\n            }\n        }\n        count\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1qp69p18.scala:16:34\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1qp69p18.scala:17:21\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i<- \e\
    [31m1\e[0m to n-\e[31m1\e[0m){\n\e[31m\e[31m   |\e[0m                     ^^^\e\
    [0m\n\e[31m   |\e[0m                     Found:    Long\n\e[31m   |\e[0m     \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp1qp69p18.scala:18:27 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m            \e[33mfor\e[0m(j<- i+\e[31m1\e[0m to n){\n\e[31m\e[31m   |\e\
    [0m                           ^\e[0m\n\e[31m   |\e[0m                        \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                           Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1qp69p18.scala:19:31\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mfor\e[0m(k<-\
    \ j+\e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                               ^\e\
    [0m\n\e[31m   |\e[0m                               Found:    (n : Long)\n\e[31m\
    \   |\e[0m                               Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp1qp69p18.scala:21:30 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                        count += (a(i)+a(j)+a(k))\n\e\
    [31m\e[31m   |\e[0m                        ^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \              value += is not a member of Int - did you mean Int.!=?\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028899
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var triples = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i<- 1 to n) {\n            var maxValue = 0\n            for (j<-\
    \ i to n) {\n                var value = j * (j + 1) - 1\n                if (value\
    \ == maxValue) {\n                    triples += 1\n                }\n      \
    \          if (value != maxValue) {\n                    break\n             \
    \   }\n            }\n        }\n        triples.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0o0tm3qv.scala:15:22 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mtriples\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp0o0tm3qv.scala:16:22 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0o0tm3qv.scala:18:26\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m (j<-\
    \ i to n) {\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e\
    [0m                          Found:    (n : Long)\n\e[31m   |\e[0m           \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp0o0tm3qv.scala:24:20 ------------------------\e[0m\e[0m\n\e[31m24 |\e\
    [0m                    break\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: break\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028899
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val m = ListBuffer.empty[Long]\n\
    \        for (i <- 1 to n){\n            val m = i*i*i\n            m += i * i\
    \ // +1 is for symmetry\n            m += i + 1 // +1 is for symmetry\n      \
    \      m += i + 1\n            m += i + 1\n            m += i + 2\n          \
    \  m += i + 3\n            if (m%3 == 0) m.push(i)\n        }\n        m match\
    \ {\n            case x if x.isEmpty => 1l\n            case x => x.size\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvwa53dy0.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpvwa53dy0.scala:18:14 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m            m += i * i \e[34m// +1 is for symmetry\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean m.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvwa53dy0.scala:19:14\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            m += i + \e[31m1\e\
    [0m \e[34m// +1 is for symmetry\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ m.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvwa53dy0.scala:20:14 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            m += i + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean m.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvwa53dy0.scala:21:14\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            m += i + \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean m.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpvwa53dy0.scala:22:14 ------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m            m += i + \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ m.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvwa53dy0.scala:23:14 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            m += i + \e[31m3\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member\
    \ of Int - did you mean m.!=?\n\e[31m\e[31m-- [E008] Not Found "
  stdout: ''
  timestamp: 1660028902
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var list : mutable.MutableList[Long]\
    \ = mutable.MutableList.empty\n        var i = 0\n        var j = 0\n        var\
    \ k = 0\n        while(i < n && j < n && k < n) {\n            list = list :+\
    \ i*i - i + j\n            i = i + 1\n            j = j + 1\n            k = k\
    \ + 1\n        }\n        var count = 0\n        while(i < n && j < n && k < n)\
    \ {\n            if(list(i) > list(j) && list(i) > list(k)) {\n              \
    \  count = count + 1\n            }\n            i = i + 1\n            j = j\
    \ + 1\n            k = k + 1\n        }\n        count\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfc7zs5pe.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36mlist\e[0m : mutable.MutableList[\e\
    [35mLong\e[0m] = mutable.MutableList.empty\n\e[31m\e[31m   |\e[0m            \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfc7zs5pe.scala:15:47\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36mlist\e[0m : mutable.MutableList[\e[35mLong\e[0m] = mutable.MutableList.empty\n\
    \e[31m\e[31m   |\e[0m                                               ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                               Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028896
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        // O(n), O(n)\n        val\
    \ list = collection.mutable.ListBuffer.empty[Long]\n        for (i <- 1 until\
    \ n) list += (i * i - i + 1)\n        list.foldRight(0)((n, acc) => acc + 3 *\
    \ n % acc)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqkv9k10j.scala:17:26\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m until n) list += (i * i - i + \e[31m1\e[0m)\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqkv9k10j.scala:18:38\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        list.foldRight(\e[31m0\e\
    [0m)((\e[36mn\e[0m, \e[36macc\e[0m) => acc + \e[31m3\e[0m * n % acc)\n\e[31m\e\
    [31m   |\e[0m                                      ^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                      Found:    Long\n\e[31m   |\e\
    [0m                                      Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028901
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        def getMax(n: Long, sum :\
    \ Long, current : Long) : Long = {\n            if (sum > n) sum\n           \
    \ else getMax(n, sum, current + sum)\n        }\n        val a = List.range(1,\
    \ n+1)\n        a.filter(a => a.sum % 3 == 0).map(a => (a(0), a(1), a(2))).count(_._1\
    \ + _._2 + _._3 == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpq0omwk4_.scala:19:34 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = List.range(\e[31m1\e\
    [0m, n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                                  ^\e\
    [0m\n\e[31m   |\e[0m                                No implicit Ordering defined\
    \ for AnyVal.\n1 error found\n"
  stdout: ''
  timestamp: 1660028901
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a = Vector.fill(n)(0l).asInstanceOf[mutable.WrappedArray[Long]]\n\
    \        for (i <- 1 to n) {\n            a(i) = i * i - i + 1\n        }\n  \
    \      a.zipWithIndex.filter(_._2 % 3 == 0).size\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8bh81hjb.scala:15:48 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m = Vector.fill(n)(\e\
    [31m0l\e[0m).asInstanceOf[mutable.WrappedArray[\e[35mLong\e[0m]]\n\e[31m\e[31m\
    \   |\e[0m                                                ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                                Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8bh81hjb.scala:15:28\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36ma\e\
    [0m = Vector.fill(n)(\e[31m0l\e[0m).asInstanceOf[mutable.WrappedArray[\e[35mLong\e\
    [0m]]\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e[0m\
    \                            Found:    (n : Long)\n\e[31m   |\e[0m           \
    \                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp8bh81hjb.scala:16:23 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e\
    [0m                       ^\e[0m\n\e[31m   |\e[0m                       Found:\
    \    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660028903
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.ofDim[Long](n)\n\
    \        var sum = 0\n        for (i <- 1 to n) {\n            a(i) = i * i -\
    \ i + 1\n            sum += a(i)\n        }\n        if (sum % 3 == 0) 1 else\
    \ 0\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg8ag34sy.scala:15:34\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.ofDim[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m                 \
    \                 ^\e[0m\n\e[31m   |\e[0m                                  Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                  Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpg8ag34sy.scala:17:23\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpg8ag34sy.scala:19:16 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m            sum += a(i)\n\e[31m\e[31m   |\e[0m            ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            value += is not a member of Int - did you mean Int.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660028904
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new Array[Long](n)\n\
    \        val inc = new mutable.HashMap[Long, Int]()\n        val res = new mutable.HashMap[Long,\
    \ Int]()\n        val max = new mutable.HashMap[Long, Long]()\n        var i =\
    \ 1;\n        while (i <= n) {\n            a(i) = i * i - i + 1\n           \
    \ inc.put(a(i), inc.getOrElse(a(i), 0) + 1)\n            i += 1\n        }\n \
    \       inc.foreach {\n            case (k, v) =>\n            if (v > 0) max.put(k,\
    \ Math.max(v*v - v + k, v))\n        }\n        if (max.isEmpty) 0\n        else\
    \ {\n            val res = 0\n            max.foreach {\n                case\
    \ (k, v) =>\n                res += Math.max(v, v*v - v + k)\n            }\n\
    \            res\n        }\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxfothvby.scala:15:32\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxfothvby.scala:16:22\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36minc\e[0m = \e[33mnew\e[0m mutable.HashMap[\e[35mLong\e[0m, \e[35mInt\e[0m]()\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpxfothvby.scala:17:22 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mres\e[0m = \e[33mnew\e[0m mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpxfothvby.scala:18:22 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mmax\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660028903
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var ans = 0\n        var\
    \ triplesList = new mutable.ListBuffer[Int]\n        for ( i <- 1 to n-1) {\n\
    \            if (triplesList.contains(i)) {\n                triplesList += i\n\
    \                continue\n            }\n            for ( j <- i to n -1) {\n\
    \                if (triplesList.contains(j)) {\n                    triplesList\
    \ += j\n                    continue\n                }\n                for (k\
    \ <- i to j -1) {\n                    if (triplesList.contains(k)) {\n      \
    \                  triplesList += k\n                        continue\n      \
    \              }\n                    ans = triplesList.foldLeft(0)((a,v) => a\
    \ + v) % 3\n                    if (ans == 0) return ans\n                }\n\
    \            }\n        }\n        return ans\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwbq_4gde.scala:16:30 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mtriplesList\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                \
    \              ^^^^^^^\e[0m\n\e[31m   |\e[0m                              Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwbq_4gde.scala:17:24\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m ( i <-\
    \ \e[31m1\e[0m to n-\e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                   \
    \     ^^^\e[0m\n\e[31m   |\e[0m                        Found:    Long\n\e[31m\
    \   |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpwbq_4gde.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                continue\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found: continue\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwbq_4gde.scala:22:28\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m            \e[33mfor\e[0m (\
    \ j <- i to n -\e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                        \
    \    ^^^^\e[0m\n\e[31m   |\e[0m                            Found:    Long\n\e\
    [31m   |\e[0m                            Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpwbq_4gde.scala:25:20 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                    continue\n\e[31m\e[31m   |\e[0m \
    \                   ^^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found:\
    \ continue\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwbq_4gde.scala:30:24\
    \ ------------------------\e[0m\e[0m\n\e[31m30 |\e[0m                        continue\n\
    \e[31m\e"
  stdout: ''
  timestamp: 1660028905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ArrayBuffer.fill(n)(0l)\n\
    \        a(0) = 3\n        a(1) = -3\n        for(i<-1 to n-1 by -1){\n      \
    \      for(j<-1 to n-1 by -1){\n                for(k<-1 to n-1 by -1){\n    \
    \                if(i>=j && i>=k && j>=k){\n                        if(a(i) +\
    \ a(j) + a(k) == 0){\n                            a(i) = a(i) + a(j) + a(k) -\
    \ 1\n                        }\n                    }\n                }\n   \
    \         }\n        }\n        val result = a.sum\n        return result.toLong\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6grmv_8b.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp6grmv_8b.scala:18:20 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i<-\e[31m1\e[0m to n-\e[31m1\e[0m by\
    \ -\e[31m1\e[0m){\n\e[31m\e[31m   |\e[0m                    ^^^\e[0m\n\e[31m \
    \  |\e[0m                    Found:    Long\n\e[31m   |\e[0m                 \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6grmv_8b.scala:19:24\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m(j<-\e\
    [31m1\e[0m to n-\e[31m1\e[0m by -\e[31m1\e[0m){\n\e[31m\e[31m   |\e[0m       \
    \                 ^^^\e[0m\n\e[31m   |\e[0m                        Found:    Long\n\
    \e[31m   |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp6grmv_8b.scala:20:28 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mfor\e[0m(k<-\e[31m1\e[0m to n-\e\
    [31m1\e[0m by -\e[31m1\e[0m){\n\e[31m\e[31m   |\e[0m                         \
    \   ^^^\e[0m\n\e[31m   |\e[0m                            Found:    Long\n\e[31m\
    \   |\e[0m                            Required: Int\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n4 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028904
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n.toInt)((n+1l).toInt)\n\
    \        a(0) -= 1\n        var sum = 0\n        for (i <- 0 until a.size) {\n\
    \            val j = i\n            var k = i\n            while (a(k) > 0 &&\
    \ a(j) > 0 && a(k) > a(j)) {\n                k += 1\n            }\n        \
    \    sum += k - a(i)\n            val kk = k\n            while (a(kk) > 0 &&\
    \ a(kk) > a(j)) {\n                kk += 1\n            }\n            a(i) =\
    \ kk\n            a(j) = kk\n            val kj = k\n            while (a(kj)\
    \ > 0 && a(kj) > a(k)) {\n                kj += 1\n            }\n           \
    \ a(i) = kj\n        }\n        val sum2 = sum.toLong\n        if (sum2 < 3l)\
    \ sum2 else sum2\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpf_r5_p9o.scala:27:19 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                kk += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^^\e[0m\n\e[31m   |\e[0m                value += is not\
    \ a member of Int - did you mean kk.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpf_r5_p9o.scala:33:19 ------------------------\e[0m\e[0m\n\e[31m33 |\e\
    [0m                kj += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^^\e\
    [0m\n\e[31m   |\e[0m                value += is not a member of Int - did you\
    \ mean kj.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660028905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = List.range(1, n).toArray\n\
    \        var result : Long = 0\n        for (i1 <- 0 until a.length-1 )\n    \
    \    for (i2 <- 0 until a.length-1 )\n        for (j1 <- 0 until a.length-1 )\n\
    \        {\n            result += (if(a(i1)>a(i2)) 1 else 0)\n            result\
    \ += if(a(i1)>a(j1)) 1 else 0\n            result += if(a(i2)>a(j1)) 1 else 0\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n\
    \    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpuqfnpai9.scala:22:22 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            result += \e[33mif\e[0m(a(i1)>a(j1)) \e[31m1\e\
    [0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m                      ^^\e\
    [0m\n\e[31m   |\e[0m                      expression expected but \e[31mif\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpuqfnpai9.scala:23:22\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            result +=\
    \ \e[33mif\e[0m(a(i2)>a(j1)) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m                      ^^\e[0m\n\e[31m   |\e[0m                  \
    \    expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ Error: /tmp/tmpuqfnpai9.scala:15:32 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = List.range(\e[31m1\e\
    [0m, n).toArray\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\
    \e[31m   |\e[0m                                No implicit Ordering defined for\
    \ AnyVal.\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuqfnpai9.scala:22:19\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            result += \e\
    [33mif\e[0m(a(i1)>a(j1)) \e[31m1\e[0m \e[33melse\e[0m \e[31m0\e[0m\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not\
    \ a member of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpuqfnpai9.scala:23:19 ------------------------\e[0m\e[0m\n\e[31m23 |\e\
    [0m            result += \e[33mif\e[0m(a(i2)>a(j1)) \e[31m1\e[0m \e[33melse\e\
    [0m \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            value += is not a member of Long - did you mean Long.!=?\n5 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660028905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array[Long](n)\n\
    \        for (i<- 1 to n) {\n            a(i) = i*i-1+i+1\n        }\n       \
    \ var i = 0\n        var j = 0\n        var k = 0\n        var sum = 0\n     \
    \   while (i < n) {\n            while (j < n && k<n) {\n                if (a(i)\
    \ > a(j)) {\n                    j = j+1\n                }\n                else\
    \ {\n                    k = 0\n                }\n            }\n           \
    \ sum = sum + a(i)\n            i = i+1\n        }\n        sum % 3 == 0\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) ==\
    \ (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptzohk3ln.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmptzohk3ln.scala:32:18 --------------------\e[0m\e[0m\n\e[31m32\
    \ |\e[0m            sum = sum + a(i)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Found:    Long\n\e[31m   |\e[0m        \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmptzohk3ln.scala:35:8 ---------------------\e[0m\e[0m\n\e[31m35\
    \ |\e[0m        sum % \e[31m3\e[0m == \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m    \
    \    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Boolean\n\e[31m   |\e\
    [0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new mutable.ArrayList[Long](n)\n\
    \        for ( i <- 0 until n ) {\n            a(i) = i * i - i + 1\n        }\n\
    \        val sum = (a: collection.mutable.Buffer[Long])(0 until a.size).foldLeft(0l)(_\
    \ + _)\n        val result = a.toList.zipWithIndex.filter(_._1 + _._2 < 3L).map(_._1.toLong\
    \ + _._2.toLong).foldLeft((0l, 0l))((_,i) => {\n            val v = (i + 2L) *\
    \ i - 2 * i + 1\n            if (v == 3L) (v,1L) else (i,v)\n        })._1\n \
    \       sum - result\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcbl5nmj7.scala:15:20 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ mutable.ArrayList[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m               \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcbl5nmj7.scala:16:27\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m ( i <-\
    \ \e[31m0\e[0m until n ) {\n\e[31m\e[31m   |\e[0m                           ^\e\
    [0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\e[31m  \
    \ |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpcbl5nmj7.scala:19:55 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36msum\e[0m = (a: collection.mutable.Buffer[\e\
    [35mLong\e[0m])(\e[31m0\e[0m until a.size).foldLeft(\e[31m0l\e[0m)(_ + _)\n\e\
    [31m\e[31m   |\e[0m                                                       ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                       Found:\
    \    Range\n\e[31m   |\e[0m                                                  \
    \     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = mutable.ListBuffer[Long]()\n\
    \        for (i<-0 until n) {\n            a += i\n        }\n        var i =\
    \ 0\n        var j = 0\n        var k = 0\n        var triple = 0\n        var\
    \ triplesCount = 0\n        while (i < a.length) {\n            triple = a(i)\
    \ + a(j) + a(k)\n            if (triple % 3 == 0) {\n                triplesCount\
    \ += 1\n            }\n            if (k > 0) {\n                k -= 1\n    \
    \        } else {\n                j += 1\n                if (j > a.length -\
    \ 1) {\n                    i += 1\n                    j = 0\n              \
    \  }\n            }\n        }\n        (triplesCount, a(0), a(1))\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwn1fznqe.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpwn1fznqe.scala:16:24 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i<-\e[31m0\e[0m until n) {\n\e[31m\e\
    [31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m                 \
    \       Found:    (n : Long)\n\e[31m   |\e[0m                        Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwn1fznqe.scala:39:8\
    \ ---------------------\e[0m\e[0m\n\e[31m39 |\e[0m        (triplesCount, a(\e\
    [31m0\e[0m), a(\e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    (Int, Nothing, Nothing)\n\e[31m   |\e[0m\
    \        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028907
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array(n, 3L) \n \
    \       var i = 0\n        var j = 0\n        var k = 0\n        var triples =\
    \ 1\n        while(i < n && j < n && k < n) {\n            if (i == j && j ==\
    \ k) {\n                triples += 1\n            }\n            else if (j >\
    \ i && j > k) {\n                a(i) = a(i) + a(j)\n                a(i) = a(i)\
    \ + a(k)\n                a(i) = a(i) - a(k)\n            }\n            else\
    \ if (k > i && k > j) {\n                a(j) = a(j) + a(k)\n                a(j)\
    \ = a(j) - a(i)\n                a(j) = a(j) - a(k)\n            }\n         \
    \   else if (j > i && k < j) {\n                a(i) = a(i) + a(k)\n         \
    \       a(i) = a(i) - a(i)\n                a(i) = a(i) - a(k)\n            }\n\
    \            else if (k < i && i < k) {\n                a(j) = a(j) + a(k)\n\
    \                a(j) = a(j) - a(i)\n                a(j) = a(i) - a(j)\n    \
    \        }\n            else if (k < i && j > i) {\n                a(j) = a(j)\
    \ + a(k)\n                a(j) = a(j) - a(i)\n                a(j) = a(i) - a(k)\n\
    \            }\n            else if (i < j && j < k) {\n                a(i) =\
    \ a(i) + a(k)\n                a(i) = a(i) - a(i)\n                a(i) = a(i)\
    \ - a(k)\n            }\n            else if (k < j && i < j) {\n            \
    \    a(j) = a(j) + a(k)\n                a(j) = a(j) - a(i)\n                a(j)\
    \ = a(i) - a(k)\n            }\n            else if (i < j && k > j) {\n     \
    \           a(j) = a(j) + a(k)\n                a(j) = a(j) - a(i)\n         \
    \       a(j) = a(i) - a(k)\n            }\n            else if (j < k) {\n   \
    \             a(i) = a(i) + a(k)\n                a(i) = a(i) - a(i)\n       \
    \         a(i) = a(i) - a(k)\n            }\n            i += 1\n            j\
    \ += 1\n            k += 1\n        }\n        return a(n) \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxg3gu3pk.scala:73:17\
    \ --------------------\e[0m\e[0m\n\e[31m73 |\e[0m        \e[33mreturn\e[0m a(n)\
    \ \n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m            \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                 Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660028906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = new mutable.Array[Int](n)\n\
    \        a.init {\n            if (_ < 0 || _ >= n) throw new IndexOutOfBoundsException\n\
    \            (_ + 1) = 2 * _ - 2\n        }\n        var sum = 0\n        for\
    \ (i1 <- 0 until n) {\n            for (i2 <- 0 until i) {\n                for\
    \ (i3 <- 0 until i) {\n                    if (!(i1 <= i2 || i2 <= i3 || i1 <=\
    \ i3)) {\n                        val tmp = a(i1) + a(i2) + a(i3)\n          \
    \              if (tmp > sum) sum = tmp\n                    }\n             \
    \   }\n            }\n        }\n        sum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmps4ob488r.scala:18:20 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            (_ + \e[31m1\e[0m) = \e[31m2\e[0m * _ - \e\
    [31m2\e[0m\n\e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m \
    \                   end of statement expected but '=' found\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmps4ob488r.scala:15:20 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m mutable.Array[\e\
    [35mInt\e[0m](n)\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmps4ob488r.scala:21:27 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mfor\e[0m (i1 <- \e[31m0\e[0m until n) {\n\
    \e[31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m      \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps4ob488r.scala:22:31\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            \e[33mfor\e[0m\
    \ (i2 <- \e[31m0\e[0m until i) {\n\e[31m\e[31m   |\e[0m                      \
    \         ^\e[0m\n\e[31m   |\e[0m                               Not found: i\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps4ob488r.scala:23:35\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m                \e[33mfor\e\
    [0m (i3 <- \e[31m0\e[0m until i) {\n\e[31m\e[31m   |\e[0m                    \
    \               ^\e[0m\n\e[31m   |\e[0m                                   Not\
    \ found: i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660028906
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        val\
    \ a = mutable.ArrayBuilder.makeBuilder(3)\n        for (i <- 0 until n) {\n  \
    \          val triple = (a(i), a(i+1), a(i+2)) match {\n                case (i1,\
    \ i2, i3) if (i1 + i2 + i3) % 3 == 0 => (i1, i2, i3)\n                case _ =>\n\
    \            }\n            count += 1\n        }\n        a.result\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptogch0qh.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuilder.makeBuilder(\e\
    [31m3\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmptogch0qh.scala:17:26 --------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m0\e[0m until n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptogch0qh.scala:19:41\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                \e[33mcase\e\
    [0m (i1, i2, i3) \e[33mif\e[0m (i1 + i2 + i3) % \e[31m3\e[0m == \e[31m0\e[0m =>\
    \ (i1, i2, i3)\n\e[31m\e[31m   |\e[0m                                      ^^^^\e\
    [0m\n\e[31m   |\e[0mvalue + is not a member of Nothing, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Byte.byte2double\n\
    \e[31m   |\e[0m  import Byte.byte2float\n\e[31m   |\e[0m  import Byte.byte2int\n\
    \e[31m   |\e[0m  import Byte.byte2long\n\e[31m   |\e[0m  import Byte.byte2short\n\
    \e[31m   |\e[0m  import Char.char2double\n\e[31m   |\e[0m  import Char.char2float\n\
    \e[31m   |\e[0m  import Char.char2int\n\e[31m   |\e[0m  import Char.char2long\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m\n3 errors found\n"
  stdout: ''
  timestamp: 1660028907
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer(3L).withMutable\
    \ { mutable.ArrayBuffer(0L) }\n        for (i<- 1 to n)\n            a(i) = i\
    \ * i - i + 1\n        a.filter {\n            case(a,b,c) => b+c == a*a + a\n\
    \        }.length\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8m25itn8.scala:15:57 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = scala.collection.mutable.ArrayBuffer(\e\
    [31m3L\e[0m).withMutable { mutable.ArrayBuffer(\e[31m0L\e[0m) }\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue withMutable is not a member of scala.collection.mutable.ArrayBuffer[Long]\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8m25itn8.scala:15:71 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = scala.collection.mutable.ArrayBuffer(\e\
    [31m3L\e[0m).withMutable { mutable.ArrayBuffer(\e[31m0L\e[0m) }\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m                                           \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp8m25itn8.scala:16:22 --------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        \e[33mfor\e[0m (i<- \e[31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m\
    \                      ^\e[0m\n\e[31m   |\e[0m                      Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660028907
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = Array.fill(n)(0).filter(_.isEven)\n\
    \        val d = a.zip(a).zip(a).count{case ((a1, a2), (a3, a4)) => a1 == a2 &&\
    \ a2 == a3 && a3 == a4}\n        if (d == 3l)\n            1l\n        else\n\
    \            d\n    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8f_ad7k6.scala:15:27\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = Array.fill(n)(\e[31m0\e[0m).filter(_.isEven)\n\e[31m\e[31m   |\e[0m    \
    \                       ^\e[0m\n\e[31m   |\e[0m                           Found:\
    \    (n : Long)\n\e[31m   |\e[0m                           Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8f_ad7k6.scala:15:42 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = Array.fill(n)(\e\
    [31m0\e[0m).filter(_.isEven)\n\e[31m\e[31m   |\e[0m                          \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m                                \
    \     value isEven is not a member of Int\n2 errors found\n"
  stdout: ''
  timestamp: 1660028907
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var count = 0\n        var\
    \ i = 0\n        var j = 0\n        var k = 0\n        val a = new Array[Long](n)\n\
    \        while(i < n) {\n            val j = 0\n            while(j < i) {\n \
    \               val k = i\n                while(k >= j && a(k) > a(k + 1) + a(k\
    \ + 2))\n                    k -= 1\n                count += 1\n            \
    \    a(i) = a(i) * 3 - a(i + 1) + a(k + 2)\n                j -= 1\n         \
    \   }\n            i += 1\n        }\n        count + 1\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n    assert(getMaxTriples((6l))\
    \ == (4l));\n    assert(getMaxTriples((10l)) == (36l));\n    assert(getMaxTriples((100l))\
    \ == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4dj3e32l.scala:19:32\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                ^\e[0m\n\e[31m   |\e[0m                   \
    \             Found:    (n : Long)\n\e[31m   |\e[0m                          \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4dj3e32l.scala:25:22\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m                    k -=\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                    ^^^^\e[0m\n\e[31m   |\e\
    [0m                    value -= is not a member of Int - did you mean k.!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp4dj3e32l.scala:28:18 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m                j -= \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value -= is not a\
    \ member of Int - did you mean j.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660028907
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        val a = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n)\n            a += i * i - i + 1\n        a\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l)) == (1l));\n\
    \    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l)) ==\
    \ (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqcayresp.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m\
    \   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m       \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpqcayresp.scala:18:8 ---------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        a\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m      \
    \  Found:    (a : scala.collection.mutable.ArrayBuffer[Long])\n\e[31m   |\e[0m\
    \        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660028908
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // You are given a positive integer n. You have to create an integer\
    \ list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]\
    \ = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of\
    \ a where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n   \
    \ // Example :\n    // >>> getMaxTriples((5l))\n    // (1l)\n    // Explanation:\
    \ \n    // a = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n\
    \    def getMaxTriples(n : Long) : Long = {\n        var a : Array[Int] = Array()\n\
    \        for(i <- 0 until n)\n            a += i\n        \n        val nRes =\
    \ a.filter(_ % 3 == 0).length\n        val maxRes = a.filter(_ % 3 == 0).max\n\
    \        \n        a.filter(_ % 3 != 0).map(x => if(x > maxRes) x else maxRes)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(getMaxTriples((5l))\
    \ == (1l));\n    assert(getMaxTriples((6l)) == (4l));\n    assert(getMaxTriples((10l))\
    \ == (36l));\n    assert(getMaxTriples((100l)) == (53361l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr8yo5scf.scala:16:25\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n)\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpr8yo5scf.scala:17:14 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            a += i\n\e[31m\e[31m   |\e[0m            ^^^^\e\
    [0m\n\e[31m   |\e[0m    value += is not a member of Array[Int] - did you mean\
    \ Array[Int].!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr8yo5scf.scala:22:8\
    \ ---------------------\e[0m\e[0m\n\e[31m22 |\e[0m        a.filter(_ % \e[31m3\e\
    [0m != \e[31m0\e[0m).map(\e[36mx\e[0m => \e[33mif\e[0m(x > maxRes) x \e[33melse\e\
    [0m maxRes)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    Array[Int]\n\e[31m   |\e[0m        Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660028908

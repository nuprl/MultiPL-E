language: scala
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val n = a / b\n        val r = a % b\n        if (a > 0) greatestCommonDivisor(b,\
    \ r)\n        else n\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmpxf5zc797.scala:10)\n\
    \tat Problem$.main(tmpxf5zc797.scala:16)\n\tat Problem.main(tmpxf5zc797.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0)\n            a else greatestCommonDivisor(b, a % b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        while (a > 0) {\n            val r = b % a\n            b /= a\n\
    \            a = r\n        }\n        return b\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9z2dkc6a.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            b /= a\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean b.!=?\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp9z2dkc6a.scala:13:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m            a = r\n\e\
    [31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      val bigA = BigInt(a)\n      val bigB = BigInt(b)\n      val bigGCD\
    \ = BigInt(0)\n      while(bigB != 0) {\n        val remain = bigA % bigB\n  \
    \      bigGCD = (bigGCD * bigB) + remain\n        bigA = remain\n        bigB\
    \ = BigInt(0)\n      }\n      bigGCD\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpfuz8j0x7.scala:15:15 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        bigGCD = (bigGCD * bigB) + remain\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \    Reassignment to val bigGCD\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpfuz8j0x7.scala:16:13 -----------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m        bigA = remain\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m        Reassignment to val bigA\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpfuz8j0x7.scala:17:13 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        bigB = BigInt(\e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Reassignment to val bigB\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpfuz8j0x7.scala:19:6\
    \ ---------------------\e[0m\e[0m\n\e[31m19 |\e[0m      bigGCD\n\e[31m\e[31m \
    \  |\e[0m      ^^^^^^\e[0m\n\e[31m   |\e[0m      Found:    (bigGCD : BigInt)\n\
    \e[31m   |\e[0m      Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val div = b / a\n        val rem = (b - a * div) % div\n      \
    \  div + rem\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwb8cs8wb.scala:15)\n\tat Problem.main(tmpwb8cs8wb.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0) a\n        else if (b == 0) b\n        else greatestCommonDivisor(b,\
    \ a % b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpucokg4g9.scala:15)\n\tat Problem.main(tmpucokg4g9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(b == 0) {\n            return a\n        }\n        else {\n\
    \            // Find the least common multiple of a and b using Euclid's algorithm\n\
    \            // >>> greatestCommonDivisor((3l), (5l))\n            // 3\n    \
    \        // >>> greatestCommonDivisor((25l), (15l))\n            // 5\n      \
    \      // >>> greatestCommonDivisor((3l), (25l))\n            // 5\n         \
    \   // >>> greatestCommonDivisor((3l), (15l))\n            // 5\n            //\
    \ >>> greatestCommonDivisor((3l), (5l))\n            // 3\n            def gcd(a\
    \ : Long, b : Long) : Long = if (b == 0) a else gcd(b, a % b)\n            val\
    \ gcd = gcd(a, b)\n            gcd * (gcd / b + 1)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp79bri5tf.scala:26:16 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mval\e[0m \e[36mgcd\e[0m = gcd(a, b)\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mgcd\
    \ is already defined as \e[33mmethod\e[0m \e[35mgcd\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp79bri5tf.scala:27:16\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            gcd * (gcd /\
    \ b + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue * is not a member of (Long, Long) => Long, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e\
    [0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import\
    \ math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp79bri5tf.scala:27:23 ------------------------\e[0m\e\
    [0m\n\e[31m27 |\e[0m            gcd * (gcd / b + \e[31m1\e[0m)\n\e[31m\e[31m \
    \  |\e[0m                   ^^^^^\e[0m\n\e[31m   |\e[0mvalue / is not a member\
    \ of (Long, Long) => Long, but could be made available as an extension method.\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might make progress\
    \ towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m\n3 errors found\n"
  stdout: ''
  timestamp: 1659979869
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var commonDivisor = 0\n        var remainderA = 0\n        var\
    \ remainderB = 0\n        // a is greater than b\n        if(b > 0) {\n      \
    \      // We are dividing a by b. \n            while(a > 0) {\n             \
    \   // If remainder from dividing a by b is not 0 we are done\n              \
    \  if(remainderB != 0) {\n                    commonDivisor = commonDivisor *\
    \ 10 + remainderB\n                    remainderA = 0\n                    remainderB\
    \ = 0\n                }\n                a = a / b\n                remainderA\
    \ = a % b\n                remainderB = (remainderA * remainderB) % b\n      \
    \      }\n        } else {\n            // b is greater than a\n            while(a\
    \ > 0) {\n                if(b != 0) {\n                    commonDivisor = commonDivisor\
    \ * 10 + remainderA\n                    remainderA = 0\n                    remainderB\
    \ = 0\n                }\n                b = b / a\n                remainderA\
    \ = a % a\n                remainderB = (remainderA * remainderB) % a\n      \
    \      }\n        }\n        commonDivisor\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmptsfuuyb2.scala:23:18 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                a = a / b\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val\
    \ a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptsfuuyb2.scala:24:29\
    \ --------------------\e[0m\e[0m\n\e[31m24 |\e[0m                remainderA =\
    \ a % b\n\e[31m\e[31m   |\e[0m                             ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                             Found:    Long\n\e[31m   |\e[0m       \
    \                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmptsfuuyb2.scala:25:29 --------------------\e[0m\e\
    [0m\n\e[31m25 |\e[0m                remainderB = (remainderA * remainderB) % b\n\
    \e[31m\e[31m   |\e[0m                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                             Found:    Long\n\e[31m   |\e\
    [0m                             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmptsfuuyb2.scala:35:18 -----------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m                b = b / a\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val\
    \ b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptsfuuyb2.scala:36:29\
    \ --------------------\e[0m\e[0m\n\e[31m36 |\e[0m                remainderA =\
    \ a % a\n\e[31m\e[31m   |\e[0m                             ^^^^^\e[0m\n\e[31m\
    \   |\e[0m                             Found:    Long\n\e[31m   |\e[0m       \
    \                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmptsfuuyb2.scala:37:29 --------------------\e[0m\e\
    [0m\n\e[31m37 |\e[0m                remaind"
  stdout: ''
  timestamp: 1659979869
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val lcm = math.lcm (a, b)\n        if (lcm == 0)\n            a\n\
    \        else\n            lcm\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcy_2xim3.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = math.lcm (a,\
    \ b)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \                value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val a1 = a.abs % b\n        val a2 = a1.abs % b\n        val a3\
    \ = a2.abs % b\n        val a4 = a3.abs % b\n        val a5 = a4.abs % b\n   \
    \     val a6 = a5.abs % b\n        val a7 = a6.abs % b\n        val a8 = a7.abs\
    \ % b\n        val a9 = a8.abs % b\n        val a10 = a9.abs % b\n        val\
    \ a11 = a10.abs % b\n        val a12 = a11.abs % b\n        val a13 = a12.abs\
    \ % b\n        val a14 = a13.abs % b\n        val a15 = a14.abs % b\n        val\
    \ a16 = a15.abs % b\n        val a17 = a16.abs % b\n        val a18 = a17.abs\
    \ % b\n        val a19 = a18.abs % b\n        val a20 = a19.abs % b\n        val\
    \ a21 = a20.abs % b\n        val a22 = a21.abs % b\n        val a23 = a22.abs\
    \ % b\n        val a24 = a23.abs % b\n        val a25 = a24.abs % b\n        val\
    \ a26 = a25.abs % b\n        val a27 = a26.abs % b\n        val a28 = a27.abs\
    \ % b\n        val a29 = a28.abs % b\n        val a30 = a29.abs % b\n        val\
    \ a31 = a30.abs % b\n        val a32 = a31.abs % b\n        val a33 = a32.abs\
    \ % b\n        val a34 = a33.abs % b\n        val a35 = a34.abs % b\n        val\
    \ a36 = a35.abs % b\n        val a37 = a36.abs % b\n        val a38 = a37.abs\
    \ % b\n        val a39 = a38.abs % b\n        val a40 = a39.abs % b\n        val\
    \ a41 = a40.abs % b\n        val a42 = a41.abs % b\n        val a43 = a42.abs\
    \ % b\n        val a44 = a43.abs % b\n        val a45 = a44.abs % b\n        val\
    \ a46 = a45.abs % b\n        val a47 = a46.abs \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp83mi659o.scala:57:5\
    \ ---------------------\e[0m\e[0m\n\e[31m57 |\e[0m    }\n\e[31m\e[31m   |\e[0m\
    \     ^\e[0m\n\e[31m   |\e[0m     Found:    Unit\n\e[31m   |\e[0m     Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979869
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0) a\n        else greatestCommonDivisor(a /\
    \ 2, b / 2) * (a % 2 + b % 2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0cs6ui1k.scala:14)\n\tat Problem.main(tmp0cs6ui1k.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var i = a\n        var j = b\n        var gcd = 1\n        while\
    \ (i > 0 && j > 0) {\n            if (i % j == 0) {\n                gcd = j\n\
    \            }\n            i /= j\n            j /= gcd\n        }\n        gcd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu_vr2_9w.scala:15:22\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m                gcd = j\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (j : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val gcd = math.gcd(a, b)\n        (a / gcd) % b\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprbjrlhu_.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a, b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value gcd is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0)\n            0\n        else\n          \
    \  greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpaci0k1hv.scala:16)\n\tat Problem.main(tmpaci0k1hv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979867
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // write your solution here\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpimfrjf05.scala:9:59\
    \ ---------------------\e[0m\e[0m\n\e[31m 9 |\e[0m    \e[33mdef\e[0m \e[36mgreatestCommonDivisor\e\
    [0m(\e[36ma\e[0m : \e[35mLong\e[0m, \e[36mb\e[0m : \e[35mLong\e[0m) : \e[35mLong\e\
    [0m = {\n\e[31m\e[31m   |\e[0m                                               \
    \            ^\e[0m\n\e[31m   |\e[0m                                         \
    \                 Found:    Unit\n\e[31m   |\e[0m                            \
    \                              Required: Long\n\e[31m10 |\e[0m        \e[34m//\
    \ write your solution here\e[0m\n\e[31m11 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979867
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < 0 || b < 0) {\n            throw new ArithmeticException(\"\
    Negative inputs not allowed\")\n        }\n        var gcd = a\n        for (c\
    \ <- b until 0) {\n            if ((c % gcd) == 0) {\n                gcd = c\n\
    \            }\n        }\n        gcd\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxlsduss8.scala:22)\n\tat Problem.main(tmpxlsduss8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979869
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Only compare with divisors that are not equal to zero\n    \
    \    if (a != 0 && b != 0) {\n            val m = math.max(a, b)\n           \
    \ val n = math.min(a, b)\n            greatestCommonDivisor(m - n, n)\n      \
    \  } else {\n            0\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2svmgqc9.scala:20)\n\tat Problem.main(tmp2svmgqc9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val l = a.toLong\n        val r = b.toLong\n        while (r >\
    \ 0) {\n            val t = r\n            r = l % r\n            l = t\n    \
    \    }\n        l\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpvoclh2a6.scala:14:14 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            r = l % r\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val r\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpvoclh2a6.scala:15:14 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            l = t\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val l\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979860
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a % b == 0)\n            return b\n        else\n         \
    \   return greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979868
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val d = math.min(a, b)\n        val gcd = math.gcd(d, math.abs(a-b))\n\
    \        gcd match {\n            case 0 => d\n            case _ => gcd\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpi2lye5xi.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(d, math.abs(a-b))\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \          value gcd is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a == 0 || b == 0) 0\n        else if (a > b) greatestCommonDivisor(b,\
    \ a - b) \n        else greatestCommonDivisor(a % b, b)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979870
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      val a = a % b\n      val r = new Array[Long](b)\n      r.init\n \
    \     var i = 0\n      while (a != 0) {\n        r(i) = a\n        a = b\n   \
    \     a := (a % b)\n        i += 1\n      }\n      r.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpjak4q2yi.scala:10:14 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m      \e[33mval\e[0m \e[36ma\e[0m = a % b\n\e[31m\e[31m\
    \   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Recursive \e[33mvalue\e\
    [0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpjak4q2yi.scala:11:30 --------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m      \e[33mval\e[0m \e[36mr\e[0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e\
    [35mLong\e[0m](b)\n\e[31m\e[31m   |\e[0m                              ^\e[0m\n\
    \e[31m   |\e[0m                              Found:    (b : Long)\n\e[31m   |\e\
    [0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmpjak4q2yi.scala:16:10 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        a = b\n\e[31m\e[31m   |\e[0m        ^^^^^\e[0m\n\
    \e[31m   |\e[0m        Reassignment to val a\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979868
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var d = 0l\n        for( i <- 1 to a.toInt) {\n            for(\
    \ j <- 1 to b.toInt) {\n                if( (i % a.toInt == 0) && (j % b.toInt\
    \ == 0)) {\n                    d += 1\n                }\n            }\n   \
    \     }\n        d / a.toInt\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpy220sufs.scala:21)\n\tat Problem.main(tmpy220sufs.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979870
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        def gcd(a : Long, b : Long) : Long = {\n            def lcm(a:\
    \ Long, b: Long): Long = { \n                if(b == 0) a else lcm(b, a % b)\n\
    \            }\n            if(b == 0) a else gcd(b, a % b)\n        }\n     \
    \   gcd(a, b) \n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979878
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var c : Long = 1l\n        var d : Long = b\n        while (a !=\
    \ 0l && b != 0l) {\n            if (a > b) c <- c * (a % b)\n            else\
    \ d <- d * (b % a)\n            a <- a / b\n            b <- b / a\n        }\n\
    \        if (c > d) c\n        else d\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp_5sqpnok.scala:13:25 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mif\e[0m (a > b) c <- c * (a % b)\n\e\
    [31m\e[31m   |\e[0m                         ^^\e[0m\n\e[31m   |\e[0m         \
    \                end of statement expected but '<-' found\n\e[31m\e[31m-- Error:\
    \ /tmp/tmp_5sqpnok.scala:15:14 -----------------------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m            a <- a / b\n\e[31m\e[31m   |\e[0m            \
    \  ^^\e[0m\n\e[31m   |\e[0m              end of statement expected but '<-' found\n\
    \e[31m\e[31m-- Error: /tmp/tmp_5sqpnok.scala:16:14 -----------------------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            b <- b / a\n\e[31m\e[31m   |\e[0m       \
    \       ^^\e[0m\n\e[31m   |\e[0m              end of statement expected but '<-'\
    \ found\n\e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmp_5sqpnok.scala:15:12\
    \ ----------------\e[0m\e[0m\n\e[33m15 |\e[0m            a <- a / b\n\e[33m\e\
    [33m   |\e[0m            ^\e[0m\n\e[33m   |\e[0mA pure expression does nothing\
    \ in statement position; you may be omitting necessary parentheses\n\e[33m   |\e\
    [0m\n\e[33m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmp_5sqpnok.scala:16:12 ----------------\e\
    [0m\e[0m\n\e[33m16 |\e[0m            b <- b / a\n\e[33m\e[33m   |\e[0m       \
    \     ^\e[0m\n\e[33m   |\e[0mA pure expression does nothing in statement position;\
    \ you may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 warnings found\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979879
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val r = a.toLong / b.toLong\n        return if (r == 0) a else\
    \ r\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmppvvz26fw.scala:14)\n\tat Problem.main(tmppvvz26fw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979885
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val an = a.toInt;\n        val bn = b.toInt;\n        while (an\
    \ != 0) {\n            if (bn % an == 0) return an\n            an -= 1\n    \
    \    }\n        return bn\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt2aiz2pj.scala:14:15 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            an -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Int - did you mean an.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a%b==0) a\n        else if(a/b==0) b\n        else greatestCommonDivisor(b,a/b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0wij1xa9.scala:15)\n\tat Problem.main(tmp0wij1xa9.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < 0 || b < 0) {\n            throw new Exception(\"At least\
    \ one argument must be positive.\")\n        }\n        if ((a == 0) && (b ==\
    \ 0)) {\n            return 1l\n        } else {\n            val r = if (b >\
    \ 0) {\n                val remainder = a % b\n                if (remainder <\
    \ b / 2) b else b - remainder\n            } else a\n            if (r > 0) r\
    \ else 1l\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvj51hgm6.scala:24)\n\tat Problem.main(tmpvj51hgm6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979885
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val rem = a % b\n        val quot = b\n        while (rem != 0)\
    \ {\n            quot = quot % rem\n            rem = rem / quot // remember to\
    \ revert this operation\n        }\n        quot\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpdg3esheg.scala:13:17 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            quot = quot % rem\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to\
    \ val quot\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpdg3esheg.scala:14:16\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            rem = rem\
    \ / quot \e[34m// remember to revert this operation\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to\
    \ val rem\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979878
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a==0||b==0) 1\n        else greatestCommonDivisor(b, a mod b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpn6351ur6.scala:11:40 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33melse\e[0m greatestCommonDivisor(b, a mod\
    \ b)\n\e[31m\e[31m   |\e[0m                                      ^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue mod is not a member of Long, but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following import might\
    \ fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigInt.long2bigInt\n\
    \e[31m   |\e[0m\n1 error found\n"
  stdout: ''
  timestamp: 1659979886
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0)\n            return a\n        else\n            return\
    \ greatestCommonDivisor(b, (a%b))\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979884
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val m = (b % a).toLong\n        if (m == 0) {\n            return\
    \ a\n        }\n        return greatestCommonDivisor(a, b - 1)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp5dc0ejpr.scala:17)\n\tat Problem.main(tmp5dc0ejpr.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979885
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val c = a / b\n        val d = a % b\n        if (d == 0) c else\
    \ greatestCommonDivisor(b,d)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpuly9yp3b.scala:15)\n\tat Problem.main(tmpuly9yp3b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979885
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0) a\n        else {\n            val rem = a % b\n  \
    \          greatestCommonDivisor(b, rem)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979885
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val a = a / 2\n        val b = b / 2\n        val div: Long = a\
    \ * b\n\n        if (div == 0)\n            1\n        else {\n            if\
    \ (a > b)\n                greatestCommonDivisor(b, a)\n            else greatestCommonDivisor(a,\
    \ a)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp1x20z3ds.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a / \e[31m2\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmp1x20z3ds.scala:11:16 ---------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b / \e[31m2\e[0m\n\e\
    [31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979878
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val r = math.min(math.max(a, b), Long.MaxValue)\n        for (i<-\
    \ r until 1l by -1) yield (i % b).abs\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzn4n8ahe.scala:11:8\
    \ ---------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m (i<-\
    \ r until \e[31m1l\e[0m by -\e[31m1\e[0m) \e[33myield\e[0m (i % b).abs\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        Found:    IndexedSeq[Long]\n\e[31m   |\e[0m        Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979885
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979885
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val q = a/b\n        val r = a % b\n        while (r > 0) {\n \
    \           a -= 1\n            b += 1\n            val q = a/b\n            val\
    \ r = a % b\n        }\n        q\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpms1bzvza.scala:13:14 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            a -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean a.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpms1bzvza.scala:14:14\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            b += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Long - did you mean b.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979887
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if((b == 0l) && (a == 0l)) 1l\n        else if(b == 0l) a\n   \
    \     else greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979886
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val c = math.gcd(a, b).toLong\n        if (c < 1L) 1 else c\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl0pgqz6e.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mc\e[0m = math.gcd(a, b).toLong\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \      value gcd is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979886
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Create a mutable set \n        var setA = scala.collection.mutable.Set.empty[Long]\n\
    \        var setB = scala.collection.mutable.Set.empty[Long]\n\n        // Add\
    \ the elements of the input to the set\n        // >>> setA = (3l, 3l)\n     \
    \   // >>> setB = (5l, 5l)\n        setA += a\n        setB += b\n\n        //\
    \ Set a while b is not empty\n        // >>> setA = (3l, 3l)\n        // >>> setB\
    \ = (5l, 5l)\n        while(b ne 0) {\n            // Set b a while a is non-zero\n\
    \            // >>> setA = ()\n            // >>> setB = (5l, 5l)\n          \
    \  while( a ne 0 ) {\n                // Return the first element that is in both\
    \ sets\n                // >>> setA = (3l)\n                // >>> setB = (5l)\n\
    \                if(setA.contains(b) && setB.contains(a)) {\n                \
    \    return b\n                }\n                // Set a to the next value\n\
    \                // >>> setA = (4l, 4l)\n                // >>> setB = (5l, 5l)\n\
    \                a -= 1\n            }\n            // Set b to the previous value\n\
    \            // >>> setA = (5l, 5l)\n            // >>> setB = (4l, 4l)\n    \
    \        b += 1\n        }\n        // Return zero if the inputs are equal\n \
    \       // >>> setA = (3l, 3l)\n        // >>> setB = (5l, 5l)\n        return\
    \ 0l\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp4x7kx6rh.scala:23:19 -----------------------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mwhile\e[0m(b ne \e[31m0\e[0m) {\n\e[31m\e\
    [31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m  the result of an implicit\
    \ conversion must be more specific than Object\n\e[31m\e[31m-- Error: /tmp/tmp4x7kx6rh.scala:27:24\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m27 |\e[0m       \
    \     \e[33mwhile\e[0m( a ne \e[31m0\e[0m ) {\n\e[31m\e[31m   |\e[0m         \
    \               ^\e[0m\n\e[31m   |\e[0m  the result of an implicit conversion\
    \ must be more specific than Object\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4x7kx6rh.scala:37:18\
    \ ------------------------\e[0m\e[0m\n\e[31m37 |\e[0m                a -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value -= is not a member of Long - did you mean a.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp4x7kx6rh.scala:42:14 ------------------------\e\
    [0m\e[0m\n\e[31m42 |\e[0m            b += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Long - did you mean b.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1659979887
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val r = a % b\n        \n        if(r == 0) a else greatestCommonDivisor(b,\
    \ r)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpla53eflo.scala:15)\n\tat Problem.main(tmpla53eflo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979886
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var remainder : Long = 1\n        var a : Long = a\n        var\
    \ b : Long = b\n        // Check if b is even\n        if (b % 2 == 1) {\n   \
    \         b += 1\n        }\n        while (b > 0) {\n            remainder =\
    \ b % a\n            if (remainder == 0) {\n                return a\n       \
    \     } else {\n                a = a\n                b = remainder\n       \
    \     }\n        }\n        return a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E039] Reference Error: /tmp/tmptd43ak17.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : \e[35mLong\e[0m\
    \ = a\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m   \
    \          a is a forward reference extending over the definition of a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E039] Reference Error: /tmp/tmptd43ak17.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m : \e[35mLong\e[0m\
    \ = b\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m   \
    \          b is a forward reference extending over the definition of b\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979883
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0) 1\n        else if (b == 0) a\n        else\
    \ {\n            val q = a / b\n            if (q == 0) a\n            else greatestCommonDivisor(b,\
    \ q) * q\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcil2u6s8.scala:19)\n\tat Problem.main(tmpcil2u6s8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979887
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        def gcd(a : Long, b : Long) : Long = if (b == 0) a else gcd(b,\
    \ a % b)\n        gcd(a, b) / a\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp360vkkpc.scala:14)\n\tat Problem.main(tmp360vkkpc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979889
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0)\n            return a\n        else\n            return\
    \ greatestCommonDivisor(b, a % b)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979896
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      if (b == 0) a\n      else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979898
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < b) {\n            val tmp = a % b\n            greatestCommonDivisor(b,\
    \ tmp)\n        } else {\n            val tmp = b % a\n            greatestCommonDivisor(tmp,\
    \ a)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979898
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var gcd = 1\n        while (b > 0) {\n            if (b % a ==\
    \ 0) {\n                gcd = a\n            }\n            a = a * b\n      \
    \      b = b // b\n        }\n        gcd\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsl2lfolu.scala:13:22\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m                gcd = a\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (a : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpsl2lfolu.scala:15:14 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            a = a * b\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpsl2lfolu.scala:16:14 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            b = b \e[34m// b\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val b\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979897
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val aMod = a % b\n        if (0 == aMod) a\n        else if (b\
    \ == a) 1\n        else (a + b) % b\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3bsn02nq.scala:16)\n\tat Problem.main(tmp3bsn02nq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979901
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Implement this function.\n        // Don't forget to check edge\
    \ cases.\n        if(b == 0) a\n        else greatestCommonDivisor(b, a % b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979902
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        assert(b > 0)\n        assert(a > 0)\n        val x = a.toLong\n\
    \        val y = b.toLong\n        while (b > 0) {\n            val temp = x %\
    \ b\n            x = b\n            b = temp\n        }\n        return x\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp_aoy7f84.scala:16:14 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            x = b\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val x\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp_aoy7f84.scala:17:14 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            b = temp\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979895
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val max = a.max(b)\n        val min = a.min(b)\n        val maxDiv\
    \ = max.quot(min)\n        return max.quot(maxDiv)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8d8wlz52.scala:12:25 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36mmaxDiv\e[0m = max.quot(min)\n\
    \e[31m\e[31m   |\e[0m                     ^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ quot is not a member of Long, but could be made available as an extension method.\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mThe following import might fix the problem:\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\e[31m\
    \   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8d8wlz52.scala:13:19\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mreturn\e[0m\
    \ max.quot(maxDiv)\n\e[31m\e[31m   |\e[0m               ^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue quot is not a member of Long, but could be made available as an\
    \ extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following import might\
    \ fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\
    \e[31m   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1659979904
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val gcd = (a, b) match {\n            case (x @ Nil , y @ Nil)\
    \ => throw new ArithmeticException\n            case (xs , Nil) => y match {\n\
    \                case (x @ Nil , y @ Nil) => x\n                case (xs , Nil)\
    \ => throw new ArithmeticException\n                case (xs , ys ) => greatestCommonDivisor(xs\
    \ , y )\n            }\n            case (x :: xs , y :: ys ) => greatestCommonDivisor(xs\
    \ , ys)\n        }\n        gcd.abs\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpczbh7ohy.scala:11:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m            \e[33mcase\e[0m (x @ Nil , y @ Nil) => \e\
    [33mthrow\e[0m \e[33mnew\e[0m ArithmeticException\n\e[31m\e[31m   |\e[0m     \
    \                 ^^^\e[0m\n\e[31m   |\e[0mValues of types object scala.collection.immutable.Nil\
    \ and Long cannot be compared with == or !=\n\e[31m\e[31m-- Error: /tmp/tmpczbh7ohy.scala:11:32\
    \ -----------------------------------------\e[0m\e[0m\n\e[31m11 |\e[0m       \
    \     \e[33mcase\e[0m (x @ Nil , y @ Nil) => \e[33mthrow\e[0m \e[33mnew\e[0m ArithmeticException\n\
    \e[31m\e[31m   |\e[0m                                ^^^\e[0m\n\e[31m   |\e[0mValues\
    \ of types object scala.collection.immutable.Nil and Long cannot be compared with\
    \ == or !=\n\e[31m\e[31m-- Error: /tmp/tmpczbh7ohy.scala:12:23 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mcase\e[0m (xs , Nil) => y \e[33mmatch\e\
    [0m {\n\e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0mValues\
    \ of types object scala.collection.immutable.Nil and Long cannot be compared with\
    \ == or !=\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpczbh7ohy.scala:12:31\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m            \e[33mcase\e\
    [0m (xs , Nil) => y \e[33mmatch\e[0m {\n\e[31m\e[31m   |\e[0m                \
    \               ^\e[0m\n\e[31m   |\e[0m                               Not found:\
    \ y\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpczbh7ohy.scala:13:44\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m                \e[33mcase\e\
    [0m (x @ Nil , y @ Nil) => x\n\e[31m\e[31m   |\e[0m                          \
    \                  ^\e[0m\n\e[31m   |\e[0m                                   \
    \         Not found: x\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpczbh7ohy.scala:15:62\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m                \e[33mcase\e\
    [0m (xs , ys ) => greatestCommonDivisor(xs , y )\n\e[31m\e[31m   |\e[0m      \
    \  "
  stdout: ''
  timestamp: 1659979905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0) b\n        else if (b == 0) a\n        else {\n   \
    \         val gcd = math.gcd(a, b)\n            greatestCommonDivisor(a/gcd, b/gcd)\
    \ \n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfbt3aojz.scala:13:27 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mgcd\e[0m = math.gcd(a,\
    \ b)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      value gcd is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979903
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val remainder = a % b\n        if (remainder == 0) {\n        \
    \    a\n        } else {\n            greatestCommonDivisor(b, remainder)\n  \
    \      }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpau49ix6_.scala:18)\n\tat Problem.main(tmpau49ix6_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979903
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0) b\n        else if (b == 0) a\n        else if (a ==\
    \ b) a\n        else if (a%b == 0) greatestCommonDivisor(b,a%b)\n        else\
    \ {\n            var c : Long = a;\n            while(c != 0) {\n            \
    \    if (c%b != 0) c = b\n                else {\n                    c = b\n\
    \                    b = a%b\n                }\n            }\n            c\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmplaujfwie.scala:20:22 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                    b = a%b\n\e[31m\e[31m   |\e[0m  \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Reassignment\
    \ to val b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979897
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0) {\n            0\n        } else {\n    \
    \        val gcd: Int = greatestCommonDivisor(b, a % b)\n            a / gcd +\
    \ (if (a % gcd == 0) 0 else 1)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpllx60zyh.scala:13:48\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e\
    [36mgcd\e[0m: \e[35mInt\e[0m = greatestCommonDivisor(b, a % b)\n\e[31m\e[31m \
    \  |\e[0m                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                           Found:    Long\n\e[31m   |\e[0m         \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979903
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // The algorithm implemented here is described in:\n        //\
    \ http://en.wikipedia.org/wiki/Euclidean_algorithm\n        val l = (a >>> 0).toLong\n\
    \        val r = (b >>> 0).toLong\n        val m = (r >>> 0).toLong\n        var\
    \ remainder = a % m\n        // The value returned here is a least common multiple\
    \ of the divisors,\n        // which is equal to (a / gcd(a, b))\n        if (remainder\
    \ == 0) {\n            remainder = b % m\n        }\n        while (remainder\
    \ != 0) {\n            if (l > r) {\n                l %= r\n            } else\
    \ {\n                r %= l\n            }\n            remainder = r % m\n  \
    \      }\n        l\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl_srsxwa.scala:23:18 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                l %= r\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value %= is not a member of\
    \ Long - did you mean l.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl_srsxwa.scala:25:18\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m                r %= l\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ %= is not a member of Long - did you mean r.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        def gcd(a : Long, b : Long) : Long = {\n            val minA =\
    \ a\n            val minB = b\n            var ans = 1l\n            while (minA\
    \ != 0 && minB != 0) {\n                val t = minA\n                minA = minB\n\
    \                minB = t\n                ans = ans % minA\n            }\n \
    \           ans % minB\n        }\n        if (b == 0) a\n        else if (a ==\
    \ 0) b\n        else gcd(a, b) \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp70tid9qd.scala:16:21 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                minA = minB\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val minA\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp70tid9qd.scala:17:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                minB\
    \ = t\n\e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \             Reassignment to val minB\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979897
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Use a Set to keep track of which numbers we've already checked\n\
    \        val commonDivisors = Set(a.toInt)\n        def loop(i: Int, j: Int, r:\
    \ Long): Int = {\n            if (i > j)\n                r\n            else\
    \ if (i >= j)\n                loop(i + 1, j, r)\n            else {\n       \
    \         if (commonDivisors.contains(i.toInt)) {\n                    loop(i\
    \ + 1, j, r)\n                } else {\n                    commonDivisors +=\
    \ i.toInt\n                    loop(i + 1, j, r)\n                }\n        \
    \    }\n        }\n        loop(0, 0, a.toInt)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpc71gvg9r.scala:14:16\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m                r\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Found:    (r\
    \ : Long)\n\e[31m   |\e[0m                Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979904
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(b < a) greatestCommonDivisor(b, a)\n        else {\n       \
    \     val gcd: Long = greatestCommonDivisor(b, a - 1)\n            if(b % gcd\
    \ == 0) gcd else a\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\
    \tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:12)\n\tat Problem$.greatestCommonDivisor(tmpcgcmehvq.scala:1"
  stdout: ''
  timestamp: 1659979904
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0)\n            return a\n        greatestCommonDivisor(b,\
    \ a % b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979904
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val gcd = (b % a).min(a % b)\n        if (gcd == 0) gcd else greatestCommonDivisor(a,\
    \ b % gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmpbfo12jop.scala:10)\n\
    \tat Problem$.main(tmpbfo12jop.scala:14)\n\tat Problem.main(tmpbfo12jop.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979905
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var gcd = 1\n        var i = 1;\n        while (a!=0 && b!=0) {\n\
    \            if (a > b) {\n                a = a / b\n                gcd = gcd\
    \ * i\n            }\n            i = i + 1\n        }\n        return gcd\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpxzo1ulis.scala:14:18 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                a = a / b\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val\
    \ a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979900
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val m = math.min(a / b, b / a)\n        if (m == 0l) a else b\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3o9kts5o.scala:14)\n\tat Problem.main(tmp3o9kts5o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979904
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var c = a\n        while (b != 0) {\n            if (b % a == 0)\
    \ {\n                c = b\n            }\n            b /= a\n        }\n   \
    \     c\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvisagrqe.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            b /= a\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean b.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979906
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0) b\n        else {\n            val x = a / b\n    \
    \        greatestCommonDivisor(b, x)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp3q8sl9yy.scala:12)\n\
    \tat Problem$.main(tmp3q8sl9yy.scala:17)\n\tat Problem.main(tmp3q8sl9yy.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979907
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a%b==0) a else greatestCommonDivisor(b,a%b)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt0j5iy1_.scala:13)\n\tat Problem.main(tmpt0j5iy1_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979914
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var gcd : Long = 1\n        while (b > 0) {\n            val t\
    \ = b\n            b = a % b\n            a = t\n        }\n        return gcd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp_8afaxj2.scala:13:14 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            b = a % b\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp_8afaxj2.scala:14:14 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            a = t\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979908
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Return gcd(a, b)\n        // >>> greatestCommonDivisor((3l),\
    \ (5l))\n        // 3\n        // >>> greatestCommonDivisor((25l), (15l))\n  \
    \      // 5\n        def gcd(a : Long, b : Long) : Long = {\n            while\
    \ (a != 0){\n                val t = b % a\n                b <- a\n         \
    \       a <- t\n            }\n            b\n        }\n        // Return the\
    \ greatest common divisor of a and b\n        // >>> gcd(3l, 5l)\n        // 3\n\
    \        // >>> gcd(25l, 15l)\n        // 5\n        gcd(a, b).abs\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpo20hmsd4.scala:18:18 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                b <- a\n\e[31m\e[31m   |\e[0m       \
    \           ^^\e[0m\n\e[31m   |\e[0m                  end of statement expected\
    \ but '<-' found\n\e[31m\e[31m-- Error: /tmp/tmpo20hmsd4.scala:19:18 -----------------------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m                a <- t\n\e[31m\e[31m   |\e[0m       \
    \           ^^\e[0m\n\e[31m   |\e[0m                  end of statement expected\
    \ but '<-' found\n\e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmpo20hmsd4.scala:18:16\
    \ ----------------\e[0m\e[0m\n\e[33m18 |\e[0m                b <- a\n\e[33m\e\
    [33m   |\e[0m                ^\e[0m\n\e[33m   |\e[0mA pure expression does nothing\
    \ in statement position; you may be omitting necessary parentheses\n\e[33m   |\e\
    [0m\n\e[33m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[33m\e[33m-- [E129] Potential Issue Warning: /tmp/tmpo20hmsd4.scala:19:16 ----------------\e\
    [0m\e[0m\n\e[33m19 |\e[0m                a <- t\n\e[33m\e[33m   |\e[0m       \
    \         ^\e[0m\n\e[33m   |\e[0mA pure expression does nothing in statement position;\
    \ you may be omitting necessary parentheses\n\e[33m   |\e[0m\n\e[33m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 warnings found\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979910
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val q = a / b\n        if(a % b == 0) q\n        else greatestCommonDivisor(b,\
    \ q)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp3txdej7f.scala:10)\n\
    \tat Problem$.main(tmp3txdej7f.scala:15)\n\tat Problem.main(tmp3txdej7f.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979915
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val r : Long = a % b\n        r > 0 ? a : b\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8is9brkz.scala:11:20 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        r > \e[31m0\e[0m ? a : \e[35mb\e[0m\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    Not\
    \ found: type b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8is9brkz.scala:11:14\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        r > \e[31m0\e[0m\
    \ ? a : \e[35mb\e[0m\n\e[31m\e[31m   |\e[0m            ^^^\e[0m\n\e[31m   |\e\
    [0m            value ? is not a member of Int\n2 errors found\n"
  stdout: ''
  timestamp: 1659979915
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Set up the set for iteration\n        val setA : mutable.Set[Long]\
    \ = new mutable.HashSet(a)\n        val setB : mutable.Set[Long] = new mutable.HashSet(b)\n\
    \        // Do the work\n        while(setA.isEmpty || setB.isEmpty) {\n     \
    \       val max = (setA contains maxB) ? maxB : (setB contains maxA) ? maxA :\
    \ (setA.size + setB.size)\n            setA -= max\n            setB -= max\n\
    \        }\n        // Return the greatest common divisor\n        (setA.size\
    \ + setB.size)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp7n9uhlcq.scala:15:80 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mmax\e[0m = (setA contains\
    \ maxB) ? maxB : (\e[35msetB\e[0m \e[35mcontains\e[0m \e[35mmaxA\e[0m) \e[35m?\e\
    [0m \e[35mmaxA\e[0m : (setA.size + setB.size)\n\e[31m\e[31m   |\e[0m         \
    \                                                                       ^\e[0m\n\
    \e[31m   |\e[0m                                 end of statement expected but\
    \ ':' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7n9uhlcq.scala:11:19\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36msetA\e[0m : mutable.Set[\e[35mLong\e[0m] = \e[33mnew\e[0m mutable.HashSet(a)\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7n9uhlcq.scala:11:43 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m        \e[33mval\e[0m \e[36msetA\e[0m : mutable.Set[\e[35mLong\e[0m] = \e\
    [33mnew\e[0m mutable.HashSet(a)\n\e[31m\e[31m   |\e[0m                       \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                           \
    \                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7n9uhlcq.scala:12:19 ------------------------\e[0m\e[0m\n\e[31m12 |\e\
    [0m        \e[33mval\e[0m \e[36msetB\e[0m : mutable.Set[\e[35mLong\e[0m] = \e\
    [33mnew\e[0m mutable.HashSet(b)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp7n9uhlcq.scala:12:43 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36msetB\e[0m : mutable.Set[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m mutable.HashSet(b)\n\e[31m\e[31m   |\e[0m    \
    \                                       ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                               "
  stdout: ''
  timestamp: 1659979909
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val aBig = a.toBigInt\n        val bBig = b.toBigInt\n        if\
    \ (a == 0 || b == 0) {\n            return 0\n        }\n        var i = a.toBigInt\
    \ / bBig.toBigInt\n        var j = b.toBigInt / aBig.toBigInt\n        val tmp\
    \ = aBig / bBig\n        while (i != 0) {\n            if (i == j) { \n      \
    \          return a.toBigInt % bBig.toBigInt\n            }\n            i = i\
    \ / 2\n            j = j / 2\n        }\n        return a.toBigInt % bBig.toBigInt\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpius7pchy.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36maBig\e[0m = a.toBigInt\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ toBigInt is not a member of Long, but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following import might fix the\
    \ problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpius7pchy.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36mbBig\e[0m = b.toBigInt\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue toBigInt is not a member of Long, but could be made\
    \ available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following\
    \ import might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpius7pchy.scala:15:18\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e\
    [36mi\e[0m = a.toBigInt / bBig.toBigInt\n\e[31m\e[31m   |\e[0m               \
    \ ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toBigInt is not a member of Long, but\
    \ could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mThe following import might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import math.BigDecimal.long2bigDecimal\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpius7pchy.scala:16:18 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mj\e[0m = b.toBigInt / aBig.toBigInt\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toBigInt\
    \ is not a member of Long, but could be made available as an extension method.\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mThe following import might fix the problem:\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\e[31m\
    \   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpius7pchy.scala:20:25\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                \e[33mreturn\e\
    [0m a.to"
  stdout: ''
  timestamp: 1659979921
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val gcdResult = (2l) match {\n            case 0 => a\n       \
    \     case x if x < a => x\n            case x if x == a => a\n            case\
    \ x if x < b => x\n            case x if x == b => b\n            case x => gcd(b,\
    \ x % b)\n        }\n        gcdResult\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe9o4n5i1.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mcase\e[0m x => gcd(b, x % b)\n\e[31m\e\
    [31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m                 \
    \     Not found: gcd\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979911
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val aMod = b%a\n        val aDivs = (b-a)/aMod\n        if(aDivs\
    \ > 0) aDivs else 1l\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzeciureo.scala:15)\n\tat Problem.main(tmpzeciureo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979920
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val gcd1 = {\n            def gcd1(a: Long, b: Long): Long = {\n\
    \                if (b == 0)\n                    a\n                else\n  \
    \                  gcd1(b, a mod b)\n            }\n            gcd1(a, b)\n \
    \       }\n        val gcd2 = {\n            def gcd2(a: Long, b: Long): Long\
    \ = {\n                if (b == 0)\n                    a\n                else\
    \ if (a == 0)\n                    b\n                else\n                 \
    \   gcd2(b, a mod b)\n            }\n            gcd2(a, b)\n        }\n     \
    \   gcd1 min gcd2\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppu52mdl8.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                    gcd1(b, a mod b)\n\e[31m\e[31m  \
    \ |\e[0m                            ^^^^^\e[0m\n\e[31m   |\e[0mvalue mod is not\
    \ a member of Long, but could be made available as an extension method.\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mThe following import might fix the problem:\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppu52mdl8.scala:26:30 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                    gcd2(b, a mod b)\n\e[31m\e[31m  \
    \ |\e[0m                            ^^^^^\e[0m\n\e[31m   |\e[0mvalue mod is not\
    \ a member of Long, but could be made available as an extension method.\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mThe following import might fix the problem:\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979923
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val num = new mutable.HashMap[Long, Long]()\n        var gcd :\
    \ Long = 1\n        var i = 1\n        while (i <= b) {\n            val num =\
    \ (a / gcd)\n            gcd = (b % gcd)\n            i = i + 1\n        }\n \
    \       return gcd\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmsie9th2.scala:10:22 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mnum\e[0m = \e[33mnew\e[0m\
    \ mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979914
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0)\n            return a\n        if (a > b)\n\
    \            return greatestCommonDivisor(b, a)\n        var d = 1\n        while\
    \ (b > 0) {\n            d = (b & a) != 0 ? d : a\n            a = b // Reminder\
    \ from division step\n            b = a >>> 1\n        }\n        return d\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppatds4ta.scala:16:35 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            d = (b & a) != \e[31m0\e[0m ? d : \e[35ma\e\
    [0m\n\e[31m\e[31m   |\e[0m                                   ^\e[0m\n\e[31m  \
    \ |\e[0m                                   Not found: type a\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmppatds4ta.scala:16:29 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            d = (b & a) != \e[31m0\e[0m ? d : \e[35ma\e\
    [0m\n\e[31m\e[31m   |\e[0m                           ^^^\e[0m\n\e[31m   |\e[0m\
    \                           value ? is not a member of Int\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmppatds4ta.scala:17:14 -----------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            a = b \e[34m// Reminder from division step\e[0m\n\
    \e[31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmppatds4ta.scala:18:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            b = a >>>\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659979923
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val div = a / b\n        while(a % div == 0) {\n            a /=\
    \ div\n        }\n        a // return the greatest common divisor\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfs32bwaf.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            a /= div\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean a.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979921
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val max = (math.abs(a) > math.abs(b)) match {\n            case\
    \ true => math.abs(a)\n            case false => math.abs(b)\n        }\n    \
    \    if (a == 0 || b == 0 || max == 0) max\n        else if (a < 0) max\n    \
    \    else if (b < 0) max\n        else max / greatestCommonDivisor(b, a % max)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpfsmy3ph6.scala:20)\n\tat Problem.main(tmpfsmy3ph6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979924
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val div = a.toDivMod(b)\n        if (div._2 == 0)\n           \
    \ div._1\n        else\n            greatestCommonDivisor(div._1, div._2)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjvgylzet.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mdiv\e[0m = a.toDivMod(b)\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \            value toDivMod is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659979923
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val aDiv = a.toInt / b\n        val bDiv = a.toInt % b\n      \
    \  if (aDiv * bDiv == 0) bDiv else (aDiv * greatestCommonDivisor(bDiv, b))\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9j_65gqo.scala:15)\n\tat Problem.main(tmp9j_65gqo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979923
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        assert(a >= 0 && b > 0, \"greatestCommonDivisor(a,b)\")\n     \
    \   var gcd = 1\n        while (a != 0) {\n            if (a > b) {\n        \
    \        a -= b\n                gcd = b\n            }\n            else {\n\
    \                b %= a\n                gcd = a\n            }\n        }\n \
    \       gcd(0)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa_vsth9u.scala:14:18 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                a -= b\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value -= is not a member of\
    \ Long - did you mean a.!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa_vsth9u.scala:15:22\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m                gcd = b\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (b : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpa_vsth9u.scala:18:18\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                b %= a\n\e\
    [31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m                value\
    \ %= is not a member of Long - did you mean b.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpa_vsth9u.scala:19:22 --------------------\e[0m\e[0m\n\
    \e[31m19 |\e[0m                gcd = a\n\e[31m\e[31m   |\e[0m                \
    \      ^\e[0m\n\e[31m   |\e[0m                      Found:    (a : Long)\n\e[31m\
    \   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E050] Type Error: /tmp/tmpa_vsth9u.scala:22:8 ------------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        gcd(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \    ^^^\e[0m\n\e[31m   |\e[0m        \e[33mvariable\e[0m \e[35mgcd\e[0m does\
    \ not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1659979926
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a>b)\n            greatestCommonDivisor(b, a)\n        else\n\
    \            a\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwlzcfuum.scala:16)\n\tat Problem.main(tmpwlzcfuum.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979923
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Get GCD\n        // If b is 0, return a\n        if (b == 0)\
    \ a\n        else {\n            // Loop until a * b <= 0\n            while (a\
    \ % b != 0) {\n                a += 1\n            }\n            // Return a\n\
    \            a\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcjl_jkey.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                a += \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Long - did you mean a.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979923
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < 0 || b < 0)\n            throw new IllegalArgumentException\n\
    \        val s = Set(a, b).toSet\n        val d = 0\n        for (x <- s)\n  \
    \          d += x % b\n        d % b\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcfrubdna.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            d += x % b\n\e[31m\e[31m   |\e[0m       \
    \     ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Int -\
    \ did you mean d.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979925
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0)\n            return 0\n        else\n   \
    \         math.gcd(a, b);\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppxyo3g1l.scala:13:17 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            math.gcd(a, b);\n\e[31m\e[31m   |\e[0m  \
    \          ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value gcd is not a member\
    \ of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979924
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      val i = a / b\n      val j = b / a\n      (a / j) * j\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_zfoyrtw.scala:15)\n\tat Problem.main(tmp_zfoyrtw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979925
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Use a mutable set to prevent duplicate computations\n      \
    \  val set = new mutable.HashSet[Long]\n        for (i <- a to b)\n          \
    \  if (set.contains(i))\n                i = b\n            else { set.add(i)\
    \ ; i }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjhplrqeq.scala:11:22 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mset\e[0m = \e[33mnew\e[0m\
    \ mutable.HashSet[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpjhplrqeq.scala:14:18 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m                i = b\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val i\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979923
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        while (a != 0l && b != 0l) {\n            if (a % b == 0)\n   \
    \             a = a / b\n            else\n                b = b / a\n       \
    \ }\n        if (a != 0l)\n            a\n        else\n            b\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpkeh0tvyw.scala:12:18 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                a = a / b\n\e[31m\e[31m   |\e[0m    \
    \            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val\
    \ a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpkeh0tvyw.scala:14:18\
    \ -----------------------------\e[0m\e[0m\n\e[31m14 |\e[0m                b =\
    \ b / a\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                Reassignment to val b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979922
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val lcm = a.multiply(b).lcm(a.add(b).minus(a))\n        lcm.divide(a)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpomwzovyq.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = a.multiply(b).lcm(a.add(b).minus(a))\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \            value multiply is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659979928
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a==0 && b==0)\n            return 0\n        if(a==0)\n    \
    \        return b\n        if(b==0)\n            return a\n        if(a>b && a%b==0)\n\
    \            return a\n        if(a>b && b%a==0)\n            return b\n     \
    \   if(a%b==0)\n            return greatestCommonDivisor(b,a%b)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpw0784t9h.scala:20:8\
    \ ---------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mif\e[0m(a%b==\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m   |\e[0m        Found:\
    \    Unit\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m        Maybe\
    \ you are missing an else part for the conditional?\n\e[31m21 |\e[0m         \
    \   \e[33mreturn\e[0m greatestCommonDivisor(b,a%b)\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979926
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if ((a == 0) && (b == 0)) 1 else a / greatestCommonDivisor(b, a\
    \ % b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp6a6m5x9k.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp6a6m5x9k.scala:10)\n\tat Problem$.greatestCommonDivisor(tmp6a6m5x9k.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmp6a6m5x9k.scala:10)\n\tat Problem$.main(tmp6a6m5x9k.scala:13)\n\
    \tat Problem.main(tmp6a6m5x9k.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979930
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var res = a / b\n        while(a % b != 0) a /= b\n        a\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqo4vw77d.scala:11:28 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mwhile\e[0m(a % b != \e[31m0\e[0m) a /=\
    \ b\n\e[31m\e[31m   |\e[0m                          ^^^^\e[0m\n\e[31m   |\e[0m\
    \                   value /= is not a member of Long - did you mean a.!=?\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979934
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      if(a.equals(b)) {\n          1\n      }\n      else {\n         \
    \ val x = a.toInt\n          val y = b.toInt\n          val max = math.max(x,\
    \ y)\n          val min = math.min(x, y)\n          val gcd = max / (min - max)\n\
    \          gcd\n      }\n  }\n}\n</code>\n<|/ a |>\n<| a dscore=1 tags=scala-collections,scala,arrays\
    \ |>\nThe following works when applied to large arrays of integers. It uses binary\
    \ search to find the greatest common divisor of integers a and b and then checks\
    \ which of these two numbers is the greatest common divisor of all the numbers\
    \ in the array. The binary search method was adapted from here and here\n<code>\n\
    def greatestCommonDivisor(a:Array[Int], b:Array[Int]): Long = {\n  val max = a.maxBy(_).orElse(b.maxBy(_))\n\
    \  val min = a.minBy(_).orElse(b.minBy(_))\n  val gcd = max / min\n  val arr:\
    \ Array[Int] = a.toArray ++ b.toArray\n  arr.sortWith((a,b) => (a-b).abs<=0 ?\
    \ true : false)\n  val n = arr.length\n  val lo = Array.fill(n-1){0l}\n  val hi\
    \ = Array.fill(n-1){0l}\n  lo(0) = 1l\n  hi(n-1) = 1l\n  lo(0) = 1l\n  var i =\
    \ 1\n  while(i <= n) {\n    val mid = i/2\n    if(arr[mid].mod(gcd) == 0) {\n\
    \      lo(mid) = 1l\n    } else {\n      hi(mid) = 1l\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E103] Syntax Error: /tmp/tmpopw4elui.scala:23:0 ----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m</code>\n\e[31m\e[31m   |\e[0m^^\e[0m\n\e[31m   |\e[0mIllegal\
    \ start of toplevel definition\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpopw4elui.scala:56:0 ----------------------------\e[0m\e[0m\n\e[31m56\
    \ |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\
    \e[31m\e[31m-- [E081] Type Error: /tmp/tmpopw4elui.scala:29:20 -----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m  \e[33mval\e[0m \e[36mmax\e[0m = a.maxBy(_).orElse(b.maxBy(_))\n\
    \e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m   Missing parameter\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter\
    \ _$1 of expanded function:\n\e[31m   |\e[0m   _$1 => a.maxBy(_$1).orElse(_$2\
    \ => b.maxBy(_$2)).\n\e[31m\e[31m-- Error: /tmp/tmpopw4elui.scala:29:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m  \e[33mval\e[0m \e[36mmax\e[0m = a.maxBy(_).orElse(b.maxBy(_))\n\
    \e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0mambiguous given\
    \ instances: both \e[33mobject\e[0m \e[35mBigInt\e[0m in \e[33mobject\e[0m \e\
    [35mOrdering\e[0m and \e[33mobject\e[0m \e[35mInt\e[0m in \e[33mobject\e[0m \e\
    [35mOrdering\e[0m match type Ordering[B] of parameter cmp of \e[33mmethod\e[0m\
    \ \e[35mmaxBy\e[0m in \e[33mtrait\e[0m \e[35mIterableOnceOps\e[0m\n\e[31m\e[31m--\
    \ [E081] Type Error: /tmp/tmpopw4elui.scala:30:20 -----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m  \e[33mval\e[0m \e[36mmin\e[0m = a.minBy(_).orElse(b.minBy(_))\n\
    \e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m   Missing parameter\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter\
    \ _$3 of expanded function:\n\e[31m   |\e[0m   _$3 => a.minBy(_$3).orElse(_$4\
    \ => b.minBy(_$4)).\n\e[31m\e[31m-- Error: /tmp/tmpopw4elui.scala:30:22 -----------------------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m  \e[33mval\e[0m \e[36mmin\e[0m = a.minBy(_).orElse(b.minBy(_))\n\
    \e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e"
  stdout: ''
  timestamp: 1659979941
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a==0 || b==0) \n            0\n        else if (a < b)\n  \
    \          greatestCommonDivisor(b, a)\n        else\n            greatestCommonDivisor(a,\
    \ (b-1))\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpiwx9dnjg.scala:18)\n\tat Problem.main(tmpiwx9dnjg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979935
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < 0 || b < 0) {\n            throw new IllegalArgumentException(\"\
    Negative numbers are not allowed\")\n        } else if (b == 0) {\n          \
    \  return a\n        } else if (a > b) {\n            greatestCommonDivisor(b,\
    \ a)\n        } else {\n            val q = a / b\n            greatestCommonDivisor(a,\
    \ q)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj1e21tjm.scala:22)\n\tat Problem.main(tmpj1e21tjm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979935
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val maxDivisor = a / b\n        val minDivisor = a % b\n      \
    \  if (minDivisor == 0) maxDivisor else greatestCommonDivisor(maxDivisor, b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpociodxfo.scala:15)\n\tat Problem.main(tmpociodxfo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979940
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val tempA = a\n        var tempB = b\n        while (tempB > 0)\
    \ {\n            val remainder = tempB mod tempA\n            tempA -= remainder\n\
    \            tempB -= remainder\n        }\n        tempA\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9xu24gj_.scala:13:34 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            \e[33mval\e[0m \e[36mremainder\e[0m = tempB\
    \ mod tempA\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue mod is not a member of Long, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following import\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigInt.long2bigInt\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9xu24gj_.scala:14:18\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m            tempA -= remainder\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean tempA.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979942
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var r = a\n        var x = 1\n        while (a >= 0 || b >= 0)\
    \ {\n            r = (r * b) / x\n            x = (x + 1) % 1000000000\n     \
    \   }\n        if (r > 0) r - 1\n        else 0\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979943
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val minDivisor = math.min(math.max(a, b), a * b) /\n          \
    \                  (math.max(a, b) * math.min(a, b))\n        val newA = a / minDivisor\n\
    \        val newB = b / minDivisor\n        minDivisor / math.gcd(newA, newB)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjuxfgllr.scala:14:26 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        minDivisor / math.gcd(newA, newB)\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \     value gcd is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979942
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val lcm = Math.lcm(a, b);\n        if (lcm == 0 || lcm == a) {\n\
    \            lcm\n        } else {\n            lcm/a\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuik4o67v.scala:10:23 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mlcm\e[0m = Math.lcm(a, b);\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e[31m   |\e[0m       value\
    \ lcm is not a member of object Math - did you mean Math.log?\n1 error found\n"
  stdout: ''
  timestamp: 1659979942
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Write your code here\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdq9pbf_h.scala:9:59\
    \ ---------------------\e[0m\e[0m\n\e[31m 9 |\e[0m    \e[33mdef\e[0m \e[36mgreatestCommonDivisor\e\
    [0m(\e[36ma\e[0m : \e[35mLong\e[0m, \e[36mb\e[0m : \e[35mLong\e[0m) : \e[35mLong\e\
    [0m = {\n\e[31m\e[31m   |\e[0m                                               \
    \            ^\e[0m\n\e[31m   |\e[0m                                         \
    \                 Found:    Unit\n\e[31m   |\e[0m                            \
    \                              Required: Long\n\e[31m10 |\e[0m        \e[34m//\
    \ Write your code here\e[0m\n\e[31m11 |\e[0m    }\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979942
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var max = 0\n        var gcd = 1\n        while (b != 0) {\n  \
    \          if (a % b == 0) {\n                gcd = b\n                max = a\n\
    \            }\n            a = (a/b).floor.toLong\n            b = (b/gcd).floor.toLong\n\
    \        }\n        gcd\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpntnu1wux.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m                gcd = b\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (b : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpntnu1wux.scala:15:22\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m                max = a\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (a : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpntnu1wux.scala:17:22\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            a = (a/b).floor.toLong\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      value\
    \ floor is not a member of Long.\n\e[31m   |\e[0m      An extension method was\
    \ tried, but could not be fully constructed:\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \          floatWrapper(a./(b))\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpntnu1wux.scala:18:24\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            b = (b/gcd).floor.toLong\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \ value floor is not a member of Long.\n\e[31m   |\e[0m      An extension method\
    \ was tried, but could not be fully constructed:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m          floatWrapper(b./(gcd))\n4 errors found\n"
  stdout: ''
  timestamp: 1659979943
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if( b == 0 )\n            a\n        else\n            greatestCommonDivisor(b,\
    \ a div b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpcad1jhbg.scala:13:39 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            greatestCommonDivisor(b, a div b)\n\e[31m\e\
    [31m   |\e[0m                                     ^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                     value div is not a member of Long\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979942
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val maxValue = math.max(math.abs(a), math.abs(b))\n        if (maxValue\
    \ == 0) {\n            return a\n        }\n        val gcd = if (a > 0 && b <\
    \ 0) b else a\n        val x = math.max(math.abs(a), math.abs(b))\n        while\
    \ (x != maxValue) {\n            if (x % gcd == 0) {\n                return x\n\
    \            }\n            gcd -= 1\n        }\n        return a\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpt4l62ydm.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            gcd -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member\
    \ of Long - did you mean gcd.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979943
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      if (b == 0) 1\n      else if (b == 1) a\n      else if (a < 0 &&\
    \ b < 0) 1\n      else if (a < 0 && b > 0) a\n      else if (a > 0 && b > 0) greatestCommonDivisor(b,\
    \ a%b)\n      else greatestCommonDivisor(b, a%(b+1))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbqp8n9dp.scala:18)\n\tat Problem.main(tmpbqp8n9dp.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979942
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val bigA = BigInt(a)\n        val bigB = BigInt(b)\n        var\
    \ gcd = 1l\n        var m = bigA\n        while(m != 0) {\n            m = bigA\
    \ % bigB\n            gcd = if (m > 0) gcd + 1l else gcd\n            bigA = (bigA\
    \ - m) / bigB\n        }\n        gcd\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp7p8kd68r.scala:17:17 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            bigA = (bigA - m) / bigB\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \ Reassignment to val bigA\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979939
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if ((a < 0) && (b < 0)) -1\n        else if ((a < 0) && (b > 0))\
    \ 0\n        else if ((a > 0) && (b < 0)) 1\n        else { val div = (a % b);\
    \ return div * greatestCommonDivisor(b, a - div) }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmpcr2_k_ih.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmpcr2_k_ih.scala:13)\n\tat Problem$.main(tmpcr2_k_ih.scala:16)\n\
    \tat Problem.main(tmpcr2_k_ih.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979944
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0)\n            return 0\n        var c = a\n\
    \        var d = b\n        var x = 1l\n        do {\n            if (c%d == 0)\n\
    \                break\n            x += 1\n            c /= d\n            d\
    \ *= x\n        } while (true)\n        return x\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpjei9o8dp.scala:15:8 ------------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mdo\e[0m {\n\e[31m\e[31m   |\e[0m      \
    \  ^^\e[0m\n\e[31m   |\e[0m        end of statement expected but 'do' found\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979937
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      if (b == 0)\n          return a\n      else if (a == 0)\n       \
    \   return b\n      else {\n          val gcd = greatestCommonDivisor(b, a % b)\n\
    \          greatestCommonDivisor(a/gcd, a)\n      }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\
    \tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:15)\n\tat Problem$.greatestCommonDivisor(tmp_p47a3oo.scala:1"
  stdout: ''
  timestamp: 1659979945
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val x = a.toLong / b\n        val y = b.toLong / a\n        while(y\
    \ > 0) {\n            val tmp = x\n            x = y\n            y = tmp\n  \
    \      }\n        x\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp97lmtlts.scala:14:14 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            x = y\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val x\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp97lmtlts.scala:15:14 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            y = tmp\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val y\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979937
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val l = a.toLong;\n        val r = b.toLong;\n\n        val a =\
    \ a.toInt;\n        val b = b.toInt;\n\n        var remainder = b\n        var\
    \ gcd : Long = 1\n\n        while (a > 0) {\n            var remainder = a % b\n\
    \            if (remainder != 0) {\n                remainder = a\n          \
    \      gcd = b\n            }\n            a = remainder\n        }\n\n      \
    \  gcd.toLong\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpyoslzar4.scala:13:16 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a.toInt;\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmpyoslzar4.scala:14:16 ---------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b.toInt;\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive \e\
    [33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpyoslzar4.scala:25:14 -----------------------------\e[0m\e\
    [0m\n\e[31m25 |\e[0m            a = remainder\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1659979939
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var n = a / b\n        while(a % b != 0) {\n            a /= b\n\
    \            n += 1\n        }\n        n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbbjmmexm.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            a /= b\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean a.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979946
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0) 1\n        else if (b == 0) 1\n        else greatestCommonDivisor(a\
    \ / b, b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp94x6zpba.scala:16)\n\tat Problem.main(tmp94x6zpba.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979947
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var max = 0\n        var maxdiv = a\n        var min = a\n    \
    \    var mindiv = a\n        while (mindiv > 0) {\n            var tmp = maxdiv\n\
    \            maxdiv = max\n            max = min\n            min = tmp\n    \
    \        mindiv = mindiv div b\n        }\n        return max\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprba3h6vu.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            max = min\n\e[31m\e\
    [31m   |\e[0m                  ^^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (min : Long)\n\e[31m   |\e[0m                  Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprba3h6vu.scala:19:28 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            mindiv = mindiv div b\n\e[31m\e[31m   |\e\
    [0m                     ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                     value\
    \ div is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1659979952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Find largest common divisor\n        // Find GCD of a and b\n\
    \        // Divide b by GCD\n        // Return GCD\n        val gcd = if (b >\
    \ 0) \n            gcd else a % b\n        val rem = a / b\n        if (gcd ==\
    \ 0) {\n            gcd -> rem\n        }\n        else {\n            gcd ->\
    \ gcd % rem -> greatestCommonDivisor(rem, gcd)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpi682i1to.scala:15:12 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            gcd \e[33melse\e[0m a % b\n\e[31m\e[31m \
    \  |\e[0m            ^\e[0m\n\e[31m   |\e[0m            Recursive \e[33mvalue\e\
    [0m \e[35mgcd\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979947
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var result = 1\n        var gcd = 1\n        while (gcd <= a &&\
    \ gcd <= b) {\n            if (a % gcd == 0 && b % gcd == 0) {\n             \
    \   result = gcd\n            }\n            gcd = gcd+1\n        }\n        return\
    \ result\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0) 1\n        else {\n            val gcd = greatestCommonDivisor(b,\
    \ (a/b).floor)\n            if (a % gcd == 0) {\n                gcd\n       \
    \     } else {\n                gcd(a)\n            }\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2kyhzi8r.scala:12:53 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            \e[33mval\e[0m \e[36mgcd\e[0m = greatestCommonDivisor(b,\
    \ (a/b).floor)\n\e[31m\e[31m   |\e[0m                                        \
    \       ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      value floor is not a member of\
    \ Long.\n\e[31m   |\e[0m      An extension method was tried, but could not be\
    \ fully constructed:\n\e[31m   |\e[0m\n\e[31m   |\e[0m          floatWrapper(a./(b))\n\
    \e[31m\e[31m-- [E050] Type Error: /tmp/tmp2kyhzi8r.scala:16:16 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                gcd(a)\n\e[31m\e[31m   |\e[0m       \
    \         ^^^\e[0m\n\e[31m   |\e[0m                \e[33mvalue\e[0m \e[35mgcd\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979950
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < 0 || b < 0) {\n            throw new IllegalArgumentException(\"\
    Both numbers must be positive\")\n        }\n        val gcd = if (b == 0) a else\
    \ greatestCommonDivisor(b, a % b)\n        if (gcd == 0) gcd else a + gcd\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpdcvitydt.scala:17)\n\tat Problem.main(tmpdcvitydt.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979956
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val q = a / b\n        a -= q * b\n        if (a<0) a else b\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp85sxhaol.scala:11:10 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        a -= q * b\n\e[31m\e[31m   |\e[0m        ^^^^\e\
    [0m\n\e[31m   |\e[0m        value -= is not a member of Long - did you mean a.!=?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1659979956
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a == 0 || b == 0) \n            1l\n        else\n         \
    \   (a / greatestCommonDivisor(b % a, b))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc69cgigw.scala:16)\n\tat Problem.main(tmpc69cgigw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979957
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val r1 = a / b\n        val r2 = b / r1\n        if (r2 == 0) r1\
    \ else r2\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmpur18iv0j.scala:11)\n\
    \tat Problem$.main(tmpur18iv0j.scala:15)\n\tat Problem.main(tmpur18iv0j.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979957
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // If both a & b are 0, return 0\n        if(a==0 && b==0) return\
    \ 0\n        // If both a & b are 1, return 1\n        if(a==1 && b==1) return\
    \ 1\n        val min = a\n        val max = b\n        var minDivisor = 1\n  \
    \      var maxDivisor = 1\n        while(minDivisor <= maxDivisor) {\n       \
    \     val nextMax = max / minDivisor\n            if(min % minDivisor == 0) {\n\
    \                max = nextMax\n            }\n            else {\n          \
    \      min = nextMax\n            }\n            maxDivisor += 1\n        }\n\
    \        return max\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp0_o9q2gr.scala:21:20 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                max = nextMax\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val max\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp0_o9q2gr.scala:24:20\
    \ -----------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                min\
    \ = nextMax\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                Reassignment to val min\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979953
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val a = a.toInt;\n        val b = b.toInt;\n        if ((a > 0)\
    \ ^ (b > 0)) 0l\n        else (b div a) l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpyp4_1y4o.scala:13:24 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33melse\e[0m (b div a) l\n\e[31m\e[31m   |\e\
    [0m                        ^\e[0m\n\e[31m   |\e[0m                        expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpyp4_1y4o.scala:10:16 ---------------------------\e[0m\e[0m\n\e[31m10\
    \ |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a.toInt;\n\e[31m\e[31m   |\e[0m\
    \                ^\e[0m\n\e[31m   |\e[0m                Recursive \e[33mvalue\e\
    [0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E045] Cyclic Error:\
    \ /tmp/tmpyp4_1y4o.scala:11:16 ---------------------------\e[0m\e[0m\n\e[31m11\
    \ |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b.toInt;\n\e[31m\e[31m   |\e[0m\
    \                ^\e[0m\n\e[31m   |\e[0m                Recursive \e[33mvalue\e\
    [0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979952
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var gcd : Long = 1\n        var a : Long = a\n        var b : Long\
    \ = b\n\n        while (a != 0) {\n            val q = a / b\n            a =\
    \ a % b\n            b = q\n            gcd = q + gcd\n        }\n        gcd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E039] Reference Error: /tmp/tmp7o32wc_g.scala:11:23 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mvar\e[0m \e[36ma\e[0m : \e[35mLong\e[0m\
    \ = a\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m   \
    \          a is a forward reference extending over the definition of a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E039] Reference Error: /tmp/tmp7o32wc_g.scala:12:23 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mvar\e[0m \e[36mb\e[0m : \e[35mLong\e[0m\
    \ = b\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m   \
    \          b is a forward reference extending over the definition of b\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979955
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        while (!a.isDivModN(b)(a)) {\n            a -= 1\n        }\n \
    \       while (!b.isDivModN(a)(b)) {\n            b -= 1\n        }\n        a.quotDiv(b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_sjwioab.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mwhile\e[0m (!a.isDivModN(b)(a)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ value isDivModN is not a member of Long\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp_sjwioab.scala:11:14 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m            a -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value -= is not a member of Long - did you mean a.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_sjwioab.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mwhile\e[0m (!b.isDivModN(a)(b)) {\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \ value isDivModN is not a member of Long\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp_sjwioab.scala:14:14 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m            b -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value -= is not a member of Long - did you mean b.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_sjwioab.scala:16:10 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        a.quotDiv(b)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value quotDiv is not a member of Long\n5 errors found\n"
  stdout: ''
  timestamp: 1659979962
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        while(a != 0) {\n            val remainder = a % b\n          \
    \  a = b\n            b = remainder\n        }\n        b\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpzb1c9ifi.scala:12:14 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            a = b\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpzb1c9ifi.scala:13:14 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            b = remainder\n\e[31m\e[31m   |\e[0m    \
    \        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val b\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979954
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if ((a < 0) && (b < 0)) \n            return -1\n        if ((b\
    \ < 0) && (a < 0)) \n            return -1\n        if ((b == 0) && (a == 0))\
    \ \n            return 0\n        if ((a == 0) && (b == 0)) \n            return\
    \ 1\n        \n        val div = a / b\n        var i = 1\n        while (i <=\
    \ div) {\n            val temp = i\n            i = i + b\n            a = temp\n\
    \        }\n        \n        i\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoln42jux.scala:23:16\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m            i = i + b\n\e[31m\e\
    [31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m                Found:\
    \    Long\n\e[31m   |\e[0m                Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpoln42jux.scala:24:14 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            a = temp\n\e[31m\e[31m   |\e[0m         \
    \   ^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979960
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a%b==0) a else greatestCommonDivisor(b,a%b)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpt0j5iy1_.scala:13)\n\tat Problem.main(tmpt0j5iy1_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979914
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val x = a.toInt\n        val y = b.toInt\n        if (x == 0) y\n\
    \        else greatestCommonDivisor(x - 1, y) % (x + y)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpa3duozcm.scala:16)\n\tat Problem.main(tmpa3duozcm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979961
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Iterate over all the factors of a\n        for(x <- 1 to a)\
    \ {\n            // If the divisor of both numbers is greater than b\n       \
    \     if(a % x == 0 && a/x != b)\n                // Break the loop since a divides\
    \ both of them \n                break\n        }\n        // The GCD of both\
    \ the numbers is that factor\n        a/x\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9k2gbdgc.scala:11:22\
    \ --------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mfor\e[0m(x <- \e\
    [31m1\e[0m to a) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (a : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp9k2gbdgc.scala:15:16 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m                break\n\e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e\
    [31m   |\e[0m                Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmp9k2gbdgc.scala:18:10 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        a/x\n\e[31m\e[31m   |\e[0m          ^\e[0m\n\e\
    [31m   |\e[0m          Not found: x\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979959
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val n = a / b\n        if (n < 1) {\n            return b\n   \
    \     } else {\n            greatestCommonDivisor(b, a%b)\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8li5nyjd.scala:18)\n\tat Problem.main(tmp8li5nyjd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979960
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var result = 1L\n        while(b > 0) {\n            val t = a\n\
    \            a = b % a\n            b = t\n        }\n        result\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp5eb_4p_v.scala:13:14 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            a = b % a\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp5eb_4p_v.scala:14:14 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            b = t\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979955
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if( a == 0 || b == 0 ) 1\n        else greatestCommonDivisor( b%a,\
    \ a%b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbdhdsy98.scala:15)\n\tat Problem.main(tmpbdhdsy98.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979961
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if ((b / a) != 0) {\n            greatestCommonDivisor(b, a % b)\n\
    \        } else {\n            a\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8mzpgaph.scala:17)\n\tat Problem.main(tmp8mzpgaph.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979963
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var d : Long = 1\n        // loop while divisor is less than or\
    \ equal to b\n        while (d < b)\n        {\n            // if the divisor\
    \ is less than or equal to a\n            if (a % d == 0)\n            {\n   \
    \             // increment divisor by the remainder of dividing a by d\n     \
    \           d += b % d\n            }\n            else\n            {\n     \
    \           // decrement divisor by the remainder of dividing a by d\n       \
    \         d -= b % d\n            }\n        }\n        // return value of divisor\
    \ after loop finishes\n        return d\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979966
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < b) {\n            val m = a / b\n            val k = a\
    \ % b\n            greatestCommonDivisor(b, k)\n        }\n        else if (b\
    \ == 1) {\n            a\n        }\n        else {\n            val m = b / a\n\
    \            val k = b % a\n            greatestCommonDivisor(a, k)\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979967
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val r = (a-b)\n        if (0 == r) {\n            return a\n  \
    \      }\n        else {\n            val m = ((a / b) >>> 0) % b\n          \
    \  val q = a / b\n            return greatestCommonDivisor(b, r)\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\
    \tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:17)\n\tat Problem$.greatestCommonDivisor(tmp74ftu0f7.scala:1"
  stdout: ''
  timestamp: 1659979965
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val s = a + b\n        val div = a / b\n        val d = (b / a)\
    \ if (s > div) 1 else div\n        return d * (s - div)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp0_f0fko8.scala:12:24 -----------------------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e[36md\e[0m = (b / a) \e[33mif\e\
    [0m (s > div) \e[31m1\e[0m \e[33melse\e[0m div\n\e[31m\e[31m   |\e[0m        \
    \                ^^\e[0m\n\e[31m   |\e[0m                        end of statement\
    \ expected but 'if' found\n1 error found\n"
  stdout: ''
  timestamp: 1659979960
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val max = (max : Long)(a.toLong + b.toLong)\n        val aToB =\
    \ a * b.toLong\n        val aToBMinus1 = a - aToB\n        while (a.toLong !=\
    \ 1l) {\n            val gcd = aToBMinus1.toLong / a.toLong\n            a -=\
    \ gcd\n            aToBMinus1 -= gcd\n            max = (max : Long)(max.toLong\
    \ + gcd.toLong)\n        }\n        if (max.toLong == 1l) {\n            1l\n\
    \        } else {\n            max\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpjkdyb0ri.scala:10:19 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mmax\e[0m = (max : \e[35mLong\e\
    [0m)(a.toLong + b.toLong)\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\e\
    [31m   |\e[0m                   Recursive \e[33mvalue\e[0m \e[35mmax\e[0m needs\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjkdyb0ri.scala:15:14\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            a -= gcd\n\e\
    [31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value -=\
    \ is not a member of Long - did you mean a.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpjkdyb0ri.scala:16:23 ------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m            aToBMinus1 -= gcd\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m          value -= is not a member of Long - did you mean\
    \ aToBMinus1.!=?\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpjkdyb0ri.scala:17:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            max = (max\
    \ : \e[35mLong\e[0m)(max.toLong + gcd.toLong)\n\e[31m\e[31m   |\e[0m         \
    \          ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                   \e[33mvalue\e[0m\
    \ \e[35mmax\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659979969
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val x = a / b\n        val y = b / x\n        x * y\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmpcs298d15.scala:11)\n\
    \tat Problem$.main(tmpcs298d15.scala:15)\n\tat Problem.main(tmpcs298d15.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979970
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      val a = a / b\n      val b = a % b\n      a * b\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpll6s3kpz.scala:10:14 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m      \e[33mval\e[0m \e[36ma\e[0m = a / b\n\e[31m\e[31m\
    \   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Recursive \e[33mvalue\e\
    [0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979964
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        def gcd(a : Long, c : Long) : Long = {\n            if (a == 0)\
    \ c\n            else gcd(a % c, c)\n        }\n        val temp = a\n       \
    \ val ret = b\n        val div = gcd(temp, ret % temp)\n        val rest = ret\
    \ / div\n        ret = div * rest\n        ret\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpwytnis4d.scala:18:12 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        ret = div * rest\n\e[31m\e[31m   |\e[0m     \
    \   ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Reassignment to val ret\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979965
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var l1 = a / b\n        var l2 = (b / a).abs\n        while (l2\
    \ == 0) (l2 = (b / a).abs)\n        l1 *= b\n        l2 -= 1\n        l1\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpipxx41hh.scala:18)\n\tat Problem.main(tmpipxx41hh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979973
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0) 1\n        else greatestCommonDivisor(b,\
    \ a % b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpk6m5pi1x.scala:15)\n\tat Problem.main(tmpk6m5pi1x.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659794608
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b.isZero) 1l\n        else greatestCommonDivisor(b, a % b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdt5b_u47.scala:10:14 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mif\e[0m (b.isZero) \e[31m1l\e[0m\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value isZero\
    \ is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1659979972
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val gcd = if (b == 0) a else greatestCommonDivisor(b, a % b)\n\
    \        gcd + (a / gcd + (b / gcd + (a % b)))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmpy0b6dl6_.scala:11)\n\
    \tat Problem$.greatestCommonDivisor(tmpy0b6dl6_.scala:10)\n\tat Problem$.greatestCommonDivisor(tmpy0b6dl6_.scala:10)\n\
    \tat Problem$.greatestCommonDivisor(tmpy0b6dl6_.scala:10)\n\tat Problem$.main(tmpy0b6dl6_.scala:14)\n\
    \tat Problem.main(tmpy0b6dl6_.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        def gcd(x: Long, y: Long) = {\n            if (x == 0 || y == 0)\
    \ {\n                return 0\n            }\n            if (x == y) {\n    \
    \            return x\n            }\n            gcd(y, x % y)\n        }\n \
    \       gcd(a, b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E089] Syntax Error: /tmp/tmpyiscodrr.scala:12:16 ---------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m                \e[33mreturn\e[0m \e[31m0\e[0m\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m               \e[33mmethod\e\
    [0m \e[35mgcd\e[0m has a return statement; it needs a result type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E089] Syntax Error: /tmp/tmpyiscodrr.scala:15:16 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m                \e[33mreturn\e[0m x\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m               \e[33mmethod\e\
    [0m \e[35mgcd\e[0m has a return statement; it needs a result type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E044] Cyclic Error: /tmp/tmpyiscodrr.scala:17:12 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            gcd(y, x % y)\n\e[31m\e[31m   |\e[0m    \
    \        ^\e[0m\n\e[31m   |\e[0m            Overloaded or recursive \e[33mmethod\e\
    [0m \e[35mgcd\e[0m needs return type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979968
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var i = a\n        var j = b\n        while(i != 0 && j != 0) {\n\
    \            if((i % j) == 0) {\n                i /= j\n            } else {\n\
    \                j /= i\n            }\n        }\n        i\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp8au8funj.scala:22)\n\tat Problem.main(tmp8au8funj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979973
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a == 0 || b == 0) 0\n        else greatestCommonDivisor(a /\
    \ b, b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpog_0z8hu.scala:14)\n\tat Problem.main(tmpog_0z8hu.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val x = (a.toInt * b.toInt)\n        val y = (a.toInt * b.toInt).shrToInt(1)\n\
    \        if (y == 0) x else greatestCommonDivisor(x, y)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppnq5jdgk.scala:11:36 ------------------------\e\
    [0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36my\e[0m = (a.toInt * b.toInt).shrToInt(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value shrToInt is not a member of Int\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659979974
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // base case: divisor is 1\n        if (b == 0) return a\n    \
    \    // base case: divisor is greater than a\n        if (b > a) return greatestCommonDivisor(b,\
    \ a - b)\n        // recursive case: solve the equation `a / b` by subtracting\
    \ `a` from `b`\n        val gcd = greatestCommonDivisor(b, a % b)\n        if\
    \ (gcd != 0) {\n            gcd - a\n        } else {\n            0\n       \
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:13)\n\
    \tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:15)\n\tat Problem$.greatestCommonDivisor(tmptiltvjcy.scala:1"
  stdout: ''
  timestamp: 1659979975
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var res = 1\n        while (b != 0) {\n            if (b % a ==\
    \ 0) {\n                res = a\n            }\n            a = a * b\n      \
    \  }\n        if (a != 0) {\n            res = a\n        }\n        return res;\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwq3kdo5j.scala:13:22\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m                res = a\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (a : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpwq3kdo5j.scala:15:14 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            a = a * b\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwq3kdo5j.scala:18:18 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            res = a\n\e[31m\e[31m   |\e[0m          \
    \        ^\e[0m\n\e[31m   |\e[0m                  Found:    (a : Long)\n\e[31m\
    \   |\e[0m                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val q = math.gcd(a, b)\n        if (q == 0) 1\n        else if\
    \ (q == 1) a\n        else b\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpun2k1bsr.scala:10:21 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mq\e[0m = math.gcd(a, b)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \      value gcd is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659979976
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val one = Long.MaxValue\n        (a / b) match {\n            case\
    \ (n, rest) => if (n != one) n\n            else greatestCommonDivisor(one, b)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7enfljf7.scala:12:44\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m            \e[33mcase\e[0m (n,\
    \ rest) => \e[33mif\e[0m (n != one) n\n\e[31m\e[31m   |\e[0m                 \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \                  Found:    (n : Any)\n\e[31m   |\e[0m                      \
    \                      Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979978
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0)\n            return a\n        else\n            greatestCommonDivisor(b,\
    \ a % b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val ans = long(a/b)\n        if (a%b != 0) {\n            ans *=\
    \ greatestCommonDivisor(b,a%b)\n        }\n        return ans\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt7kf3vai.scala:10:18 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mans\e[0m = long(a/b)\n\e\
    [31m\e[31m   |\e[0m                  ^^^^\e[0m\n\e[31m   |\e[0m              \
    \    Not found: long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979972
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a < 1 || b < 1) return 1\n        val x  = a.toInt;\n      \
    \  val y  = b.toInt;\n        while(y>1) {\n            val t = y % x;\n     \
    \       x = y;\n            y = t;\n        }\n        return x\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpoagjp1g0.scala:15:14 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            x = y;\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val x\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmpoagjp1g0.scala:16:14 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            y = t;\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val y\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979975
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val a = a - 1\n        val b = b - 1\n        val max = (a | b)\
    \ max a\n        while (b != 0) {\n            if (a % b == 0) {\n           \
    \     return b\n            }\n            b = b & (a - 1)\n        }\n      \
    \  return max\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpsq2ukdhl.scala:10:16 ---------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = a - \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35ma\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E045]\
    \ Cyclic Error: /tmp/tmpsq2ukdhl.scala:11:16 ---------------------------\e[0m\e\
    [0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = b - \e[31m1\e[0m\n\e\
    [31m\e[31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mb\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpsq2ukdhl.scala:17:14 -----------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            b = b & (a - \e[31m1\e[0m)\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to\
    \ val b\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1659979974
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val lcm = a / b\n        val gcd = a % b\n        if ((lcm * lcm)\
    \ == gcd)\n            lcm\n        else\n            greatestCommonDivisor(lcm,\
    \ gcd)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3_jktg2_.scala:18)\n\tat Problem.main(tmp3_jktg2_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979981
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a%b == 0) a\n        else greatestCommonDivisor(b, a % b)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpu4z0bpax.scala:14)\n\tat Problem.main(tmpu4z0bpax.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979982
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0)\n            1\n        else if (b == 0)\n\
    \            a\n        else\n            greatestCommonDivisor(b, a % b)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpib7i2vkx.scala:19)\n\tat Problem.main(tmpib7i2vkx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979983
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // write your solution here\n        var d = a % b\n        var\
    \ r = b % a\n        while (r != 0) {\n            d = a % r\n            r =\
    \ b % r\n        }\n        return d\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9xhdewmm.scala:20)\n\tat Problem.main(tmp9xhdewmm.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979982
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val x = 0l\n        val y = 1l\n        while (x < y) {\n     \
    \       if (a % x == 0 && b % y == 0) {\n                return x\n          \
    \  }\n            x = x + 1\n            y = y + 1\n        }\n        return\
    \ 0l\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp0b15tnyu.scala:16:14 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            x = x + \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ x\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp0b15tnyu.scala:17:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            y = y +\
    \ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            Reassignment to val y\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1659979979
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      var gcd = 0\n      a match {\n        case _ if b < 0 => a\n    \
    \    case _ if b == 0 => b\n        case _ => a / b match {\n          case 0\
    \ => 0\n          case x => gcd\n        }\n      }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpud0xvymk.scala:21)\n\tat Problem.main(tmpud0xvymk.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        while (b != 0) {\n            val rem = a % b\n            a =\
    \ b\n            b = rem\n        }\n        return a\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp3ilrb_93.scala:12:14 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            a = b\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp3ilrb_93.scala:13:14 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            b = rem\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979980
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a%b == 0)\n            return b\n        else\n           \
    \ return greatestCommonDivisor(b,a%b)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val aBit = a & (1l << 31) >> 31\n        val bBit = b & (1l <<\
    \ 31) >> 31\n        if(aBit == 0 && bBit == 0)\n            return 1l\n     \
    \   if(aBit == 0 || bBit == 0)\n            return 0l\n        val temp = aBit\
    \ * b\n        val temp2 = a & b\n        val temp3 = a ^ b\n        val temp\
    \ = temp + temp2 + temp3\n        return (1l << 31) >> 31 & temp\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmput8zy4kq.scala:19:12 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mtemp\e[0m = temp + temp2\
    \ + temp3\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mtemp is already defined as \e[33mvalue\e[0m \e[35mtemp\e[0m\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined\
    \ in the same group of toplevel definitions\n1 error found\n"
  stdout: ''
  timestamp: 1659979981
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val rem = a % b\n        if (rem == 0) {\n            b // return\
    \ greatest common divisor\n        }\n        else {\n            greatestCommonDivisor(b,\
    \ a)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659979993
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var r = a / b\n        while (r > 1) {\n            r = r % b\n\
    \            a = b\n            b = r\n        }\n        r\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp3_0rv552.scala:13:14 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            a = b\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmp3_0rv552.scala:14:14 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            b = r\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if ((a > b) || (b < a)) {\n            throw new IllegalArgumentException(s\"\
    Can't calculate GCD of ${a} and $b because a > b or b < a\")\n        }\n    \
    \    if (a * a == 0) (b * b == 0) else (a * b == 0) ? (a % b) : (a * b + greatestCommonDivisor(b\
    \ % a, a))\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpv67a41ls.scala:13:97 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (a * a == \e[31m0\e[0m) (b * b\
    \ == \e[31m0\e[0m) \e[33melse\e[0m (a * b == \e[31m0\e[0m) ? (a % b) : (\e[35ma\e\
    [0m \e[35m*\e[0m \e[35mb\e[0m \e[35m+\e[0m \e[35mgreatestCommonDivisor\e[0m(b\
    \ % a, a))\n\e[31m\e[31m   |\e[0m                                            \
    \                                                     ^\e[0m\n\e[31m   |\e[0m\
    \                                             ')' expected, but '(' found\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv67a41ls.scala:13:25 --------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (a * a == \e[31m0\e[0m) (b * b\
    \ == \e[31m0\e[0m) \e[33melse\e[0m (a * b == \e[31m0\e[0m) ? (a % b) : (\e[35ma\e\
    [0m \e[35m*\e[0m \e[35mb\e[0m \e[35m+\e[0m \e[35mgreatestCommonDivisor\e[0m(b\
    \ % a, a))\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Found:    Boolean\n\e[31m   |\e[0m     \
    \                    Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpv67a41ls.scala:13:74 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mif\e[0m (a * a == \e[31m0\e[0m) (b * b == \e[31m0\e[0m) \e[33melse\e\
    [0m (a * b == \e[31m0\e[0m) ? (a % b) : (\e[35ma\e[0m \e[35m*\e[0m \e[35mb\e[0m\
    \ \e[35m+\e[0m \e[35mgreatestCommonDivisor\e[0m(b % a, a))\n\e[31m\e[31m   |\e\
    [0m                                                                          ^\e\
    [0m\n\e[31m   |\e[0m                                                       Not\
    \ found: type +\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpv67a41ls.scala:13:55\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (a\
    \ * a == \e[31m0\e[0m) (b * b == \e[31m0\e[0m) \e[33melse\e[0m (a * b == \e[31m0\e\
    [0m) ? (a % b) : (\e[35ma\e[0m \e[35m*\e[0m \e[35mb\e[0m \e[35m+\e[0m \e[35mgreatestCommonDivisor\e\
    [0m(b % a, a))\n\e[31m\e[31m   |\e[0m                                        \
    \  ^^^^^^^^^^"
  stdout: ''
  timestamp: 1659979992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        while (a != 0) {\n            val q = a / b\n            a = b\n\
    \            b = q\n        }\n        b\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpjlxg3bz5.scala:12:14 -----------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            a = b\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpjlxg3bz5.scala:13:14 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            b = q\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1659979985
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      val lcm = a % b\n      lcm\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkqvmllpo.scala:14)\n\tat Problem.main(tmpkqvmllpo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979991
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a%b == 0)\n            a\n        else\n            greatestCommonDivisor(b,\
    \ a % b)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpr_1hmq5c.scala:16)\n\tat Problem.main(tmpr_1hmq5c.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var res = 0\n        while (a != 0) {\n            if (b == 0)\
    \ return 0\n            b /= a\n        }\n        res /= b\n        res\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr6eirjp2.scala:13:14 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m            b /= a\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^\e[0m\n\e[31m   |\e[0m            value /= is not a member of Long - did\
    \ you mean b.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpr6eirjp2.scala:15:12\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        res /= b\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        value /= is not a member\
    \ of Int - did you mean Int.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1659979994
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a * b == 0) a else greatestCommonDivisor(b, a % b)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < 0 || b < 0) {\n            throw new IllegalArgumentException(\"\
    Integers cannot have negative values.\");\n        }\n        if (b == 0) {\n\
    \            return a;\n        }\n        if (a % b == 0) {\n            return\
    \ greatestCommonDivisor(a, b/b)\n        } else {\n            return greatestCommonDivisor(b/a,\
    \ b);\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\
    \tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:19)\n\tat Problem$.greatestCommonDivisor(tmpsvw8x3q7.scala:1"
  stdout: ''
  timestamp: 1659979994
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a == 0) b\n        else greatestCommonDivisor(b, a % b)\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.ArithmeticException: / by zero\n\tat Problem$.greatestCommonDivisor(tmp9pxx3j64.scala:11)\n\
    \tat Problem$.main(tmp9pxx3j64.scala:14)\n\tat Problem.main(tmp9pxx3j64.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979993
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a%b == 0) a else greatestCommonDivisor(b, a % b)\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l))\
    \ == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3u1bbcbo.scala:13)\n\tat Problem.main(tmp3u1bbcbo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979994
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (b == 0) a\n        else greatestCommonDivisor(b, a % b)\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979885
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0 || b == 0)\n            return 1\n        val max =\
    \ (a max b)\n        if (max < a)\n            return 1\n        if (max < b)\n\
    \            return b\n        var c = 1\n        while (max / c > 0) {\n    \
    \        c += 1;\n        }\n        c\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgcm0m9a5.scala:24)\n\tat Problem.main(tmpgcm0m9a5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979997
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a < 0 || b < 0) {\n            throw new IllegalArgumentException(\"\
    One or more arguments must be positive\")\n        }\n        if (a == 0 || b\
    \ == 0) {\n            return 0\n        }\n        var gcd = 1\n        while\
    \ (b != 0) {\n            if (a % b == 0) {\n                gcd = b\n       \
    \     }\n            b = b div a\n            a = a div a\n        }\n       \
    \ gcd\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdk8chsmn.scala:19:22\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m                gcd = b\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (b : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdk8chsmn.scala:21:18\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            b = b div a\n\
    \e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e[31m   |\e[0m             \
    \   value div is not a member of Long\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpdk8chsmn.scala:22:18 ------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m            a = a div a\n\e[31m\e[31m   |\e[0m                ^^^^^\e[0m\n\e\
    [31m   |\e[0m                value div is not a member of Long\n3 errors found\n"
  stdout: ''
  timestamp: 1659979998
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val commonDivisor = a.abs().gcd(b.abs())\n        commonDivisor\
    \ == 0 ? a : commonDivisor\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpkykq2_a0.scala:10:30 -----------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36mcommonDivisor\e[0m = a.abs().gcd(b.abs())\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^\e[0m\n\e[31m   |\e[0m \
    \                  \e[33mmethod\e[0m \e[35mabs\e[0m in \e[33mclass\e[0m \e[35mRichLong\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpkykq2_a0.scala:11:33 ------------------------\e[0m\e[0m\n\e[31m11 |\e\
    [0m        commonDivisor == \e[31m0\e[0m ? a : \e[35mcommonDivisor\e[0m\n\e[31m\e\
    [31m   |\e[0m                                 ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                 Not found: type commonDivisor\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1659979992
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val l = new mutable.LinkedList[Long]()\n        val a1 = new mutable.LinkedList[Long]()\n\
    \        val a2 = new mutable.LinkedList[Long]()\n        var i = a\n        var\
    \ j = b\n        while(i <= j) {\n            l.add(j)\n            i +=1\n  \
    \      }\n        while(l.nonEmpty && a.nonEmpty) {\n            a1.add(l.remove)\n\
    \            a2.add(a.remove)\n            a.remove -= 1\n        }\n        while(l.nonEmpty\
    \ && a2.nonEmpty) {\n            a1.add(l.remove)\n            a.remove -= 1\n\
    \        }\n        a1.removeAll(a2)\n        val g = a1.head\n        a1.removeAll(a2)\n\
    \        return g\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6l35wkk1.scala:10:20 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mval\e[0m \e[36ml\e[0m = \e[33mnew\e[0m\
    \ mutable.LinkedList[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m               \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6l35wkk1.scala:11:21\
    \ ------------------------\e[0m\e[0m\n\e[31m11 |\e[0m        \e[33mval\e[0m \e\
    [36ma1\e[0m = \e[33mnew\e[0m mutable.LinkedList[\e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp6l35wkk1.scala:12:21\
    \ ------------------------\e[0m\e[0m\n\e[31m12 |\e[0m        \e[33mval\e[0m \e\
    [36ma2\e[0m = \e[33mnew\e[0m mutable.LinkedList[\e[35mLong\e[0m]()\n\e[31m\e[31m\
    \   |\e[0m                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6l35wkk1.scala:22:14\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            a.remove -= \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m  \
    \          value remove is not a member of Long\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp6l35wkk1.scala:26:14 ------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m            a.remove -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value remove is not a member of Long\n\
    5 errors found\n"
  stdout: ''
  timestamp: 1659979999
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val divisor = a / b\n        if (divisor < 1) {\n            1\n\
    \        } else {\n            greatestCommonDivisor(b,divisor)\n        }\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwmyyom03.scala:19)\n\tat Problem.main(tmpwmyyom03.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979998
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0)\n            b\n        else if (b == 0)\n        \
    \    a\n        else {\n            def gcd(a : Long, b : Long) : Long = {\n \
    \               if (b == 0)\n                    a\n                else {\n \
    \                   val tmp = greatestCommonDivisor(b, a % b)\n              \
    \      gcd(b, tmp)\n                }\n            }\n            gcd(a, b)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1659980001
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        while (true) {\n            if (b % a == 0) return a\n        \
    \    a -= 1\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2s3wlula.scala:12:14 ------------------------\e\
    [0m\e[0m\n\e[31m12 |\e[0m            a -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean a.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659979998
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0) {\n            return b\n        }\n        val commonDivisor\
    \ = math.max(gcd (a.toInt, b.toInt), 1)\n        return commonDivisor.toLong *\
    \ commonDivisor\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpv4nbj1b5.scala:13:37 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mcommonDivisor\e[0m = math.max(gcd\
    \ (a.toInt, b.toInt), \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   \
    \                  ^^^\e[0m\n\e[31m   |\e[0m                                 \
    \    Not found: gcd\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659979994
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if (a == 0) return b\n        if (b == 0) return a\n        val\
    \ r : Long = greatestCommonDivisor(b, a % b)\n        a / r\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpeo8svbq5.scala:17)\n\tat Problem.main(tmpeo8svbq5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1659979999
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n      val d = scala.math.gcd(a, b)\n      d match {\n        case 0 =>\
    \ d\n        case a => (a / b).floor\n      }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxipsfztj.scala:10:25 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m      \e[33mval\e[0m \e[36md\e[0m = scala.math.gcd(a,\
    \ b)\n\e[31m\e[31m   |\e[0m              ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \              value gcd is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1659980000
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        var maxDivisor = 0\n        val one = math.pow(a, 1)\n        val\
    \ two = math.pow(b, 2)\n        val three = math.pow(b, 3)\n        val five =\
    \ math.pow(b, 5)\n        val minTwo = math.min(a, b)\n        val minThree =\
    \ math.min(a, a)\n        val minFive = math.min(a, a)\n\n        var remainder\
    \ = one\n        var divisor = two\n        while (remainder > one) {\n      \
    \      divisor = divisor + two\n            if (divisor > five) {\n          \
    \      divisor = five\n            }\n            remainder = remainder - one\n\
    \        }\n        while (remainder > two) {\n            divisor = divisor +\
    \ three\n            if (divisor > five) {\n                divisor = five\n \
    \           }\n            remainder = remainder - two\n        }\n        while\
    \ (remainder > three) {\n            divisor = divisor + five\n            if\
    \ (divisor > five) {\n                divisor = five\n            }\n        \
    \    remainder = remainder - three\n        }\n        while (remainder > five)\
    \ {\n            divisor = divisor + minFive\n            remainder = remainder\
    \ - five\n        }\n        while (remainder > minTwo) {\n            divisor\
    \ = divisor + minThree\n            remainder = remainder - minTwo\n        }\n\
    \        while (remainder > minThree) {\n            divisor = divisor + minTwo\n\
    \            remainder = remainder - minThree\n        }\n        remainder\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyjlr8045.scala:54:8\
    \ ---------------------\e[0m\e[0m\n\e[31m54 |\e[0m        remainder\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (remainder\
    \ : Double)\n\e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1659980000
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a < 0 || b < 0)\n            return -1l\n        if(a == 0 ||\
    \ b == 0)\n            return 0\n        var gcd = 1\n        var remainder =\
    \ a % b\n        while(remainder != 0) {\n            gcd = remainder\n      \
    \      remainder = b % gcd\n        }\n        return gcd\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu8k6qh0j.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            gcd = remainder\n\
    \e[31m\e[31m   |\e[0m                  ^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \           Found:    (remainder : Long)\n\e[31m   |\e[0m                  Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1659980000
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val gcd = a.abs max b.abs\n        if (gcd < a.abs) {\n       \
    \     gcd * greatestCommonDivisor(b, (gcd.toInt))\n        } else {\n        \
    \    gcd * greatestCommonDivisor(a, (gcd.toInt))\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n\
    \    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n    assert(greatestCommonDivisor((49l),\
    \ (14l)) == (7l));\n    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\
    \tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:14)\n\tat Problem$.greatestCommonDivisor(tmpfjgui61n.scala:1"
  stdout: ''
  timestamp: 1659980001
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        if(a.mod(b).equals(0)) a else greatestCommonDivisor(b.quot(a),\
    \ a)\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphchw3auq.scala:10:13 ------------------------\e\
    [0m\e[0m\n\e[31m10 |\e[0m        \e[33mif\e[0m(a.mod(b).equals(\e[31m0\e[0m))\
    \ a \e[33melse\e[0m greatestCommonDivisor(b.quot(a), a)\n\e[31m\e[31m   |\e[0m\
    \           ^^^^^\e[0m\n\e[31m   |\e[0mvalue mod is not a member of Long, but\
    \ could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mThe following import might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmphchw3auq.scala:10:62 ------------------------\e[0m\e[0m\n\
    \e[31m10 |\e[0m        \e[33mif\e[0m(a.mod(b).equals(\e[31m0\e[0m)) a \e[33melse\e\
    [0m greatestCommonDivisor(b.quot(a), a)\n\e[31m\e[31m   |\e[0m               \
    \                                             ^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ quot is not a member of Long, but could be made available as an extension method.\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mThe following import might fix the problem:\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\e[31m\
    \   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1659980002
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        // Use a while loop to find the greatest common divisor\n     \
    \   var max = 0L\n        var m = 1L\n        while (b != 0) {\n            //\
    \ Increment m if b divides a\n            if (b % a == 0) {\n                m\
    \ += 1\n            }\n            // Decrement b if a divides b\n           \
    \ else {\n                b /= a\n            }\n            // Update max if\
    \ m is greater than max\n            if (m > max) {\n                max = m\n\
    \            }\n        }\n        max\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(greatestCommonDivisor((3l), (7l)) == (1l));\n    assert(greatestCommonDivisor((10l),\
    \ (15l)) == (5l));\n    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n\
    \    assert(greatestCommonDivisor((144l), (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpc9osk4t3.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                b /= a\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^\e[0m\n\e[31m   |\e[0m                value /= is not a member of\
    \ Long - did you mean b.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1659980002
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Return a greatest common divisor of two integers a and b\n    // >>>\
    \ greatestCommonDivisor((3l), (5l))\n    // (1l)\n    // >>> greatestCommonDivisor((25l),\
    \ (15l))\n    // (5l)\n    def greatestCommonDivisor(a : Long, b : Long) : Long\
    \ = {\n        val min = a\n        val max = b\n        val gcd : Long = min\
    \ match {\n            case _ if (a == max) => max\n            case _ if (b ==\
    \ min) => min\n            case _ if ((a % b) == 0) a / b\n            case _\
    \ if ((b % a) == 0) b / a\n            case _ if ((a % b) == 0) a / b\n      \
    \      case _ if ((b % a) == 0) b / a\n            case _ if (a < b) greatestCommonDivisor(a\
    \ / b, b)\n            case _ if (b < a) greatestCommonDivisor(a, a / b)\n   \
    \         case _ if (a == 0 || b == 0) 1\n            case _ if (a < 0 && b >\
    \ 0) greatestCommonDivisor(greatestCommonDivisor(a, b), a)\n            case _\
    \ if (a > 0 && b < 0) greatestCommonDivisor(a, greatestCommonDivisor(b, a))\n\
    \        }\n        gcd\n    }\n    def main(args: Array[String]) = {\n    assert(greatestCommonDivisor((3l),\
    \ (7l)) == (1l));\n    assert(greatestCommonDivisor((10l), (15l)) == (5l));\n\
    \    assert(greatestCommonDivisor((49l), (14l)) == (7l));\n    assert(greatestCommonDivisor((144l),\
    \ (60l)) == (12l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp75fcn1y7.scala:15:42 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m _ \e[33mif\e[0m ((a % b)\
    \ == \e[31m0\e[0m) a / b\n\e[31m\e[31m   |\e[0m                              \
    \            ^\e[0m\n\e[31m   |\e[0m                                      expression\
    \ expected but \e[31mcase\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp75fcn1y7.scala:15:37 ------------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m _ \e[33mif\e[0m ((a % b) == \e\
    [31m0\e[0m) a / b\n\e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      value a is not a member of Boolean\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp75fcn1y7.scala:15:39 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m _ \e[33mif\e[0m ((a % b)\
    \ == \e[31m0\e[0m) a / b\n\e[31m\e[31m   |\e[0m                              \
    \         ^\e[0m\n\e[31m   |\e[0m                                       Not found:\
    \ /\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp75fcn1y7.scala:24:8\
    \ ---------------------\e[0m\e[0m\n\e[31m24 |\e[0m        }\n\e[31m\e[31m   |\e\
    [0m        ^\e[0m\n\e[31m   |\e[0m        Found:    Unit\n\e[31m   |\e[0m    \
    \    Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1659980003

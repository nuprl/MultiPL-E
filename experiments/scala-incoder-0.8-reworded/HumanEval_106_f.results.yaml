language: scala
name: HumanEval_106_f
results:
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1) {\n          List[Long](1l.toLong)\n\
    \        } else {\n          val facts = mutable.ArrayBuffer.empty[Long]\n   \
    \       for (i <- 1l to n) { facts += i.toLong * factorial(i) }\n          List[Long](facts.toList)\
    \ \n        }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoffbferl.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m          \e[33mval\e[0m \e[36mfacts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010280
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n      val l = List(1)\n      for (i <-\
    \ 0 until n) {\n        if (i.toInt == 1) {\n          l :+ i.toLong\n       \
    \ }\n        else {\n          l :+ (i.toLong * (l.last :+ i.toLong))\n      \
    \  }\n      }\n      l\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe08m_3zr.scala:14:24\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m      \e[33mfor\e[0m (i <- \e\
    [31m0\e[0m until n) {\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\e\
    [31m   |\e[0m                        Found:    (n : Long)\n\e[31m   |\e[0m   \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpe08m_3zr.scala:19:35 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m          l :+ (i.toLong * (l.last :+ i.toLong))\n\e[31m\e[31m   |\e[0m   \
    \                         ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                    \
    \        value :+ is not a member of Int\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpe08m_3zr.scala:22:6 ---------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m      l\n\e[31m\e[31m   |\e[0m      ^\e[0m\n\e[31m   |\e[0m      Found:\
    \    (l : List[Int])\n\e[31m   |\e[0m      Required: List[Long]\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val facts = mutable.MutableList[Long]()\n\
    \        for(i <- 1l to n) facts += i.toLong * i.toLong\n        if(n % 2 == 0)\
    \ facts else facts.init :+ n\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb4ehhbr_.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfacts\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010281
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 0)\n            return\
    \ Nil\n        if (n % 2 == 0)\n            return List(n.toLong)\n        else\n\
    \            val total = 1\n            for (i = 1; i<n; i++) total = total *\
    \ i\n            List(total, total.toLong)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpegbw2io3.scala:19:19 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m (i = \e[31m1\e[0m; i<n; i++)\
    \ total = total * i\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m  \
    \ |\e[0m                   '<-' expected, but '=' found\n\e[31m\e[31m-- [E040]\
    \ Syntax Error: /tmp/tmpegbw2io3.scala:19:27 ---------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m (i = \e[31m1\e[0m; i<n; i++) total\
    \ = total * i\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m\
    \   |\e[0m                           '<-' expected, but ';' found\n\e[31m\e[31m--\
    \ [E032] Syntax Error: /tmp/tmpegbw2io3.scala:19:32 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m (i = \e[31m1\e[0m; i<n; i++)\
    \ total = total * i\n\e[31m\e[31m   |\e[0m                                ^\e\
    [0m\n\e[31m   |\e[0m                                pattern expected\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpegbw2io3.scala:19:22 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m (i = \e[31m1\e[0m; i<n; i++)\
    \ total = total * i\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0mvalue foreach is not a member of Null, but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator asScala\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.map AsScalaConcurrentMap\n\
    \e[3"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // Your code goes here\n      \
    \  val list = mutable.ListBuffer[Long]()\n        if (n == 0) list.+1\n      \
    \  else for (i<- 1 to n by 2) list.+(i.toLong)\n        list.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpglpwqp4y.scala:15:26 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mif\e[0m (n == \e[31m0\e[0m) list.+\e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m  \
    \                   end of statement expected but integer literal found\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpglpwqp4y.scala:14:19 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010280
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n      val factorials = scala.collection.mutable.ArrayBuffer.empty[Long]\n\
    \      var i = 1 // i = 1\n      factorials += 1l\n      while (i <= n) {\n  \
    \      if (i % 2 == 0) {\n          factorials += i\n        }\n        else {\n\
    \          for (j <- 1 to i) {\n            factorials += j.toLong\n         \
    \ }\n        }\n        i += 1\n      }\n      factorials.toList\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpf5lv3fc1.scala:30)\n\tat Problem.main(tmpf5lv3fc1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n.isEven)\n            n.toLong*1l.toLong*f(n.toLong-1)\n\
    \        else\n            1 until n.toLong map { i => i.toLong*1l.toLong+i.toLong\
    \ }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjgmz88r2.scala:13:13 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m(n.isEven)\n\e[31m\e[31m   |\e[0m\
    \           ^^^^^^^^\e[0m\n\e[31m   |\e[0m           value isEven is not a member\
    \ of Long\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmpjgmz88r2.scala:14:30 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            n.toLong*\e[31m1l\e[0m.toLong*f(n.toLong-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35m*\e[0m\
    \ in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x: Double):\
    \ Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m   |\e[0m (x: Long): Long\n\
    \e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e\
    [0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0mmatch arguments\
    \ (List[Long])\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjgmz88r2.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[31m1\e[0m until\
    \ n.toLong map { \e[36mi\e[0m => i.toLong*\e[31m1l\e[0m.toLong+i.toLong }\n\e\
    [31m\e[31m   |\e[0m                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \            Found:    Long\n\e[31m   |\e[0m                    Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        def fact(x: Long) = {\n       \
    \     if (x == 1) 1\n            else if (x % 2 == 0) x * fact(x-1)\n        \
    \    else (1 to x).reduce(_ * _)\n        }\n        List(1l.toLong, 1l.toLong,\
    \ 1l.toLong, 1l.toLong, 1l.toLong).take(n.toInt).map(fact).toList\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E044] Cyclic Error: /tmp/tmp6zadpgd0.scala:15:37 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33melse\e[0m \e[33mif\e[0m (x % \e[31m2\e\
    [0m == \e[31m0\e[0m) x * fact(x-\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m         \
    \                            ^\e[0m\n\e[31m   |\e[0m                   Overloaded\
    \ or recursive \e[33mmethod\e[0m \e[35mfact\e[0m needs return type\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6zadpgd0.scala:16:23 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33melse\e[0m (\e[31m1\e[0m to x).reduce(_\
    \ * _)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m  \
    \                     Found:    (x : Long)\n\e[31m   |\e[0m                  \
    \     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6zadpgd0.scala:18:92\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        List(\e[31m1l\e[0m.toLong,\
    \ \e[31m1l\e[0m.toLong, \e[31m1l\e[0m.toLong, \e[31m1l\e[0m.toLong, \e[31m1l\e\
    [0m.toLong).take(n.toInt).map(fact).toList\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    List[\e[1m\e[31mInt\e[0m]\n\e[31m   |\e\
    [0m        Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n.toInt <= 0) List[Long]()\
    \ else { \n            val (ns, ix) = List((1l.toLong, 1l), (n-1l.toLong, 2l),\
    \ (n.toLong, n.toInt-1))\n            List(1l.toLong + ix * ns(ix).toLong, 1l.toLong\
    \ + ix * ns(ix).toLong + ix * ns(ix-1).toLong)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpebmznckm.scala:15:32 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            List(\e[31m1l\e[0m.toLong + ix * ns(ix).toLong,\
    \ \e[31m1l\e[0m.toLong + ix * ns(ix).toLong + ix * ns(ix-\e[31m1\e[0m).toLong)\n\
    \e[31m\e[31m   |\e[0m                             ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ * is not a member of Any, but could be made available as an extension method.\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might make progress\
    \ towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpebmznckm.scala:15:34 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            List(\e[31m1l\e[0m.toLong + ix * ns(ix).toLong,\
    \ \e[31m1l\e[0m.toLong + ix * ns(ix).toLong + ix * ns(ix-\e[31m1\e[0m).toLong)\n\
    \e[31m\e[31m   |\e[0m                                  ^^\e[0m\n\e[31m   |\e[0m\
    \                                  \e[33mvalue\e[0m \e[35mns\e[0m does not take\
    \ parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpebmznckm.scala:15:64\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            List(\e[31m1l\e\
    [0m.toLong + ix * ns(ix).toLong, \e[31m1l\e[0m.toLong + ix * ns(ix).toLong + ix\
    \ * ns(ix-\e[31m1\e[0m).toLong)\n\e[31m\e[31m   |\e[0m                       \
    \                                      ^^^^\e[0m\n\e[31m   |\e[0mvalue * is not\
    \ a member of Any, but could be made available as an extension method.\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mOne of the following imports might make progress towards\
    \ fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpebmznckm.scala:15:66 ----------------------------"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        n match {\n            case 1 =>\
    \ List(nl.toLong)\n            case x if x % 2 == 0 => for { i <- 1 to n } yield\
    \ i.toLong * x.toLong\n            case x if x % 2 == 1 => for { i <- 1 to n }\
    \ yield i.toLong + x.toLong\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_nzwu_04.scala:14:27 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mcase\e[0m \e[31m1\e[0m => List(nl.toLong)\n\
    \e[31m\e[31m   |\e[0m                           ^^\e[0m\n\e[31m   |\e[0m     \
    \                      Not found: nl\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp_nzwu_04.scala:15:52 --------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m x \e[33mif\e[0m x % \e[31m2\e\
    [0m == \e[31m0\e[0m => \e[33mfor\e[0m { i <- \e[31m1\e[0m to n } \e[33myield\e\
    [0m i.toLong * x.toLong\n\e[31m\e[31m   |\e[0m                               \
    \                     ^\e[0m\n\e[31m   |\e[0m                                \
    \                    Found:    (n : Long)\n\e[31m   |\e[0m                   \
    \                                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp_nzwu_04.scala:16:52 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mcase\e[0m x \e[33mif\e[0m x % \e[31m2\e\
    [0m == \e[31m1\e[0m => \e[33mfor\e[0m { i <- \e[31m1\e[0m to n } \e[33myield\e\
    [0m i.toLong + x.toLong\n\e[31m\e[31m   |\e[0m                               \
    \                     ^\e[0m\n\e[31m   |\e[0m                                \
    \                    Found:    (n : Long)\n\e[31m   |\e[0m                   \
    \                                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = mutable.ListBuffer[Long]()\n\
    \        if(n % 2 == 0) result ++= 1 to n else result ++= 1 to n\n        result\
    \ .toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpml84h5dk.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010279
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = mutable.ArrayBuffer.fill(n)(1)\n\
    \        var factSum = 0\n        for(i <- 1 to n) {\n            if((i.toLong\
    \ % 2) == 0) {\n                fact += i to (i+1)\n            }\n          \
    \  else {\n                factSum += i to (i+1)\n            }\n        }\n \
    \       fact.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5l_flzp9.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfact\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp5l_flzp9.scala:15:22 --------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5l_flzp9.scala:20:24\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m                factSum +=\
    \ i to (i+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                value += is not a member of Int - did you mean\
    \ Int.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // initialize a list to return\n\
    \        var ans = List[Long]()\n        // base case: when the factorial of the\
    \ number n is 1\n        if ( n == 1 )\n            return List(n)\n        //\
    \ recursive case\n        else\n            // for each even number\n        \
    \    for ( i <- 1 to n by 2 )\n                // calculate the factorial\n  \
    \              ans :+ i*factorial(i)\n            ans\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_xjomewc.scala:21:28\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mfor\e[0m (\
    \ i <- \e[31m1\e[0m to n by \e[31m2\e[0m )\n\e[31m\e[31m   |\e[0m            \
    \                ^\e[0m\n\e[31m   |\e[0m                            Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                            Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_xjomewc.scala:23:25 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                ans :+ i*factorial(i)\n\e[31m\e[31m \
    \  |\e[0m                         ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \             Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010284
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val r : List[Long] = Nil\n    \
    \    var i = 1 \n        while (i <= n) r +=  i * i\n        if (n.toDouble %\
    \ 2 == 0) r +=  n.toDouble * f(n.toDouble / 2l)\n        else r +=  1 to n.toDouble\n\
    \        r \n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwnf4koke.scala:15:25 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mwhile\e[0m (i <= n) r +=  i * i\n\e[31m\e\
    [31m   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m             value\
    \ += is not a member of List[Long] - did you mean r.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpwnf4koke.scala:16:35 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mif\e[0m (n.toDouble % \e[31m2\e[0m == \e[31m0\e\
    [0m) r +=  n.toDouble * f(n.toDouble / \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                                ^^^^\e[0m\n\e[31m   |\e[0m             value\
    \ += is not a member of List[Long] - did you mean r.!=?\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpwnf4koke.scala:16:54 --------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m        \e[33mif\e[0m (n.toDouble % \e[31m2\e[0m == \e[31m0\e\
    [0m) r +=  n.toDouble * f(n.toDouble / \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m \
    \                                                     ^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                                                      Found:    Double\n\
    \e[31m   |\e[0m                                                      Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmpwnf4koke.scala:16:50\
    \ -----------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mif\e[0m\
    \ (n.toDouble % \e[31m2\e[0m == \e[31m0\e[0m) r +=  n.toDouble * f(n.toDouble\
    \ / \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                                    \
    \   ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives of \e\
    [33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e[0m \e[35mDouble\e[0m with types\n\
    \e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float): Double\n\e[31m\
    \   |\e[0m (x: Long): Double\n\e[31m   |\e[0m (x: Int): Double\n\e[31m   |\e[0m\
    \ (x: Char): Double\n\e[31m   |\e[0m (x: Short): Double\n\e[31m   |\e[0m (x: Byte):\
    \ Double\n\e[31m   |\e[0mmatch arguments (List[Long])\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpwnf4koke.scala:17:15 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m        \e[33melse\e[0m r +=  "
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list: List[Long] = List()\n\
    \        for (i in 1L until n) list += if (i % 2 == 0) i * 1L else i * 1L + i\n\
    \        list\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpysc6i8ki.scala:14:30 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i in \e[31m1L\e[0m until n) list\
    \ += \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) i * \e[31m1L\e[0m \e[33melse\e\
    [0m i * \e[31m1L\e[0m + i\n\e[31m\e[31m   |\e[0m                             \
    \ ^^^^\e[0m\n\e[31m   |\e[0m                              '<-' expected, but identifier\
    \ found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpysc6i8ki.scala:16:4 ----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '<-' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpysc6i8ki.scala:14:76\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i\
    \ in \e[31m1L\e[0m until n) list += \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e\
    [0m) i * \e[31m1L\e[0m \e[33melse\e[0m i * \e[31m1L\e[0m + i\n\e[31m\e[31m   |\e\
    [0m                                                                          \
    \  ^\e[0m\n\e[31m   |\e[0mvalue withFilter is not a member of Null, but could\
    \ be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties\
    \ AsScalaMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration\
    \ AsScalaIterator\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator\
    \ asScala\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.map\
    \ AsScalaConcurrentMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.set\
    \ asScala\n\e[31m   |\e[0m\n3 errors found\n"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val numbers = 1 to n\n        numbers.filter(_\
    \ % 2 == 0).map(_ * numbers.filter(!_ % 2 == 0).sum)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpuw8bj5__.scala:13:27\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e\
    [0m = \e[31m1\e[0m to n\n\e[31m\e[31m   |\e[0m                           ^\e[0m\n\
    \e[31m   |\e[0m                           Found:    (n : Long)\n\e[31m   |\e[0m\
    \                           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpuw8bj5__.scala:14:58 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        numbers.filter(_ % \e[31m2\e[0m == \e[31m0\e[0m).map(_\
    \ * numbers.filter(!_ % \e[31m2\e[0m == \e[31m0\e[0m).sum)\n\e[31m\e[31m   |\e\
    [0m                                                          ^^\e[0m\n\e[31m \
    \  |\e[0m        value unary_! is not a member of Int - did you mean _$3.unary_+?\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var list = List[Long]()\n     \
    \   list.updated(1l, 1l)\n        list.updated(2l, 1l)\n        var k = 0\n  \
    \      while (k <= n) {\n            list.updated(k, k.toLong*k.toLong)\n    \
    \        k += 2\n        }\n        list\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpry765ltc.scala:14:21\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        list.updated(\e[31m1l\e\
    [0m, \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^\e[0m\n\e[31m\
    \   |\e[0m                     Found:    (\e[31m1L\e[0m : Long)\n\e[31m   |\e\
    [0m                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpry765ltc.scala:15:21 --------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m        list.updated(\e[31m2l\e[0m, \e[31m1l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                     ^^\e[0m\n\e[31m   |\e[0m                   \
    \  Found:    (\e[31m2L\e[0m : Long)\n\e[31m   |\e[0m                     Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010284
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = scala.collection.mutable.ListBuffer[Long](1)\n\
    \        factorials += 1\n        for (i = 1 to n) factorials *= i\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpprotd170.scala:15:15 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m to n) factorials\
    \ *= i\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m          \
    \     '<-' expected, but '=' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpprotd170.scala:15:23\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i\
    \ = \e[31m1\e[0m to n) factorials *= i\n\e[31m\e[31m   |\e[0m                \
    \       ^\e[0m\n\e[31m   |\e[0mvalue foreach is not a member of Null, but could\
    \ be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties\
    \ AsScalaMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration\
    \ AsScalaIterator\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator\
    \ asScala\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.map\
    \ AsScalaConcurrentMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.set\
    \ asScala\n\e[31m   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial: mutable.Buffer[Long]\
    \ = new mutable.Buffer[Long](n)\n        for (i<-1 to n-1) {\n            if (i%2\
    \ == 0) {\n                factorial(i) = factorial(i) * i.toLong\n          \
    \  } else {\n                factorial(i) = factorial(i) + i.toLong\n        \
    \    }\n        }\n        factorial.map(_.toLong).toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxbzts30j.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m: mutable.Buffer[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m mutable.Buffer[\e[35mLong\e[0m](n)\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpxbzts30j.scala:13:50 ------------------------\e[0m\e[0m\n\e[31m13 |\e\
    [0m        \e[33mval\e[0m \e[36mfactorial\e[0m: mutable.Buffer[\e[35mLong\e[0m]\
    \ = \e[33mnew\e[0m mutable.Buffer[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m \
    \                                                 ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxbzts30j.scala:14:21 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i<-\e[31m1\e[0m to n-\e[31m1\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m  \
    \                   Found:    Long\n\e[31m   |\e[0m                     Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010284
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = scala.math.combinatorics._\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                factorial(n\
    \ - 1).map(_.toLong * i).toList\n            } else {\n                factorial(n\
    \ - 1).map(_.toLong * (i + 1)).toList\n            }\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpzpj22i4c.scala:13:49 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m = scala.math.combinatorics._\n\
    \e[31m\e[31m   |\e[0m                                                 ^\e[0m\n\
    \e[31m   |\e[0m                                   an identifier expected, but\
    \ '_' found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzpj22i4c.scala:13:35\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorial\e[0m = scala.math.combinatorics._\n\e[31m\e[31m   |\e[0m       \
    \                 ^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \           value combinatorics is not a member of math\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpzpj22i4c.scala:14:23 --------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010285
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorialList = List.fill(n.toInt)(1L)\n\
    \        for {i <- 1 to n\n             f <- factorialList(i mod 2 => factorialList(i\
    \ div 2 :: factorialList.take(i)))}\n            f :: factorialList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp1dcwhl2k.scala:15:34 -----------------------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m             f <- factorialList(i mod \e[31m2\e[0m =>\
    \ factorialList(i div \e[31m2\e[0m :: factorialList.take(i)))}\n\e[31m\e[31m \
    \  |\e[0m                                ^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                         not a legal formal parameter\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp1dcwhl2k.scala:14:23 --------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m {i <- \e[31m1\e[0m to n\n\e[31m\e[31m\
    \   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                     \
    \  Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1dcwhl2k.scala:15:59\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m             f <- factorialList(i\
    \ mod \e[31m2\e[0m => factorialList(i div \e[31m2\e[0m :: factorialList.take(i)))}\n\
    \e[31m\e[31m   |\e[0m                                                        \
    \ ^^^^^\e[0m\n\e[31m   |\e[0m                                        value div\
    \ is not a member of Int\n3 errors found\n"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var sum = 0\n        var fact =\
    \ 1\n        var listOfFactorials = List[Long]()\n        if (n<=0) {\n      \
    \      listOfFactorials = List[Long]()\n            return listOfFactorials\n\
    \        }\n        if (n==1) {\n            listOfFactorials = List[Long](1l.toLong)\n\
    \            return listOfFactorials\n        }\n        if (n%2==0) {\n     \
    \       for (i <- 1L to n-1) {\n                fact = fact * i\n            \
    \    sum = sum + i\n                listOfFactorials = listOfFactorials ::: (1l.toLong,\
    \ fact)\n            }\n        } else {\n            for (i <- 1L to n-1) {\n\
    \                fact = fact * i\n                sum = sum + i\n            \
    \    listOfFactorials = listOfFactorials ::: (fact, 1l.toLong)\n            }\n\
    \        }\n        listOfFactorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb14pdv0i.scala:26:23\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m                fact = fact *\
    \ i\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                       Found:    Long\n\e[31m   |\e[0m                      \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb14pdv0i.scala:27:22\
    \ --------------------\e[0m\e[0m\n\e[31m27 |\e[0m                sum = sum + i\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb14pdv0i.scala:28:52\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m                listOfFactorials\
    \ = listOfFactorials ::: (\e[31m1l\e[0m.toLong, fact)\n\e[31m\e[31m   |\e[0m \
    \                                                   ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                value ::: is not a member of (Long,\
    \ Int)\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb14pdv0i.scala:32:23\
    \ --------------------\e[0m\e[0m\n\e[31m32 |\e[0m                fact = fact *\
    \ i\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                       Found:    Long\n\e[31m   |\e[0m                      \
    \ Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb14pdv0i.scala:33:22\
    \ --------------------\e[0m\e[0m\n\e[31m33 |\e[0m                sum = sum + i\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                 Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb14pdv0i.scala:34:52\
    \ ------------------------\e[0m\e[0m\n\e[31m34 |\e[0m                listOfF"
  stdout: ''
  timestamp: 1660010286
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1) List(1l)\n        else\
    \ {\n            val x = n / 2\n            if (n % 2 == 0) List(x * 2l.toLong,\
    \ x.toLong)\n            else List(xl.toLong, x + 1l.toLong)\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp85n4vl0a.scala:17:22 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33melse\e[0m List(xl.toLong, x + \e[31m1l\e\
    [0m.toLong)\n\e[31m\e[31m   |\e[0m                      ^^\e[0m\n\e[31m   |\e\
    [0m                      Not found: xl\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010280
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val facts = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i%2==0) {\n                facts +=\
    \ i.toLong\n            } else {\n                facts += (i+1).factorial.toLong\n\
    \            }\n        }\n        facts.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9943kzl3.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfacts\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp9943kzl3.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010291
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = new ListBuffer[Long]\n\
    \        if (n % 2 == 0) {\n            result.add(1l)\n            for (i<-(n+1l)\
    \ until n+1l) {\n                result.add(result.last*i)\n            }\n  \
    \      }\n        else {\n            for (i<-(1l) until n+1l) {\n           \
    \     result.add(result.last*i)\n            }\n        }\n        result.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5j3s5xip.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            result.add(\e[31m1l\e[0m)\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m  value add is not a member\
    \ of scala.collection.mutable.ListBuffer[Long]\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp5j3s5xip.scala:17:23 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m                result.add(result.last*i)\n\e[31m\e[31m   |\e[0m     \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ListBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5j3s5xip.scala:22:23\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                result.add(result.last*i)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add\
    \ is not a member of scala.collection.mutable.ListBuffer[Long], but could be made\
    \ available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the\
    \ following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m \
    \ import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m   |\e\
    [0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\e\
    [31m   |\e[0m  import collection.convert.ImplicitConversions.mutabl"
  stdout: ''
  timestamp: 1660010294
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var result : List[Long] = null\n\
    \        if (n==1){\n            result = List(1l.toLong)\n        }\n       \
    \ else{\n            val r = n % 2\n            if (r == 0){\n               \
    \ result = List(1l.toLong)\n            }\n            else{\n               \
    \ result = List(1l.toLong,0l.toLong)\n                var k = 1\n            \
    \    while (k<n+1){\n                    result = (result,k.toLong*k.toLong).toList\n\
    \                    k = k + 2\n                }\n            }\n        }\n\
    \        return result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn0x_cvqu.scala:26:56\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m                    result =\
    \ (result,k.toLong*k.toLong).toList\n\e[31m\e[31m   |\e[0m                   \
    \          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   Found:  \
    \  List[\n\e[31m   |\e[0m     (List[Long], Long)\e[33m match \e[0m{\n\e[31m  \
    \ |\e[0m       case EmptyTuple => Nothing\n\e[31m   |\e[0m       case h *: t =>\
    \ h | scala.Tuple.Fold[t, Nothing, [x, y] =>> x | y]\n\e[31m   |\e[0m     }\n\e\
    [31m   |\e[0m   ]\n\e[31m   |\e[0m   Required: List[Long]\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010293
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        n match {\n            case 1 =>\
    \ (1l to n).toList\n            case _ => (1l to n).map{ i => (math.factorial(i.toDouble)\
    \ / i).toLong }.flatten.toList\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_dh5ldjt.scala:15:48 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m _ => (\e[31m1l\e[0m to n).map{\
    \ i => (math.factorial(i.toDouble) / i).toLong }.flatten.toList\n\e[31m\e[31m\
    \   |\e[0m                                           ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                 value factorial is not a member of\
    \ math\n1 error found\n"
  stdout: ''
  timestamp: 1660010293
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = for (i <- 1 until\
    \ n) yield n * i\n        val evens = factorials.filter(_ % 2 == 0)\n        val\
    \ sum = factorials.filter(_ % 2 != 0)\n        evens ++ sum\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppdynd0_d.scala:13:43\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m until n) \e[33myield\e[0m n * i\n\e[31m\e\
    [31m   |\e[0m                                           ^\e[0m\n\e[31m   |\e[0m\
    \                                           Found:    (n : Long)\n\e[31m   |\e\
    [0m                                           Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppdynd0_d.scala:16:8 ---------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        evens ++ sum\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    IndexedSeq[Long]\n\e[31m   |\e[0m      \
    \  Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010295
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n by 2) {\n            if (i % 2 == 0){\n             \
    \   factorial.add(1l*i)\n            }\n            else {\n                factorial.add(i.toLong)\n\
    \            }\n        }\n        factorial.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdajyej76.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n by \e[31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                    \
    \  ^\e[0m\n\e[31m   |\e[0m                      Found:    (n : Long)\n\e[31m \
    \  |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpdajyej76.scala:16:26 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                factorial.add(\e[31m1l\e[0m*i)\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not\
    \ a member of scala.collection.mutable.ListBuffer[Long], but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdajyej76.scala:19:26\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                factorial.add(i.toLong)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ add is not a member of scala.collection.mutable.ListBuffer[Long], but could\
    \ be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m \
    \  |\e[0m "
  stdout: ''
  timestamp: 1660010297
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var factorials = mutable.List.empty[Long]\n\
    \        for(i <- 1L to n)\n        { factorials = factorials :+ (i*(i+1).toLong)\
    \ }\n        factorials\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcejyoq77.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mfactorials\e[0m = mutable.List.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010293
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n      val factorials = mutable.ArrayBuffer(1l)\n\
    \      var i = 1l\n      while (i <= n){\n        if (i%2 == 0) factorials +=\
    \ i.toLong * factorials.last\n        else factorials += (i + 1).toLong\n    \
    \    i += 1\n      }\n      factorials\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmptfwmd4_z.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m      \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                       ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                       Not found: mutable\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010293
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var ret: List[Long] = Nil\n   \
    \     if((n%2)==0) {\n            for(i <- 1 to n) {\n                ret = (i.toLong\
    \ * i :: ret)\n            }\n        }\n        else {\n            for(i <-\
    \ 1 to n) {\n                ret = (i :: ret)\n            }\n        }\n    \
    \    ret\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmppv7ljv53.scala:15:26\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m(i\
    \ <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmppv7ljv53.scala:20:26 --------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m            \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m               \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 0) return Nil\n      \
    \  if (n % 2 == 0) List(n.toLong * f(n - 1).toLong + 1) else List(n.toLong * (f(n\
    \ - 1).toLong + 1))\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj_3vm4rr.scala:14:49 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mif\e[0m (n % \e[31m2\e[0m == \e[31m0\e\
    [0m) List(n.toLong * f(n - \e[31m1\e[0m).toLong + \e[31m1\e[0m) \e[33melse\e[0m\
    \ List(n.toLong * (f(n - \e[31m1\e[0m).toLong + \e[31m1\e[0m))\n\e[31m\e[31m \
    \  |\e[0m                                        ^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue toLong is not a member of List[Long], but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e\
    [0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import\
    \ math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpj_3vm4rr.scala:14:92 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mif\e[0m (n % \e[31m2\e[0m == \e[31m0\e[0m) List(n.toLong\
    \ * f(n - \e[31m1\e[0m).toLong + \e[31m1\e[0m) \e[33melse\e[0m List(n.toLong *\
    \ (f(n - \e[31m1\e[0m).toLong + \e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m        \
    \                                                                           ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue toLong is not a member of List[Long], but could be made\
    \ available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the\
    \ following imports might make progress towards fixing the problem:\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010298
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1L to n) {\n            if (i < (n / 2))\n                factorial.append(1L\
    \ * i)\n            else\n                factorial.append(i.toLong)\n       \
    \ }\n        factorial.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpx62vh9qa.scala:23)\n\tat Problem.main(tmpx62vh9qa.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var ans : List[Long] = List()\n\
    \        for (i<- 1l to n) ans = ans ::: i.toLong * if(i%2 == 0) 1 else i.toLong\n\
    \        return ans\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpcuish204.scala:14:51 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i<- \e[31m1l\e[0m to n) ans =\
    \ ans ::: i.toLong * \e[33mif\e[0m(i%\e[31m2\e[0m == \e[31m0\e[0m) \e[31m1\e[0m\
    \ \e[33melse\e[0m i.toLong\n\e[31m\e[31m   |\e[0m                            \
    \                       ^^\e[0m\n\e[31m   |\e[0m                             \
    \           expression expected but \e[31mif\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E134] Type Error: /tmp/tmpcuish204.scala:14:49 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i<- \e[31m1l\e[0m to n) ans =\
    \ ans ::: i.toLong * \e[33mif\e[0m(i%\e[31m2\e[0m == \e[31m0\e[0m) \e[31m1\e[0m\
    \ \e[33melse\e[0m i.toLong\n\e[31m\e[31m   |\e[0m                            \
    \            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\
    \e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m\
    \   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x:\
    \ Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\
    \e[31m   |\e[0mmatch arguments (Null)\n2 errors found\n"
  stdout: ''
  timestamp: 1660010294
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n % 2 == 0) {\n           \
    \ 1 :: f(n / 2).map(x => x * x)\n        } else {\n            1 :: 1 +: f(n /\
    \ 2)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbkvy83qp.scala:16:12\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[31m1\e[0m :: \e\
    [31m1\e[0m +: f(n / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Found:    List[\e[1m\e[31mAnyVal\e[0m]\n\e[31m\
    \   |\e[0m            Required: List[\e[1m\e[32mLong\e[0m]\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010296
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var factorials = mutable.MutableList[Long]()\n\
    \        var sum : Long = 1\n        for (i<-1 to n) {\n            if (i % 2\
    \ == 0) {\n                factorials = factorials ::: (1l.toLong :: i.toLong)\n\
    \            } else {\n                sum = sum + (i.toLong)\n            }\n\
    \        }\n        factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mz1a_z2.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mfactorials\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0mz1a_z2.scala:15:21 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i<-\e[31m1\e[0m to n) {\n\e[31m\e\
    [31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m                    \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                     Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0mz1a_z2.scala:17:55\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m                factorials\
    \ = factorials ::: (\e[31m1l\e[0m.toLong :: i.toLong)\n\e[31m\e[31m   |\e[0m \
    \                                                      ^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                        value :: is not a member of\
    \ Long\n3 errors found\n"
  stdout: ''
  timestamp: 1660010298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1)\n            List(1l)\n\
    \        else\n            List(1l, 2 * f(n - 1).toLong, 3 * f(n - 1).toLong,\
    \ 4 * f(n - 1).toLong, 5 * f(n - 1).toLong)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6wzfrvd2.scala:16:34 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            List(\e[31m1l\e[0m, \e[31m2\e[0m * f(n -\
    \ \e[31m1\e[0m).toLong, \e[31m3\e[0m * f(n - \e[31m1\e[0m).toLong, \e[31m4\e[0m\
    \ * f(n - \e[31m1\e[0m).toLong, \e[31m5\e[0m * f(n - \e[31m1\e[0m).toLong)\n\e\
    [31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue toLong is not a member of List[Long], but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e[0m  import\
    \ math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import math.Numeric.Implicits.infixNumericOps\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6wzfrvd2.scala:16:55\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            List(\e[31m1l\e\
    [0m, \e[31m2\e[0m * f(n - \e[31m1\e[0m).toLong, \e[31m3\e[0m * f(n - \e[31m1\e\
    [0m).toLong, \e[31m4\e[0m * f(n - \e[31m1\e[0m).toLong, \e[31m5\e[0m * f(n - \e\
    [31m1\e[0m).toLong)\n\e[31m\e[31m   |\e[0m                                   \
    \           ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toLong is not a member\
    \ of List[Long], but could be made available as an extension method.\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mOne of the following imports might make progress towards\
    \ fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6wzfrvd2.scala:16:76 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            List(\e[31m1l\e[0m, \e[31m2\e[0m * f(n -\
    \ \e[31m1\e[0m).toLong, \e[31m3\e[0m * f(n - \e[31m1\e[0m).toLong, \e[31m4\e[0m\
    \ * f(n - \e[31m1\e[0m).toLong, \e[31m5\e[0m * f(n - \e[31m1\e[0m).toLong)\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \         ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toLong is not a mem"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = new mutable.MutableList[Long]()\n\
    \        val factor = new mutable.MutableList[Long]()\n        val fact = 1l\n\
    \        while (n > 0) {\n            factor += n\n            n -= 1\n      \
    \  }\n        n += 1\n        for (i = 0 to n) {\n            if (i.toLong mod\
    \ 2 == 0) {\n                result += factor\n            }\n            else\
    \ {\n                result += i.toLong\n            }\n        }\n        result.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaifgx2qk.scala:21:15 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mfor\e[0m (i = \e[31m0\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m               ')' expected,\
    \ but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpaifgx2qk.scala:21:25\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                         ^\e\
    [0m\n\e[31m   |\e[0m                         '<-' expected, but '{' found\n\e\
    [31m\e[31m-- [E040] Syntax Error: /tmp/tmpaifgx2qk.scala:30:4 ----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '<-' expected, but '}' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpaifgx2qk.scala:13:25\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = \e[33mnew\e[0m mutable.MutableList[\e[35mLong\e[0m]()\n\e[31m\e\
    [31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \               Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmpaifgx2qk.scala:14:25 ------------------------\e[0m\e[0m\n\e[31m14 |\e\
    [0m        \e[33mval\e[0m \e[36mfactor\e[0m = \e[33mnew\e[0m mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpaifgx2qk.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpaifgx2qk.scala:20:10\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        n += \e[31m1\e[0m\n\
    \e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m   |\e[0m        value += is not\
    \ a member of Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not F"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // YOUR CODE HERE\n        val\
    \ fact = scala.collection.mutable.ArrayBuffer.empty[Long]\n        for(i <- 1\
    \ to n){\n            if(i%2 == 0){\n                fact += i\n            }\n\
    \            else {\n                for(j <- 1 to i){\n                    fact\
    \ += (j) * i\n                }\n            }\n        }\n        fact.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvjbz7ead.scala:15:22\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010297
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = n match {\n        \
    \    case x if x == 0 => 1\n            case x if x % 2 == 0 => x * f(x / 2)\n\
    \            case x if x % 2 == 1 => x + f(x / 2)\n            case _ => f(x /\
    \ 2)\n        }\n        fact.toList.map(x => x.toLong * x).toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpn4pwhg4q.scala:15:38 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m x \e[33mif\e[0m x % \e[31m2\e\
    [0m == \e[31m0\e[0m => x * f(x / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m        \
    \                            ^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\
    \e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m\
    \   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x:\
    \ Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\
    \e[31m   |\e[0mmatch arguments (List[Long])\n\e[31m\e[31m-- [E134] Type Error:\
    \ /tmp/tmpn4pwhg4q.scala:16:38 -----------------------------\e[0m\e[0m\n\e[31m16\
    \ |\e[0m            \e[33mcase\e[0m x \e[33mif\e[0m x % \e[31m2\e[0m == \e[31m1\e\
    [0m => x + f(x / \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                        \
    \            ^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives of \e\
    [33mmethod\e[0m \e[35m+\e[0m in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\e\
    [31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m \
    \  |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x:\
    \ Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\
    \e[31m   |\e[0m (x: String): String\n\e[31m   |\e[0mmatch arguments (List[Long])\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn4pwhg4q.scala:17:24 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mcase\e[0m _ => f(x / \e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m                        ^\e[0m\n\e[31m   |\e[0m         \
    \               Not found: x\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpn4pwhg4q.scala:19:13 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fact.toList.map(\e[36mx\e[0m => x.toLong * x).toList\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value toList is not\
    \ a member of Matchable\n4 errors found\n"
  stdout: ''
  timestamp: 1660010298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val ans = new mutable.ListBuffer[Long](n)\n\
    \        var factorial = 1\n        for (i <- 1 to n) {\n            if (i % 2\
    \ == 0) {\n                factorial = factorial * i\n                ans += i.toLong\n\
    \            } else {\n                ans += (i.toLong + factorial)\n       \
    \         factorial = 1\n            }\n        }\n        ans.toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpo7svsvt_.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mans\e[0m = \e[33mnew\e[0m\
    \ mutable.ListBuffer[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m              \
    \        ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo7svsvt_.scala:15:23\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010297
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        if(n > 0) result.add( n )\n        \n        for( i <- 1 until n ) result\
    \ add( n * i )\n        result.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwdbway_4.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpwdbway_4.scala:16:26 --------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m( i <- \e[31m1\e[0m until n ) result\
    \ add( n * i )\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m\
    \   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // TODO: define n\n        val\
    \ nFactorials = for (i <- 1 to n) yield (i / 2) * factorial(i)\n        val nSum\
    \ = for (i<- 1 to n) yield i\n        val nSumFactorials = nSum.zip(nFactorials)\n\
    \        nSumFactorials.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxqk146rg.scala:14:41\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mnFactorials\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) \e[33myield\e[0m (i / \e[31m2\e\
    [0m) * factorial(i)\n\e[31m\e[31m   |\e[0m                                   \
    \      ^\e[0m\n\e[31m   |\e[0m                                         Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                         Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpxqk146rg.scala:14:60\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mnFactorials\e[0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) \e[33myield\e[0m\
    \ (i / \e[31m2\e[0m) * factorial(i)\n\e[31m\e[31m   |\e[0m                   \
    \                                         ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                                                Not found: factorial\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxqk146rg.scala:15:33 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mnSum\e[0m = \e[33mfor\e\
    [0m (i<- \e[31m1\e[0m to n) \e[33myield\e[0m i\n\e[31m\e[31m   |\e[0m        \
    \                         ^\e[0m\n\e[31m   |\e[0m                            \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                                 Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpxqk146rg.scala:17:23\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        nSumFactorials.toList\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \   Found:    List[(Int, Nothing)]\n\e[31m   |\e[0m        Required: List[Long]\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010299
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var nums = scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i<- 1 to n){\n            if(i%2==0) nums += i.toLong\n        \
    \    else nums = nums ++ scala.collection.mutable.List(i.toLong)\n        }\n\
    \        nums.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptvu5690b.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmptvu5690b.scala:16:57 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m            \e[33melse\e[0m nums = nums ++ scala.collection.mutable.List(i.toLong)\n\
    \e[31m\e[31m   |\e[0m                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue List is not a member of scala.collection.mutable - did\
    \ you mean mutable.ListMap?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010298
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials : List[Long] = new\
    \ ListBuffer[Long]\n        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n\
    \                factorials += i * factorials(i-1)\n            }\n          \
    \  else {\n                factorials += i\n            }\n        }\n       \
    \ return factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl5_fuhk5.scala:13:38\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e\
    [0m : \e[35mList\e[0m[\e[35mLong\e[0m] = \e[33mnew\e[0m \e[35mListBuffer\e[0m[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Found:    scala.collection.mutable.ListBuffer[Long]\n\
    \e[31m   |\e[0m                     Required: List[Long]\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpl5_fuhk5.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl5_fuhk5.scala:16:27\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m                factorials\
    \ += i * factorials(i-\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m    value += is not a member of List[Long] - did you mean\
    \ factorials.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl5_fuhk5.scala:19:27\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                factorials\
    \ += i\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m    value += is not a member of List[Long] - did you mean factorials.!=?\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010300
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var result = 0l\n        var result1\
    \ : List[Long] = List()\n        // i starts from 1.\n        for (i <- 1l to\
    \ n) {\n            if (i.toString.contains(\"0\")) {\n                result1\
    \ += i.toLong * 1l\n            } else {\n                result += i.toLong *\
    \ i\n            }\n        }\n        result1 += result.toLong\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpnaos1rqy.scala:18:24 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                result1 += i.toLong * \e[31m1l\e[0m\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value\
    \ += is not a member of List[Long] - did you mean List[Long].!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpnaos1rqy.scala:23:16 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        result1 += result.toLong\n\e[31m\e[31m   |\e\
    [0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of List[Long]\
    \ - did you mean List[Long].!=?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnaos1rqy.scala:24:8\
    \ ---------------------\e[0m\e[0m\n\e[31m24 |\e[0m        result\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (result : Long)\n\
    \e[31m   |\e[0m        Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010305
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = List[Long](1l.toLong)\n\
    \        for( i <- 1 to n ) {\n            factorials = factorials :+ ( if(i%2==0)\
    \ 1l*i.toLong else i.toLong )\n        }\n        factorials.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_ae8o9hm.scala:14:23\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m( i <-\
    \ \e[31m1\e[0m to n ) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmp_ae8o9hm.scala:15:23 -----------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m            factorials = factorials :+ ( \e[33mif\e[0m(i%\e[31m2\e[0m==\e\
    [31m0\e[0m) \e[31m1l\e[0m*i.toLong \e[33melse\e[0m i.toLong )\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val factorials\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010304
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n==1)\n            return List(nl.toLong)\n\
    \        val factorial = n.toDouble\n        val result = List.empty[Long]\n \
    \       for (i<-1 to n by -1)\n            result ::= factorial.toLong * i.toLong\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp63ecxg3z.scala:14:24 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mreturn\e[0m List(nl.toLong)\n\e[31m\e\
    [31m   |\e[0m                        ^^\e[0m\n\e[31m   |\e[0m                \
    \        Not found: nl\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp63ecxg3z.scala:17:21\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i<-\e\
    [31m1\e[0m to n by -\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                     ^\e\
    [0m\n\e[31m   |\e[0m                     Found:    (n : Long)\n\e[31m   |\e[0m\
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp63ecxg3z.scala:18:19 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m            result ::= factorial.toLong * i.toLong\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value ::= is not a member of\
    \ List[Long] - did you mean result.::?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n == 1)\n            List(1l.toLong)\n\
    \        else if(n % 2 == 0)\n            List(1l.toLong, 1l.toLong*2l.toLong)\n\
    \        else\n            for(i <- 1l to n){\n                val fact = i.toLong\
    \ * 2l\n                fact = if (fact == n) 1l.toLong else fact\n          \
    \      fact :: List(fact)\n            }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpvoqubgxf.scala:20:21 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                fact = \e[33mif\e[0m (fact == n) \e[31m1l\e\
    [0m.toLong \e[33melse\e[0m fact\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val fact\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010301
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = n to 1 by -1\n     \
    \   val result = List(0.toLong)\n        var i = 1l\n        while ((i.toLong\
    \ mod 2) == 0) {\n            result = result + i\n            i = i + 1l\n  \
    \      }\n        fact.toList.foreach{x => result = result + (x.toLong * (x.toLong\
    \ + 1))}\n        result.head.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppcoevab_.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mwhile\e[0m ((i.toLong mod \e[31m2\e[0m)\
    \ == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0mvalue mod is not a member of Long, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mThe following import\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigInt.long2bigInt\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppcoevab_.scala:17:28\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            result = result\
    \ + i\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ + is not a member of List[Long], but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e[0m  import\
    \ math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import math.Numeric.Implicits.infixNumericOps\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppcoevab_.scala:20:49\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        fact.toList.foreach{\e\
    [36mx\e[0m => result = result + (x.toLong * (x.toLong + \e[31m1\e[0m))}\n\e[31m\e\
    [31m   |\e[0m                                          ^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mvalue + is not a member of List[Long], but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e[0m  import\
    \ math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import math.Numeric.Implicits.infixNumericOps\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppcoevab_.scala:21:20\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        result.head.toList\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ toList is not a member of"
  stdout: ''
  timestamp: 1660010307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = List.range(1,\
    \ n + 1)\n        factorials filter { i => i % 2 == 0 } map { i => factorials.filter(_\
    \ <= i).reduceLeft(_ * _).toLong }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpxbn03wsf.scala:13:45 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = List.range(\e\
    [31m1\e[0m, n + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                         \
    \                    ^\e[0m\n\e[31m   |\e[0m                                No\
    \ implicit Ordering defined for AnyVal.\n1 error found\n"
  stdout: ''
  timestamp: 1660010306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var res = List[Long]()\n      \
    \  for(i<- 1 to n) {\n            if(i % (2l) == 0l){\n                res = res\
    \ :+ (i.toLong.factorial)\n            }else{\n                res = res :+ (i.toLong.sum)\n\
    \            }\n        }\n        res\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ui2poer.scala:14:21\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i<- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m \
    \  |\e[0m                     Found:    (n : Long)\n\e[31m   |\e[0m          \
    \           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp6ui2poer.scala:16:39 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m                res = res :+ (i.toLong.factorial)\n\e[31m\e[31m   |\e[0m  \
    \                            ^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \                      value factorial is not a member of Long\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp6ui2poer.scala:18:39 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m                res = res :+ (i.toLong.sum)\n\e[31m\e\
    [31m   |\e[0m                              ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                              value sum is not a member of Long\n3 errors found\n"
  stdout: ''
  timestamp: 1660010307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorialList = mutable.ArrayBuffer(1l)\n\
    \        for (i <- 1 to n) {\n            factorialList.updated(i, factorialList(i)\
    \ * i)\n        }\n        factorialList.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpemxuw279.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorialList\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpemxuw279.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010307
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = new collection.mutable.ArrayBuffer[Long]()\n\
    \        for (i <- 1 to n) factorials += i.toLong * factorials.head\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp278r0kfr.scala:14:23\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) factorials += i.toLong * factorials.head\n\e[31m\e[31m  \
    \ |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                       Found:\
    \    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010308
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var product = 1;\n        val factorials\
    \ = mutable.ArrayBuffer(1l);\n        for (i <- 1 to n) {\n            if (i %\
    \ 2 == 0) {\n                factorials += product.toLong * i;\n             \
    \   product = product.toLong;\n            } else {\n                product *=\
    \ i;\n            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf80ngq9k.scala:14:25 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m);\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf80ngq9k.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpf80ngq9k.scala:18:34\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                product = product.toLong;\n\
    \e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                          Found:    Long\n\e[31m   |\e[0m                 \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n==0)\n            return List.empty\n\
    \        if(n.toInt%2==0)\n            return List(1l.toLong*n.toInt)\n      \
    \  else\n            return (1l.toLong+(n-1).toLong*(n-1).toLong).toList\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpm6b5zfil.scala:18:57 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mreturn\e[0m (\e[31m1l\e[0m.toLong+(n-\e\
    [31m1\e[0m).toLong*(n-\e[31m1\e[0m).toLong).toList\n\e[31m\e[31m   |\e[0m    \
    \               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m         value toList is not a member of Long - did you mean Long.toInt?\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n) {\n            if (i % 2 == 0) {\n                fact\
    \ += i.toLong\n            } else {\n                fact(i.toLong) = 0\n    \
    \        }\n        }\n        return fact.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp23b4toex.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfact\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp23b4toex.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // TODO: complete the body of function\
    \ f\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyzl0op3u.scala:12:35\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m    \e[33mdef\e[0m \e[36mf\e\
    [0m(\e[36mn\e[0m : \e[35mLong\e[0m) : \e[35mList\e[0m[\e[35mLong\e[0m] = {\n\e\
    [31m\e[31m   |\e[0m                                   ^\e[0m\n\e[31m   |\e[0m\
    \                                   Found:    Unit\n\e[31m   |\e[0m          \
    \                         Required: List[Long]\n\e[31m13 |\e[0m        \e[34m//\
    \ TODO: complete the body of function f\e[0m\n\e[31m14 |\e[0m    }\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010309
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = new mutable.ArrayBuffer(1l)\n\
    \        for (i <- 1l..n) { factorial += i }\n        factorial.map(_.toLong)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8njl4uys.scala:14:21 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1l\e[0m..n) { factorial\
    \ += i }\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m   |\e[0m  \
    \                   an identifier expected, but '.' found\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8njl4uys.scala:13:28 ------------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m = \e[33mnew\e\
    [0m mutable.ArrayBuffer(\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                            Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n % 2 == 0) List(1l, n.toLong)\
    \ else\n            List(n + 1l, n.toLong).map(i => factorial(i))\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp4dlqj1uw.scala:14:44 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            List(n + \e[31m1l\e[0m, n.toLong).map(\e\
    [36mi\e[0m => factorial(i))\n\e[31m\e[31m   |\e[0m                           \
    \                 ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                            \
    \                Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010306
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n == 1) return List(nl.toLong)\n\
    \        else if((n % 2) == 0) return List(1l.toLong + f(n - 1).toLong)\n    \
    \    else return (f(n - 1).toLong + f(n - 1).toLong)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp44wh47_3.scala:13:31 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m(n == \e[31m1\e[0m) \e[33mreturn\e\
    [0m List(nl.toLong)\n\e[31m\e[31m   |\e[0m                               ^^\e\
    [0m\n\e[31m   |\e[0m                               Not found: nl\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp44wh47_3.scala:14:63 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m((n % \e[31m2\e\
    [0m) == \e[31m0\e[0m) \e[33mreturn\e[0m List(\e[31m1l\e[0m.toLong + f(n - \e[31m1\e\
    [0m).toLong)\n\e[31m\e[31m   |\e[0m                                          \
    \            ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toLong is not a member\
    \ of List[Long], but could be made available as an extension method.\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mOne of the following imports might make progress towards\
    \ fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp44wh47_3.scala:15:30 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33melse\e[0m \e[33mreturn\e[0m (f(n - \e[31m1\e\
    [0m).toLong + f(n - \e[31m1\e[0m).toLong)\n\e[31m\e[31m   |\e[0m             \
    \        ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue toLong is not a member of\
    \ List[Long], but could be made available as an extension method.\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mOne of the following imports might make progress towards fixing\
    \ the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010310
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = n.toInt\n     \
    \   var result = 1\n        for (i <- 1 to factorial) {\n            if (i % 2\
    \ == 0) {\n                result *= i\n            } else {\n               \
    \ result += i\n            }\n        }\n        (1l to result).toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp_uzrl7uc.scala:25)\n\tat Problem.main(tmp_uzrl7uc.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var fact = n.toLong\n        var\
    \ result: List[Long] = List[Long](1l.toLong)\n        var i = 1\n        for(i\
    \ <- 1 to fact){\n            if(i % 2 == 0){\n                result = result\
    \ :+ fact\n            }\n            else{\n                result = result :+\
    \ i + 1\n            }\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3263fjh6.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to fact){\n\e[31m\e[31m   |\e[0m                      ^^^^\e[0m\n\e\
    [31m   |\e[0m                      Found:    (fact : Long)\n\e[31m   |\e[0m  \
    \                    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010310
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 0) List[Long]() else (1\
    \ to n).map(x => if (x % 2 == 0) x * (x + 1).toLong else x.toLong).reverse\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8om3z43a.scala:13:44\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (n == \e\
    [31m0\e[0m) List[\e[35mLong\e[0m]() \e[33melse\e[0m (\e[31m1\e[0m to n).map(\e\
    [36mx\e[0m => \e[33mif\e[0m (x % \e[31m2\e[0m == \e[31m0\e[0m) x * (x + \e[31m1\e\
    [0m).toLong \e[33melse\e[0m x.toLong).reverse\n\e[31m\e[31m   |\e[0m         \
    \                                   ^\e[0m\n\e[31m   |\e[0m                  \
    \                          Found:    (n : Long)\n\e[31m   |\e[0m             \
    \                               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010311
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        //base case\n        if (n==0)\
    \ List(1l)\n        //recursive case\n        else List(1l) ::: (for( j <- 2 to\
    \ n if j % 2==0) yield {\n                val f = j * factorial(j-1)\n       \
    \         if (f % 2 == 0) f else (f +1)})\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpr8yisoh8.scala:16:42\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33melse\e[0m List(\e\
    [31m1l\e[0m) ::: (\e[33mfor\e[0m( j <- \e[31m2\e[0m to n \e[33mif\e[0m j % \e\
    [31m2\e[0m==\e[31m0\e[0m) \e[33myield\e[0m {\n\e[31m\e[31m   |\e[0m          \
    \                                ^\e[0m\n\e[31m   |\e[0m                     \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpr8yisoh8.scala:17:28 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m                \e[33mval\e[0m \e[36mf\e[0m = j * factorial(j-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: factorial\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010311
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials: List[Long] = List();\n\
    \        if(n.toLong == 1){\n            factorials = factorials.toList :+ 1\n\
    \        }else{\n            for(i <- 1 to n){\n                if(i % 2 == 0){\n\
    \                    factorials = factorials.toList :+ (i * factorials.last)\n\
    \                }else{\n                    factorials = factorials.toList :+\
    \ ((i + 1) * factorials.last)\n                }\n            }\n        }\n \
    \       factorials\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpsl5uan77.scala:15:23 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            factorials = factorials.toList :+ \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m            Reassignment to val factorials\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsl5uan77.scala:17:26 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   Found:    (n : Long)\n\e[31m   |\e[0m                    \
    \      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpsl5uan77.scala:19:31\
    \ -----------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                   \
    \ factorials = factorials.toList :+ (i * factorials.last)\n\e[31m\e[31m   |\e\
    [0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Reassignment to val factorials\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpsl5uan77.scala:21:31 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                    factorials = factorials.toList :+\
    \ ((i + \e[31m1\e[0m) * factorials.last)\n\e[31m\e[31m   |\e[0m              \
    \      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                    Reassignment to val factorials\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010310
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var res: List[Long] = List[Long]()\n\
    \        if (n==0){\n            res ++= List(0l)\n        }\n        else for\
    \ (i <- 1 to n){\n            res ++= List(i.toLong * factorial(i))\n        }\n\
    \        res\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8v3_356r.scala:17:28\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33melse\e[0m \e[33mfor\e\
    [0m (i <- \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                         \
    \   ^\e[0m\n\e[31m   |\e[0m                            Found:    (n : Long)\n\e\
    [31m   |\e[0m                            Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp8v3_356r.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            res ++= List(i.toLong * factorial(i))\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^\e[0m\n\e[31m   |\e[0m   value ++= is not\
    \ a member of List[Long] - did you mean List[Long].++?\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp8v3_356r.scala:18:36 ------------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m            res ++= List(i.toLong * factorial(i))\n\e[31m\e\
    [31m   |\e[0m                                    ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                    Not found: factorial\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010312
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        def iterate(i : Long, acc : List[Long])\
    \ : List[Long] = {\n            if (i <= 0) acc else iterate(i - 1, (acc * i).toList)\n\
    \        }\n        iterate(n, List(1L))\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprh5kt30e.scala:14:53 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mif\e[0m (i <= \e[31m0\e[0m) acc \e\
    [33melse\e[0m iterate(i - \e[31m1\e[0m, (acc * i).toList)\n\e[31m\e[31m   |\e\
    [0m                                                 ^^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ * is not a member of List[Long], but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e[0m  import\
    \ math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import math.Numeric.Implicits.infixNumericOps\n\
    \e[31m   |\e[0m\n1 error found\n"
  stdout: ''
  timestamp: 1660010313
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n <= 0) List(1L) else if (n\
    \ % 2 == 0) List(1L) else {\n            val result = f(n / 2)\n            if\
    \ (n % 2 == 0) result ::: List(1L)\n            else result\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2b44pez6.scala:20)\n\tat Problem.main(tmp2b44pez6.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010315
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var facList : MutableList[Long]\
    \ = new MutableList[Long]\n        if (n%2 == 0) {\n            for (i = 1 until\
    \ n) {\n                facList += i.toLong\n            }\n        } else {\n\
    \            for (i = 1 until n) {\n                facList += (i + 1.0).toLong\n\
    \            }\n        }\n        facList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplvrv02f8.scala:15:19 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m (i = \e[31m1\e[0m until n)\
    \ {\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m         \
    \          ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplvrv02f8.scala:15:32\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e\
    [0m (i = \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                      \
    \          ^\e[0m\n\e[31m   |\e[0m                                '<-' expected,\
    \ but '{' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmplvrv02f8.scala:19:19\
    \ ---------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e\
    [0m (i = \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                   ^\e\
    [0m\n\e[31m   |\e[0m                   ')' expected, but '=' found\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmplvrv02f8.scala:19:32 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m (i = \e[31m1\e[0m until n)\
    \ {\n\e[31m\e[31m   |\e[0m                                ^\e[0m\n\e[31m   |\e\
    [0m                                '<-' expected, but '{' found\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplvrv02f8.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mfacList\e[0m : \e[35mMutableList\e\
    [0m[\e[35mLong\e[0m] = \e[33mnew\e[0m \e[35mMutableList\e[0m[\e[35mLong\e[0m]\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                     Not found: type MutableList\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmplvrv02f8.scala:13:46 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mfacList\e[0m : \e[35mMutableList\e\
    [0m[\e[35mLong\e[0m] = \e[33mnew\e[0m \e[35mMutableList\e[0m[\e[35mLong\e[0m]\n\
    \e[31m\e[31m   |\e[0m                                              ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                             Not found: type\
    \ MutableList\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling wit"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n) {\n            if(i.toLong % 2 == 0) {\n           \
    \     factorials += i.toLong\n            } else {\n                factorials\
    \ += factorials.sum + 1\n            }\n        }\n        return factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn6pg88ij.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpn6pg88ij.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorialList = List();\n \
    \       for(i <- 1 to n){\n            val sum = 0\n            for(j <- 1 to\
    \ i){\n                sum += i\n            }\n            factorialList += sum.toLong\n\
    \        }\n        factorialList\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpljxjv1s5.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpljxjv1s5.scala:17:20 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m                sum += i\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                value += is not a member of Int - did you mean\
    \ sum.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpljxjv1s5.scala:19:26\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m            factorialList\
    \ += sum.toLong\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0mvalue += is not a member of List[Nothing] - did you mean factorialList.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val numbers = 1 until n\n     \
    \   numbers.map(number => if (number % 2 == 0) number * number else (numbers.drop(number).toList\
    \ sum number))\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo79attb9.scala:13:30\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mnumbers\e\
    [0m = \e[31m1\e[0m until n\n\e[31m\e[31m   |\e[0m                            \
    \  ^\e[0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\
    \e[31m   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo79attb9.scala:14:105 -------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        numbers.map(\e[36mnumber\e[0m => \e[33mif\e[0m\
    \ (number % \e[31m2\e[0m == \e[31m0\e[0m) number * number \e[33melse\e[0m (numbers.drop(number).toList\
    \ sum number))\n\e[31m\e[31m   |\e[0m                                        \
    \                                                                 ^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                                Found:    (number\
    \ : Int)\n\e[31m   |\e[0m                                                Required:\
    \ Numeric[Int]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val n = n.toInt\n        var sum\
    \ = 1\n        val r = scala.util.Random\n        for(i<-1 to n-1){\n        \
    \    val x = r.nextInt(i+1)\n            val y = r.nextInt(i+1)\n            val\
    \ z = r.nextInt(i+1)\n            val m = r.nextInt(i+1)\n            val p =\
    \ r.nextInt(i+1)\n            val q = r.nextInt(i+1)\n            val r = r.nextInt(i+1)\n\
    \            val s = r.nextInt(i+1)\n            val t = r.nextInt(i+1)\n    \
    \        val u = r.nextInt(i+1)\n            sum += x*y*z*m*p*q*r*s*t*u\n    \
    \    }\n        if (n % 2 == 0) List((1l.toLong,1))\n        else List((1l.toLong,sum))\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpzz5ztgl_.scala:13:16 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = n.toInt\n\e[31m\e\
    [31m   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive\
    \ \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpzz5ztgl_.scala:29:29 --------------------\e[0m\e\
    [0m\n\e[31m29 |\e[0m        \e[33mif\e[0m (n % \e[31m2\e[0m == \e[31m0\e[0m) List((\e\
    [31m1l\e[0m.toLong,\e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                     \
    \        ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                             Found:\
    \    \e[1m\e[31m(\e[0mLong\e[1m\e[31m,\e[0m\e[1m\e[31m \e[0m\e[1m\e[31mInt\e[0m\e\
    [1m\e[31m)\e[0m\n\e[31m   |\e[0m                             Required: Long\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzz5ztgl_.scala:30:18\
    \ --------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33melse\e[0m List((\e\
    [31m1l\e[0m.toLong,sum))\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Found:    \e[1m\e[31m(\e[0mLong\e[1m\e[31m,\e\
    [0m\e[1m\e[31m \e[0m\e[1m\e[31mInt\e[0m\e[1m\e[31m)\e[0m\n\e[31m   |\e[0m    \
    \              Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = n match {\n   \
    \         case 0 => 1\n            case _ => n * f(n - 1l)\n        }\n      \
    \  val sum = 1l to n map (_ * factorial)\n        sum.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpev52_0lk.scala:15:24 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m _ => n * f(n - \e[31m1l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0mNone\
    \ of the overloaded alternatives of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e\
    [0m \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x: Double): Double\n\e[31m  \
    \ |\e[0m (x: Float): Float\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x:\
    \ Int): Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\
    \e[31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0mmatch arguments (List[Long])\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010316
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val f = n.toLong * (1 to n).toList\n\
    \        f.map(x => if (x % 2 == 0) x * factorial(x) else x + 1L).sum\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdc7agh1_.scala:13:33\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mf\e\
    [0m = n.toLong * (\e[31m1\e[0m to n).toList\n\e[31m\e[31m   |\e[0m           \
    \                      ^\e[0m\n\e[31m   |\e[0m                               \
    \  Found:    (n : Long)\n\e[31m   |\e[0m                                 Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmpdc7agh1_.scala:13:25\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e\
    [0m \e[36mf\e[0m = n.toLong * (\e[31m1\e[0m to n).toList\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded alternatives\
    \ of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\
    \e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m\
    \   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x:\
    \ Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\
    \e[31m   |\e[0mmatch arguments ((scala.collection.immutable.Range.Inclusive#toList\
    \ : => List[Int]))\n2 errors found\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // TODO Auto-generated method stub\n\
    \        if (n==0) List(1L) else List.tabulate(n)(i => i * i).toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4kojuqe0.scala:14:46\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mif\e[0m (n==\e\
    [31m0\e[0m) List(\e[31m1L\e[0m) \e[33melse\e[0m List.tabulate(n)(\e[36mi\e[0m\
    \ => i * i).toList\n\e[31m\e[31m   |\e[0m                                    \
    \          ^\e[0m\n\e[31m   |\e[0m                                           \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                                    \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var acc : List[Long] = Nil\n  \
    \      for ( i <- 1 to n ) {\n            if (i % 2 == 0) {\n                acc\
    \ :+= i * i\n            } else {\n                acc :+= i + 1\n           \
    \ }\n        }\n        acc\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1_2cby2f.scala:14:24\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m ( i <-\
    \ \e[31m1\e[0m to n ) {\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\
    \e[31m   |\e[0m                        Found:    (n : Long)\n\e[31m   |\e[0m \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010317
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n.toInt() == 0) return Nil\n\
    \        val fact = for (i <- 1 until n) yield factorial(i)\n        val sum =\
    \ (for (i <- 1 until n) yield i)\n        sum.zip(fact).filter(_._1.toInt() %\
    \ 2 == 0).map(_._2.toLong)\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpkwfpfbeu.scala:13:14 -----------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m (n.toInt() == \e[31m0\e[0m) \e\
    [33mreturn\e[0m Nil\n\e[31m\e[31m   |\e[0m            ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m            \e[33mmethod\e[0m \e[35mtoInt\e[0m in \e[33mclass\e[0m \e[35mLong\e\
    [0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpkwfpfbeu.scala:14:37 --------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mval\e[0m \e[36mfact\e[0m = \e[33mfor\e[0m (i <- \e[31m1\e\
    [0m until n) \e[33myield\e[0m factorial(i)\n\e[31m\e[31m   |\e[0m            \
    \                         ^\e[0m\n\e[31m   |\e[0m                            \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                              \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpkwfpfbeu.scala:14:46\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e\
    [36mfact\e[0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m until n) \e[33myield\e[0m factorial(i)\n\
    \e[31m\e[31m   |\e[0m                                              ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                              Not found: factorial\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpkwfpfbeu.scala:15:37\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36msum\e\
    [0m = (\e[33mfor\e[0m (i <- \e[31m1\e[0m until n) \e[33myield\e[0m i)\n\e[31m\e\
    [31m   |\e[0m                                     ^\e[0m\n\e[31m   |\e[0m    \
    \                                 Found:    (n : Long)\n\e[31m   |\e[0m      \
    \                               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E050] Type Error: /tmp/tmpkwfpfbeu.scala:16:34 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        sum.zip(fact).filter(_._1.toInt() % \e[31m2\e\
    [0m == \e[31m"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1l) return List(1l)\n\
    \        else if (n%2l == 0) return f(2n) -> f(2n+1)\n        else f(2n+1l) ::\
    \ f(2n+1l)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpefm5m02u.scala:14:39 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m (n%\e[31m2l\e[0m\
    \ == \e[31m0\e[0m) \e[33mreturn\e[0m f(\e[31m2\e[0mn) -> f(\e[31m2\e[0mn+\e[31m1\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                       ^\e[0m\n\e[31m\
    \   |\e[0m                                       expression expected but \e[31m')'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpefm5m02u.scala:14:47\
    \ ------------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e\
    [33mif\e[0m (n%\e[31m2l\e[0m == \e[31m0\e[0m) \e[33mreturn\e[0m f(\e[31m2\e[0mn)\
    \ -> f(\e[31m2\e[0mn+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                    \
    \                          ^^\e[0m\n\e[31m   |\e[0m                          \
    \                value n is not a member of Int\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpefm5m02u.scala:15:28 ------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33melse\e[0m f(\e[31m2\e[0mn+\e[31m1l\e[0m) :: f(\e[31m2\e\
    [0mn+\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^\e[0m\n\
    \e[31m   |\e[0m                           value n is not a member of Int\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpefm5m02u.scala:15:16 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33melse\e[0m f(\e[31m2\e[0mn+\e[31m1l\e[0m)\
    \ :: f(\e[31m2\e[0mn+\e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m               ^^\e\
    [0m\n\e[31m   |\e[0m               value n is not a member of Int\n4 errors found\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1l) List(1l)\n       \
    \ else if (n % 2 == 0) List(1l, n * f(n - 1l)) else (1l, n * (f(n - 1l) + f(n\
    \ - 2l)))\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmprpef16hw.scala:14:40 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m (n % \e[31m2\e\
    [0m == \e[31m0\e[0m) List(\e[31m1l\e[0m, n * f(n - \e[31m1l\e[0m)) \e[33melse\e\
    [0m (\e[31m1l\e[0m, n * (f(n - \e[31m1l\e[0m) + f(n - \e[31m2l\e[0m)))\n\e[31m\e\
    [31m   |\e[0m                                      ^^^\e[0m\n\e[31m   |\e[0mNone\
    \ of the overloaded alternatives of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e\
    [0m \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x: Double): Double\n\e[31m  \
    \ |\e[0m (x: Float): Float\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x:\
    \ Int): Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\
    \e[31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0mmatch arguments (List[Long])\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmprpef16hw.scala:14:78 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m (n % \e[31m2\e\
    [0m == \e[31m0\e[0m) List(\e[31m1l\e[0m, n * f(n - \e[31m1l\e[0m)) \e[33melse\e\
    [0m (\e[31m1l\e[0m, n * (f(n - \e[31m1l\e[0m) + f(n - \e[31m2l\e[0m)))\n\e[31m\e\
    [31m   |\e[0m                                                                \
    \    ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue + is not a member of List[Long], but\
    \ could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mOne of the following imports might make progress towards fixing the problem:\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010323
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var list: List[Long] = Nil\n  \
    \      var i = 1\n        // i is even\n        if (n / 2 * 2 == n) list = (1l\
    \ to i).map(x => x * x).toList\n        else list = 1 to i filter (x => x % 2\
    \ != 0) map (x => x * x).toList\n        if (n < 2) list\n        else f(n - 1)\
    \ ::: list\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E081] Type Error: /tmp/tmpg8t4xxjl.scala:17:57 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33melse\e[0m list = \e[31m1\e[0m to i filter\
    \ (x => x % \e[31m2\e[0m != \e[31m0\e[0m) map (x => x * x).toList\n\e[31m\e[31m\
    \   |\e[0m                                                         ^\e[0m\n\e\
    [31m   |\e[0m                          Missing parameter type\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m                          I could not infer the type of the parameter\
    \ x.\n1 error found\n"
  stdout: ''
  timestamp: 1660010318
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fac = mutable.ArrayBuffer.empty[Long]\n\
    \        for (i <- 1 to n)\n            fac += i * (i + 1l).toLong\n        fac\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt2m5qakp.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfac\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpt2m5qakp.scala:14:23 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n)\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n == 0) List(1l)\n        else\
    \ n.toIntList.map { n =>\n            n.toLong\n        }.foldLeft(1l) { (facs,\
    \ x) =>\n            if(x % 2 == 0)\n                facs * (x+1)\n          \
    \  else\n                facs+(x-1)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpl4f160x8.scala:14:15 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m n.toIntList.map { n =>\n\e[31m\e\
    [31m   |\e[0m             ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             value\
    \ toIntList is not a member of Long\n1 error found\n"
  stdout: ''
  timestamp: 1660010321
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorialList = mutable.LinkedList\n\
    \        var i : Long = 1\n        while(i <= n){\n            val factorial =\
    \ (i.toLong * 2).toInt\n            if(i % 2 == 0){\n                factorialList\
    \ += factorial\n            }else{\n                factorialList += factorial\
    \ + 1\n            }\n            i += 1\n        }\n        factorialList.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_ltvlm3u.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorialList\e[0m = mutable.LinkedList\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                            Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010319
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1)\n            Nil\n\
    \        else\n            List(1)\n            ::: (0 to n).filter(i => ((i%2)\
    \ == 0))\n            ::: List((n-1l).toLong)\n            .foldLeft(List.fill(n.toInt)(1l))\
    \ {\n                case (acc, x) => acc * x\n            }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4d7kvmcw.scala:20:37 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mcase\e[0m (acc, x) => acc * x\n\
    \e[31m\e[31m   |\e[0m                                 ^^^^^\e[0m\n\e[31m   |\e\
    [0mvalue * is not a member of List[Long], but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e[0m  import\
    \ math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import math.Numeric.Implicits.infixNumericOps\n\
    \e[31m   |\e[0m\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4d7kvmcw.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            ::: (\e[31m0\e[0m\
    \ to n).filter(\e[36mi\e[0m => ((i%\e[31m2\e[0m) == \e[31m0\e[0m))\n\e[31m\e[31m\
    \   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                      Found:\
    \    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val nums = (1 to n).toList\n  \
    \      val numsEven = nums.filter(_ % 2 == 0)\n        val numsOdd = nums.filter(_\
    \ % 2 == 1)\n        val sumEven = numsEven.sum\n        val sumOdd = numsOdd.sum\n\
    \n        (numsEven.map(n => n.toLong * n.toLong) + numsOdd.map(n => n.toLong)).filter(_\
    \ % 2 == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpko8y5qc_.scala:13:25\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mnums\e\
    [0m = (\e[31m1\e[0m to n).toList\n\e[31m\e[31m   |\e[0m                      \
    \   ^\e[0m\n\e[31m   |\e[0m                         Found:    (n : Long)\n\e[31m\
    \   |\e[0m                         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpko8y5qc_.scala:19:48 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        (numsEven.map(\e[36mn\e[0m => n.toLong * n.toLong)\
    \ + numsOdd.map(\e[36mn\e[0m => n.toLong)).filter(_ % \e[31m2\e[0m == \e[31m0\e\
    [0m)\n\e[31m\e[31m   |\e[0m         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue + is not a member of List[Long], but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e\
    [0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import\
    \ math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = for (i <- 1 until\
    \ n) yield 1l*(i.toLong);\n        val even = factorials.filter(x => x % 2==0);\n\
    \        val odd = factorials.filter(x => x % 2 != 0);\n        even ::: odd\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8fuzetms.scala:13:43\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m until n) \e[33myield\e[0m \e[31m1l\e[0m*(i.toLong);\n\
    \e[31m\e[31m   |\e[0m                                           ^\e[0m\n\e[31m\
    \   |\e[0m                                           Found:    (n : Long)\n\e\
    [31m   |\e[0m                                           Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8fuzetms.scala:16:13 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        even ::: odd\n\e[31m\e[31m   |\e[0m         \
    \    ^^^^^^^\e[0m\n\e[31m   |\e[0m   value ::: is not a member of IndexedSeq[Long]\
    \ - did you mean odd.++:?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010324
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n==1)\n        List(1)\n  \
    \      if (n.even)\n            f(n.toInt).map(i => i*i)\n        else\n     \
    \       f(n.toInt).map(i => i*i).drop(1).foldLeft(1)(_+_)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpya94c8df.scala:15:14 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mif\e[0m (n.even)\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^\e[0m\n\e[31m   |\e[0m            value even is not a member\
    \ of Long\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpya94c8df.scala:18:57\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            f(n.toInt).map(\e\
    [36mi\e[0m => i*i).drop(\e[31m1\e[0m).foldLeft(\e[31m1\e[0m)(_+_)\n\e[31m\e[31m\
    \   |\e[0m                                                         ^^^\e[0m\n\e\
    [31m   |\e[0m                                                         Found: \
    \   Long\n\e[31m   |\e[0m                                                    \
    \     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010325
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val nums = List(1)\n        for(i\
    \ <- 2 to n by 2) nums ::= i * nums(n-1)\n        nums.reverse\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpiow1t7zc.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n by \e[31m2\e[0m) nums ::= i * nums(n-\e[31m1\e[0m)\n\e[31m\e[31m\
    \   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                      Found:\
    \    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpiow1t7zc.scala:14:35 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e\
    [0m) nums ::= i * nums(n-\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                \
    \              ^^^^^^^^\e[0m\n\e[31m   |\e[0m          value ::= is not a member\
    \ of List[Int] - did you mean nums.::?\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpiow1t7zc.scala:14:48 --------------------\e[0m\e[0m\n\e[31m14 |\e[0m\
    \        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n by \e[31m2\e[0m) nums ::= i * nums(n-\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                                           \
    \     ^^^\e[0m\n\e[31m   |\e[0m                                              \
    \  Found:    Long\n\e[31m   |\e[0m                                           \
    \     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpiow1t7zc.scala:15:13\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        nums.reverse\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    List[\e\
    [1m\e[31mInt\e[0m]\n\e[31m   |\e[0m        Required: List[\e[1m\e[32mLong\e[0m]\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = mutable.Stack()\n  \
    \      var total = 0\n        if (n.toDouble % 2 == 0) {\n            n -= 1\n\
    \        }\n        fact += n to 1 by -1\n        while(!fact.isEmpty) {\n   \
    \         total += fact.head.toLong * fact.tail.head.toLong\n            fact\
    \ = fact.tail\n        }\n        (1 to n).map(i => if (i.toDouble % 2 == 0) {\n\
    \            i -= 1\n        }\n        else total).toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy2a2djsp.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfact\e[0m = mutable.Stack()\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m        \
    \           Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpy2a2djsp.scala:16:14 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value -= is not a member of Long - did you mean n.!=?\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpy2a2djsp.scala:21:17 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            fact = fact.tail\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to\
    \ val fact\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpy2a2djsp.scala:23:14\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        (\e[31m1\e[0m to n).map(\e\
    [36mi\e[0m => \e[33mif\e[0m (i.toDouble % \e[31m2\e[0m == \e[31m0\e[0m) {\n\e\
    [31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Found: \
    \   (n : Long)\n\e[31m   |\e[0m              Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpy2a2djsp.scala:24:14 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            i -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Int - did you mean i.!=?\n5 errors found\n"
  stdout: ''
  timestamp: 1660010327
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 0) return Nil\n      \
    \  if (n%2 == 0) return f(n.toInt).map(_.toLong * _).toList\n        else return\
    \ List(1l.toLong, 1l.toLong +: 1 +: 2 +: 3 +: 4 +: 5 +: 6 +: 7 +: 8 +: 9 +: 10\
    \ +: 11).toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E086] Syntax Error: /tmp/tmpziw1bt7p.scala:14:44 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mif\e[0m (n%\e[31m2\e[0m == \e[31m0\e[0m)\
    \ \e[33mreturn\e[0m f(n.toInt).map(_.toLong * _).toList\n\e[31m\e[31m   |\e[0m\
    \                                            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                 Wrong number of parameters, expected: 1\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpziw1bt7p.scala:15:97 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33melse\e[0m \e[33mreturn\e[0m List(\e[31m1l\e\
    [0m.toLong, \e[31m1l\e[0m.toLong +: \e[31m1\e[0m +: \e[31m2\e[0m +: \e[31m3\e\
    [0m +: \e[31m4\e[0m +: \e[31m5\e[0m +: \e[31m6\e[0m +: \e[31m7\e[0m +: \e[31m8\e\
    [0m +: \e[31m9\e[0m +: \e[31m10\e[0m +: \e[31m11\e[0m).toList\n\e[31m\e[31m  \
    \ |\e[0m                                                                     \
    \                            ^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \                    value +: is not a member of Int\n2 errors found\n"
  stdout: ''
  timestamp: 1660010326
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = n.toLong * factorial\n\
    \        val factorials = List.range(1, n + 1)\n        factorials filter { x\
    \ => n % x == 0 } map { x => fact * x }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt1h690n6.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfact\e[0m = n.toLong * factorial\n\
    \e[31m\e[31m   |\e[0m                              ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                              Not found: factorial\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- Error: /tmp/tmpt1h690n6.scala:14:45 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = List.range(\e\
    [31m1\e[0m, n + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                         \
    \                    ^\e[0m\n\e[31m   |\e[0m                                No\
    \ implicit Ordering defined for AnyVal.\n2 errors found\n"
  stdout: ''
  timestamp: 1660010328
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n      val fact = mutable.ArrayBuffer.empty[Long]\n\
    \      val sum = 0\n      for(i <- 1 to n)\n      {\n        fact += i.toLong\n\
    \        if(i % 2 == 0)\n          sum += i.toLong\n      }\n      fact.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp1hom0s45.scala:13:17 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m      \e[33mval\e[0m \e[36mfact\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                 ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp1hom0s45.scala:15:20 --------------------\e[0m\e\
    [0m\n\e[31m15 |\e[0m      \e[33mfor\e[0m(i <- \e[31m1\e[0m to n)\n\e[31m\e[31m\
    \   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    Found:\
    \    (n : Long)\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1hom0s45.scala:19:14 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m          sum += i.toLong\n\e[31m\e[31m   |\e[0m    \
    \      ^^^^^^\e[0m\n\e[31m   |\e[0m          value += is not a member of Int -\
    \ did you mean sum.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var fac : Long = 1\n        var\
    \ sum : Long = 1\n        var result : List[Long] = List()\n        if (n==0)\
    \ {\n            result ::= List()\n        } else {\n            for (i <- 1\
    \ to n) {\n                if (i % 2 == 0) {\n                    fac = fac *\
    \ i\n                } else {\n                    sum = sum + i\n           \
    \     }\n            }\n            result ::= List(fac).toList :: (List((sum\
    \ + 1)).toList :: result)\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpj03c6dlw.scala:17:19 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            result ::= List()\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   value ::= is not a member of List[Long]\
    \ - did you mean List[Long].::?\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpj03c6dlw.scala:19:27\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mfor\e[0m (i\
    \ <- \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                           ^\e\
    [0m\n\e[31m   |\e[0m                           Found:    (n : Long)\n\e[31m  \
    \ |\e[0m                           Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpj03c6dlw.scala:26:19 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            result ::= List(fac).toList :: (List((sum\
    \ + \e[31m1\e[0m)).toList :: result)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m   value ::= is not a member of List[Long] - did you mean\
    \ List[Long].::?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1) List(1l) else \n  \
    \      (\n            for {\n                i <- 1 to n\n            } yield\
    \ {\n                if (i%2 == 0) 1l else i.toLong\n            }\n        )\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptusv8kg4.scala:16:26\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m                i <- \e[31m1\e\
    [0m to n\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e\
    [0m                          Found:    (n : Long)\n\e[31m   |\e[0m           \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var facts = scala.collection.mutable.MutableList[Long]()\n\
    \        for (i<- 1L to n by 2L) {\n            facts = facts ::: scala.collection.mutable.MutableList[Long](1L.toLong*i.toLong)\n\
    \        }\n        facts\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzu5ts890.scala:13:45 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mfacts\e[0m = scala.collection.mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m           value MutableList is not a member of scala.collection.mutable\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzu5ts890.scala:15:55 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            facts = facts ::: scala.collection.mutable.MutableList[\e\
    [35mLong\e[0m](\e[31m1L\e[0m.toLong*i.toLong)\n\e[31m\e[31m   |\e[0m         \
    \                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m           value MutableList is not a member of scala.collection.mutable\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010331
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1L) return List(0L); //\
    \ 1! = 1\n        else if (n % 2L == 0L) return List(0L, 1L) // n is even, 1!\
    \ + 2! + ...\n        else { // n is odd\n            val ret: List[Long] = List(1L)\
    \ // start from 1\n            for {\n                i <- 1L until n\n      \
    \      } { ret += i * i.toLong }\n            return ret\n        }\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpeods141d.scala:19:20 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            } { ret += i * i.toLong }\n\e[31m\e[31m \
    \  |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m           value += is not\
    \ a member of List[Long] - did you mean ret.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010330
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = for (i <- 1 to\
    \ n) yield if (i % 2 == 0) 1l.toLong * i.toLong else i.toLong\n        factorials\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprp0hucv2.scala:13:40\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) \e[33myield\e[0m \e[33mif\e[0m (i\
    \ % \e[31m2\e[0m == \e[31m0\e[0m) \e[31m1l\e[0m.toLong * i.toLong \e[33melse\e\
    [0m i.toLong\n\e[31m\e[31m   |\e[0m                                        ^\e\
    [0m\n\e[31m   |\e[0m                                        Found:    (n : Long)\n\
    \e[31m   |\e[0m                                        Required: Int\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprp0hucv2.scala:14:8 ---------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        factorials\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        Found:    (factorials : IndexedSeq[Long])\n\e[31m\
    \   |\e[0m        Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010331
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = (1 to n).map(_.toLong).reduce(_\
    \ * _)\n        if (n % 2 == 0) {\n            fact.toList :+ fact.toLong\n  \
    \      } else {\n            fact.toList.foldLeft(fact.toLong) { (acc, i) => acc\
    \ + i + 1 }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmvo20yq7.scala:13:25\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfact\e\
    [0m = (\e[31m1\e[0m to n).map(_.toLong).reduce(_ * _)\n\e[31m\e[31m   |\e[0m \
    \                        ^\e[0m\n\e[31m   |\e[0m                         Found:\
    \    (n : Long)\n\e[31m   |\e[0m                         Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmvo20yq7.scala:15:17 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            fact.toList :+ fact.toLong\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         value toList is\
    \ not a member of Long - did you mean fact.toInt?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpmvo20yq7.scala:17:17 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            fact.toList.foldLeft(fact.toLong) { (\e[36macc\e[0m, \e[36mi\e\
    [0m) => acc + i + \e[31m1\e[0m }\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m         value toList is not a member of Long - did you mean\
    \ fact.toInt?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n % 2 == 0) List(1l*n.toLong)\n\
    \        else  List(1l, 1l*(n-1l), 1l*(n+1l), 1l*(2*n-1l))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpodp95sde.scala:17)\n\tat Problem.main(tmpodp95sde.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = BigInt(n)\n   \
    \     val result = new ListBuffer[Long]()\n        for (i<-1l to n by -2l) {\n\
    \            result.append(factorial)\n            result.append(BigInt(i+1).toLong)\n\
    \        }\n        result\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpwrwggnx7.scala:16:19 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            result.append(factorial)\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35mappend\e[0m in \e[33mtrait\e[0m \e[35mBuffer\e\
    [0m with types\n\e[31m   |\e[0m (elems: Long*): (result : scala.collection.mutable.ListBuffer[Long])\n\
    \e[31m   |\e[0m (elem: Long): (result : scala.collection.mutable.ListBuffer[Long])\n\
    \e[31m   |\e[0mmatch arguments ((factorial : BigInt))\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpwrwggnx7.scala:19:8 ---------------------\e[0m\e[0m\n\
    \e[31m19 |\e[0m        result\n\e[31m\e[31m   |\e[0m        ^^^^^^\e[0m\n\e[31m\
    \   |\e[0m        Found:    (result : scala.collection.mutable.ListBuffer[Long])\n\
    \e[31m   |\e[0m        Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010332
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1L to n)\n        {\n            if (i % 2 == 0)\n         \
    \   {\n                factorials += i.toLong\n            }\n            else\n\
    \            {\n                factorials ++= (1 to i).sum\n            }\n \
    \       }\n        return factorials.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpidmlpvsp.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010329
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n == 1) List(n)\n        else\
    \ n match {\n            case i if i % 2 == 0 => List(1l*i.toLong)\n         \
    \   case i => for(j <- 2l*i.toLong until n) yield j\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphs_jauo2.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mcase\e[0m i\
    \ => \e[33mfor\e[0m(j <- \e[31m2l\e[0m*i.toLong until n) \e[33myield\e[0m j\n\e\
    [31m\e[31m   |\e[0m                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                      Found:    IndexedSeq[Long]\n\e[31m \
    \  |\e[0m                      Required: List[Long]\n\e[31m   |\e[0m\n\e[31m \
    \  |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var i = n\n        var result =\
    \ List[Long]()\n        var fact = 1.toLong\n        while (i != 0) {\n      \
    \      result ::= i :: fact :: result.tail\n            i = i >> 1\n         \
    \   fact = fact * i\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxe8pzuf5.scala:17:19 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            result ::= i :: fact :: result.tail\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   value ::= is not a\
    \ member of List[Long] - did you mean List[Long].::?\n1 error found\n"
  stdout: ''
  timestamp: 1660010333
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.LinkedHashMap[Int,\
    \ Long]()\n        factorials += (1, 1l)\n        for {\n            i <- 1l to\
    \ n\n            sum += i\n        } yield {\n            factorials.updated(i,\
    \ factorials.getOrElse(i, sum))\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpf55kuhcm.scala:18:8 ----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        } \e[33myield\e[0m {\n\e[31m\e[31m   |\e[0m \
    \       ^\e[0m\n\e[31m   |\e[0m        '<-' expected, but '}' found\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmpf55kuhcm.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.LinkedHashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                         Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010331
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val ans = List.fill(n - 1)(1l.toLong)\n\
    \        ans match {\n            case Nil => ans\n            case h :: t =>\
    \ List((n / h).toLong :: t)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp66ol480l.scala:13:28\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mans\e\
    [0m = List.fill(n - \e[31m1\e[0m)(\e[31m1l\e[0m.toLong)\n\e[31m\e[31m   |\e[0m\
    \                            ^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \       Found:    Long\n\e[31m   |\e[0m                            Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp66ol480l.scala:16:32\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mcase\e[0m h\
    \ :: t => List((n / h).toLong :: t)\n\e[31m\e[31m   |\e[0m                   \
    \             ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \          Found:    \e[1m\e[31mList\e[0m\e[1m\e[31m[\e[0mLong\e[1m\e[31m]\e[0m\n\
    \e[31m   |\e[0m                                Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010334
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // Complete the implementation\n\
    \        var list = new ListBuffer[Long]()\n        var result = 1\n        for\
    \ (i <- 1 to n){\n            if (i%2 == 0){\n                list.add(result.toLong)\n\
    \            }\n            else {\n                result += i\n            \
    \    list.add(result.toLong)\n            }\n        }\n        list.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2ufuizu7.scala:16:23\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp2ufuizu7.scala:18:21 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m                list.add(result.toLong)\n\e[31m\e[31m   |\e[0m            \
    \    ^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ListBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2ufuizu7.scala:22:21\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m                list.add(result.toLong)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is\
    \ not a member of scala.collection.mutable.ListBuffer[Long], but could be made\
    \ available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the\
    \ following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m \
    \ import collection.convert.ImplicitConversions.buffer AsJavaList\n\e[31m   |\e\
    [0m  import collection.convert"
  stdout: ''
  timestamp: 1660010337
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n      val list = List.range(1, n)\n   \
    \   list.foreach(x => if (x % 2 == 0) xl.toLong * x else xl.toLong + x.toLong)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpq_vhlss7.scala:13:33 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m      \e[33mval\e[0m \e[36mlist\e[0m = List.range(\e\
    [31m1\e[0m, n)\n\e[31m\e[31m   |\e[0m                                 ^\e[0m\n\
    \e[31m   |\e[0m                                No implicit Ordering defined for\
    \ AnyVal.\n1 error found\n"
  stdout: ''
  timestamp: 1660010336
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        def loop(i : Long) : List[Long]\
    \ = {\n            if (i == 1) List(1l.toLong)\n            else if ((i % 2) ==\
    \ 0) List(1l.toLong, 1l.toLong * i.toLong)\n            else List(1l.toLong, 1l.toLong\
    \ * (i.toLong + 1))\n        }\n        var result = loop(1l)\n        var index\
    \ = 0\n        while (index < n) {\n            result = result ::: loop(index.toLong)\n\
    \            index = index + 1\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph2186t7b.scala:27)\n\tat Problem.main(tmph2186t7b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010337
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = n :: 0 #:: (for\
    \ (i <- 1 to n) yield (n * i).toLong)\n        factorials.filter(i => i % 2 ==\
    \ 0).head\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu088yowe.scala:13:52\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e\
    [0m = n :: \e[31m0\e[0m #:: (\e[33mfor\e[0m (i <- \e[31m1\e[0m to n) \e[33myield\e\
    [0m (n * i).toLong)\n\e[31m\e[31m   |\e[0m                                   \
    \                 ^\e[0m\n\e[31m   |\e[0m                                    \
    \                Found:    (n : Long)\n\e[31m   |\e[0m                       \
    \                             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010336
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n < 2)\n            List(n)\n\
    \        else\n            val lst = List(n,1)\n            for (i <- lst if i\
    \ % 2 == 0) yield i * i\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprdr2k51w.scala:20)\n\tat Problem.main(tmprdr2k51w.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n % 2 == 0) List(1L.toLong,\
    \ n.toLong * (n.toLong + 1L).toLong)\n        else List.fill(n - 1L)(0L).toList.map(x\
    \ => x * x)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpu6v6nip2.scala:14:23\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m List.fill(n\
    \ - \e[31m1L\e[0m)(\e[31m0L\e[0m).toList.map(x => x * x)\n\e[31m\e[31m   |\e[0m\
    \                       ^^^^^^\e[0m\n\e[31m   |\e[0m                       Found:\
    \    Long\n\e[31m   |\e[0m                       Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ListBuffer.empty[Long]\n\
    \        for (i <- 1 until n)\n            factorials += (i.toLong * factorials.sum)\n\
    \        factorials\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsxgr81ho.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsxgr81ho.scala:14:26 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m until n)\n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010338
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var results: List[Long] = List()\n\
    \        var factorial = 1\n        while (n > 0) {\n            if (n % 2 ==\
    \ 0) {\n                factorial *= (n + 1)\n                results = results\
    \ :+ factorial\n            } else {\n                results = results :+ (n\
    \ + 1)\n            }\n            n -= 1\n        }\n        results\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsyhfw636.scala:17:26 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m                factorial *= (n + \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m              \
    \  value *= is not a member of Int - did you mean Int.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpsyhfw636.scala:22:14 ------------------------\e[0m\e\
    [0m\n\e[31m22 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list = mutable.ListBuffer[Long]()\n\
    \        // i is from 1 to the n\n        for (i <- 1 to n) {\n            val\
    \ fact = i * i\n            if (i % 2 == 0)\n                list.add(fact)\n\
    \            else\n                list.add(fact + 1)\n        }\n        list.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprsxe7giy.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmprsxe7giy.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m            \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                       Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1 until n)\n            result+=(i.toLong*factorial(i))\n \
    \       result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8os3cnm5.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp8os3cnm5.scala:14:26 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m until n)\n\e\
    [31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m         \
    \                 Found:    (n : Long)\n\e[31m   |\e[0m                      \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010340
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list = List[Long](n + 1)\n\
    \        list.map(i => if (i % 2 == 0) i * factorial(i).toLong else 1l.toLong\
    \ + i)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp79mrfa8z.scala:14:42 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        list.map(\e[36mi\e[0m => \e[33mif\e[0m (i % \e\
    [31m2\e[0m == \e[31m0\e[0m) i * factorial(i).toLong \e[33melse\e[0m \e[31m1l\e\
    [0m.toLong + i)\n\e[31m\e[31m   |\e[0m                                       \
    \   ^^^^^^^^^\e[0m\n\e[31m   |\e[0m                                          Not\
    \ found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010337
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list = List(n,n+1l,n+2l,n+3l,n+4l,n+5l,n+6l,n+7l,n+8l,n+9l,n+10l)\n\
    \        list.zipWithIndex.foldLeft(List[Long]())((acc,(index,number)) => {\n\
    \            val factorial = number.toLong*number.toLong\n            if (number\
    \ % 2 == 0) {\n                acc :+ factorial.toLong\n            } else {\n\
    \                acc :+ (index.toLong+number.toLong).toLong\n            }\n \
    \       })\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpfkckceb_.scala:14:54 -----------------------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        list.zipWithIndex.foldLeft(List[\e[35mLong\e\
    [0m]())((\e[36macc\e[0m,(index,number)) => {\n\e[31m\e[31m   |\e[0m          \
    \                                            ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                                            not a legal formal parameter\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpfkckceb_.scala:15:28 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mval\e[0m \e[36mfactorial\e[0m = number.toLong*number.toLong\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                            Not found: number\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpfkckceb_.scala:16:16 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mif\e[0m (number % \e[31m2\e[0m == \e\
    [31m0\e[0m) {\n\e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: number\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpfkckceb_.scala:19:24 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m                acc :+ (index.toLong+number.toLong).toLong\n\
    \e[31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                   Not found: index\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010339
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = BigInt(1l)\n       \
    \ (1 to n).filter(i => i % 2 == 0).map(x => fact.remainder(BigInt(x) + 1l)).filterNot(x\
    \ => x == 0)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpej8rexny.scala:14:14\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        (\e[31m1\e[0m to n).filter(\e\
    [36mi\e[0m => i % \e[31m2\e[0m == \e[31m0\e[0m).map(\e[36mx\e[0m => fact.remainder(BigInt(x)\
    \ + \e[31m1l\e[0m)).filterNot(\e[36mx\e[0m => x == \e[31m0\e[0m)\n\e[31m\e[31m\
    \   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Found:    (n : Long)\n\
    \e[31m   |\e[0m              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpej8rexny.scala:14:55 ------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        (\e[31m1\e[0m to n).filter(\e[36mi\e[0m => i % \e\
    [31m2\e[0m == \e[31m0\e[0m).map(\e[36mx\e[0m => fact.remainder(BigInt(x) + \e\
    [31m1l\e[0m)).filterNot(\e[36mx\e[0m => x == \e[31m0\e[0m)\n\e[31m\e[31m   |\e\
    [0m                                                  ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                               value remainder is not a member of BigInt\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        (for (i <- 1 to n) yield {\n  \
    \          if (i % 2 == 0) 1l else i * i\n        }) \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpobmcm381.scala:13:24\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        (\e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) \e[33myield\e[0m {\n\e[31m\e[31m   |\e[0m               \
    \         ^\e[0m\n\e[31m   |\e[0m                        Found:    (n : Long)\n\
    \e[31m   |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // Your code here\n        val\
    \ result: List[Long] = n match {\n            case n if n % 2 == 0 => n / 2\n\
    \            case n if n % 2 == 1 => n / 2 * n + 1\n        }\n        result\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp15_858nu.scala:15:36\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mcase\e[0m n\
    \ \e[33mif\e[0m n % \e[31m2\e[0m == \e[31m0\e[0m => n / \e[31m2\e[0m\n\e[31m\e\
    [31m   |\e[0m                                    ^^^^^\e[0m\n\e[31m   |\e[0m \
    \                                   Found:    Long\n\e[31m   |\e[0m          \
    \                          Required: \e[1m\e[32mList\e[0m\e[1m\e[32m[\e[0mLong\e\
    [1m\e[32m]\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp15_858nu.scala:16:36\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mcase\e[0m n\
    \ \e[33mif\e[0m n % \e[31m2\e[0m == \e[31m1\e[0m => n / \e[31m2\e[0m * n + \e\
    [31m1\e[0m\n\e[31m\e[31m   |\e[0m                                    ^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                    Found:    Long\n\e[31m\
    \   |\e[0m                                    Required: \e[1m\e[32mList\e[0m\e\
    [1m\e[32m[\e[0mLong\e[1m\e[32m]\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010342
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        (1 to n toList drop 1 map (x =>\
    \ if (x % 2 == 0) x * x.toLong else x * x.toLong + x.toLong)) :: n\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp0qebd273.scala:13:28 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        (\e[31m1\e[0m to n toList drop \e[31m1\e[0m map\
    \ (x => \e[33mif\e[0m (x % \e[31m2\e[0m == \e[31m0\e[0m) x * x.toLong \e[33melse\e\
    [0m x * x.toLong + x.toLong)) :: n\n\e[31m\e[31m   |\e[0m                    \
    \        ^\e[0m\n\e[31m   |\e[0m                            ')' expected, but\
    \ integer literal found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp0qebd273.scala:13:100\
    \ -----------------------\e[0m\e[0m\n\e[31m13 |\e[0m        (\e[31m1\e[0m to n\
    \ toList drop \e[31m1\e[0m map (x => \e[33mif\e[0m (x % \e[31m2\e[0m == \e[31m0\e\
    [0m) x * x.toLong \e[33melse\e[0m x * x.toLong + x.toLong)) :: n\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \                                 ^^^^\e[0m\n\e[31m   |\e[0m                 \
    \                       value :: is not a member of Long\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp0qebd273.scala:13:14 --------------------\e[0m\e\
    [0m\n\e[31m13 |\e[0m        (\e[31m1\e[0m to n toList drop \e[31m1\e[0m map (x\
    \ => \e[33mif\e[0m (x % \e[31m2\e[0m == \e[31m0\e[0m) x * x.toLong \e[33melse\e\
    [0m x * x.toLong + x.toLong)) :: n\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\
    \e[31m   |\e[0m              Found:    (n : Long)\n\e[31m   |\e[0m           \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0qebd273.scala:13:23\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        (\e[31m1\e[0m to\
    \ n toList drop \e[31m1\e[0m map (x => \e[33mif\e[0m (x % \e[31m2\e[0m == \e[31m0\e\
    [0m) x * x.toLong \e[33melse\e[0m x * x.toLong + x.toLong)) :: n\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m                  \
    \     Not found: drop\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n      val factorial = math.pow(n,1l).toLong\n\
    \      if (n % 2 == 0) {\n        factorial\n      } else {\n        factorial.toLong\
    \ + factorial.tail.toList.flatMap(x => 1l to x).sum\n      }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmu0zwgl2.scala:15:8\
    \ ---------------------\e[0m\e[0m\n\e[31m15 |\e[0m        factorial\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    (factorial\
    \ : Long)\n\e[31m   |\e[0m        Required: List[Long]\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpmu0zwgl2.scala:17:37 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        factorial.toLong + factorial.tail.toList.flatMap(\e\
    [36mx\e[0m => \e[31m1l\e[0m to x).sum\n\e[31m\e[31m   |\e[0m                 \
    \          ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                           value\
    \ tail is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1660010345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorialList = List();\n \
    \       var sum = 0\n        for (i = 1l; i <= n; i += 1l){\n            sum +=\
    \ i\n            if (i % 2l = 0l) {\n                factorialList += (i.toLong)\n\
    \            }\n        }\n        factorialList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp5zo9v_ja.scala:15:15 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i = \e[31m1l\e[0m; i <= n; i\
    \ += \e[31m1l\e[0m){\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e\
    [0m               ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmp5zo9v_ja.scala:15:27 ---------------------------\e[0m\e[0m\n\e[31m15\
    \ |\e[0m        \e[33mfor\e[0m (i = \e[31m1l\e[0m; i <= n; i += \e[31m1l\e[0m){\n\
    \e[31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m      \
    \                     '<-' expected, but ';' found\n\e[31m\e[31m-- [E040] Syntax\
    \ Error: /tmp/tmp5zo9v_ja.scala:15:36 ---------------------------\e[0m\e[0m\n\e\
    [31m15 |\e[0m        \e[33mfor\e[0m (i = \e[31m1l\e[0m; i <= n; i += \e[31m1l\e\
    [0m){\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\e[31m\
    \   |\e[0m                                    '<-' expected, but ')' found\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp5zo9v_ja.scala:15:19 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i = \e[31m1l\e[0m; i <= n; i\
    \ += \e[31m1l\e[0m){\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m \
    \  |\e[0mvalue foreach is not a member of Null, but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator asScala\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.map AsScalaConcurrentMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.set asScala\n\e\
    [31m   |\e[0m\n4 errors fou"
  stdout: ''
  timestamp: 1660010344
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        (1 to n) map {\n            x =>\
    \ if(x % 2 == 0) {\n                x.toLong * x.toLong\n            } else {\n\
    \                1 + x + x + x + x\n            }\n        }.toList\n    }\n \
    \   def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnofffsl1.scala:13:14\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        (\e[31m1\e[0m to n) map\
    \ {\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              Found:\
    \    (n : Long)\n\e[31m   |\e[0m              Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E081] Type Error: /tmp/tmpnofffsl1.scala:14:12 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[36mx\e[0m => \e[33mif\e[0m(x % \e[31m2\e\
    [0m == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m            ^\e[0m\n\e[31m   |\e\
    [0m            Missing parameter type\n\e[31m   |\e[0m\n\e[31m   |\e[0m      \
    \      I could not infer the type of the parameter x.\n2 errors found\n"
  stdout: ''
  timestamp: 1660010343
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val r = List(0l)\n        for (i\
    \ <- 1 until n) {\n            if (i.toInt % 2 == 0)\n                r += i.toLong\
    \ * i.toLong\n            else\n                r += i.toLong * i + 1\n      \
    \  }\n        r\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmptf478ipc.scala:14:26\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m until n) {\n\e[31m\e[31m   |\e[0m                          ^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmptf478ipc.scala:16:18 ------------------------\e[0m\e\
    [0m\n\e[31m16 |\e[0m                r += i.toLong * i.toLong\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m             value += is not a member\
    \ of List[Long] - did you mean r.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptf478ipc.scala:18:18\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                r += i.toLong\
    \ * i + \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m \
    \  |\e[0m             value += is not a member of List[Long] - did you mean r.!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n<=1) {\n            return\
    \ Nil\n        }\n        val factorials = mutable.ListBuffer[Long]()\n      \
    \  var fact = 1\n        for(i <- 1 to n) {\n            fact = fact * i\n   \
    \         if(i % 2 == 0) {\n                factorials.append(fact.toLong)\n \
    \           }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpjs_fcshi.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjs_fcshi.scala:18:22 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n) {\n\e\
    [31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m             \
    \         Found:    (n : Long)\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = (for (i<-n to 1 by\
    \ -1){\n            if (i%2 == 0) i.toLong else (i.toLong + i.toLong).toLong\n\
    \        })\n        result.reverse.flatMap(x => List(x).toList).toList\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6wwsqcls.scala:16:15 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        result.reverse.flatMap(\e[36mx\e[0m => List(x).toList).toList\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value\
    \ reverse is not a member of Unit\n1 error found\n"
  stdout: ''
  timestamp: 1660010345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n <= 0) {\n            List[Long]()\n\
    \        }\n        else {\n            val result = List[Long]()\n          \
    \  result ::= n match {\n                case 0 => result\n                case\
    \ 1 => 1 :: result\n                case i => i.toLong match {\n             \
    \       case 0 => result\n                    case 1 => result.tail\n        \
    \            case i => {\n                        val nf = i / 2\n           \
    \             val n = (3 * nf) + 1\n                        (nf.toLong, n) ::\
    \ result\n                    }\n                }\n            }\n          \
    \  result\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp9drrirwu.scala:18:19 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            result ::= n \e[33mmatch\e[0m {\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m       value ::= is not\
    \ a member of List[Long] - did you mean result.::?\n1 error found\n"
  stdout: ''
  timestamp: 1660010345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n.toDouble%2 == 0.0) {\n  \
    \          val ans = n #:: f(math.factorial(n))\n        } else {\n          \
    \  val ans = n #:: sumFromOneToN(n)\n        }\n        ans\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgezti5n4.scala:14:35 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m            \e[33mval\e[0m \e[36mans\e[0m = n #:: f(math.factorial(n))\n\
    \e[31m\e[31m   |\e[0m                              ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                              value factorial is not a member of math\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpgezti5n4.scala:16:28 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e[36mans\e[0m = n #:: sumFromOneToN(n)\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                            Not found: sumFromOneToN\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpgezti5n4.scala:18:8 -------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        ans\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e\
    [31m   |\e[0m        Not found: ans\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010348
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1)\n            List(1)\n\
    \        else\n            val list = List.fill(n / 2)(factorial(n))\n       \
    \     list :+ factorial(n-1)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpm8uc_n4p.scala:16:33\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m \e\
    [36mlist\e[0m = List.fill(n / \e[31m2\e[0m)(factorial(n))\n\e[31m\e[31m   |\e\
    [0m                                 ^^^^^\e[0m\n\e[31m   |\e[0m              \
    \                   Found:    Long\n\e[31m   |\e[0m                          \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpm8uc_n4p.scala:16:40\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33mval\e[0m\
    \ \e[36mlist\e[0m = List.fill(n / \e[31m2\e[0m)(factorial(n))\n\e[31m\e[31m  \
    \ |\e[0m                                        ^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                        Not found: factorial\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpm8uc_n4p.scala:17:20 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            list :+ factorial(n-\e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \       Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010347
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer(1L)\n\
    \        n until (n-1) (n => (factorials add factorials.last * (n-1)))\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37nq6cbw.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer(\e\
    [31m1L\e[0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmp37nq6cbw.scala:14:17 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        n until (n-\e[31m1\e[0m) (\e[36mn\e[0m => (factorials\
    \ add factorials.last * (n-\e[31m1\e[0m)))\n\e[31m\e[31m   |\e[0m            \
    \     ^^^\e[0m\n\e[31m   |\e[0m                 \e[33mmethod\e[0m \e[35m-\e[0m\
    \ in \e[33mclass\e[0m \e[35mLong\e[0m does not take more parameters\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010345
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n <= 0){\n            List[Long]()\n\
    \        }else{\n            var factorialSum : List[Long] = List[Long]()\n  \
    \          factorialSum += n.toLong\n            var factorialEvenSum : List[Long]\
    \ = List[Long]()\n            factorialEvenSum += n.toLong\n            for(i\
    \ <- 1l to n){\n                factorialSum += factorialEvenSum.map(_*i).toList\n\
    \                factorialEvenSum = factorialEvenSum.map(_+i).toList\n       \
    \     }\n            factorialSum\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqfn6hv47.scala:17:25 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            factorialSum += n.toLong\n\e[31m\e[31m  \
    \ |\e[0m            ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a\
    \ member of List[Long] - did you mean List[Long].!=?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpqfn6hv47.scala:19:29 ------------------------\e[0m\e[0m\n\
    \e[31m19 |\e[0m            factorialEvenSum += n.toLong\n\e[31m\e[31m   |\e[0m\
    \            ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member\
    \ of List[Long] - did you mean List[Long].!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpqfn6hv47.scala:21:29 ------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m                factorialSum += factorialEvenSum.map(_*i).toList\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value +=\
    \ is not a member of List[Long] - did you mean List[Long].!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var factorials = List[Long](1l.toLong)\n\
    \        var sum = 0l\n        for (i <- 1 to n) {\n            factorials = factorials.::(i)\n\
    \            sum += i\n        }\n        if (n%2 == 0) {\n            factorials\
    \ = factorials.::(factorials.last.toLong*factorials.last.toLong)\n        }\n\
    \        factorials.toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp4ws_waz8.scala:15:23\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010348
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n <= 0)\n            throw new\
    \ Exception(\"Invalid value for n\")\n        else if(n % 2 == 0)\n          \
    \  n.toLong * List(1l.toLong)\n        else\n            n.toLong * f.f(n - 1l)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpourd12vn.scala:16:21 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            n.toLong * List(\e[31m1l\e[0m.toLong)\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e[0m \e[35mLong\e\
    [0m with types\n\e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float):\
    \ Float\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m\
    \   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e[0m\
    \ (x: Byte): Long\n\e[31m   |\e[0mmatch arguments (List[Long])\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpourd12vn.scala:18:25 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            n.toLong * f.f(n - \e[31m1l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0m                \
    \       value f is not a member of Long => List[Long]\n2 errors found\n"
  stdout: ''
  timestamp: 1660010349
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorialList = new ListBuffer[Long]()\n\
    \        factorialList.clear()\n        var factorial = 1.toLong\n\n        for\
    \ (i <- 1l..n) factorialList += factorial\n        factorialList += factorial\n\
    \        return factorialList.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp2eq635p6.scala:17:21 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1l\e[0m..n) factorialList\
    \ += factorial\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m   |\e\
    [0m                     an identifier expected, but '.' found\n1 error found\n"
  stdout: ''
  timestamp: 1660010346
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = new scala.collection.mutable.ListBuffer[Long]()\n\
    \        for (i <- 1L to n by 2) {\n            if (i % 2 == 0) {\n          \
    \      result += i.toLong * factorial(i)\n            } else {\n             \
    \   result += i.toLong\n            }\n        }\n        return result.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbjaew81c.scala:16:37 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m                result += i.toLong * factorial(i)\n\e\
    [31m\e[31m   |\e[0m                                     ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                     Not found: factorial\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010348
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = mutable.ListBuffer[Long](1)\n\
    \        val numList: collection.mutable.ListBuffer[Int] = ListBuffer(1, 2, 6,\
    \ 24, 15)\n        val factorialList: collection.mutable.ListBuffer[Long] = ListBuffer()\n\
    \        var k = 0\n        var i = 1\n        var j = 1\n        var factorial\
    \ = 0\n        while(i < n) {\n            factorial = i.toLong * j.toLong\n \
    \           j = k\n            k += 1\n            result.append(factorial)\n\
    \            factorialList.append(factorial)\n            i = i + 1\n        }\n\
    \        return result.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8n_pdejy.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m](\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8n_pdejy.scala:21:24 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            factorial = i.toLong * j.toLong\n\e[31m\e\
    [31m   |\e[0m                        ^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Long\n\e[31m   |\e[0m                     \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010350
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var acc: List[Long] = List()\n\
    \        for(i <- 1l to n by 2l) {\n            if (i.toInt % 2 == 0){\n     \
    \           acc ::= i.toLong\n            } else {\n                acc ::= (i.toLong\
    \ + acc.last )\n            }\n        }\n        acc\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: Exception
  stderr: "java.util.NoSuchElementException: last of empty list\n\tat scala.collection.immutable.Nil$.last(List.scala:665)\n\
    \tat scala.collection.immutable.Nil$.last(List.scala:661)\n\tat Problem$.f$$anonfun$1(tmprfep65hd.scala:18)\n\
    \tat scala.runtime.java8.JFunction1$mcVJ$sp.apply(JFunction1$mcVJ$sp.scala:18)\n\
    \tat scala.collection.immutable.NumericRange.foreach(NumericRange.scala:115)\n\
    \tat Problem$.f(tmprfep65hd.scala:20)\n\tat Problem$.main(tmprfep65hd.scala:24)\n\
    \tat Problem.main(tmprfep65hd.scala)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native\
    \ Method)\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010354
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var factorials = mutable.ListBuffer[Long]()\n\
    \        var sum = 0L\n        var i = 1L\n        while (i<n){\n            if\
    \ (i%2==0) {\n                factorials = factorials.insert(i)\n            }\
    \ else {\n                sum = sum + i\n            }\n            i = i + 1L\n\
    \        }\n        factorials = factorials.toList\n        factorials.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbt3uw07y.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mvar\e[0m \e[36mfactorials\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010348
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1l) List(1l)\n       \
    \ else { val result = new mutable.ListBuffer[Long]\n            for (i<- 1 to\
    \ n) result += (if (i % 2 == 0) 1l else i.toLong * (i.toLong + 1l))\n        \
    \    result.toList\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbd1w9sn6.scala:14:32 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m { \e[33mval\e[0m result = \e\
    [33mnew\e[0m mutable.ListBuffer[Long]\n\e[31m\e[31m   |\e[0m                 \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                                Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbd1w9sn6.scala:15:26\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m (i<-\
    \ \e[31m1\e[0m to n) result += (\e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m)\
    \ \e[31m1l\e[0m \e[33melse\e[0m i.toLong * (i.toLong + \e[31m1l\e[0m))\n\e[31m\e\
    [31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m               \
    \           Found:    (n : Long)\n\e[31m   |\e[0m                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010351
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var fact = 1.toLong\n        var\
    \ sum = 0L\n        var x = 1\n        for(i <- 1 to n){\n            if(i % 2\
    \ == 0){\n                fact = fact * i\n            }else{\n              \
    \  sum = sum + i\n            }\n        }\n        println(\"i: \" + i)\n   \
    \     println(\"fact: \" + fact)\n        println(\"sum: \" + sum)\n        println(\"\
    x: \" + x)\n        println(\"sum: \" + fact*sum)\n        return List(fact*sum)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7r5jgjqx.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp7r5jgjqx.scala:23:24 ------------------------\e[0m\e[0m\n\e[31m23 |\e\
    [0m        println(\e[31m\"i: \"\e[0m + i)\n\e[31m\e[31m   |\e[0m            \
    \            ^\e[0m\n\e[31m   |\e[0m                        Not found: i\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010353
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = Seq(1, 2).zip(Seq(1\
    \ to n)).map { case (x, y) => x * y }\n        fact.takeWhile(_ % 2 == 0).map(_.toLong)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgbf1m1_e.scala:13:42\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfact\e\
    [0m = Seq(\e[31m1\e[0m, \e[31m2\e[0m).zip(Seq(\e[31m1\e[0m to n)).map { \e[33mcase\e\
    [0m (x, y) => x * y }\n\e[31m\e[31m   |\e[0m                                 \
    \         ^\e[0m\n\e[31m   |\e[0m                                          Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                          Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E134] Type Error: /tmp/tmpgbf1m1_e.scala:13:69\
    \ -----------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e\
    [0m \e[36mfact\e[0m = Seq(\e[31m1\e[0m, \e[31m2\e[0m).zip(Seq(\e[31m1\e[0m to\
    \ n)).map { \e[33mcase\e[0m (x, y) => x * y }\n\e[31m\e[31m   |\e[0m         \
    \                                                          ^^^\e[0m\n\e[31m  \
    \ |\e[0m None of the overloaded alternatives of \e[33mmethod\e[0m \e[35m*\e[0m\
    \ in \e[33mclass\e[0m \e[35mInt\e[0m with types\n\e[31m   |\e[0m  (x: Double):\
    \ Double\n\e[31m   |\e[0m  (x: Float): Float\n\e[31m   |\e[0m  (x: Long): Long\n\
    \e[31m   |\e[0m  (x: Int): Int\n\e[31m   |\e[0m  (x: Char): Int\n\e[31m   |\e\
    [0m  (x: Short): Int\n\e[31m   |\e[0m  (x: Byte): Int\n\e[31m   |\e[0m match arguments\
    \ ((y : scala.collection.immutable.Range.Inclusive))\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpgbf1m1_e.scala:14:25 ------------------------\e[0m\e[0m\n\
    \e[31m14 |\e[0m        fact.takeWhile(_ % \e[31m2\e[0m == \e[31m0\e[0m).map(_.toLong)\n\
    \e[31m\e[31m   |\e[0m                       ^^^\e[0m\n\e[31m   |\e[0mvalue % is\
    \ not a member of Nothing, but could be made available as an extension method.\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might fix the problem:\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m  import Byte.byte2double\n\e[31m   |\e[0m  import\
    \ Byte.byte2float\n\e[31m   |\e[0m  import Byte.byte2int\n\e[31m   |\e[0m  import\
    \ Byte.byte2long\n\e[31m   |\e[0m  import Byte.byte2short\n\e[31m   |\e[0m  import\
    \ Char.char2double\n\e[31m   |\e[0m  import Char.char2float\n\e[31m   |\e[0m \
    \ import Char.char2int\n\e[31m   |\e[0m  import Char.ch"
  stdout: ''
  timestamp: 1660010355
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list = List.range(0, n) map\
    \ (_ * _)\n        list.drop(1).map(list.head).filter(_ % 2 != 0).map(list.sum).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmplbpbqayq.scala:13:35 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = List.range(\e\
    [31m0\e[0m, n) map (_ * _)\n\e[31m\e[31m   |\e[0m                            \
    \       ^\e[0m\n\e[31m   |\e[0m                                No implicit Ordering\
    \ defined for AnyVal.\n1 error found\n"
  stdout: ''
  timestamp: 1660010354
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val sumFact = mutable.ArrayBuffer.empty[Long]\n\
    \        for(i <- 1 to n){\n            if(i%2 == 0){\n                sumFact\
    \ += i.toLong\n            }\n            else{\n                sumFact += (2l*i.toLong).toLong\n\
    \            }\n        }\n        sumFact.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps007wc8y.scala:13:22 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36msumFact\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmps007wc8y.scala:14:22 --------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010354
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list = new mutable.ListBuffer[Long]()\n\
    \        for(i <- 1 to n)\n            if (i.toLong % 2 == 0)\n              \
    \  list += i.toLong\n            else\n                list += (i.toLong + 1)\n\
    \        list.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3s18smuj.scala:13:23 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3s18smuj.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m  \
    \ |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m          \
    \            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010354
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var ans = List[Long](1l.toLong)\n\
    \        for(i<- 1 to n){\n            if(i % 2 == 0){\n                ans +=(1l.toLong*i.toLong)\n\
    \            }\n            else{\n                ans +=(1l.toLong*i.toLong+1)\n\
    \            }\n        }\n        ans\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpidmy1l96.scala:14:21\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m(i<- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                     ^\e[0m\n\e[31m  \
    \ |\e[0m                     Found:    (n : Long)\n\e[31m   |\e[0m           \
    \          Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpidmy1l96.scala:16:20 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m                ans +=(\e[31m1l\e[0m.toLong*i.toLong)\n\e[31m\e[31m   |\e[0m\
    \                ^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of List[Long]\
    \ - did you mean List[Long].!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpidmy1l96.scala:19:20\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m                ans +=(\e\
    [31m1l\e[0m.toLong*i.toLong+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m             \
    \   ^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of List[Long] - did\
    \ you mean List[Long].!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val l = new mutable.ListBuffer[Long]()\n\
    \        // the sum starts from 1\n        for (i <- 1 to n) {\n            if\
    \ (i % 2 == 0) {\n                l.add(i)\n            } else {\n           \
    \     l.add(l.sum + i)\n            }\n        }\n        l.toList\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmt2p1emm.scala:13:20 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36ml\e[0m = \e[33mnew\e[0m\
    \ mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m               \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmt2p1emm.scala:15:23\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n <= 0) List(1l) else {\n \
    \           var factors = List[Long](1l)\n            for (i<- 1 to n by 2)\n\
    \                factors = factors :+ i.toLong * i\n            factors\n    \
    \    }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1a8nln8c.scala:15:26\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m (i<-\
    \ \e[31m1\e[0m to n by \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                  \
    \        ^\e[0m\n\e[31m   |\e[0m                          Found:    (n : Long)\n\
    \e[31m   |\e[0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val nums = 1 to n\n        var\
    \ factorials = Vector.empty[Long]\n        nums.foreach { i =>\n            if\
    \ (i % 2 == 0) {\n                factorials = factorials :+ i.toLong\n      \
    \      } else {\n                factorials = factorials :+ (i.toLong + 1)\n \
    \           }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp29zcj5vy.scala:13:24\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mnums\e\
    [0m = \e[31m1\e[0m to n\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\
    \e[31m   |\e[0m                        Found:    (n : Long)\n\e[31m   |\e[0m \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010356
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fact = math.factorial(n)\n\
    \        val list = List.range(1,n).toList\n        val even = list.filter(i =>\
    \ i % 2 == 0).toList\n        val odd = list.filter(i => i % 2 != 0).toList\n\
    \        (fact :: even) ::: odd.reverse\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpjg5hqjaz.scala:13:24 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfact\e[0m = math.factorial(n)\n\
    \e[31m\e[31m   |\e[0m                   ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m \
    \                  value factorial is not a member of math\n\e[31m\e[31m-- Error:\
    \ /tmp/tmpjg5hqjaz.scala:14:34 -----------------------------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = List.range(\e[31m1\e\
    [0m,n).toList\n\e[31m\e[31m   |\e[0m                                  ^\e[0m\n\
    \e[31m   |\e[0m                                No implicit Ordering defined for\
    \ AnyVal.\n2 errors found\n"
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var factorial : Long = 1\n    \
    \    var result : List[Long] = List()\n        for (i in 1..n){\n            if(i\
    \ % 2 == 0){\n                result += (i.toLong * factorial).toList\n      \
    \          factorial *= i.toLong\n            }\n        }\n        result\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpecu712_q.scala:15:19 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i in \e[31m1\e[0m..n){\n\e[31m\e\
    [31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   ')'\
    \ expected, but '.' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpecu712_q.scala:15:23\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m\
    \ (i in \e[31m1\e[0m..n){\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\
    \e[31m   |\e[0m                       '<-' expected, but '{' found\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmpecu712_q.scala:22:4 ----------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '<-' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpecu712_q.scala:20:9\
    \ -------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        }\n\e[31m\e[31m\
    \   |\e[0m         ^\e[0m\n\e[31m   |\e[0mvalue withFilter is not a member of\
    \ Null, but could be made available as an extension method.\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties\
    \ AsScalaMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration\
    \ AsScalaIterator\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator\
    \ asScala\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.map\
    \ AsScalaConcurrentMap\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.set\
    \ asScala\n\e[31m   |\e[0m\n4 errors found\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        def factorial(i: Long): List[Long]\
    \ = {\n            val list: List[Long] = List()\n            for (i<-List(i+1))\
    \ list.append (i*i)\n            return list\n        }\n\n        if (n<1) List(1L)\n\
    \        else{\n            if (n%2 == 0) factorial(n).toList ++ List(1L) \n \
    \           else factorial(n-1).toList ++ List(1L)\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpkkkamzv_.scala:15:36 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m (i<-List(i+\e[31m1\e[0m))\
    \ list.append (i*i)\n\e[31m\e[31m   |\e[0m                               ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue append is not a member of List[Long] - did you mean\
    \ list.appended?\n1 error found\n"
  stdout: ''
  timestamp: 1660010357
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n % 2 == 0) {\n           \
    \ List(1)\n        } else {\n            List(1 to n).map(x => x * x)\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpheno51t8.scala:16:22\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m            List(\e[31m1\e[0m\
    \ to n).map(\e[36mx\e[0m => x * x)\n\e[31m\e[31m   |\e[0m                    \
    \  ^\e[0m\n\e[31m   |\e[0m                      Found:    (n : Long)\n\e[31m \
    \  |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpheno51t8.scala:16:36 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            List(\e[31m1\e[0m to n).map(\e[36mx\e[0m\
    \ => x * x)\n\e[31m\e[31m   |\e[0m                                  ^^^\e[0m\n\
    \e[31m   |\e[0mvalue * is not a member of scala.collection.immutable.Range.Inclusive,\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might make progress towards fixing the\
    \ problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010359
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val nums = List.range(1, n)\n \
    \       val evens = nums.filter(x => x.isEven)\n        val odds = nums.filter(x\
    \ => !x.isEven)\n        nums.map(x => if (x.isEven) x.toLong * x.toLong else\
    \ x.toLong + x.toLong).toList :: evens.toList :: odds.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpi1fz8ct0.scala:13:35 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mnums\e[0m = List.range(\e\
    [31m1\e[0m, n)\n\e[31m\e[31m   |\e[0m                                   ^\e[0m\n\
    \e[31m   |\e[0m                                No implicit Ordering defined for\
    \ AnyVal.\n1 error found\n"
  stdout: ''
  timestamp: 1660010358
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val l: List[Long] = List.fill(n)(1l)\n\
    \        if (n %2 == 0) {\n            l map { _ * it } :: f(n /2 )\n        }\
    \ else {\n            l map { _ + it } :: f(n-2)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpcqwi0q0r.scala:13:38\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36ml\e\
    [0m: \e[35mList\e[0m[\e[35mLong\e[0m] = List.fill(n)(\e[31m1l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                      ^\e[0m\n\e[31m   |\e[0m   \
    \                                   Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E081] Type Error: /tmp/tmpcqwi0q0r.scala:15:20 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            l map { _ * it } :: f(n /\e[31m2\e[0m )\n\
    \e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m   Missing parameter\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter\
    \ _$1 of expanded function:\n\e[31m   |\e[0m   _$1 => _$1 * it.\n\e[31m\e[31m--\
    \ [E081] Type Error: /tmp/tmpcqwi0q0r.scala:17:20 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            l map { _ + it } :: f(n-\e[31m2\e[0m)\n\e\
    [31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m   Missing parameter\
    \ type\n\e[31m   |\e[0m\n\e[31m   |\e[0m   I could not infer the type of the parameter\
    \ _$2 of expanded function:\n\e[31m   |\e[0m   _$2 => _$2 + it.\n3 errors found\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = mutable.ArrayBuffer.empty[Long]\n\
    \        if (n % 2 == 0) {\n            for (i <- 1 to n / 2)\n              \
    \  factorials += (factorials.last * i)\n        }\n        else {\n          \
    \  factorials += 1\n            factorials += n\n            for (i <- factorials.reverse\
    \ drop 1) {\n                if (i > n)\n                    factorials += 0\n\
    \                else\n                    factorials += (factorials.last * i)\n\
    \            }\n        }\n        factorials.toList\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2qkn4r8y.scala:13:25 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2qkn4r8y.scala:15:27 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m (i <- \e[31m1\e[0m to n /\
    \ \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                           ^^^^^\e[0m\n\e\
    [31m   |\e[0m                           Found:    Long\n\e[31m   |\e[0m      \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010360
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        def sumFactorial(n: Long) : List[Long]\
    \ = {\n            var factorialList : List[Long] = Nil\n            for (i =\
    \ 1L to n) {\n                factorialList :+  (1L * factorialList.head * i)\n\
    \            }\n            factorialList\n        }\n        def sumAndEven(n:\
    \ Long) : List[Long] = {\n            var evenSumList : List[Long] = Nil\n   \
    \         for (i = 1L to n) {\n                if (i.toDouble % 2 == 0) {\n  \
    \                  evenSumList :+ (i.toDouble)\n                }\n          \
    \  }\n            evenSumList\n        }\n        if ((n + 1L) < 1L) {\n     \
    \       throw new RuntimeException(\"n must be a positive integer\")\n       \
    \ }\n        if (n.toInt < 2L) {\n            throw new RuntimeException(\"n must\
    \ be a positive integer\")\n        }\n        val factorialList = sumFactorial(n\
    \ + 1L)\n        val evenSumList = sumAndEven(n + 1L)\n        factorialList.zip(evenSumList).map(x\
    \ => x._1 * x._2)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp99rcs1rn.scala:15:19 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e[0m (i = \e[31m1L\e[0m to n) {\n\
    \e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m              \
    \     ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp99rcs1rn.scala:15:30\
    \ ---------------------------\e[0m\e[0m\n\e[31m15 |\e[0m            \e[33mfor\e\
    [0m (i = \e[31m1L\e[0m to n) {\n\e[31m\e[31m   |\e[0m                        \
    \      ^\e[0m\n\e[31m   |\e[0m                              '<-' expected, but\
    \ '{' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp99rcs1rn.scala:19:8 ----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        }\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m\
    \   |\e[0m        '<-' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmp99rcs1rn.scala:22:19 ---------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m            \e[33mfor\e[0m (i = \e[31m1L\e[0m to n) {\n\e[31m\e[31m  \
    \ |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   ')' expected,\
    \ but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp99rcs1rn.scala:22:30\
    \ ---------------------------\e[0m\e[0m\n\e[31m22 |\e[0m            \e[33mfor\e\
    [0m (i = \e[31m1L\e[0m to n) {\n\e[31m\e[31m   |\e[0m                        \
    \      ^\e[0m\n\e[31m   |\e[0m                              '<-' expected, but\
    \ '{' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp99rcs1rn.scala:28:8 ----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        }\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m\
    \   |\e[0m        '<-' expected, but '}' found\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp99rcs1rn.scala:17:13 ------------------------\e[0m\e[0m\n\e[31m17\
    \ |\e[0m            }\n\e[31m\e[31m   |\e[0m             ^\e[0m\n\e[31m   |\e\
    [0mvalue foreach is not a member of Null, but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m  "
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var fact = 1\n        var result:\
    \ List[Long] = List[Long]()\n        for (i <- 1 to n)\n            if (i % 2\
    \ == 0) {\n                result.add(i.toLong * fact)\n                fact =\
    \ fact * i.toLong\n            } else {\n                result.add(i.toLong)\n\
    \            }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp94lz1b1i.scala:15:23\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m\
    \   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m       \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp94lz1b1i.scala:17:23 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m                result.add(i.toLong * fact)\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member of List[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection asJava\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp94lz1b1i.scala:18:23\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                fact = fact *\
    \ i.toLong\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                       Found:    Long\n\e[31m   |\e[0m        \
    \               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp94lz1b1i.scala:20:23 ------------------------\e[0m\e[0m\n\e[31m20 |\e\
    [0m                result.add(i.toLong)\n\e[31m\e[31m   |\e[0m               \
    \ ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member of List[Long], but\
    \ could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m  import collection.convert.ImplicitConversions.seq AsJavaList\n\e[31m\
    \   |\e[0m  import collection.con"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        (for {\n            i <- 1 until\
    \ n\n        } yield {\n            if(i%2 == 0){\n                math.factorial(i)\n\
    \            } else {\n                (i-1).toLong + i.toLong\n            }\n\
    \        })\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpog_v7muy.scala:14:25\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m            i <- \e[31m1\e[0m\
    \ until n\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e\
    [0m                         Found:    (n : Long)\n\e[31m   |\e[0m            \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpog_v7muy.scala:17:21 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m                math.factorial(i)\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value factorial is not a member of math\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var result : List[Long] = Nil\n\
    \        for (i = 1; i <= n; i += 2) {\n            result ::= i * factorial(i)\n\
    \        }\n        return result\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpvsks3ji9.scala:14:15 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i <= n; i +=\
    \ \e[31m2\e[0m) {\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m\
    \               ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpvsks3ji9.scala:14:26 ---------------------------\e[0m\e[0m\n\e[31m14\
    \ |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i <= n; i += \e[31m2\e[0m) {\n\
    \e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0m       \
    \                   '<-' expected, but ';' found\n\e[31m\e[31m-- [E040] Syntax\
    \ Error: /tmp/tmpvsks3ji9.scala:14:34 ---------------------------\e[0m\e[0m\n\e\
    [31m14 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i <= n; i += \e[31m2\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m\
    \   |\e[0m                                  '<-' expected, but ')' found\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpvsks3ji9.scala:14:18 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m; i <= n; i +=\
    \ \e[31m2\e[0m) {\n\e[31m\e[31m   |\e[0m                  ^\e[0m\n\e[31m   |\e\
    [0mvalue foreach is not a member of Null, but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator asScala\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.map AsScalaConcurrentMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.set asScala\n\e\
    [31m   |\e[0m\n4 errors found\n"
  stdout: ''
  timestamp: 1660010362
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n       val listOfFactorials = for (i <-\
    \ 1 until n) yield i.toLong * i.toLong\n       val listOfSums = for (i <- 1 until\
    \ n) yield {\n           if (i.toLong % 2 == 0) i.toLong else 0\n       }\n  \
    \     listOfSums :+ listOfFactorials.reduceLeft((x,y) => x + y)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3ds620fh.scala:13:48\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m       \e[33mval\e[0m \e[36mlistOfFactorials\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m until n) \e[33myield\e[0m i.toLong * i.toLong\n\
    \e[31m\e[31m   |\e[0m                                                ^\e[0m\n\e\
    [31m   |\e[0m                                                Found:    (n : Long)\n\
    \e[31m   |\e[0m                                                Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3ds620fh.scala:14:42\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m       \e[33mval\e[0m \e[36mlistOfSums\e\
    [0m = \e[33mfor\e[0m (i <- \e[31m1\e[0m until n) \e[33myield\e[0m {\n\e[31m\e\
    [31m   |\e[0m                                          ^\e[0m\n\e[31m   |\e[0m\
    \                                          Found:    (n : Long)\n\e[31m   |\e\
    [0m                                          Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3ds620fh.scala:17:7 ---------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m       listOfSums :+ listOfFactorials.reduceLeft((\e\
    [36mx\e[0m,\e[36my\e[0m) => x + y)\n\e[31m\e[31m   |\e[0m       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m       Found:    IndexedSeq[Long]\n\e[31m   |\e[0m       Required:\
    \ List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n == 1) 1l :: Nil\n        else\
    \ 0 until (n % 2 == 0) map (n * 1l) ::  (1l * 2l * 3l * n) :: Nil\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyugtdy1l.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e[31m0\e\
    [0m until (n % \e[31m2\e[0m == \e[31m0\e[0m) map (n * \e[31m1l\e[0m) ::  (\e[31m1l\e\
    [0m * \e[31m2l\e[0m * \e[31m3l\e[0m * n) :: Nil\n\e[31m\e[31m   |\e[0m       \
    \               ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      Found: \
    \   Boolean\n\e[31m   |\e[0m                      Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var result : List[Long] = List()\n\
    \        for (i<- 1 to n) {\n            if (i % 2 == 0) {\n                result\
    \ += i.toLong * i.toLong\n            } else {\n                result += i.toLong\n\
    \            }\n        }\n        result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8x0gc9hs.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp8x0gc9hs.scala:16:23 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m                result += i.toLong * i.toLong\n\e[31m\e[31m   |\e[0m      \
    \          ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of List[Long]\
    \ - did you mean List[Long].!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8x0gc9hs.scala:18:23\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                result +=\
    \ i.toLong\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m    value += is not a member of List[Long] - did you mean List[Long].!=?\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n==0) List(1l)\n        else\
    \ n.toList flatMap { i => \n            if(i % 2 == 0) List.range(1, i+1).toList.map(x\
    \ => i*x).toList\n            else List.range(1, i).toList.map(x => x*i).toList\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpsw4zf82i.scala:14:15 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m n.toList flatMap { i => \n\e\
    [31m\e[31m   |\e[0m             ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ toList is not a member of Long - did you mean n.toInt?\n1 error found\n"
  stdout: ''
  timestamp: 1660010366
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        def factorial(n: Long) : Long =\
    \ {\n            if (n <= 1) 1\n            else n * factorial(n - 1)\n      \
    \  }\n        val factorialList = new mutable.MutableList[Long]()\n        var\
    \ sum = 0L\n        for (i <- 1L until n) {\n            if (i % 2 == 0) factorialList\
    \ += (i * factorial(i)).toLong\n            else sum += i\n        }\n       \
    \ factorialList.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmps1xnsxbj.scala:17:32 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mfactorialList\e[0m = \e\
    [33mnew\e[0m mutable.MutableList[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                             ^^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010363
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorialList = mutable.ListBuffer[Long]()\n\
    \        for (i <- 1L to n-1) {\n            if (i % 2 == 0) {\n             \
    \   factorialList += (i.toLong * factorialList.last)\n            } else {\n \
    \               factorialList += (i.toLong)\n            }\n        }\n      \
    \  return factorialList.toList\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7gcccgt1.scala:13:28 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorialList\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                            Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        require(n%2 == 0, \"n should be\
    \ even\")\n        val list = new scala.collection.mutable.ArrayList[Long]\n \
    \       (1 to n).map(n => list.add(n * factorial(n)))\n        list.toList\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpqg1ngyg8.scala:14:48 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = \e[33mnew\e\
    [0m scala.collection.mutable.ArrayList[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m\
    \                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m              type ArrayList is not a member of scala.collection.mutable\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqg1ngyg8.scala:15:14 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        (\e[31m1\e[0m to n).map(\e[36mn\e[0m => list.add(n\
    \ * factorial(n)))\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m\
    \              Found:    (n : Long)\n\e[31m   |\e[0m              Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010367
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val r = mutable.ArrayBuffer.empty[Long]\n\
    \        if (n.toInt % 2 == 0) r ++= 1 to n.toInt else 1 to n.toInt foreach {\
    \ x =>\n            r.append((x * factorial(x)).toLong)\n        }\n        r.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuxsm4528.scala:13:16 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mr\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010364
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n == 1) List(1l.toLong)\n  \
    \      else if(n % 2 == 0) 1l.toLong* f(n - 1l)\n        else (1l.toLong + f(n\
    \ - 1l))*f(n - 1l)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpexd0vmca.scala:14:37 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m(n % \e[31m2\e[0m\
    \ == \e[31m0\e[0m) \e[31m1l\e[0m.toLong* f(n - \e[31m1l\e[0m)\n\e[31m\e[31m  \
    \ |\e[0m                            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the\
    \ overloaded alternatives of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e[0m\
    \ \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e\
    [0m (x: Float): Float\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int):\
    \ Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e\
    [31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0mmatch arguments (List[Long])\n\e\
    [31m\e[31m-- [E134] Type Error: /tmp/tmpexd0vmca.scala:15:24 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33melse\e[0m (\e[31m1l\e[0m.toLong + f(n -\
    \ \e[31m1l\e[0m))*f(n - \e[31m1l\e[0m)\n\e[31m\e[31m   |\e[0m              ^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e\
    [35m+\e[0m in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x:\
    \ Double): Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m   |\e[0m (x: Long):\
    \ Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m\
    \   |\e[0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0m\
    \ (x: String): String\n\e[31m   |\e[0mmatch arguments (List[Long])\n2 errors found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if(n.isEven) List(1l) ::: for (x\
    \ <- 1 to n) yield x * factorial(x)\n        else List(1l) ::: for (x <- 1 to\
    \ n) yield x + factorial(x)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpzky8c96f.scala:13:34 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m(n.isEven) List(\e[31m1l\e[0m) :::\
    \ \e[33mfor\e[0m (x <- \e[31m1\e[0m to n) \e[33myield\e[0m x * factorial(x)\n\e\
    [31m\e[31m   |\e[0m                                  ^^^\e[0m\n\e[31m   |\e[0m\
    \                                  expression expected but \e[31mfor\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzky8c96f.scala:13:13\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mif\e[0m(n.isEven)\
    \ List(\e[31m1l\e[0m) ::: \e[33mfor\e[0m (x <- \e[31m1\e[0m to n) \e[33myield\e\
    [0m x * factorial(x)\n\e[31m\e[31m   |\e[0m           ^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m           value isEven is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1660010368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var result : List[Long] = List()\n\
    \        if(n == 0) {\n            result\n        }\n        else {\n       \
    \     result ::= if (n % 2 == 0) {\n                n * factorial(n - 1).toLong\n\
    \            }\n            else {\n                1l.toLong +: (factorial(n\
    \ - 1).toLong).scanLeft(0)(_ + _)\n            }\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpxb9898wd.scala:18:23 ---------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            result ::= \e[33mif\e[0m (n % \e[31m2\e[0m\
    \ == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m                       ^^\e[0m\n\e\
    [31m   |\e[0m                       expression expected but \e[31mif\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpxb9898wd.scala:18:19\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            result ::= \e\
    [33mif\e[0m (n % \e[31m2\e[0m == \e[31m0\e[0m) {\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m   value ::= is not a member of List[Long]\
    \ - did you mean List[Long].::?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // Your code goes here\n      \
    \  val resList = mutable.ListBuffer[Long]()\n        for (i <- 1 to n)\n     \
    \       resList += i.toLong * factorial(i.toInt)\n        return resList.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp05w7oljy.scala:14:22 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mresList\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmp05w7oljy.scala:15:23 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to n)\n\e[31m\e\
    [31m   |\e[0m                       ^\e[0m\n\e[31m   |\e[0m                  \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                       Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010368
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorials = 1 to n\n     \
    \   val products = factorials.map(x => x*x)\n        factorials.filter(x => x\
    \ % 2 == 0).map(x => x + 1l.toLong).toList ++ products.filter(x => x % 2 == 0).map(x\
    \ => x + 1l.toLong).toList\n    }\n    def main(args: Array[String]) = {\n   \
    \ assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbfpd903n.scala:13:30\
    \ --------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e\
    [0m = \e[31m1\e[0m to n\n\e[31m\e[31m   |\e[0m                              ^\e\
    [0m\n\e[31m   |\e[0m                              Found:    (n : Long)\n\e[31m\
    \   |\e[0m                              Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var result : List[Long] = Nil\n\
    \        for (i <- 1 to n)\n            if (i % 2 == 0) result += (i.toLong *\
    \ (i + 1).toLong)\n            else result += (i.toLong + 1 until i).toList\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3r1u91ok.scala:14:23\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m1\e[0m to n)\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e[31m\
    \   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m       \
    \                Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp3r1u91ok.scala:15:35 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) result += (i.toLong\
    \ * (i + \e[31m1\e[0m).toLong)\n\e[31m\e[31m   |\e[0m                        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member of List[Long]\
    \ - did you mean List[Long].!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3r1u91ok.scala:16:24\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m            \e[33melse\e\
    [0m result += (i.toLong + \e[31m1\e[0m until i).toList\n\e[31m\e[31m   |\e[0m\
    \                 ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value += is not a member\
    \ of List[Long] - did you mean List[Long].!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010370
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // your code goes here\n      \
    \  val fac = factorial(1l, n)\n        val evens = fac.filter(x => (x % 2l) ==\
    \ 0)\n        val sumOfOdds = fac.filter(x => (x % 2l) != 0)\n        return evens\
    \ ++ sumOfOdds\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpmo79txpc.scala:14:18 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36mfac\e[0m = factorial(\e\
    [31m1l\e[0m, n)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                  Not found: factorial\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010365
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val n = math.pow(5, n)\n      \
    \  val res = new scala.collection.mutable.ListBuffer[Long]()\n        val fact\
    \ = 1 to n\n        val even = 1\n        val odd = 0\n        for(i <- fact)\
    \ {\n            if (i % 2 == 0) {\n                val a = i * i\n          \
    \      val b = i + 1\n                val c = i - 1\n                res.add(a.toLong)\n\
    \                res.add(b.toLong)\n                res.add((i * i).toLong)\n\
    \                res.add((a / b).toLong)\n                res.add((a / c).toLong)\n\
    \            }\n            else {\n                val a = i * i\n          \
    \      val b = i + 1\n                val c = i - 1\n                res.add(a.toLong)\n\
    \                res.add(b.toLong)\n                res.add((i * i).toLong)\n\
    \                res.add((a / b).toLong)\n                res.add((a / c).toLong)\n\
    \                res.add((a / c).toLong)\n                res.add((b / c).toLong)\n\
    \            }\n        }\n        res\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmp7sbh6abv.scala:13:28 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = math.pow(\e[31m5\e\
    [0m, n)\n\e[31m\e[31m   |\e[0m                            ^\e[0m\n\e[31m   |\e\
    [0m                            Recursive \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp7sbh6abv.scala:15:24\
    \ --------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mfact\e\
    [0m = \e[31m1\e[0m to n\n\e[31m\e[31m   |\e[0m                        ^\e[0m\n\
    \e[31m   |\e[0m                        Found:    (n : Double)\n\e[31m   |\e[0m\
    \                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp7sbh6abv.scala:23:20 ------------------------\e[0m\e\
    [0m\n\e[31m23 |\e[0m                res.add(a.toLong)\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ListBuffer[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq AsJavaList\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp7sbh6abv.scala:24:20\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                res.add(b.toLong"
  stdout: ''
  timestamp: 1660010375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val res = mutable.ArrayBuffer(1l)\n\
    \        val arr = for (i <- 1 to n) yield i * i\n        val fact = arr.toList\n\
    \        val sums = arr.foldLeft(0){\n            (a,b) => if (b.isEven) a + b.toLong\
    \ else a + b\n        }\n        res += sums\n        res += fact\n        res\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmppesmgv_j.scala:13:18 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mres\e[0m = mutable.ArrayBuffer(\e\
    [31m1l\e[0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmppesmgv_j.scala:14:33 --------------------\e[0m\e\
    [0m\n\e[31m14 |\e[0m        \e[33mval\e[0m \e[36marr\e[0m = \e[33mfor\e[0m (i\
    \ <- \e[31m1\e[0m to n) \e[33myield\e[0m i * i\n\e[31m\e[31m   |\e[0m        \
    \                         ^\e[0m\n\e[31m   |\e[0m                            \
    \     Found:    (n : Long)\n\e[31m   |\e[0m                                 Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppesmgv_j.scala:17:27\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            (\e[36ma\e[0m,\e\
    [36mb\e[0m) => \e[33mif\e[0m (b.isEven) a + b.toLong \e[33melse\e[0m a + b\n\e\
    [31m\e[31m   |\e[0m                         ^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                      value isEven is not a member of Int\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmppesmgv_j.scala:17:35 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            (\e[36ma\e[0m,\e[36mb\e[0m) => \e[33mif\e[0m (b.isEven)\
    \ a + b.toLong \e[33melse\e[0m a + b\n\e[31m\e[31m   |\e[0m                  \
    \                 ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                         \
    \          Found:    Long\n\e[31m   |\e[0m                                   Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010372
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list = mutable.ListBuffer[Long]()\n\
    \        (1 to n).foreach{ _ =>\n            list += if ((_ % 2 == 0)) {\n   \
    \             factorial(_)\n            } else {\n                list.lastOption.map(x\
    \ => (x + 1).toLong)\n            }\n        }\n        list.map(x => (x.toLong,\
    \ 1)).toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpk2ow_16m.scala:15:20 ---------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m            list += \e[33mif\e[0m ((_ % \e[31m2\e[0m\
    \ == \e[31m0\e[0m)) {\n\e[31m\e[31m   |\e[0m                    ^^\e[0m\n\e[31m\
    \   |\e[0m                    expression expected but \e[31mif\e[0m found\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk2ow_16m.scala:13:19\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mlist\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpk2ow_16m.scala:14:14\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        (\e[31m1\e[0m to n).foreach{\
    \ _ =>\n\e[31m\e[31m   |\e[0m              ^\e[0m\n\e[31m   |\e[0m           \
    \   Found:    (n : Long)\n\e[31m   |\e[0m              Required: Int\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010371
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n <= 1L) List(1L).toList\n\
    \        else {\n            var result = f(n - 2L)\n            var result1 =\
    \ result.map(_*2L)\n            result.zip(result1).foreach(x => x._1 = n.toLong\
    \ * x._1)\n            result\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpcfen_5v2.scala:17:50 -----------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            result.zip(result1).foreach(\e[36mx\e[0m\
    \ => x._1 = n.toLong * x._1)\n\e[31m\e[31m   |\e[0m                          \
    \                   ^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \                                Reassignment to val _1\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010369
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // implement the function f here\n\
    \        var factorial : Long = n.toLong;\n        var result : List[Long] = List();\n\
    \n        // loop from 1 to n\n        for (i<- 1 to n) {\n            // if n\
    \ is even\n            if (i.toInt == n / 2) {\n                // loop from 1\
    \ to i\n                for ( j <- 1 to i) {\n                    factorial *=\
    \ j;\n                    result :+= factorial.toLong\n                }\n   \
    \         }\n            // if n is odd\n            else {\n                result\
    \ :+= i.toLong\n            }\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2xq1unbh.scala:18:22\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010374
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \        var fact = 1\n        val factorial = (n / 2l).foldLeft(1l){(a, b) =>\
    \ a * b}\n        n mod 2l  match {\n            case 0 => result.addAll((1l.toLong\
    \ :: factorial :: result.take(n-1l)))\n            case _ => result.addAll((factorial\
    \ :: result.take(n-1l)))\n        }\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp3nyfvuq2.scala:15:33 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e[36mfactorial\e[0m = (n / \e\
    [31m2l\e[0m).foldLeft(\e[31m1l\e[0m){(\e[36ma\e[0m, \e[36mb\e[0m) => a * b}\n\e\
    [31m\e[31m   |\e[0m                        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                        value foldLeft is not a member of Long\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp3nyfvuq2.scala:16:10 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        n mod \e[31m2l\e[0m  \e[33mmatch\e[0m {\n\e[31m\e\
    [31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0mvalue mod is not a member of Long,\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mThe following import might fix the problem:\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp3nyfvuq2.scala:17:75 --------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m            \e[33mcase\e[0m \e[31m0\e[0m => result.addAll((\e\
    [31m1l\e[0m.toLong :: factorial :: result.take(n-\e[31m1l\e[0m)))\n\e[31m\e[31m\
    \   |\e[0m                                                                   \
    \        ^^^^\e[0m\n\e[31m   |\e[0m                                          \
    \                Found:    Long\n\e[31m   |\e[0m                             \
    \                             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp3nyfvuq2.scala:18:62 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mcase\e[0m _ => result.addAll((factorial\
    \ :: result.take(n-\e[31m1l\e[0m)))\n\e[31m\e[31m   |\e[0m                   \
    \                                           ^^^^\e[0m\n\e[31m   |\e[0m       \
    \                                                   Found:    Long\n\e[31m   |\e\
    [0m                                                          Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp3nyfvuq2.scala:20:8\
    \ ---------------------\e[0m\e[0m\n\e[3"
  stdout: ''
  timestamp: 1660010375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // O(N) time\n        // O(N) space\n\
    \        // O(N) time\n        val fList = mutable.Buffer.empty[Long]\n      \
    \  for(i <- 1 until n) fList += i.toLong * (i + 1).toLong\n        fList.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpu88cvtjs.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfList\e[0m = mutable.Buffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpu88cvtjs.scala:17:25 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(i <- \e[31m1\e[0m until n) fList\
    \ += i.toLong * (i + \e[31m1\e[0m).toLong\n\e[31m\e[31m   |\e[0m             \
    \            ^\e[0m\n\e[31m   |\e[0m                         Found:    (n : Long)\n\
    \e[31m   |\e[0m                         Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010374
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val res : List[Long] = new ArrayList[Long](n)\n\
    \        var sum = 0l\n        var factorial : Long = 1l\n        var i : Long\
    \ = 1l\n        while(i <= n) {\n            res.last() = factorial\n        \
    \    factorial = factorial*i\n            sum += i\n            i += 1\n     \
    \   }\n        res.last() = sum\n        res\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvexf4jpb.scala:13:35 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mres\e[0m : \e[35mList\e\
    [0m[\e[35mLong\e[0m] = \e[33mnew\e[0m \e[35mArrayList\e[0m[\e[35mLong\e[0m](n)\n\
    \e[31m\e[31m   |\e[0m                                   ^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                   Not found: type ArrayList\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvexf4jpb.scala:18:12 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            res.last() = factorial\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^\e[0m\n\e[31m   |\e[0m            value update is not a\
    \ member of Long\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvexf4jpb.scala:23:8\
    \ -------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        res.last() = sum\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^\e[0m\n\e[31m   |\e[0m        value update\
    \ is not a member of Long\n3 errors found\n"
  stdout: ''
  timestamp: 1660010374
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val factorial = n.toLong match\
    \ {\n            case 0 => 1L\n            case 1 => 1L\n            case _ =>\
    \ 0l\n        }\n        val factorials = List.range(1, n + 1)\n        factorials.foldLeft(List[Long]())((a,\
    \ x) => a.+(x * factorial))\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmpg3t4911g.scala:18:45 -----------------------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mfactorials\e[0m = List.range(\e\
    [31m1\e[0m, n + \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                         \
    \                    ^\e[0m\n\e[31m   |\e[0m                                No\
    \ implicit Ordering defined for AnyVal.\n1 error found\n"
  stdout: ''
  timestamp: 1660010374
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        if (n == 1L) List(1L)\n       \
    \ else if (n % 2 == 0) List(n * f(n / 2L))\n        else List(n + f(n / 2L), f(n\
    \ / 2L))\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpwl6zvqx_.scala:14:36 -----------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m (n % \e[31m2\e\
    [0m == \e[31m0\e[0m) List(n * f(n / \e[31m2L\e[0m))\n\e[31m\e[31m   |\e[0m   \
    \                               ^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35m*\e[0m in \e[33mclass\e[0m \e[35mLong\e\
    [0m with types\n\e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float):\
    \ Float\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m\
    \   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e[0m\
    \ (x: Byte): Long\n\e[31m   |\e[0mmatch arguments (List[Long])\n\e[31m\e[31m--\
    \ [E134] Type Error: /tmp/tmpwl6zvqx_.scala:15:20 -----------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33melse\e[0m List(n + f(n / \e[31m2L\e[0m),\
    \ f(n / \e[31m2L\e[0m))\n\e[31m\e[31m   |\e[0m                  ^^^\e[0m\n\e[31m\
    \   |\e[0mNone of the overloaded alternatives of \e[33mmethod\e[0m \e[35m+\e[0m\
    \ in \e[33mclass\e[0m \e[35mLong\e[0m with types\n\e[31m   |\e[0m (x: Double):\
    \ Double\n\e[31m   |\e[0m (x: Float): Float\n\e[31m   |\e[0m (x: Long): Long\n\
    \e[31m   |\e[0m (x: Int): Long\n\e[31m   |\e[0m (x: Char): Long\n\e[31m   |\e\
    [0m (x: Short): Long\n\e[31m   |\e[0m (x: Byte): Long\n\e[31m   |\e[0m (x: String):\
    \ String\n\e[31m   |\e[0mmatch arguments (List[Long])\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpwl6zvqx_.scala:15:34 --------------------\e[0m\e[0m\n\
    \e[31m15 |\e[0m        \e[33melse\e[0m List(n + f(n / \e[31m2L\e[0m), f(n / \e\
    [31m2L\e[0m))\n\e[31m\e[31m   |\e[0m                                 ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                 Found:    \e[1m\e[31mList\e\
    [0m\e[1m\e[31m[\e[0mLong\e[1m\e[31m]\e[0m\n\e[31m   |\e[0m                   \
    \              Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val listOfFactorials = (1l to n\
    \ toList).map{x => x * x.toLong}\n        val listOfSum = (1l to n).map{x => x\
    \ + 1}\n        listOfFactorials match {\n            case List() => List()\n\
    \            case _ => {\n                if (n % 2 == 0) {\n                \
    \    listOfFactorials ++ listOfSum\n                } else {\n               \
    \     listOfSum\n                }\n            }\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp_tj7uf7s.scala:13:46 ---------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlistOfFactorials\e[0m =\
    \ (\e[31m1l\e[0m to n toList).map{\e[36mx\e[0m => x * x.toLong}\n\e[31m\e[31m\
    \   |\e[0m                                              ^\e[0m\n\e[31m   |\e[0m\
    \                                       expression expected but \e[31m')'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_tj7uf7s.scala:21:20\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m                    listOfSum\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \               Found:    (listOfSum : IndexedSeq[Long])\n\e[31m   |\e[0m    \
    \                Required: List[Long]\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = mutable.ArrayBuffer.empty[Long]\n\
    \        if (n == 0) {\n            result\n        }\n        else {\n      \
    \      for (i <- 1 to n) {\n                val num = if (i % 2 == 0) i.toLong\
    \ * 1 else i.toLong\n                result += num\n            }\n        }\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp40s_fm9_.scala:13:21 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp40s_fm9_.scala:18:27 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m (i <- \e[31m1\e[0m to n) {\n\
    \e[31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m      \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \         Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010375
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val fi : List[Long] = List1(n,\
    \ 1l).zipWithIndex.toList\n        var sum = 1\n        val factorial : List[Long]\
    \ = fi.filter(_._2 % 2l.toLong != 0l.toLong).map(x => x._1)\n        fi.filter(_._2\
    \ % 2l.toLong == 0l.toLong).map {\n            x =>\n                sum = sum\
    \ + x._1\n        }.toList\n        factorial.map(x => sum.toLong * x.toLong).toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpux3fqfu9.scala:13:30 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mfi\e[0m : \e[35mList\e[0m[\e\
    [35mLong\e[0m] = List1(n, \e[31m1l\e[0m).zipWithIndex.toList\n\e[31m\e[31m   |\e\
    [0m                              ^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \             Not found: List1\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpux3fqfu9.scala:15:49 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m        \e[33mval\e[0m \e[36mfactorial\e[0m : \e[35mList\e[0m[\e[35mLong\e\
    [0m] = fi.filter(_._2 % \e[31m2l\e[0m.toLong != \e[31m0l\e[0m.toLong).map(\e[36mx\e\
    [0m => x._1)\n\e[31m\e[31m   |\e[0m                                          \
    \     ^^^^\e[0m\n\e[31m   |\e[0m                                        value\
    \ _2 is not a member of Long\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpux3fqfu9.scala:15:89\
    \ ------------------------\e[0m\e[0m\n\e[31m15 |\e[0m        \e[33mval\e[0m \e\
    [36mfactorial\e[0m : \e[35mList\e[0m[\e[35mLong\e[0m] = fi.filter(_._2 % \e[31m2l\e\
    [0m.toLong != \e[31m0l\e[0m.toLong).map(\e[36mx\e[0m => x._1)\n\e[31m\e[31m  \
    \ |\e[0m                                                                     \
    \                  ^^^^\e[0m\n\e[31m   |\e[0m                                \
    \        value _1 is not a member of Long\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpux3fqfu9.scala:16:20 ------------------------\e[0m\e[0m\n\e[31m16 |\e\
    [0m        fi.filter(_._2 % \e[31m2l\e[0m.toLong == \e[31m0l\e[0m.toLong).map\
    \ {\n\e[31m\e[31m   |\e[0m                  ^^^^\e[0m\n\e[31m   |\e[0m       \
    \           value _2 is not a member of Long\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpux3fqfu9.scala:18:30 ------------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m                sum = sum + x._1\n\e[31m\e[31m   |\e[0m              \
    \              ^^^^\e[0m\n\e[31m   |\e[0m                            value _1\
    \ is not a member of Long\n5 errors found\n"
  stdout: ''
  timestamp: 1660010376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n       if(n <= 0) return Nil\n       if(n\
    \ % 2 == 0) return 1 :: factorial(n).map(x => x * x)\n       else return 0 ::\
    \ 1 to n map (x => x + x)\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2hzpvl9b.scala:14:34 ------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m       \e[33mif\e[0m(n % \e[31m2\e[0m == \e[31m0\e[0m)\
    \ \e[33mreturn\e[0m \e[31m1\e[0m :: factorial(n).map(\e[36mx\e[0m => x * x)\n\e\
    [31m\e[31m   |\e[0m                                  ^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                                  Not found: factorial\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp2hzpvl9b.scala:15:21 ------------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m       \e[33melse\e[0m \e[33mreturn\e[0m \e[31m0\e[0m\
    \ :: \e[31m1\e[0m to n map (x => x + x)\n\e[31m\e[31m   |\e[0m               \
    \      ^^^^\e[0m\n\e[31m   |\e[0m                     value :: is not a member\
    \ of Int\n2 errors found\n"
  stdout: ''
  timestamp: 1660010376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        // TODO: implement this function\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp1_uxfduk.scala:12:35\
    \ --------------------\e[0m\e[0m\n\e[31m12 |\e[0m    \e[33mdef\e[0m \e[36mf\e\
    [0m(\e[36mn\e[0m : \e[35mLong\e[0m) : \e[35mList\e[0m[\e[35mLong\e[0m] = {\n\e\
    [31m\e[31m   |\e[0m                                   ^\e[0m\n\e[31m   |\e[0m\
    \                                   Found:    Unit\n\e[31m   |\e[0m          \
    \                         Required: List[Long]\n\e[31m13 |\e[0m        \e[34m//\
    \ TODO: implement this function\e[0m\n\e[31m14 |\e[0m    }\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var i = 1;\n        var fac: List[Long]\
    \ = List.fill(n)(1l);\n        var sum : List[Long] = List.fill(n)(0l);\n\n  \
    \      fac(i) match {\n            case 0 => sum(i)\n            case _ => for\
    \ (j <- i + 1 to n) {\n                      fac(i) * fac(j) match {\n       \
    \                 case 0 => sum(i) = sum(i) + j\n                        case\
    \ _ => sum(i) = 0l;\n                      }\n                }\n        }\n \
    \       return sum;\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplkzzcb7p.scala:14:40\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mvar\e[0m \e[36mfac\e\
    [0m: \e[35mList\e[0m[\e[35mLong\e[0m] = List.fill(n)(\e[31m1l\e[0m);\n\e[31m\e\
    [31m   |\e[0m                                        ^\e[0m\n\e[31m   |\e[0m \
    \                                       Found:    (n : Long)\n\e[31m   |\e[0m\
    \                                        Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmplkzzcb7p.scala:15:41 --------------------\e\
    [0m\e[0m\n\e[31m15 |\e[0m        \e[33mvar\e[0m \e[36msum\e[0m : \e[35mList\e\
    [0m[\e[35mLong\e[0m] = List.fill(n)(\e[31m0l\e[0m);\n\e[31m\e[31m   |\e[0m   \
    \                                      ^\e[0m\n\e[31m   |\e[0m               \
    \                          Found:    (n : Long)\n\e[31m   |\e[0m             \
    \                            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmplkzzcb7p.scala:19:41 --------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m            \e[33mcase\e[0m _ => \e[33mfor\e[0m (j <- i +\
    \ \e[31m1\e[0m to n) {\n\e[31m\e[31m   |\e[0m                                \
    \         ^\e[0m\n\e[31m   |\e[0m                                         Found:\
    \    (n : Long)\n\e[31m   |\e[0m                                         Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplkzzcb7p.scala:21:34\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m                        \e\
    [33mcase\e[0m \e[31m0\e[0m => sum(i) = sum(i) + j\n\e[31m\e[31m   |\e[0m     \
    \                             ^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member\
    \ of List[Long] - did you mean List[Long].updated?\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmplkzzcb7p.scala:22:34 ------------------------\e[0m\e[0m\n\
    \e[31m22 |\e[0m                        \e[33mcase\e[0m _ => sum(i) = \e[31m0l\e\
    [0m;\n\e[31m\e[31m   |\e[0m                                  ^^^"
  stdout: ''
  timestamp: 1660010377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var i : Long = 1\n        var result\
    \ : List[Long] = List().toList\n        // while i less than n\n        while\
    \ (i < n) {\n            // if i is even\n            if (i % 2 == 0) {\n    \
    \            result = result :+ i.toLong\n                i =+ 1\n           \
    \ }\n            // else\n            else {\n                // i = i + 1\n \
    \               i =+ 1\n            }\n        }\n        result\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4r0fvilc.scala:20:18 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                i =+ \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value =+ is not a\
    \ member of Long - did you mean Long.==?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp4r0fvilc.scala:25:18 ------------------------\e[0m\e[0m\n\e[31m25 |\e\
    [0m                i =+ \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^^^^\e\
    [0m\n\e[31m   |\e[0m                value =+ is not a member of Long - did you\
    \ mean Long.==?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var result : List[Long] = Nil\n\
    \        for (i<- 1 to n){\n            if (i % 2 == 0) result += i.toLong\n \
    \           else result += (i-1).toLong\n        }\n        result\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp0kxqyeca.scala:14:22\
    \ --------------------\e[0m\e[0m\n\e[31m14 |\e[0m        \e[33mfor\e[0m (i<- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp0kxqyeca.scala:15:35 ------------------------\e[0m\e[0m\n\e[31m15 |\e\
    [0m            \e[33mif\e[0m (i % \e[31m2\e[0m == \e[31m0\e[0m) result += i.toLong\n\
    \e[31m\e[31m   |\e[0m                            ^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m    value += is not a member of List[Long] - did you mean List[Long].!=?\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp0kxqyeca.scala:16:24 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m            \e[33melse\e[0m result += (i-\e[31m1\e[0m).toLong\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^^\e[0m\n\e[31m   |\e[0m    value\
    \ += is not a member of List[Long] - did you mean List[Long].!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val l: List[Long] = new List(1)\n\
    \        if (n % 2 == 0) {\n            val k = 1\n            while (k <= n)\
    \ {\n                l.head * k\n                k += 1\n            }\n     \
    \   }\n        else {\n            val k = 1\n            while (k <= n) {\n \
    \               l.head + k\n                k += 1\n            }\n        }\n\
    \        l\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp_aud5w_b.scala:13:37 -----------------------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36ml\e[0m: \e[35mList\e[0m[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m \e[35mList\e[0m(\e[31m1\e[0m)\n\e[31m\e[31m  \
    \ |\e[0m                                     ^\e[0m\n\e[31m   |\e[0m      too\
    \ many arguments for \e[33mconstructor\e[0m \e[35mList\e[0m in \e[33mclass\e[0m\
    \ \e[35mList\e[0m: (): List[A]\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp_aud5w_b.scala:18:18\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                k += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value += is not a member of Int - did you mean k.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmp_aud5w_b.scala:25:18 ------------------------\e[0m\e\
    [0m\n\e[31m25 |\e[0m                k += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m \
    \               ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a member\
    \ of Int - did you mean k.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val result = mutable.ListBuffer[Long]()\n\
    \        (1l..n).toList.filter(_ %2 == 0).map(x => result.push(math.factorial(x).toLong))\n\
    \        result.toList\n    }\n    def main(args: Array[String]) = {\n    assert(f((5l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpk0k2xrpj.scala:14:12 ---------------------------\e\
    [0m\e[0m\n\e[31m14 |\e[0m        (\e[31m1l\e[0m..n).toList.filter(_ %\e[31m2\e\
    [0m == \e[31m0\e[0m).map(\e[36mx\e[0m => result.push(math.factorial(x).toLong))\n\
    \e[31m\e[31m   |\e[0m            ^\e[0m\n\e[31m   |\e[0m            an identifier\
    \ expected, but '.' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpk0k2xrpj.scala:13:21\
    \ ------------------------\e[0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e\
    [36mresult\e[0m = mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010376
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        var listOfFactorials = List.fill(n.toInt)(1L)\n\
    \        for (i <- 1 to n.toInt){\n            if (i %2 == 0) {\n            \
    \    listOfFactorials = listOfFactorials.map(_ * i)\n            } else {\n  \
    \              listOfFactorials = listOfFactorials.sum\n            }\n      \
    \  }\n        listOfFactorials\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong,\
    \ 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong, 2l.toLong,\
    \ 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n    assert(f((1l)).equals((List[Long](1l.toLong))));\n\
    \    assert(f((3l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9mfzgm02.scala:18:35\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m                listOfFactorials\
    \ = listOfFactorials.sum\n\e[31m\e[31m   |\e[0m                              \
    \     ^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                             \
    \      Found:    Long\n\e[31m   |\e[0m                                   Required:\
    \ \e[1m\e[32mList\e[0m\e[1m\e[32m[\e[0mLong\e[1m\e[32m]\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010377
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // Implement the function f that takes n as a parameter,\n    // and\
    \ returns a list of size n, such that the value of the element at index i is the\
    \ factorial of i if i is even\n    // or the sum of numbers from 1 to i otherwise.\n\
    \    // i starts from 1.\n    // the factorial of i is the multiplication of the\
    \ numbers from 1 to i (1 * 2 * ... * i).\n    // Example:\n    // >>> f((5l))\n\
    \    // (List[Long](1l.toLong, 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong))\n\
    \    def f(n : Long) : List[Long] = {\n        val list = mutable.ListBuffer[Long]()\n\
    \        var num = 1\n        var num2 : Long = 1\n        while(num < n){\n \
    \           num += 1\n            num2 = num\n            while(num2 < n){\n \
    \               num2 += 1\n                list += num2\n            }\n     \
    \   }\n        list += num\n        list.toList\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(f((5l)).equals((List[Long](1l.toLong, 2l.toLong, 6l.toLong,\
    \ 24l.toLong, 15l.toLong))));\n    assert(f((7l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong, 24l.toLong, 15l.toLong, 720l.toLong, 28l.toLong))));\n\
    \    assert(f((1l)).equals((List[Long](1l.toLong))));\n    assert(f((3l)).equals((List[Long](1l.toLong,\
    \ 2l.toLong, 6l.toLong))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb8y80tqk.scala:13:19 ------------------------\e\
    [0m\e[0m\n\e[31m13 |\e[0m        \e[33mval\e[0m \e[36mlist\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010376

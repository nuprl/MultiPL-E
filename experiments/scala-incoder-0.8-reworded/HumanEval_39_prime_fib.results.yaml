language: scala
name: HumanEval_39_prime_fib
results:
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2\n        var b = 2\n        var temp = 0\n   \
    \     var isPrime = false \n        var count = 0\n        while(count<n){\n \
    \           if(a+b<n && a+b==n){\n                temp = a\n                a\
    \ = b\n                b = temp\n                isPrime = true\n            }\n\
    \            else{\n                if(a+b<n){\n                    temp = a\n\
    \                    a = b\n                    b = temp\n                }\n\
    \                else{\n                    temp = a\n                    a =\
    \ b\n                    b = temp\n                }\n            }\n        \
    \    count+=1\n        }\n        if(isPrime){\n            temp = a\n       \
    \ }\n        return temp\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpscwwqctx.scala:49)\n\tat Problem.main(tmpscwwqctx.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009986
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var n : Long = n : Long\n        if (n<2) {\n          \
    \  n = 1\n        }\n        else if(n%2==0) {\n            n = 2\n        }\n\
    \        else if( n%3==0) {\n            n = 3\n        }\n        else if( n%5==0)\
    \ {\n            n = 5\n        }\n        else {\n            n = n + ( primeFib(n/2)\
    \ + primeFib(n/3))\n        }\n        n\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E039] Reference Error: /tmp/tmp2o_utv7b.scala:16:23 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mn\e[0m : \e[35mLong\e[0m\
    \ = n : \e[35mLong\e[0m\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m             n is a forward reference extending over the definition\
    \ of n\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val f = (3 : Long)  // Fibonacci numbers of 3\n        val\
    \ a = (5 : Long)\n        val b = (7 : Long)\n\n        if (n <= f.length && n\
    \ < a.length)\n            return f(n)\n\n        if (n <= a.length && n < b.length)\n\
    \            return a(n)\n\n        if (n <= b.length && n < f.length)\n     \
    \       return b(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpimixys3d.scala:20:19 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mif\e[0m (n <= f.length && n < a.length)\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \        value length is not a member of Long\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmpimixys3d.scala:21:19 -----------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m            \e[33mreturn\e[0m f(n)\n\e[31m\e[31m   |\e[0m            \
    \       ^\e[0m\n\e[31m   |\e[0m                   \e[33mvalue\e[0m \e[35mf\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpimixys3d.scala:23:19 ------------------------\e[0m\e[0m\n\e[31m23 |\e\
    [0m        \e[33mif\e[0m (n <= a.length && n < b.length)\n\e[31m\e[31m   |\e[0m\
    \                 ^^^^^^^^\e[0m\n\e[31m   |\e[0m                 value length\
    \ is not a member of Long\n\e[31m\e[31m-- [E050] Type Error: /tmp/tmpimixys3d.scala:24:19\
    \ -----------------------------\e[0m\e[0m\n\e[31m24 |\e[0m            \e[33mreturn\e\
    [0m a(n)\n\e[31m\e[31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m    \
    \               \e[33mvalue\e[0m \e[35ma\e[0m does not take parameters\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpimixys3d.scala:26:19 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m        \e[33mif\e[0m (n <= b.length && n < f.length)\n\
    \e[31m\e[31m   |\e[0m                 ^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \        value length is not a member of Long\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmpimixys3d.scala:27:19 -----------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m            \e[33mreturn\e[0m b(n)\n\e[31m\e[31m   |\e[0m            \
    \       ^\e[0m\n\e[31m   |\e[0m                   \e[33mvalue\e[0m \e[35mb\e[0m\
    \ does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n6 errors found\n"
  stdout: ''
  timestamp: 1660009986
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val nums = mutable.MutableList[Int]()\n        val fibonacci\
    \ = mutable.MutableList[Int]()\n        val counter = mutable.MutableList[Int]()\n\
    \n        for (nx <- 2l, ny <- 3l) if (!nums.contains(ny)) {\n            fibonacci\
    \ :+ ny\n            if (fibonacci(nx) == n) {\n                nums ++= fibonacci\n\
    \                counter += nx\n            }\n        }\n        nums.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpc8a16a8r.scala:20:21 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (nx <- \e[31m2l\e[0m, ny <- \e\
    [31m3l\e[0m) \e[33mif\e[0m (!nums.contains(ny)) {\n\e[31m\e[31m   |\e[0m     \
    \                ^\e[0m\n\e[31m   |\e[0m                     ')' expected, but\
    \ ',' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc8a16a8r.scala:16:19\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mnums\e[0m = mutable.MutableList[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m \
    \                  ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc8a16a8r.scala:17:24\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mfibonacci\e[0m = mutable.MutableList[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e\
    [0m                        ^^^^^^^\e[0m\n\e[31m   |\e[0m                     \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc8a16a8r.scala:18:22\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e\
    [36mcounter\e[0m = mutable.MutableList[\e[35mInt\e[0m]()\n\e[31m\e[31m   |\e[0m\
    \                      ^^^^^^^\e[0m\n\e[31m   |\e[0m                      Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660009978
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val a = if (n <= 1) 1\n        else primeFib(n - 1) + primeFib(n\
    \ - 2)\n        val m = primeFib(n - 1)\n        if (a == 1 && m == 2)\n     \
    \       1\n        else a\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\tat Problem$.primeFib(tmp2mn4v9jm.scala:18)\n\
    \tat Problem$"
  stdout: ''
  timestamp: 1660009985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val a = 2l\n        val b = 2l\n        var i = 0\n    \
    \    while (i < n){\n            a = b\n            b = a + b\n            i +=\
    \ 1\n        }\n        if( b != 2l ) {\n            b\n        } else {\n   \
    \         b\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpo1lamsfm.scala:20:14 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            a = b\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpo1lamsfm.scala:21:14 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            b = a + b\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660009979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2\n        var b = 2\n        while (a < n){\n \
    \           if (isPrime(a)) b += a\n            a += 1\n        }\n        b\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp5n4rwn2b.scala:19:16 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m (isPrime(a)) b += a\n\e[31m\e\
    [31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not\
    \ found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009978
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1) {\n            return n\n        }\n       \
    \ else {\n            if (n % 2 == 0) {\n                primeFib(n - 1)\n   \
    \         }\n            else {\n                primeFib(n - 2)\n           \
    \ }\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpcw6_3k_g.scala:29)\n\tat Problem.main(tmpcw6_3k_g.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def fibo(n : Long) : Long = {\n            if (n <= 1L)\
    \ 1L\n            else fibo(n - 2L) + fibo(n - 1L)\n        }\n\n        val primes\
    \ = mutable.ListBuffer[Long]()\n        val counter = mutable.Long(2L)\n     \
    \   while(counter < n) {\n            val isPrime = fibo(counter) != 0L\n    \
    \        if (isPrime) primes += counter\n            counter += 2L\n        }\n\
    \n        primes.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprza87q1m.scala:21:21 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmprza87q1m.scala:22:22 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mcounter\e[0m = mutable.Long(\e\
    [31m2L\e[0m)\n\e[31m\e[31m   |\e[0m                      ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                      Not found: mutable\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660009977
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Long) : Boolean = {\n            if (n ==\
    \ 1l || n == 2l) true\n            else {\n                if (n % 2l == 0l) false\n\
    \                else {\n                    val k = 3l / n\n                \
    \    for (i <- 2l to k) {\n                        if (n % i == 0l) false\n  \
    \                      else {\n                            i += 1\n          \
    \              }\n                    }\n                    true\n          \
    \      }\n            }\n        }\n        var sum = 0l\n        if (n % 2l ==\
    \ 0l) sum += 2l\n        else {\n            val k = 3l / n\n            for (i\
    \ <- 2l to k) {\n                if (n % i == 0l) sum += i\n            }\n  \
    \      }\n        for (i = 3l to n; i > 2l; i -= 2l) {\n            if (isPrime(i))\
    \ sum += i\n        }\n        sum\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsve5bx7j.scala:40:15 ---------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mfor\e[0m (i = \e[31m3l\e[0m to n; i > \e\
    [31m2l\e[0m; i -= \e[31m2l\e[0m) {\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\
    \e[31m   |\e[0m               ')' expected, but '=' found\n\e[31m\e[31m-- [E040]\
    \ Syntax Error: /tmp/tmpsve5bx7j.scala:40:32 ---------------------------\e[0m\e\
    [0m\n\e[31m40 |\e[0m        \e[33mfor\e[0m (i = \e[31m3l\e[0m to n; i > \e[31m2l\e\
    [0m; i -= \e[31m2l\e[0m) {\n\e[31m\e[31m   |\e[0m                            \
    \    ^\e[0m\n\e[31m   |\e[0m                                '<-' expected, but\
    \ ';' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpsve5bx7j.scala:40:41\
    \ ---------------------------\e[0m\e[0m\n\e[31m40 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m3l\e[0m to n; i > \e[31m2l\e[0m; i -= \e[31m2l\e[0m) {\n\e[31m\e\
    [31m   |\e[0m                                         ^\e[0m\n\e[31m   |\e[0m\
    \                                         '<-' expected, but ')' found\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpsve5bx7j.scala:25:30 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                            i += \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m                            ^^^^\e[0m\n\e[31m   |\e[0m          \
    \         value += is not a member of Long - did you mean i.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpsve5bx7j.scala:40:24 ------------------------\e\
    [0m\e[0m\n\e[31m40 |\e[0m        \e[33mfor\e[0m (i = \e[31m3l\e[0m to n; i > \e\
    [31m2l\e[0m; i -= \e[31m2l\e[0m) {\n\e[31m\e[31m   |\e[0m                    \
    \    ^\e[0m\n\e[31m   |\e[0mvalue foreach is not a member of Null, but could be\
    \ made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip4.lazyZip4ToIterable\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.list\
    \ asScalaBuffer\n\e[31m   |\e[0m  import collection.convert.ImplicitConv"
  stdout: ''
  timestamp: 1660009987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibonacci = Vector.fill(n+1)((1l).pow((2l+n).asInstanceOf[Long]))\n\
    \        fibonacci(2l) = fibonacci(3l)\n        (1l to n).map(fibonacci(_)).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqtclizbl.scala:16:36\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e\
    [0m = Vector.fill(n+\e[31m1\e[0m)((\e[31m1l\e[0m).pow((\e[31m2l\e[0m+n).asInstanceOf[\e\
    [35mLong\e[0m]))\n\e[31m\e[31m   |\e[0m                                    ^^^\e\
    [0m\n\e[31m   |\e[0m                                    Found:    Long\n\e[31m\
    \   |\e[0m                                    Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmpqtclizbl.scala:16:46 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m = Vector.fill(n+\e\
    [31m1\e[0m)((\e[31m1l\e[0m).pow((\e[31m2l\e[0m+n).asInstanceOf[\e[35mLong\e[0m]))\n\
    \e[31m\e[31m   |\e[0m                                         ^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue pow is not a member of Long, but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\
    \e[31m   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpqtclizbl.scala:17:8 -------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibonacci(\e[31m2l\e[0m) = fibonacci(\e[31m3l\e\
    [0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue update\
    \ is not a member of Vector[Nothing] - did you mean fibonacci.updated?\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpqtclizbl.scala:17:34 --------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fibonacci(\e[31m2l\e[0m) = fibonacci(\e[31m3l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                  ^^\e[0m\n\e[31m \
    \  |\e[0m                                  Found:    (\e[31m3L\e[0m : Long)\n\e\
    [31m   |\e[0m                                  Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpqtclizbl.scala:18:32 --------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        (\e[31m1l\e[0m to n).map(fibo"
  stdout: ''
  timestamp: 1660009986
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1l) 1l\n        if (n <= 2l) 2l\n        var nextPrime\
    \ : Long = primeFib(n / 2l)\n        while (n % nextPrime != 0l) nextPrime = primeFib(nextPrime)\n\
    \        nextPrime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\tat Problem$.primeFib(tmpiqams5j4.scala:18)\n\
    \tat Problem$"
  stdout: ''
  timestamp: 1660009983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(num: Int) : Boolean = {\n            def isPrime(num:\
    \ Int, count: Int) : Boolean = {\n                if (num < 2) true\n        \
    \        else if (num == 2 || num == 5) true\n                else if (!(num %in\
    \ 2 to num / 2)) false\n                else isPrime(num + 2, count + 1)\n   \
    \         }\n            isPrime(num, 1)\n        }\n        if (isPrime(n)) n\n\
    \        else primeFib(n + 2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmprn1eqy6t.scala:20:35 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33melse\e[0m \e[33mif\e[0m (!(num\
    \ %in \e[31m2\e[0m to num / \e[31m2\e[0m)) \e[31mfalse\e[0m\n\e[31m\e[31m   |\e\
    [0m                                   ^\e[0m\n\e[31m   |\e[0m                \
    \                 ')' expected, but integer literal found\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmprn1eqy6t.scala:20:32 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m                \e[33melse\e[0m \e[33mif\e[0m (!(num %in \e\
    [31m2\e[0m to num / \e[31m2\e[0m)) \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m   \
    \                             ^^\e[0m\n\e[31m   |\e[0m                       \
    \         Not found: in\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprn1eqy6t.scala:25:20\
    \ --------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mif\e[0m (isPrime(n))\
    \ n\n\e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m        \
    \            Found:    (n : Long)\n\e[31m   |\e[0m                    Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660009983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = mutable.ArrayBuffer.fill(n)(0)\n        fibs.update(1,\
    \ 1)\n        fibs.update(0, 1)\n        fibs.update(1, 0)\n        fibs.update(0)\n\
    \        fibs.take(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpr_b_38xm.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer.fill(n)(\e\
    [31m0\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009978
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else primeFib(n-1) + primeFib(n-2)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7699f98t.scala:20)\n\tat Problem.main(tmp7699f98t.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if(n == 0) 0\n        else if(n == 1) 1\n        else {\n\
    \            val p = primeFib((n-1)); n -> p\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpodlqt07m.scala:19:37\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e\
    [36mp\e[0m = primeFib((n-\e[31m1\e[0m)); n -> p\n\e[31m\e[31m   |\e[0m       \
    \                              ^^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \                   Found:    (Long, Long)\n\e[31m   |\e[0m                  \
    \                   Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009983
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1) n\n        else primeFib(n-2) + primeFib(n-1)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpsol043fj.scala:20)\n\tat Problem.main(tmpsol043fj.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009984
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 0\n    \
    \    while (a <= n) {\n            if ((n % a) == 0) c = 0\n            else if\
    \ ((n % a) != 0) c = (a + b) % a\n            b = (a + c) % a\n            a =\
    \ c\n        }\n        n\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzi76urg6.scala:21:39\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33melse\e[0m \e\
    [33mif\e[0m ((n % a) != \e[31m0\e[0m) c = (a + b) % a\n\e[31m\e[31m   |\e[0m \
    \                                      ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \                                  Found:    Long\n\e[31m   |\e[0m           \
    \                            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009984
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1)\n            return n\n        else primeFib(n\
    \ - 1) + primeFib(n - 2)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpls7t9m1a.scala:21)\n\tat Problem.main(tmpls7t9m1a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009983
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(num : Long) : Boolean = num == 0 || num == 1\
    \ {\n            val sqrtOfNum = Math.sqrt(num)\n            sqrtOfNum match {\n\
    \                case 0 => false\n                case 1 => true\n           \
    \     case _ => false\n            }\n        }\n        if(isPrime(n))\n    \
    \        1l\n        else {\n            if(n == 2)\n                2l\n    \
    \        else\n                primeFib(n-1l) + primeFib(n-2l)\n        }\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpeh_3cwem.scala:16:63 -----------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mdef\e[0m \e[36misPrime\e[0m(\e[36mnum\e\
    [0m : \e[35mLong\e[0m) : \e[35mBoolean\e[0m = num == \e[31m0\e[0m || num == \e\
    [31m1\e[0m {\n\e[31m\e[31m   |\e[0m                                          \
    \                     ^\e[0m\n\e[31m   |\e[0m                                \
    \     expression does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009979
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_numbers = (1l, 2l, 3l, 5l, 8l, 13l, 21l, 34l, 55l)\n\
    \        var i : Long = 0\n        while(i <= n){\n            if(fib_numbers(i)\
    \ == (n + i) && (fib_numbers(i) > 0) && (fib_numbers(i) <= n)){\n            \
    \    return fib_numbers(i)\n            }\n            i += 2\n        }\n   \
    \     return 0\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjv5zrhx4.scala:19:27\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(fib_numbers(i)\
    \ == (n + i) && (fib_numbers(i) > \e[31m0\e[0m) && (fib_numbers(i) <= n)){\n\e\
    [31m\e[31m   |\e[0m                           ^\e[0m\n\e[31m   |\e[0m        \
    \                   Found:    (i : Long)\n\e[31m   |\e[0m                    \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjv5zrhx4.scala:19:57\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(fib_numbers(i)\
    \ == (n + i) && (fib_numbers(i) > \e[31m0\e[0m) && (fib_numbers(i) <= n)){\n\e\
    [31m\e[31m   |\e[0m                                                         ^\e\
    [0m\n\e[31m   |\e[0m                                                    Found:\
    \    (i : Long)\n\e[31m   |\e[0m                                             \
    \       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpjv5zrhx4.scala:19:81\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            \e[33mif\e[0m(fib_numbers(i)\
    \ == (n + i) && (fib_numbers(i) > \e[31m0\e[0m) && (fib_numbers(i) <= n)){\n\e\
    [31m\e[31m   |\e[0m                                                          \
    \                       ^\e[0m\n\e[31m   |\e[0m                              \
    \                      Found:    (i : Long)\n\e[31m   |\e[0m                 \
    \                                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpjv5zrhx4.scala:20:35 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33mreturn\e[0m fib_numbers(i)\n\e\
    [31m\e[31m   |\e[0m                                   ^\e[0m\n\e[31m   |\e[0m\
    \                                   Found:    (i : Long)\n\e[31m   |\e[0m    \
    \                               Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`"
  stdout: ''
  timestamp: 1660009986
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if(n == 1) 1l else primeFib(n-1) + primeFib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmprydv9ss5.scala:19)\n\tat Problem.main(tmprydv9ss5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660009985
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def fib(n:Long):Long = {\n            if (n==1l || n==2l)\
    \ {\n                return 1l\n            }\n            if (n==3l) {\n    \
    \            return 2l\n            }\n            fib(n-1l) ++ fib(n-2l)\n  \
    \      }\n        def isPrime(n:Long):Boolean = {\n            for (i <- 2 to\
    \ n/2l-1 if (n%i==0)) {\n                println(s\"n=$n i=$i\")\n           \
    \     return false\n            }\n            println(s\"n=$n n%i==0 is false\"\
    )\n            true\n        }\n        n match {\n            case _ if n < 2l\
    \ || n < 4l => n\n            case _ if n > 4l => fib(n-1l) ++ fib(n-2l)\n   \
    \         case _ if n < 8l =>\n                val f1 = n\n                val\
    \ f2 = n+1\n                if (isPrime(f2)) {\n                    f1 + f2\n\
    \                } else {\n                    fib(n - 1)\n                }\n\
    \            case _ if n%2l == 0l && n%5l == 0l => n\n            case _ if n%4l\
    \ == 0l => fib(6l)+fib(4l)+fib(3l)+fib(n-1l)\n            case _ if n%5l == 0l\
    \ => fib(3l)+fib(n-2l)\n            case _ if n%6l == 0l => fib(3l)+fib(4l)+fib(n-1l)\n\
    \            case _ if n%7l == 0l => fib(n-1l)+fib(3l)+fib(n-2l)\n           \
    \ case _ if n%8l == 0l => fib(n-1l)+fib(4l)+fib(n-2l)\n            case _ if n%9l\
    \ == 0l => fib(n-1l)+fib(4l)+fib(5l)+fib(n-2l)\n            case _ if n%10l ==\
    \ 0l => fib(n-1l)+fib(5l)+fib(6l)+fib(n-2l)\n            case _ => fib(n-1l) +\
    \ fib(n-2l) + fib(n-3l)\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5jz949kg.scala:23:22 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            fib(n-\e[31m1l\e[0m) ++ fib(n-\e[31m2l\e\
    [0m)\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \        value ++ is not a member of Long\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp5jz949kg.scala:26:27 --------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m            \e[33mfor\e[0m (i <- \e[31m2\e[0m to n/\e[31m2l\e[0m-\e[31m1\e\
    [0m \e[33mif\e[0m (n%i==\e[31m0\e[0m)) {\n\e[31m\e[31m   |\e[0m              \
    \             ^^^^^^\e[0m\n\e[31m   |\e[0m                           Found:  \
    \  Long\n\e[31m   |\e[0m                           Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp5jz949kg.scala:35:42 ------------------------\e\
    [0m\e[0m\n\e[31m35 |\e[0m            \e[33mcase\e[0m _ \e[33mif\e[0m n > \e[31m4l\e\
    [0m => fib(n-\e[31m1l\e[0m) ++ fib(n-\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m   \
    \                             ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \                   value ++ is not a member of Long\n3 errors found\n"
  stdout: ''
  timestamp: 1660009987
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1l) 2l\n        else fibonacci(n-1l)\
    \ + fibonacci(n-2l)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj6g70oj6.scala:17:13 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33melse\e[0m fibonacci(n-\e[31m1l\e[0m) +\
    \ fibonacci(n-\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m             ^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m             Not found: fibonacci\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val f = (2l) -> ((3l) + (4l))\n        val a = f(f(f(n +\
    \ 2, 0l), 0l), 1l)\n        val p = (f(n + 1l, 0l) -> (f(n + 1l, 1l)))(f(f(f(n\
    \ + 2l, 0l), 0l), 1l), 0l)\n        if (p(p(a, 0l), 1l) == n) return a\n     \
    \   n + 2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6czidcqm.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36ma\e\
    [0m = f(f(f(n + \e[31m2\e[0m, \e[31m0l\e[0m), \e[31m0l\e[0m), \e[31m1l\e[0m)\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^\e[0m\n\e[31m   |\e[0m   \
    \                   Found:    (Long, Long)\n\e[31m   |\e[0m                  \
    \    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6czidcqm.scala:18:19\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mp\e\
    [0m = (f(n + \e[31m1l\e[0m, \e[31m0l\e[0m) -> (f(n + \e[31m1l\e[0m, \e[31m1l\e\
    [0m)))(f(f(f(n + \e[31m2l\e[0m, \e[31m0l\e[0m), \e[31m0l\e[0m), \e[31m1l\e[0m),\
    \ \e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                   Found:    (Long, Long)\n\e[31m   |\e[0m      \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp6czidcqm.scala:18:37 --------------------\e[0m\e[0m\n\e[31m18\
    \ |\e[0m        \e[33mval\e[0m \e[36mp\e[0m = (f(n + \e[31m1l\e[0m, \e[31m0l\e\
    [0m) -> (f(n + \e[31m1l\e[0m, \e[31m1l\e[0m)))(f(f(f(n + \e[31m2l\e[0m, \e[31m0l\e\
    [0m), \e[31m0l\e[0m), \e[31m1l\e[0m), \e[31m0l\e[0m)\n\e[31m\e[31m   |\e[0m  \
    \                                   ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \                            Found:    (Long, Long)\n\e[31m   |\e[0m         \
    \                            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp6czidcqm.scala:18:57 --------------------\e[0m\e\
    [0m\n\e[31m18 |\e[0m        \e[33mval\e[0m \e[36mp\e[0m = (f(n + \e[31m1l\e[0m,\
    \ \e[31m0l\e[0m) -> (f(n + \e[31m1l\e[0m, \e[31m1l\e[0m)))(f(f(f(n + \e[31m2l\e\
    [0m, \e[31m0l\e[0m), \e[31m0l\e[0m), \e[31m1l\e[0m), \e[31m0l\e[0m)\n\e[31m\e\
    [31m   |\e[0m                                                         ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                                  Found: \
    \   (Long,"
  stdout: ''
  timestamp: 1660010005
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val max = (2l) * n\n        val fibs = (1l) until max\n\
    \        val fibArray = fibs.toArray\n        val resultSet = fibArray.filter(_\
    \ % n == 0l)\n        result.add(resultSet.toList)\n        return resultSet.toList\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpi4aujwsu.scala:20:8 -------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        result.add(resultSet.toList)\n\e[31m\e[31m  \
    \ |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        Not found: result\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi4aujwsu.scala:21:25 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mreturn\e[0m resultSet.toList\n\e[31m\e\
    [31m   |\e[0m               ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \    Found:    \e[1m\e[31mList\e[0m\e[1m\e[31m[\e[0mLong\e[1m\e[31m]\e[0m\n\e\
    [31m   |\e[0m               Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010000
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // If n is 1, return 1.\n        if (n == 1L) return 1L;\n\
    \        // If n is 2 or n is 3, return 2.\n        if (n == 2L) return 2L;\n\
    \        if (n == 3L) return 3L;\n        // If n is 4, 5, or 6, return 5.\n \
    \       if (n % 4 == 0 || n % 6 == 0) return 5L;\n        // Otherwise, return\
    \ fibonacci numbers between 3 and (n-1) and return the largest\n        // of\
    \ the fibonacci numbers.\n        val fib = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \        fib += 2L;\n        fib += 2L;\n        fib += 2L;\n        fib.lastOption\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpbsllxk_4.scala:29:12\
    \ --------------------\e[0m\e[0m\n\e[31m29 |\e[0m        fib.lastOption\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        Found:    Option[Long]\n\
    \e[31m   |\e[0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660009999
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if(n <= 3) return 1l\n        if(n % 2 == 0) return primeFib(3l)\
    \ + 1l\n        val r = 2l\n        var m = 3l\n        while (m <= n) { val a\
    \ = r; r = m + (m % 2) ; m = a}\n        if(m > n) m-n\n        else primeFib(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpxyyt5a3y.scala:20:38 -----------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mwhile\e[0m (m <= n) { \e[33mval\e[0m \e\
    [36ma\e[0m = r; r = m + (m % \e[31m2\e[0m) ; m = a}\n\e[31m\e[31m   |\e[0m   \
    \                                 ^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \                              Reassignment to val r\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660009991
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n==0l || n==1l) return n\n        val a = 2l\n     \
    \   val b = 2l\n        val c = 2l\n        for (i <- 3l to (n-1l)) {\n      \
    \      val q = math.gcd(a,b)\n            val r = math.gcd(a,c)\n            if\
    \ (q < r) (a,b,c,q)\n            else (c,b,a,r)\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpfv47qtzp.scala:21:25 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mval\e[0m \e[36mq\e[0m = math.gcd(a,b)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m      \
    \              value gcd is not a member of math\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpfv47qtzp.scala:22:25 ------------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m            \e[33mval\e[0m \e[36mr\e[0m = math.gcd(a,c)\n\e[31m\e[31m\
    \   |\e[0m                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m                 \
    \   value gcd is not a member of math\n2 errors found\n"
  stdout: ''
  timestamp: 1660010001
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val nums = Vector.fill(n / 2)(2l)\n        if (n % 2 ==\
    \ 1) {\n            nums(n) = 2l\n        } else {\n            nums(n) = 3l\n\
    \        }\n        nums.takeWhile(x => !(x < n)).last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpyq1kjxq9.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mnums\e\
    [0m = Vector.fill(n / \e[31m2\e[0m)(\e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m    \
    \                           ^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \         Found:    Long\n\e[31m   |\e[0m                               Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpyq1kjxq9.scala:18:12\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m            nums(n) = \e\
    [31m2l\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0mvalue\
    \ update is not a member of Vector[Long] - did you mean nums.updated?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmpyq1kjxq9.scala:20:12 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            nums(n) = \e[31m3l\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of Vector[Long]\
    \ - did you mean nums.updated?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010003
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(x: Long) : Boolean = {\n            if (x ==\
    \ 2l) return true\n            if (x == 3l) return true\n            val sqrt\
    \ = (x.toInt + 1l) / 2l\n            x % sqrt != 0\n        }\n        val a =\
    \ new scala.collection.mutable.Array[Long](n)\n        a(0) = 1\n        a(1)\
    \ = 1l\n        for (i <- 2 to (n-1)){\n            a(i) = (a(i-1) + a(i-2)) /\
    \ 2l\n        }\n        a(0) = 1l\n        a(1) = 1l\n        for (i <- 2 to\
    \ (n-1)){\n            if (a(i) == 1l) a(i) = 2l\n            if (isPrime(a(i)))\
    \ a(i) = a(i) + 1l\n        }\n        a(0l).asInstanceOf[Long]\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpszl4k2_t.scala:22:45 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = \e[33mnew\e[0m\
    \ scala.collection.mutable.Array[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e[0m  \
    \                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtype Array\
    \ is not a member of scala.collection.mutable - did you mean mutable.ArraySeq.type?\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpszl4k2_t.scala:25:24 --------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mfor\e[0m (i <- \e[31m2\e[0m to (n-\e[31m1\e\
    [0m)){\n\e[31m\e[31m   |\e[0m                        ^^^\e[0m\n\e[31m   |\e[0m\
    \                        Found:    Long\n\e[31m   |\e[0m                     \
    \   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpszl4k2_t.scala:30:24\
    \ --------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to (n-\e[31m1\e[0m)){\n\e[31m\e[31m   |\e[0m                  \
    \      ^^^\e[0m\n\e[31m   |\e[0m                        Found:    Long\n\e[31m\
    \   |\e[0m                        Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010008
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1l) {\n            n\n        } else {\n      \
    \      // check nth number fibonacci\n            // if n is divisible by 2 then\
    \ it's also a Fibonacci number.\n            val prev = 1l\n            val curr\
    \ = 1l\n            while (prev <= n) {\n                val result = curr + prev\n\
    \                prev = curr\n                curr = result\n            }\n \
    \           curr\n        }\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpgaocom1_.scala:25:21 -----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                prev = curr\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val prev\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpgaocom1_.scala:26:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m26 |\e[0m                curr\
    \ = result\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Reassignment to val curr\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660009997
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if(n == 0) 1\n        else if(n == 1) 1\n        else if(n\
    \ == 2) 1\n        else if(n == 3) 2\n        else if(n%2 != 0 && n%3 == 0) primeFib(n-1)+primeFib(n-2)\n\
    \        else primeFib(n-1)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvyp0xzo1.scala:24)\n\tat Problem.main(tmpvyp0xzo1.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010005
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Long) = \n            {\n               \
    \ if (n<2l) false\n                else {\n                    val i = 2l\n  \
    \                  while(i < n) {\n                        if(n % i == 0l) \n\
    \                            return false\n                        i+=1l\n   \
    \                 }\n                    true\n                }\n           \
    \ }\n            \n        val f = mutable.ListBuffer(2l, 3l, 5l, 7l, 11l, 13l,\
    \ 17l, 19l, 23l, 29l, 31l, 37l, 41l, 43l, 47l, 53l, 59l, 61l, 67l, 71l, 73l, 79l,\
    \ 83l, 89l, 97l, 101l, 103l, 107l, 109l)\n        val s = List(n-1l, 1l)\n   \
    \     if(s.isEmpty) 0l\n        else {\n            val f = f.dropRight(2l)\n\
    \            val d = s.last\n            val z = s.last\n            val i = z+1l\n\
    \            while(i < d) {\n                val a = f.last\n                val\
    \ b = f.last\n                val c = f.last\n                f.last = (a + b\
    \ + c) % z\n                f.last = (f.last * 2l) % z\n                f.last\
    \ = (f.last + z) % z\n                f.last = (f.last + z) % z\n            \
    \    f.last = (f.last * 2l) % z\n                f.last = (f.last * 2l) % z\n\
    \                f.last = (f.last + z) % z\n                f.last = (f.last +\
    \ z) % z\n                f.last = (f.last + z) % z\n                f.last =\
    \ (f.last + z) % z\n                f.last = (f.last + z) % z\n              \
    \  f.last = (f.last + z) % z\n                f.last = (f.last + z) % z\n    \
    \            f.last = (f.last + z) % z\n                f.last = (f.last + z)\
    \ % z\n                f.last = (f.last + z) % z\n                f.last = (f.last\
    \ + z) % z\n                f.last = (f.last + z) % z\n                f.last\
    \ = (f.last + z) % z\n                f.last = (f.last + z) % z\n            \
    \    f.last = (f.last + z) % z\n                f.last = (f.last + z) % z\n  \
    \              f.last = (f.last + z) % z\n                f.last = (f.last + z)\
    \ % z\n                f.last = (f.last + z) % z\n                f.last = (f.last\
    \ + z) % z\n                f.last = (f.last + z) % z\n                f.last\
    \ = (f.last + z) % z\n                f.last = (\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpe2_1y2xn.scala:70:26 ---------------------------\e\
    [0m\e[0m\n\e[31m70 |\e[0m                f.last = (\n\e[31m\e[31m   |\e[0m   \
    \                       ^\e[0m\n\e[31m   |\e[0m                          expression\
    \ expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error:\
    \ /tmp/tmpe2_1y2xn.scala:86:0 ----------------------------\e[0m\e[0m\n\e[31m86\
    \ |\e[0m\n\e[31m\e[31m   |\e[0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\
    \e[31m\e[31m-- [E089] Syntax Error: /tmp/tmpe2_1y2xn.scala:23:28 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                            \e[33mreturn\e[0m \e[31mfalse\e\
    [0m\n\e[31m\e[31m   |\e[0m                            ^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m           \e[33mmethod\e[0m \e[35misPrime\e[0m has a return statement;\
    \ it needs a result type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpe2_1y2xn.scala:24:25 ------------------------\e[0m\e[0m\n\e[31m24 |\e\
    [0m                        i+=\e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m           \
    \             ^^^\e[0m\n\e[31m   |\e[0m                   value += is not a member\
    \ of Long - did you mean i.!=?\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpe2_1y2xn.scala:30:16\
    \ ------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e\
    [36mf\e[0m = mutable.ListBuffer(\e[31m2l\e[0m, \e[31m3l\e[0m, \e[31m5l\e[0m, \e\
    [31m7l\e[0m, \e[31m11l\e[0m, \e[31m13l\e[0m, \e[31m17l\e[0m, \e[31m19l\e[0m, \e\
    [31m23l\e[0m, \e[31m29l\e[0m, \e[31m31l\e[0m, \e[31m37l\e[0m, \e[31m41l\e[0m,\
    \ \e[31m43l\e[0m, \e[31m47l\e[0m, \e[31m53l\e[0m, \e[31m59l\e[0m, \e[31m61l\e\
    [0m, \e[31m67l\e[0m, \e[31m71l\e[0m, \e[31m73l\e[0m, \e[31m79l\e[0m, \e[31m83l\e\
    [0m, \e[31m89l\e[0m, \e[31m97l\e[0m, \e[31m101l\e[0m, \e[31m103l\e[0m, \e[31m107l\e\
    [0m, \e[31m109l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmpe2_"
  stdout: ''
  timestamp: 1660010007
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Long): Boolean = {\n            val sqrtN:\
    \ Double = Math.sqrt(n).toInt\n            for (i <- 0 until sqrtN) {\n      \
    \          if (n % i == 0)\n                    return false\n            }\n\
    \            true\n        }\n\n        var nextPrime: Long = n + 2\n        var\
    \ primeFlag: Boolean = isPrime(n)\n\n        while (primeFlag == false) {\n  \
    \          nextPrime += 2\n            primeFlag = isPrime(nextPrime)\n      \
    \  }\n        nextPrime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6feabc59.scala:18:30\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33mfor\e[0m (i\
    \ <- \e[31m0\e[0m until sqrtN) {\n\e[31m\e[31m   |\e[0m                      \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                              Found:    (sqrtN\
    \ : Double)\n\e[31m   |\e[0m                              Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010007
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // we add 1 so that first fibonacci number is 2.\n     \
    \   // second fibonacci number is 3.\n        // third fibonacci number is 5..\n\
    \        val fibonacci = (2l).+(3l)\n        // we add 1 so that first prime number\
    \ is 2.\n        // second prime number is 3.\n        // third prime number is\
    \ 5..\n        val prime = (2l).+(3l)\n        // we add 1 so that first prime\
    \ number is 2.\n        // second prime number is 3.\n        // third prime number\
    \ is 5..\n        val prime2 = (3l).+(5l)\n        val result = fibonacci.filter(x\
    \ => x == (prime+prime2))\n        val result = result.take(n)\n        val result\
    \ = result.headOption.getOrElse(-1l)\n        result\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpya34mpqv.scala:29:12 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m        \e[33mval\e[0m \e[36mresult\e[0m = result.take(n)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mresult\
    \ is already defined as \e[33mvalue\e[0m \e[35mresult\e[0m\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmpya34mpqv.scala:30:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m\
    \ \e[36mresult\e[0m = result.headOption.getOrElse(-\e[31m1l\e[0m)\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m \
    \  |\e[0mresult is already defined as \e[33mvalue\e[0m \e[35mresult\e[0m\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpya34mpqv.scala:28:31 ------------------------\e[0m\e[0m\n\e[31m28 |\e\
    [0m        \e[33mval\e[0m \e[36mresult\e[0m = fibonacci.filter(\e[36mx\e[0m =>\
    \ x == (prime+prime2))\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     value filter is not a member of Long\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010006
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib = (2l) until n\n        val prime = Set(2l, 3l,\
    \ 5l)\n        while (fib.nonEmpty) {\n            val p = fib.head\n        \
    \    fib.remove(p._1)\n            if (prime contains p._1) {\n              \
    \  prime.remove(p)\n            }\n        }\n        fib.head._1\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpo3jdu5i7.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            fib.remove(p._1)\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue remove is not a member of scala.collection.immutable.NumericRange.Exclusive[Long]\
    \ - did you mean fib.reduce?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpo3jdu5i7.scala:20:25\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            fib.remove(p._1)\n\
    \e[31m\e[31m   |\e[0m                       ^^^^\e[0m\n\e[31m   |\e[0m       \
    \                value _1 is not a member of Long\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpo3jdu5i7.scala:21:33 ------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m            \e[33mif\e[0m (prime contains p._1) {\n\e[31m\e[31m   |\e\
    [0m                               ^^^^\e[0m\n\e[31m   |\e[0m                 \
    \              value _1 is not a member of Long\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmpo3jdu5i7.scala:25:17 ------------------------\e[0m\e[0m\n\e[31m25\
    \ |\e[0m        fib.head._1\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0m        value _1 is not a member of Long\n4 errors found\n"
  stdout: ''
  timestamp: 1660010010
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n      var p : Long = 1l\n      var q : Long = 2l\n      var res\
    \ : Long = n.toInt\n      var m : Long = 1l\n      while( (res > 1l) && (m <=\
    \ res) ) {\n        p += q\n        q = p + q\n        res -= 1\n        m +=\
    \ 1\n      }\n      p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpkjp_im5h.scala:29)\n\tat Problem.main(tmpkjp_im5h.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010008
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // find all Fibonacci numbers between 0 and n\n        def\
    \ fib(n : Long) : List[Long] = {\n            if (n <= 1) {\n                List(1l)\n\
    \            } else {\n                val fibs = fib(n-1) + fib(n-2)\n      \
    \          fibs\n            }\n        }\n\n        // check all primes less\
    \ than n until we get to the first one\n        val numbers = fib(n max 1)\n \
    \       val primes = mutable.Set.empty[Long]\n        numbers foreach { n =>\n\
    \            if (isPrime(n)) {\n                primes += n\n            }\n \
    \       }\n        // print primes\n        primes.mkString(\" -> \")\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmppsoz_tc7.scala:21:36 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                \e[33mval\e[0m \e[36mfibs\e[0m = fib(n-\e\
    [31m1\e[0m) + fib(n-\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                     \
    \      ^^^^^^^^^^\e[0m\n\e[31m   |\e[0mvalue + is not a member of List[Long],\
    \ but could be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0mOne of the following imports might make progress towards fixing the\
    \ problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\
    \e[31m   |\e[0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e\
    [0m  import math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n\e[31m\e\
    [31m-- [E006] Not Found Error: /tmp/tmppsoz_tc7.scala:28:21 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.Set.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmppsoz_tc7.scala:30:16 ------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m            \e[33mif\e[0m (isPrime(n)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010009
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibonacci : Long = 0\n        var isPrime : Boolean\
    \ = true\n        // First we get all the Fibonacci numbers in sequence and find\
    \ out if its a prime\n        // or a Fibonacci number.\n        while (n > 0)\
    \ {\n            fibonacci = fibonacci + n\n            if (n % 2 == 0)\n    \
    \            isPrime = false\n            else\n                isPrime = true\n\
    \            n -= 1\n        }\n        if (isPrime) {\n            return fibonacci\n\
    \        } else {\n            val a = (2l).toString\n            val b = (3l).toString\n\
    \            val c = (a+b).toString\n            val d = (b+c).toString\n    \
    \        val e = (d+a).toString\n            val f = (e+b).toString\n        \
    \    val g = (f+c).toString\n            val h = (g+d).toString\n            val\
    \ i = (h+e).toString\n            val j = (i-f).toString\n            val k =\
    \ (j+g).toString\n            val l = (k+h).toString\n            val m = (l+i).toString\n\
    \            return m.toLong\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgwt_udow.scala:26:14 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgwt_udow.scala:40:22\
    \ ------------------------\e[0m\e[0m\n\e[31m40 |\e[0m            \e[33mval\e[0m\
    \ \e[36mj\e[0m = (i-f).toString\n\e[31m\e[31m   |\e[0m                     ^^\e\
    [0m\n\e[31m   |\e[0mvalue - is not a member of String, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might make progress towards fixing the problem:\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m  import math.Fractional.Implicits.infixFractionalOps\n\e[31m   |\e\
    [0m  import math.Integral.Implicits.infixIntegralOps\n\e[31m   |\e[0m  import\
    \ math.Numeric.Implicits.infixNumericOps\n\e[31m   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1660010011
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_list = scala.collection.mutable.ListBuffer[Long]()\n\
    \        var prime = 0\n        var num = 0\n        fib_list += 0l\n        fib_list\
    \ += 1l\n        // fibonacci numbers are computed as F(n) = F(n-1) + F(n-2)\n\
    \        // for n = 3, F(2) = 3, F(1) = 2 \n        // so, we check for odd numbers\
    \ and add 2 at the end.\n        while (n > 1) {\n            num += 1\n     \
    \       fib_list += fib_list(n-2)\n            fib_list += fib_list(n-1)\n   \
    \         n -= 1\n        }\n        val i = fib_list.toSet.find(_ == num)._1\n\
    \        prime = i\n        num\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8vywddvj.scala:26:33\
    \ --------------------\e[0m\e[0m\n\e[31m26 |\e[0m            fib_list += fib_list(n-\e\
    [31m2\e[0m)\n\e[31m\e[31m   |\e[0m                                 ^^^\e[0m\n\e\
    [31m   |\e[0m                                 Found:    Long\n\e[31m   |\e[0m\
    \                                 Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmp8vywddvj.scala:27:33 --------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            fib_list += fib_list(n-\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                                 ^^^\e[0m\n\e[31m   |\e[0m\
    \                                 Found:    Long\n\e[31m   |\e[0m            \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp8vywddvj.scala:28:14 ------------------------\e[0m\e[0m\n\e[31m28 |\e\
    [0m            n -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\
    \e[31m   |\e[0m            value -= is not a member of Long - did you mean n.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp8vywddvj.scala:30:46 ------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m        \e[33mval\e[0m \e[36mi\e[0m = fib_list.toSet.find(_\
    \ == num)._1\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                value _1 is not a member of Option[Long]\n\
    4 errors found\n"
  stdout: ''
  timestamp: 1660010012
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var x = 1l\n        var y = 2l\n        \n        while\
    \ (x < (n + 1l)) {\n            if (isPrime(y)) {\n                println(y)\n\
    \                x = (x * ((2l) + (y)))\n                y = y\n            }\
    \ else {\n                println(y)\n                println(x)\n           \
    \     x = (x * ((3l) + (y)))\n                y = y\n            }\n        }\n\
    \        println(x)\n        x\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprte15cky.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mif\e[0m (isPrime(y)) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m                Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010001
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def fib(n: Int, a: Int, b: Int): Int = {\n            if(n\
    \ > 0 && b == 0) a\n            else {\n                if(n == 1) b\n       \
    \         else {\n                    fib(n-1, b, a + b)\n                }\n\
    \            }\n        }\n        fib(n, 0, 1L)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6vqysdgg.scala:25:12\
    \ --------------------\e[0m\e[0m\n\e[31m25 |\e[0m        fib(n, \e[31m0\e[0m,\
    \ \e[31m1L\e[0m)\n\e[31m\e[31m   |\e[0m            ^\e[0m\n\e[31m   |\e[0m   \
    \         Found:    (n : Long)\n\e[31m   |\e[0m            Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6vqysdgg.scala:25:18 --------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        fib(n, \e[31m0\e[0m, \e[31m1L\e[0m)\n\e[31m\e\
    [31m   |\e[0m                  ^^\e[0m\n\e[31m   |\e[0m                  Found:\
    \    (\e[31m1L\e[0m : Long)\n\e[31m   |\e[0m                  Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010010
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val f1 = 2l\n        val f2 = 1l\n        val f3 = f2\n\
    \        var i = n - (f2l*f2)\n        if (i != 0) {\n            val f4 = f1\
    \ + f3\n            while ((i <= 0l)) {\n                f3 = f4\n           \
    \     f2 = f1\n                f1 = f3\n                i = n - (f2*f1)\n    \
    \        }\n            val f5 = f2\n            f3 = f4\n            f2 = f5\n\
    \            f1 = f3\n            i = n - (f2*f1)\n        }\n        val f6 =\
    \ f1\n        f1 = f2\n        f2 = f3\n        f3 = f4\n        f4 = f6\n   \
    \     f5 = f4\n        f1 = f3\n        f2 = f6\n        f3 = f5\n        f4 =\
    \ f6\n        f5 = f5\n        f6 = f6\n        f5 = f5\n        f6 = f6\n   \
    \     f6 = f6\n        f6 = f6\n        f5 = f5\n        f6 = f5\n        f6 =\
    \ f6\n        f6 = f6\n        f6 = f6\n        f5 = f5\n        f6 = f5\n   \
    \     f6 = f6\n        f6 = f6\n        f6 = f6\n        f6 = f6\n        f6 =\
    \ f6\n        f5 = f5\n        f6 = f5\n        f6 = f6\n        f6 = f6\n   \
    \     f6 = f6\n        f5 = f5\n        f6 = f6\n        f6 = f6\n        f6 =\
    \ f6\n        f5 = f5\n        f6 = f6\n        f6 = f6\n        f6 = f6\n   \
    \     f6 = f6\n        f6 = f6\n        f6 = f6\n        f5 = f5\n        f6 =\
    \ f5\n        f6 = f6\n        f5 = f5\n        f5 = f6\n        f5 = f5\n   \
    \     f6 = f6\n        f5 = f5\n        f5 = f6\n        f5 = f5\n        f6 =\
    \ f6\n        f6 = f5\n        f5 = f6\n        f5 = f5\n        f6 = f6\n   \
    \     f6 = f6\n        f6 = f6\n        f6 = f6\n        f5 = f5\n        f6 =\
    \ f5\n        f6 = f5\n        f5 = f5\n        f5 = f5\n        f5 = f6\n   \
    \     f5 = f5\n        f6 = f6\n        f5 = f5\n        f5 = f5\n        f6 =\
    \ f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 = f6\n   \
    \     f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 =\
    \ f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n   \
    \     f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 =\
    \ f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n   \
    \     f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 = f5\n        f5 =\
    \ f5\n        f5 = f5\n        f5 = f5\n        f\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpj4vf4k43.scala:19:21 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mvar\e[0m \e[36mi\e[0m = n - (f2l*f2)\n\e\
    [31m\e[31m   |\e[0m                     ^^^\e[0m\n\e[31m   |\e[0m            \
    \         Not found: f2l\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpj4vf4k43.scala:23:19 -----------------------------\e[0m\e[0m\n\e[31m23\
    \ |\e[0m                f3 = f4\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                Reassignment to val f3\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmpj4vf4k43.scala:24:19 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                f2 = f1\n\e[31m\e[31m   |\e[0m      \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val f2\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpj4vf4k43.scala:25:19 -----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                f1 = f3\n\e[31m\e[31m   |\e[0m      \
    \          ^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val f1\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpj4vf4k43.scala:29:15 -----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            f3 = f4\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val f3\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpj4vf4k43.scala:30:15 -----------------------------\e\
    [0m\e[0m\n\e[31m30 |\e[0m            f2 = f5\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val f2\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpj4vf4k43.scala:31:15 -----------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m       "
  stdout: ''
  timestamp: 1660010004
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Long) : Boolean = \n                n <=\
    \ 2 || n % 2 != 0 || n % 3 == 0 || n % 5 == 0\n        if (n > 2) \n         \
    \   isPrime(n)\n        else\n            primeFib(n-1) + primeFib(n-2)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmplcovabhb.scala:19:19\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m            isPrime(n)\n\e[31m\e\
    [31m   |\e[0m            ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Found:  \
    \  Boolean\n\e[31m   |\e[0m            Required: Long\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010010
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = mutable.HashSet[(Long, Long)]()\n        primes\
    \ += ((2l, 1l))\n        primes += ((3l, 2l))\n        primes += ((5l, 3l))\n\
    \        primes += ((13l, 5l))\n        primes += ((89l, 13l))\n        val res\
    \ = primes.last._1\n        val f = primes.last._2\n        if (n < f) res\n \
    \       else if (n < res) primeFib((n+f))\n        else primeFib((n-res))\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp3_lt6j67.scala:16:21 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.HashSet[(\e\
    [35mLong\e[0m, \e[35mLong\e[0m)]()\n\e[31m\e[31m   |\e[0m                    \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010003
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 2)\n            2\n        else\n            primeFib(n-1)\
    \ + primeFib(n-2)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7e9bg4bs.scala:23)\n\tat Problem.main(tmp7e9bg4bs.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010015
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib : Long = if (n == 2) 1\n        else if (n == 3)\
    \ 2\n        else if (n % 2 == 0) primeFib(n / 2)\n        else primeFib(3 * n\
    \ + 1) - 1\n        fib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpafq5dt1t.scala:23)\n\tat Problem.main(tmpafq5dt1t.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010015
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val memo = mutable.ArrayBuffer.empty[(Long, Boolean)]\n\
    \        memo += (2l -> true)\n        memo += (3l -> true)\n        var next\
    \ = n\n        while (memo.size > 0) {\n            val candidate = memo.head._1\n\
    \            val fib = memo.head._2\n            memo = memo.tail\n          \
    \  val isPrime = memo.head._2\n            if (next > 1) {\n                memo\
    \ += (next-1 -> isPrime)\n            }\n            next -= 1\n            if\
    \ (isPrime && memo.size > 0) {\n                memo += (next -> false)\n    \
    \        }\n            if (isPrime) {\n                return candidate\n   \
    \         }\n        }\n        throw new RuntimeException(\"out of memo\")\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp239zgeah.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mmemo\e[0m = mutable.ArrayBuffer.empty[(\e\
    [35mLong\e[0m, \e[35mBoolean\e[0m)]\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E052] Type Error: /tmp/tmp239zgeah.scala:23:17 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            memo = memo.tail\n\e[31m\e[31m   |\e[0m \
    \           ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to\
    \ val memo\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010014
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val a = 2l\n        val b = 2l\n        var pFib = 1l\n\
    \        var i = 0\n        while(i < n) {\n            val c = a + b\n      \
    \      pFib = c\n            a = b\n            b = c\n            i += 1\n  \
    \      }\n        pFib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpmnaqomdq.scala:23:14 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            a = b\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val a\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpmnaqomdq.scala:24:14 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            b = c\n\e[31m\e[31m   |\e[0m            ^^^^^\e\
    [0m\n\e[31m   |\e[0m            Reassignment to val b\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010016
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var curr = 2l\n        var nth_fib = curr\n        var prime_flag\
    \ = true\n        while ((curr < n) && (prime_flag == true)) {\n            var\
    \ nth_prime_flag = true\n            while (curr < n) {\n                var nth_prime\
    \ = curr\n                nth_prime = nth_prime + 1l\n                if(nth_prime\
    \ <= n) nth_prime_flag = false\n                curr = nth_prime\n           \
    \ }\n            prime_flag = nth_prime_flag\n            nth_fib = nth_fib +\
    \ curr\n        }\n        nth_fib\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgkk3sdpw.scala:34)\n\tat Problem.main(tmpgkk3sdpw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010022
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var result : Long = 1\n        var a = 0\n        var b\
    \ = 1\n        while (a <= n && b <= n) {\n            if(b > n)\n           \
    \ result += 1\n            else if(b == n)\n            result += a\n        \
    \    else if(b > a)\n            result += b\n            a = b\n            b\
    \ = a+b\n        }\n        return result\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpe8vo318d.scala:32)\n\tat Problem.main(tmpe8vo318d.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010024
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var m = BigInt(2)\n        var sum = 0\n        while (m\
    \ < n){\n            val x = BigInt(m)\n            if (x % BigInt(2) == 0) sum\
    \ += x\n            m+=1\n        }\n        if (sum == 0) n\n        else sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpvhq6n0a2.scala:19:20 -----------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mx\e[0m = BigInt(m)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^\e[0m\n\e[31m   |\e[0mNone of the\
    \ overloaded alternatives of \e[33mmethod\e[0m \e[35mapply\e[0m in \e[33mobject\e\
    [0m \e[35mBigInt\e[0m with types\n\e[31m   |\e[0m (x: java.math.BigInteger): BigInt\n\
    \e[31m   |\e[0m (x: String, radix: Int): BigInt\n\e[31m   |\e[0m (x: String):\
    \ BigInt\n\e[31m   |\e[0m (numbits: Int, rnd: scala.util.Random): BigInt\n\e[31m\
    \   |\e[0m (bitlength: Int, certainty: Int, rnd: scala.util.Random): BigInt\n\e\
    [31m   |\e[0m (signum: Int, magnitude: Array[Byte]): BigInt\n\e[31m   |\e[0m (x:\
    \ Array[Byte]): BigInt\n\e[31m   |\e[0m (l: Long): BigInt\n\e[31m   |\e[0m (i:\
    \ Int): BigInt\n\e[31m   |\e[0mmatch arguments ((m : BigInt))\n1 error found\n"
  stdout: ''
  timestamp: 1660010018
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val p1 = 2\n        val p2 = 1\n        val p3 = 1\n   \
    \     val p4 = 2\n        val p5 = 3\n        val p6 = 2\n        val prime =\
    \ n1\n        if (n<=1) prime\n        else {\n            def isPrime(n: Long)\
    \ : Boolean = {\n                if (n<5000000l) false\n                else {\n\
    \                    val isPrime = (p1 / (p1 * (n+1l))) == (p2 / (p2 * (n+1l)))\n\
    \                    prime.isEmpty || prime.toLong * prime.toLong + n\n      \
    \          }\n            }\n            if (isPrime(n))\n            {\n    \
    \            prime\n            }\n            else if (isPrime(p1 + n))\n   \
    \         {\n                p1 + prime\n            }\n            else if (isPrime(p2\
    \ + n))\n            {\n                p2 + prime\n            }\n          \
    \  else if (isPrime(p3 + n))\n            {\n                p3 + prime\n    \
    \        }\n            else if (isPrime(p4 + n))\n            {\n           \
    \     p4 + prime\n            }\n            else if (isPrime(p5 + n))\n     \
    \       {\n                p5 + prime\n            }\n            else if (isPrime(p6\
    \ + n))\n            {\n                p6 + prime\n            }\n          \
    \  else prime\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_kdp5rz2.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mprime\e[0m = n1\n\e[31m\e\
    [31m   |\e[0m                    ^^\e[0m\n\e[31m   |\e[0m                    Not\
    \ found: n1\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010017
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n < 2) n\n        else primeFib((3 * n + 1l) - 1) +\
    \ 1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpol93yr6m.scala:20)\n\tat Problem.main(tmpol93yr6m.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010025
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if(n==0) return 2l\n        val a = 2l\n        val b =\
    \ 4l\n        var c = 2l\n        while(c <= n && a < n)\n        {\n        \
    \    if((n % c)==0) c+=1\n            else c-=1\n        }\n        if(c==n) c\n\
    \        else primeFib(n-c)\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010028
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 2l)\n            return n\n        if (n <= 3l)\n\
    \            return 2l\n        val m = n % 2l\n        if (m == 0l)\n       \
    \     primeFib(n + 1l)\n        else\n            primeFib(n + 2l) * primeFib(m\
    \ + 2l)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpiflv4sc4.scala:27)\n\tat Problem.main(tmpiflv4sc4.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010026
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f = 0l\n        var g = 1l\n        var p = 0l\n   \
    \     var q = 0l\n        while (p < n) {\n            f += p\n            while\
    \ (f >= g) {\n                g += 1\n                q = 2 * g\n            }\n\
    \            p = q\n        }\n        f\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1) 1\n        else if (n == 2) 2\n        else\
    \ (prime(n-1) + prime(n-2))\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp7blbfkli.scala:18:14 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33melse\e[0m (prime(n-\e[31m1\e[0m) + prime(n-\e\
    [31m2\e[0m))\n\e[31m\e[31m   |\e[0m              ^^^^^\e[0m\n\e[31m   |\e[0m \
    \             Not found: prime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010019
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n == 1l) 2l\n        else {\n            if (n % 2l\
    \ == 0l) primeFib((n + 1l))\n            else primeFib((n - 1l) * 2l)\n      \
    \  }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0nq1n5hd.scala:24)\n\tat Problem.main(tmp0nq1n5hd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010027
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val p = 2l\n        var q = p.copy(pre = p.get)\n      \
    \  var z = 0l\n        var prime = true\n        while(prime && z < n) {\n   \
    \         p = q.copy(pre = p + q)\n            z = z + 1l\n            prime =\
    \ p != q\n            q = p\n        }\n        if ((n % 2l) == 0) p.get\n   \
    \     else p\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb484so_i.scala:17:18 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mq\e[0m = p.copy(pre = p.get)\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \    value copy is not a member of Long\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpb484so_i.scala:17:31 ------------------------\e[0m\e[0m\n\e[31m17 |\e\
    [0m        \e[33mvar\e[0m \e[36mq\e[0m = p.copy(pre = p.get)\n\e[31m\e[31m   |\e\
    [0m                             ^^^^^\e[0m\n\e[31m   |\e[0m                  \
    \           value get is not a member of Long\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmpb484so_i.scala:21:14 -----------------------------\e[0m\e[0m\n\e[31m21\
    \ |\e[0m            p = q.copy(pre = p + q)\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ p\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb484so_i.scala:26:29\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mif\e[0m ((n\
    \ % \e[31m2l\e[0m) == \e[31m0\e[0m) p.get\n\e[31m\e[31m   |\e[0m             \
    \              ^^^^^\e[0m\n\e[31m   |\e[0m                           value get\
    \ is not a member of Long\n4 errors found\n"
  stdout: ''
  timestamp: 1660010029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val prime_array: mutable.Array[Long] = new mutable.Array[Long](100000)\n\
    \        prime_array(0) = 1l\n        prime_array(1) = 1l\n        prime_array(2)\
    \ = 1l\n        prime_array(3) = 1l\n        prime_array(4) = 1l\n        prime_array(5)\
    \ = 1l\n        val limit = (n-1l) + 1l\n        while (limit > 0) {\n       \
    \     if (prime_array(limit) ~= 1l) {\n                prime_array(limit) = prime_array(limit-1)\
    \ + prime_array(limit-2)\n            } else {\n                limit -= 1\n \
    \           }\n        }\n        prime_array(n)\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpge13xpnt.scala:16:25 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m: mutable.Array[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m mutable.Array[\e[35mLong\e[0m](\e[31m100000\e\
    [0m)\n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                         Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpge13xpnt.scala:16:51 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprime_array\e[0m: mutable.Array[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m mutable.Array[\e[35mLong\e[0m](\e[31m100000\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                                  \
    \ ^^^^^^^\e[0m\n\e[31m   |\e[0m                                              \
    \     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpge13xpnt.scala:28:22 ------------------------\e[0m\e[0m\n\e[31m28 |\e\
    [0m                limit -= \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m              \
    \  ^^^^^^^^\e[0m\n\e[31m   |\e[0m               value -= is not a member of Long\
    \ - did you mean limit.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010027
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibonacci = 1l\n        var prime = 1l\n        var\
    \ next = 2l\n        var primeCounter = 0l\n        var fibonacciCounter = 0l\n\
    \        for(i <- 2l to n){\n            fibonacci += next\n            prime\
    \ += next\n            if(fibonacciCounter == i){\n                primeCounter\
    \ += 1\n            }\n            if(primeCounter == i){\n                fibonacciCounter\
    \ += 1\n            }\n            next += next\n        }\n        prime\n  \
    \  }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpc3_z_huo.scala:35)\n\tat Problem.main(tmpc3_z_huo.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010032
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n       var a : Long = 1\n       var b : Long = 1\n       var c :\
    \ Long = 1\n       var d : Long = 1\n       var result : Long = 0\n       var\
    \ i : Long = 1\n       while(i <= n){\n          result = (a + b) % n\n      \
    \    a = b\n          b = result\n          i += 1\n          if(result != 1){\n\
    \             c += 2\n          }\n       }\n       return c\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpocn12xlw.scala:34)\n\tat Problem.main(tmpocn12xlw.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010030
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n      if (n < 2) \n        n \n      else if (n % 2 == 0) \n   \
    \     primeFib(n - 2) \n      else if (n % 3 == 0) \n        primeFib(n - 3) \n\
    \      else if (n % 5 == 0) \n        primeFib(n - 5) \n      else \n        primeFib(n\
    \ - 1) \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp3dgq808p.scala:28)\n\tat Problem.main(tmp3dgq808p.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010029
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Long, m: Long): Boolean = {\n           \
    \ if(n <= 1) false\n            else if (n == 2) true\n            else if (n\
    \ % 2 == 0) true\n            else if ((m % n) == 0) false\n            else isPrime(n\
    \ - 1, (m + (n / 2)));\n        }\n        if(n == 1) 1\n        else if(isPrime(n,\
    \ 2)) 2\n        else if(isPrime(n, 3)) 3\n        else 5;\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpmqez35d2.scala:29)\n\tat Problem.main(tmpmqez35d2.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010029
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // find next Fibonacci number that is a multiple of n.\n\
    \        val f = mutable.MutableList[Long]()\n        f.push(1l)\n        f.push(1l)\n\
    \        while (f(f.size - 2) < n) {\n            f.append(f(f(f.size - 2) + 1))\n\
    \        }\n        // find last fibonacci number greater than n.\n        val\
    \ l = f.indexOf(n)\n        if (l > -1) {\n            f(f.size - 2)\n       \
    \ } else {\n            0l\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpb8xtqgmx.scala:17:16 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mf\e[0m = mutable.MutableList[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010022
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val prime_fib_seq : List[Long] = List(1l, 2l, 3l)\n    \
    \    prime_fib_seq(math.ceiling(n / prime_fib_seq.size))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp1fuzef85.scala:17:27 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        prime_fib_seq(math.ceiling(n / prime_fib_seq.size))\n\
    \e[31m\e[31m   |\e[0m                      ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                      value ceiling is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1660010031
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val memo = mutable.HashMap[Int, Long]()\n        var prev\
    \ = 0\n        var next = 1\n        var answer = 0\n        while (true) {\n\
    \            if (memo(next) == null) {\n                memo(next) = next\n  \
    \              answer = next\n            } else {\n                prev = next\n\
    \                next = memo(next)\n            }\n            if (next == n)\
    \ break\n        }\n        answer\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoqchshqs.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mmemo\e[0m = mutable.HashMap[\e\
    [35mInt\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpoqchshqs.scala:28:27 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            \e[33mif\e[0m (next == n) break\n\e[31m\e\
    [31m   |\e[0m                           ^^^^^\e[0m\n\e[31m   |\e[0m          \
    \                 Not found: break\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010027
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var n = 2l\n        var cur = 1l\n        var result: Long\
    \ = 0\n        while (n <= n) {\n            if (n % 2l == 0l) {\n           \
    \     cur = cur + cur\n            }\n            if (cur % 2l == 0l) {\n    \
    \            result = cur\n            }\n            n = n + 1l\n        }\n\
    \        result\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010037
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n : Long) : Boolean = {\n            if (n==0||n==1)\
    \ true\n            else { val a=2l; var k=2l; while (k*k<=n) if (n%k==0) return\
    \ false; k*=a; }\n        }\n        val n1 = if(n==0||n==1) 1l else primeFib(n-1)\n\
    \        val n2 = if(n==0||n==1) 1l else primeFib(n-1)\n        val n3 = n1 +\
    \ n2\n        if(isPrime(n3)) n3\n        else {\n            var l=2l\n     \
    \       var j=1l\n            while(j<=n3) { val v=l; j=l; l=v+1l; if(isPrime(l))\
    \ j }\n            j\n        }\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpo5jrdqno.scala:18:80\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m            \e[33melse\e[0m {\
    \ \e[33mval\e[0m a=\e[31m2l\e[0m; \e[33mvar\e[0m k=\e[31m2l\e[0m; \e[33mwhile\e\
    [0m (k*k<=n) \e[33mif\e[0m (n%k==\e[31m0\e[0m) \e[33mreturn\e[0m \e[31mfalse\e\
    [0m; k*=a; }\n\e[31m\e[31m   |\e[0m                                          \
    \                                      ^^^^\e[0m\n\e[31m   |\e[0m            \
    \                                           Found:    Unit\n\e[31m   |\e[0m  \
    \                                                     Required: Boolean\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val cache = new mutable.HashMap[(Long, Long), Long]()\n\
    \        cache.put((2l, 3l), 0)\n        cache.put((3l, 5l), 0)\n        cache.put((5l,\
    \ 13l), 0)\n        cache.put((13l, 89l), 0)\n\n        val isPrime = (x : Long,\
    \ y : Long) => {\n            val x1 = cache.get((x, y))\n            val x2 =\
    \ cache.get((y, x))\n            val isPrime = (x1 < x2) && ((x1 + x2) > 4L)\n\
    \            cache.put((x, y, x1 + x2), x1 + x2)\n            cache.get((x, y))\n\
    \        }\n        val isNotPrime = (x : Long, y : Long) => {\n            val\
    \ x1 = cache.get((x, y))\n            val x2 = cache.get((y, x))\n           \
    \ val isPrime = (x1 < x2) && ((x1 + x2) > 4L)\n            !isPrime\n        }\n\
    \        n match {\n            case 1 => (1L) :: cache.values.toList\n      \
    \      case n if n > 1 => {\n                val isPrime0 = isPrime(2l, 3l)\n\
    \                if (isPrime0) {\n                    val isPrime1 = isPrime(3l,\
    \ 5l)\n                    if (isPrime1) {\n                        val isPrime2\
    \ = isPrime(5l, 13l)\n                        if (isPrime2) {\n              \
    \              val isPrime3 = isPrime(13l, 89l)\n                            if\
    \ (isPrime3) {\n                                val isPrime4 = isPrime(89l, 1L)\n\
    \                                if (isPrime4) {\n                           \
    \         (89l) :: cache.values.toList\n                                } else\
    \ {\n                                    val isPrime5 = isPrime(13l, 9L)\n   \
    \                                 if (isPrime5) {\n                          \
    \              val isPrime6 = isPrime(9L, 11L)\n                             \
    \           if (isPrime6) {\n                                            (9L)\
    \ :: cache.values.toList\n                                        } else {\n \
    \                                           val isPrime7 = isPrime(13L, 1L)\n\
    \                                            if (isPrime7) {\n               \
    \                                 (13L) :: cache.values.toList\n             \
    \                               } else {\n                                   \
    \             val isPrime8 = isPrime(11L, 15L)\n                             \
    \                   if (isPrime8) {\n                                        \
    \            (11L) :: cache.values.toList\n                                  \
    \              } else {\n                                                    val\
    \ isPrime9 = isPrime(15L, 19L)\n                                             \
    \       if (isPrime9) {\n                                                    \
    \    (15L) :: cache.values.toList\n                                          \
    \          } else {\n                                                        val\
    \ isPrime10 = \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp4zxw61_k.scala:68:71 ---------------------------\e\
    [0m\e[0m\n\e[31m68 |\e[0m                                                    \
    \    \e[33mval\e[0m \e[36misPrime10\e[0m = \n\e[31m\e[31m   |\e[0m           \
    \                                                            ^\e[0m\n\e[31m  \
    \ |\e[0m                                       expression expected but \e[31m'}'\e\
    [0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp4zxw61_k.scala:84:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m84 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmp4zxw61_k.scala:16:24 ------------------------\e[0m\e[0m\n\
    \e[31m16 |\e[0m        \e[33mval\e[0m \e[36mcache\e[0m = \e[33mnew\e[0m mutable.HashMap[(\e\
    [35mLong\e[0m, \e[35mLong\e[0m), \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m   \
    \                     ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmp4zxw61_k.scala:70:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m70 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1660010030
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib1 = scala.math.BigInt(1)\n        val fib2 = scala.math.BigInt(2)\n\
    \        val fib3 = scala.math.BigInt(3)\n\n        while (n > 2)\n          \
    \  if (n % fib3 == 0)\n                fib2 += fib3\n            else\n      \
    \          fib3 += fib2\n\n            fib2 += fib1\n            fib1 += fib3\n\
    \            fib3 += fib1\n            n -= 1\n\n        fib3\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufbz9s82.scala:22:21 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                fib2 += fib3\n\e[31m\e[31m   |\e[0m \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m              value += is not a member\
    \ of BigInt - did you mean fib2.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufbz9s82.scala:24:21\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m                fib3 += fib2\n\
    \e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e[0m           \
    \   value += is not a member of BigInt - did you mean fib3.!=?\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpufbz9s82.scala:26:17 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            fib2 += fib1\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of BigInt\
    \ - did you mean fib2.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufbz9s82.scala:27:17\
    \ ------------------------\e[0m\e[0m\n\e[31m27 |\e[0m            fib1 += fib3\n\
    \e[31m\e[31m   |\e[0m            ^^^^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of BigInt - did you mean fib1.!=?\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpufbz9s82.scala:28:17 ------------------------\e[0m\e\
    [0m\n\e[31m28 |\e[0m            fib3 += fib1\n\e[31m\e[31m   |\e[0m          \
    \  ^^^^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of BigInt\
    \ - did you mean fib3.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpufbz9s82.scala:29:14\
    \ ------------------------\e[0m\e[0m\n\e[31m29 |\e[0m            n -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpufbz9s82.scala:31:8 ---------------------\e[0m\e[0m\n\
    \e[31m31 |\e[0m        fib3\n\e[31m\e[31m   |\e[0m        ^^^^\e[0m\n\e[31m  \
    \ |\e[0m        Found:    (fib3 : BigInt)\n\e[31m   |\e[0m        Required: Long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n7 errors found\n"
  stdout: ''
  timestamp: 1660010040
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibonacciN : Long = 0\n        var primeN : Boolean\
    \ = true\n        val sqrtN = math.sqrt((n).toLong)\n        while(primeN){\n\
    \            if(fibonacciN > sqrtN){\n                break\n            }\n \
    \           fibonacciN = fibonacciN + fibonacciN\n            if((fibonacciN).toLong\
    \ == n){\n                return fibonacciN\n            }\n            primeN\
    \ = math.mod(fibonacciN, 2l) == 0l\n        }\n        fibonacciN\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpwe5xe0d1.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwe5xe0d1.scala:27:26 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            primeN = math.mod(fibonacciN, \e[31m2l\e\
    [0m) == \e[31m0l\e[0m\n\e[31m\e[31m   |\e[0m                     ^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                     value mod is not a member of math\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010038
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val a = 2l\n        var b = 2l\n        var c = 0\n    \
    \    var d = 1l\n\n        while ((n > 0l) && (n % a > 0l) && (n % b > 0l)) {\n\
    \            c = d\n            d = b\n            b = a\n            a = ((c*b)%a)+1l\n\
    \            n -= 1l\n        }\n\n        c\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwirqly2_.scala:22:16\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m            c = d\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Found:    (d\
    \ : Long)\n\e[31m   |\e[0m                Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E052] Type Error: /tmp/tmpwirqly2_.scala:25:14 -----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            a = ((c*b)%a)+\e[31m1l\e[0m\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val a\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwirqly2_.scala:26:14\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            n -= \e[31m1l\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010040
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if( n == 1 ) return 2\n        if( n == 2 ) return 3\n \
    \       val i = 5\n        val fib =  new Array[Long](i)\n        fib(0) = 0\n\
    \        fib(1) = 1\n        for(j <- 2 to i) fib(i) = fib(i-1) + fib(i-2)\n \
    \       fib(n-1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphzysoi62.scala:23:12\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        fib(n-\e[31m1\e[0m)\n\
    \e[31m\e[31m   |\e[0m            ^^^\e[0m\n\e[31m   |\e[0m            Found: \
    \   Long\n\e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m  \
    \ |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010040
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var prime = prime_fib(n)\n        if(prime_fib(n) == 1)\
    \ return n\n        else {\n            var isPrime = false\n            var temp\
    \ = prime\n            while (temp != 1) {\n                if((n%temp) == 0)\
    \ {\n                    isPrime = true\n                    break\n         \
    \       }\n                temp = prime_fib(temp)\n            }\n           \
    \ if(isPrime) return n\n            else\n                primeFib(prime+1)\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp55w2o_4b.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mprime\e[0m = prime_fib(n)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \               Not found: prime_fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmp55w2o_4b.scala:17:11 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mif\e[0m(prime_fib(n) == \e[31m1\e[0m) \e[33mreturn\e\
    [0m n\n\e[31m\e[31m   |\e[0m           ^^^^^^^^^\e[0m\n\e[31m   |\e[0m       \
    \    Not found: prime_fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmp55w2o_4b.scala:24:20 ------------------------\e[0m\e[0m\n\e[31m24 |\e\
    [0m                    break\n\e[31m\e[31m   |\e[0m                    ^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: break\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmp55w2o_4b.scala:26:23 ------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                temp = prime_fib(temp)\n\e[31m\e[31m\
    \   |\e[0m                       ^^^^^^^^^\e[0m\n\e[31m   |\e[0m             \
    \          Not found: prime_fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010035
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var prime = math.BigInt(2)\n        var fib     = math.BigInt(1)\n\
    \        while (fib <= n) prime = (prime + fib) % math.e\n        prime\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpovv9f1rc.scala:18:54 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mwhile\e[0m (fib <= n) prime = (prime +\
    \ fib) % math.e\n\e[31m\e[31m   |\e[0m                                       \
    \          ^^^^^^\e[0m\n\e[31m   |\e[0m                                      \
    \   value e is not a member of math\n\e[31m\e[31m-- [E007] Type Mismatch Error:\
    \ /tmp/tmpovv9f1rc.scala:19:8 ---------------------\e[0m\e[0m\n\e[31m19 |\e[0m\
    \        prime\n\e[31m\e[31m   |\e[0m        ^^^^^\e[0m\n\e[31m   |\e[0m     \
    \   Found:    (prime : BigInt)\n\e[31m   |\e[0m        Required: Long\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010044
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 1l\n        var found = 0l\n\
    \        while (found == 0l) {\n            var c = (a+b) /2\n            if ((c).equals(n))\
    \ {\n                found = 1\n            } else {\n                a = b\n\
    \                b = c\n            }\n        }\n        return b\n    }\n  \
    \  def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n  \
    \  assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmps5f3pln7.scala:31)\n\tat Problem.main(tmps5f3pln7.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010046
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val pf = mutable.Set[Long]()\n        pf += 2l\n       \
    \ var prev = pf.last\n        var current = 2l\n        for(i <- 0 to n-1) {\n\
    \            if(pf.contains(prev)) {\n                pf += current\n        \
    \        prev = current\n                current = prev + current\n          \
    \  } else {\n                pf += current\n            }\n        }\n       \
    \ pf + prev\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpte87t5mf.scala:16:17 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mpf\e[0m = mutable.Set[\e\
    [35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                 ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                 Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpte87t5mf.scala:20:22 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m(i <- \e[31m0\e[0m to n-\e[31m1\e\
    [0m) {\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m \
    \                     Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010047
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib : scala.collection.mutable.MutableList[Long] = scala.collection.mutable.MutableList(1l,\
    \ 2l)\n        while ( fib.length <= n ) {\n            fib += fib.head\n    \
    \    }\n        fib.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptrf2dja4.scala:16:43 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m : scala.collection.mutable.MutableList[\e\
    [35mLong\e[0m] = scala.collection.mutable.MutableList(\e[31m1l\e[0m, \e[31m2l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            type MutableList is not a member of scala.collection.mutable\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmptrf2dja4.scala:16:88 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m : scala.collection.mutable.MutableList[\e\
    [35mLong\e[0m] = scala.collection.mutable.MutableList(\e[31m1l\e[0m, \e[31m2l\e\
    [0m)\n\e[31m\e[31m   |\e[0m                                                  \
    \             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m     \
    \      value MutableList is not a member of scala.collection.mutable\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010048
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(num : Long) : Boolean = num < 2 || num == num\
    \ // check all factors, including 1, itself and 2\n        def findPrime(num :\
    \ Long) : Long = {\n            val isPrime = num < 2\n            val primes\
    \ = mutable.ListBuffer(2l) \n            val maxPrime = math.ceil(math.sqrt(num))\n\
    \            val index = 3\n            for(i <- 3 to maxPrime by 2){\n      \
    \          if(isPrime(i)){\n                    primes.append(i)\n           \
    \     }\n            }\n            val isPrimeList = primes.toList\n        \
    \    val found = isPrimeList.contains(num)\n            if (found) primes(primes.indexOf(num))\n\
    \            else -1l\n        }\n        if (isPrime(n)) n else -1l\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpzc_a9xd6.scala:19:25 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ListBuffer(\e\
    [31m2l\e[0m) \n\e[31m\e[31m   |\e[0m                         ^^^^^^^\e[0m\n\e\
    [31m   |\e[0m                         Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpzc_a9xd6.scala:22:26 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            \e[33mfor\e[0m(i <- \e[31m3\e[0m to maxPrime\
    \ by \e[31m2\e[0m){\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          Found:    (maxPrime : Double)\n\e\
    [31m   |\e[0m                          Required: Int\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E050] Type Error: /tmp/tmpzc_a9xd6.scala:23:19 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m                \e[33mif\e[0m(isPrime(i)){\n\e[31m\e\
    [31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \   \e[33mvalue\e[0m \e[35misPrime\e[0m does not take parameters\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010048
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib: mutable.Map[Long, Long] = mutable.Map[Long, Long]()\n\
    \        fib((0l) = 1)\n        fib((1l) = 1)\n        fib((2l) = 2)\n       \
    \ fib((3l) = 1)\n        fib((4l) = 2)\n        fib((5l) = 4)\n        fib((6l)\
    \ = 6)\n        fib((7l) = 2)\n        var sum : Long = fib((n)) // n is prime\n\
    \        var sum2 : Long = 1\n        while (sum2 < sum) {\n            val tmp\
    \ = fib(sum)\n            sum = sum + tmp\n            sum2 = sum2 + tmp\n   \
    \     }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpatd17c55.scala:17:17 ---------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        fib((\e[31m0l\e[0m) = \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m                 ')' expected,\
    \ but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpatd17c55.scala:18:17\
    \ ---------------------------\e[0m\e[0m\n\e[31m18 |\e[0m        fib((\e[31m1l\e\
    [0m) = \e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e\
    [0m                 ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax\
    \ Error: /tmp/tmpatd17c55.scala:19:17 ---------------------------\e[0m\e[0m\n\e\
    [31m19 |\e[0m        fib((\e[31m2l\e[0m) = \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                 ^\e[0m\n\e[31m   |\e[0m                 ')' expected, but '='\
    \ found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpatd17c55.scala:20:17 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fib((\e[31m3l\e[0m) = \e[31m1\e[0m)\n\e[31m\e\
    [31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m                 ')' expected,\
    \ but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpatd17c55.scala:21:17\
    \ ---------------------------\e[0m\e[0m\n\e[31m21 |\e[0m        fib((\e[31m4l\e\
    [0m) = \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e\
    [0m                 ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax\
    \ Error: /tmp/tmpatd17c55.scala:22:17 ---------------------------\e[0m\e[0m\n\e\
    [31m22 |\e[0m        fib((\e[31m5l\e[0m) = \e[31m4\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                 ^\e[0m\n\e[31m   |\e[0m                 ')' expected, but '='\
    \ found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpatd17c55.scala:23:17 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        fib((\e[31m6l\e[0m) = \e[31m6\e[0m)\n\e[31m\e\
    [31m   |\e[0m                 ^\e[0m\n\e[31m   |\e[0m                 ')' expected,\
    \ but '=' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpatd17c55.scala:24:17\
    \ ---------------------------\e[0m\e[0m\n\e[31m24 |\e[0m        fib((\e[31m7l\e\
    [0m) = \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                 ^\e[0m\n\e[31m   |\e\
    [0m                 ')' expected, but '=' found\n\e[31m\e[31m-- [E006] Not Found\
    \ Error: /tm"
  stdout: ''
  timestamp: 1660010042
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n      val fibArray = Array((1l, 0l), (2l, 1l))\n      var currentNum\
    \ = fibArray(n)(1)\n      for(i <- 2l to n-1){\n         currentNum = fibArray(i)(currentNum\
    \ + fibArray(i+1)(0))\n      }\n      currentNum\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmuwxtpfj.scala:17:32\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m      \e[33mvar\e[0m \e[36mcurrentNum\e\
    [0m = fibArray(n)(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                       \
    \         ^\e[0m\n\e[31m   |\e[0m                                Found:    (n\
    \ : Long)\n\e[31m   |\e[0m                                Required: Int\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmuwxtpfj.scala:19:31 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m         currentNum = fibArray(i)(currentNum + fibArray(i+\e\
    [31m1\e[0m)(\e[31m0\e[0m))\n\e[31m\e[31m   |\e[0m                            \
    \   ^\e[0m\n\e[31m   |\e[0m                               Found:    (i : Long)\n\
    \e[31m   |\e[0m                               Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpmuwxtpfj.scala:19:56 --------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m         currentNum = fibArray(i)(currentNum + fibArray(i+\e\
    [31m1\e[0m)(\e[31m0\e[0m))\n\e[31m\e[31m   |\e[0m                            \
    \                            ^^^\e[0m\n\e[31m   |\e[0m                       \
    \                                 Found:    Long\n\e[31m   |\e[0m            \
    \                                            Required: Int\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n3 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010053
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var lastPrime = -2l\n        var lastNum = 1l\n        var\
    \ prevNum = 1l\n        var currentNum = 1l\n        var counter = 1l\n\n    \
    \    while (n <= 2l) {\n            currentNum = lastNum + prevNum\n         \
    \   prevNum = lastNum\n            lastPrime = currentNum\n            lastNum\
    \ = currentNum\n            n -= 1l\n            counter += 1l\n        }\n\n\
    \        if (n == 2l) {\n            lastPrime = lastNum\n        }\n\n      \
    \  if (counter >= 2l) {\n            while (n >= 2l) {\n                prevNum\
    \ = lastNum\n                lastPrime = lastNum + prevNum\n                lastNum\
    \ = lastPrime + 1l\n                n -= 1l\n            }\n        }\n\n    \
    \    lastPrime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4n6dx9ud.scala:27:14 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            n -= \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value -= is not a member of\
    \ Long - did you mean n.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp4n6dx9ud.scala:40:18\
    \ ------------------------\e[0m\e[0m\n\e[31m40 |\e[0m                n -= \e[31m1l\e\
    [0m\n\e[31m\e[31m   |\e[0m                ^^^^\e[0m\n\e[31m   |\e[0m         \
    \       value -= is not a member of Long - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010051
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = mutable.ArrayBuffer(2l)\n        primes +=\
    \ 2l\n        for(x <- 3l to n by 2){\n            val p1 = primes.find { x =>\
    \ x > x }\n            val p2 = primes.find { x => x > p1 }\n            if (p1\
    \ != p2 && p1 != p1 + p2){\n                primes += p1\n                primes\
    \ += p2\n                break\n            }\n        }\n        primes(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpn9sxsjk8.scala:16:21 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpn9sxsjk8.scala:24:16 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010046
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val n = Math.max(n, 2l)\n        var k = 0l\n        var\
    \ z = 0l\n        var a = 0l\n        var b = 2l\n        while (k <= n) {\n \
    \           z = (a + b) / 2\n            if (z > n) {\n                a = b\n\
    \                b = z\n            } else {\n                a = z\n        \
    \    }\n            k += 1\n        }\n        a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpy18acrb3.scala:16:25 ---------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mn\e[0m = Math.max(n, \e\
    [31m2l\e[0m)\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e[31m   |\e\
    [0m                         Recursive \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010045
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val maxFib = 2l\n        val minFib = -1l\n        var sumFib\
    \ = 0l\n        var prevFib = 2l\n        var count = 0l\n\n        for(i <- minFib\
    \ to maxFib) {\n            sumFib += prevFib\n            count += i\n      \
    \      if(sumFib == n)\n                return prevFib\n            prevFib =\
    \ sumFib\n        }\n        return -1l\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpq_p5pgln.scala:32)\n\tat Problem.main(tmpq_p5pgln.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010055
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def f(n: Long, m: Long, k: Long) : Long = {\n          \
    \  if (n == k) m\n            else if (n % k == 0 || n == k + 1) f(n - 1, m, k)\n\
    \            else f(n - 1, f(n - 2, m, k), k)\n        }\n        f(n, 2l, 3l)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "Exception in thread \"main\" java.lang.StackOverflowError\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\tat Problem$.f$1(tmpl_q68hjv.scala:19)\n\
    \tat"
  stdout: ''
  timestamp: 1660010051
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val cache = mutable.Map[Long, Long]()\n        if (cache(n)\
    \ == null) {\n            cache(n) = if (n < 2) 2 else primeFib(n-1) + primeFib(n-2)\n\
    \        }\n        cache(n)\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp0mqfkjoy.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mcache\e[0m = mutable.Map[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010044
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 2) n\n        else (prime(n))\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpf1if9zar.scala:17:14 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33melse\e[0m (prime(n))\n\e[31m\e[31m   |\e\
    [0m              ^^^^^\e[0m\n\e[31m   |\e[0m              Not found: prime\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010045
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def prime(a: Long) : Long = {\n            if (a == 1)\n\
    \                2\n            else if (a < 2)\n                1\n         \
    \   else\n                prime(a - 1) + prime(a - 2)\n        }\n        if (n\
    \ == 0)\n            0\n        else if (n == 1)\n            1\n        else\n\
    \            prime(n) // the value returned is of type Long \n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpk9w145ek.scala:32)\n\tat Problem.main(tmpk9w145ek.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010052
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val array = new Array[Long](n)\n        array(0) = 1\n \
    \       array(1) = 1\n        for(i <- 2 to n) {\n            array(i) = array(i-2)\
    \ + array(i-1)\n        }\n        return array(n)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsxz4c__h.scala:16:36\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36marray\e\
    [0m = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e[0m](n)\n\e[31m\e[31m   |\e\
    [0m                                    ^\e[0m\n\e[31m   |\e[0m               \
    \                     Found:    (n : Long)\n\e[31m   |\e[0m                  \
    \                  Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpsxz4c__h.scala:19:22 --------------------\e[0m\e[0m\n\e[31m19\
    \ |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n) {\n\e[31m\e[31m   |\e[0m\
    \                      ^\e[0m\n\e[31m   |\e[0m                      Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpsxz4c__h.scala:22:21 --------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mreturn\e[0m array(n)\n\e[31m\e[31m   |\e\
    [0m                     ^\e[0m\n\e[31m   |\e[0m                     Found:   \
    \ (n : Long)\n\e[31m   |\e[0m                     Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010056
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if(n < 4) return n\n        if(isPrime(n)) return n\n  \
    \      primeFib(n / 2)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpqf0jjfuf.scala:17:11 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mif\e[0m(isPrime(n)) \e[33mreturn\e[0m n\n\
    \e[31m\e[31m   |\e[0m           ^^^^^^^\e[0m\n\e[31m   |\e[0m           Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010050
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var n : Long = 1\n        var prime : Boolean = false\n\
    \        while(!prime){\n            prime =  (n % 2 == 0)\n            n = (3\
    \ * n + 2) % Long.MaxValue\n        }\n        return n\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val a = mutable.ArrayBuffer(2l,3l,5l,7l,11l,13l,17l)\n \
    \       val b = mutable.ArrayBuffer(3l,5l,7l,11l,13l,17l,19l)\n        if(a contains\
    \ n) n\n        else if(b contains n) n\n        else if(n < 3l) 1l\n        else\
    \ primeFib(n - 3l) match {\n            case n : Long if n > 5l => 3l\n      \
    \      case n : Long if n > 7l => 5l\n            case n : Long if n > 11l =>\
    \ 7l\n            case n : Long if n > 13l => 11l\n            case n : Long if\
    \ n > 17l => 13l\n            case n : Long if n > 19l => 17l\n            case\
    \ n : Long if n > 23l => 19l\n            case n : Long if n > 29l => 23l\n  \
    \          case n : Long if n > 31l => 29l\n            case n : Long if n > 37l\
    \ => 31l\n            case n : Long if n > 43l => 37l\n            case n : Long\
    \ if n > 49l => 43l\n            case n : Long if n > 53l => 49l\n           \
    \ case n : Long if n > 59l => 53l\n            case n : Long if n > 61l => 59l\n\
    \            case n : Long if n > 67l => 61l\n            case n : Long if n >\
    \ 73l => 67l\n            case n : Long if n > 79l => 73l\n            case n\
    \ : Long if n > 83l => 79l\n            case n : Long if n > 89l => 83l\n    \
    \        case n : Long if n > 97l => 89l\n            case n : Long if n > 101l\
    \ => 97l\n            case n : Long if n > 103l => 101l\n            case n :\
    \ Long if n > 107l => 103l\n            case n : Long if n > 109l => 107l\n  \
    \          case n : Long if n > 111l => 109l\n            case n : Long if n >\
    \ 113l => 111l\n            case n : Long if n > 115l => 113l\n            case\
    \ n : Long if n > 117l => 115l\n            case n : Long if n > 119l => 117l\n\
    \            case n : Long if n > 121l => 119l\n            case n : Long if n\
    \ > 123l => 121l\n            case n : Long if n > 127l => 123l\n            case\
    \ n : Long if n > 129l => 127l\n            case n : Long if n > 131l => 129l\n\
    \            case n : Long if n > 133l \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfqds61vy.scala:58:4 ----------------------------\e\
    [0m\e[0m\n\e[31m58 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    '=>' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpfqds61vy.scala:73:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m73 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E006] Not\
    \ Found Error: /tmp/tmpfqds61vy.scala:16:16 ------------------------\e[0m\e[0m\n\
    \e[31m16 |\e[0m        \e[33mval\e[0m \e[36ma\e[0m = mutable.ArrayBuffer(\e[31m2l\e\
    [0m,\e[31m3l\e[0m,\e[31m5l\e[0m,\e[31m7l\e[0m,\e[31m11l\e[0m,\e[31m13l\e[0m,\e\
    [31m17l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmpfqds61vy.scala:17:16 ------------------------\e[0m\e\
    [0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mb\e[0m = mutable.ArrayBuffer(\e\
    [31m3l\e[0m,\e[31m5l\e[0m,\e[31m7l\e[0m,\e[31m11l\e[0m,\e[31m13l\e[0m,\e[31m17l\e\
    [0m,\e[31m19l\e[0m)\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpfqds61vy.scala:72:1 ---------------------\e\
    [0m\e[0m\n\e[31m72 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:\
    \    Unit\n\e[31m   |\e[0m Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[33m\e[33m-- Warning:\
    \ /tmp/tmpfqds61vy.scala:59:4 ----------------------------------------\e[0m\e\
    [0m\n\e[33m59 |\e[0m    \e[33mdef\e[0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e\
    [0m[\e[35mString\e[0m]) = {\n\e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m\
    \    Line is indented too far to the left, or a `}` is missing\n1 warning found\n\
    5 errors found\n"
  stdout: ''
  timestamp: 1660010060
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 1l) 1l\n        else if (n <= 2l) 2l\n        else\
    \ if (n % 2l == 1l && n != 2l) 3l\n        else if (n % 3l == 2l && n != 3l) 5l\n\
    \        else if (n % 5l == 3l && n != 5l) 13l\n        else if (n % 13l == 5l\
    \ && n != 13l) 89l\n        else primeFib(3l) * primeFib(5l) * primeFib(13l) *\
    \ primeFib(89l) \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpmp8nakg0.scala:25)\n\tat Problem.main(tmpmp8nakg0.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val maxPrime = (2l).pow((n.toLong).toInt)\n        if (n\
    \ < 2l) maxPrime else (for {\n            i <- 2 until maxPrime if i.pow(n).toLong\
    \ == n\n        } yield i).lastOption.getOrElse(maxPrime)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdiht9_9o.scala:16:28 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mmaxPrime\e[0m = (\e[31m2l\e\
    [0m).pow((n.toLong).toInt)\n\e[31m\e[31m   |\e[0m                       ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue pow is not a member of Long, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\
    \e[31m   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpdiht9_9o.scala:18:39 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            i <- \e[31m2\e[0m until maxPrime \e[33mif\e\
    [0m i.pow(n).toLong == n\n\e[31m\e[31m   |\e[0m                              \
    \       ^^^^^\e[0m\n\e[31m   |\e[0mvalue pow is not a member of Int, but could\
    \ be made available as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne\
    \ of the following imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m  import math.BigDecimal.int2bigDecimal\n\e[31m   |\e[0m  import math.BigInt.int2bigInt\n\
    \e[31m   |\e[0m\n2 errors found\n"
  stdout: ''
  timestamp: 1660010065
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // base case (n is even)\n        if (n % 2 == 0) {\n  \
    \          return n\n        }\n        else {\n            // get the two previous\
    \ numbers as an iterator in reverse order\n            val iter = List(2l, 3l,\
    \ 4l, 5l).iterator\n            iter.take(n-2)\n                .tail.zip(iter.drop(n-2))\
    \ // zip 2 sets of 2 numbers\n                .toList // convert list to vector\n\
    \                .toVector // convert vector to set\n                .foldLeft(0l)(\
    \ (acc, e) => acc + (e * e)) // calculate Fibonacci number\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoqgbaqet.scala:23:22\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m            iter.take(n-\e[31m2\e\
    [0m)\n\e[31m\e[31m   |\e[0m                      ^^^\e[0m\n\e[31m   |\e[0m   \
    \                   Found:    Long\n\e[31m   |\e[0m                      Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010062
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n == 0 || n == 1)\n            return n\n        else\
    \ if (n % 2 == 0)\n            return primeFib(n - 2) + primeFib(n - 1)\n    \
    \    else\n            return primeFib(n - 1) + primeFib(n - 2)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpld7ty39t.scala:24)\n\tat Problem.main(tmpld7ty39t.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010062
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var f = 2l\n        var fib_no = 1l\n        var prime_no\
    \ = 1l\n        var fp = 2l\n\n        while (! (fp <= n)) {\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n            }\n            fib_no\
    \ = f\n            prime_no = fp\n            if (fib_no*fib_no == fp) {\n   \
    \             f = fib_no\n                fp++\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2wobihz4.scala:26:20 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                fp++\n\e[31m\e[31m   |\e[0m         \
    \           ^\e[0m\n\e[31m   |\e[0m                    expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2wobihz4.scala:32:20\
    \ ---------------------------\e[0m\e[0m\n\e[31m32 |\e[0m                fp++\n\
    \e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m             \
    \       expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E018] Syntax Error: /tmp/tmp2wobihz4.scala:38:20 ---------------------------\e\
    [0m\e[0m\n\e[31m38 |\e[0m                fp++\n\e[31m\e[31m   |\e[0m         \
    \           ^\e[0m\n\e[31m   |\e[0m                    expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2wobihz4.scala:44:20\
    \ ---------------------------\e[0m\e[0m\n\e[31m44 |\e[0m                fp++\n\
    \e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m             \
    \       expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E018] Syntax Error: /tmp/tmp2wobihz4.scala:50:20 ---------------------------\e\
    [0m\e[0m\n\e[31m50 |\e[0m                fp++\n\e[31m\e[31m   |\e[0m         \
    \           ^\e[0m\n\e[31m   |\e[0m                    expression expected but\
    \ \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp2wobihz4.scala:56:20\
    \ ---------------------------\e[0m\e[0m\n\e[31m56 |\e[0m                fp++\n\
    \e[31m\e[31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m             \
    \       expression expected but \e[31m'}'\e[0m found\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e["
  stdout: ''
  timestamp: 1660010059
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val x = scala.math.BigInt(n) // scala.math.BigInt is a wrapper\
    \ of long\n        if (n <= 1L) 1L\n        else (x(2L) * x) + (x(3L)) // scala.math.BigInt\
    \ is a wrapper of long\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E050] Type Error: /tmp/tmpk7q37bas.scala:18:14 -----------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33melse\e[0m (x(\e[31m2L\e[0m) * x) + (x(\e\
    [31m3L\e[0m)) \e[34m// scala.math.BigInt is a wrapper of long\e[0m\n\e[31m\e[31m\
    \   |\e[0m              ^\e[0m\n\e[31m   |\e[0m              \e[33mvalue\e[0m\
    \ \e[35mx\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010061
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n < 2l) {\n            n\n        } else {\n       \
    \     val prev = 0l\n            val curr = 1l\n            val numPrimes = 2l\n\
    \            var prime = 0l\n\n            while (numPrimes <= n) {\n        \
    \        val next = curr + prev\n                prev = curr\n               \
    \ curr = next\n\n                val primeInt = next\n\n                if (primeInt\
    \ == prev) {\n                    numPrimes += 1\n                    prime +=\
    \ primeInt\n                }\n            }\n            prime += prev\n    \
    \        prime\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmph5uufpuv.scala:26:21 -----------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m                prev = curr\n\e[31m\e[31m   |\e[0m  \
    \              ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to\
    \ val prev\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmph5uufpuv.scala:27:21\
    \ -----------------------------\e[0m\e[0m\n\e[31m27 |\e[0m                curr\
    \ = next\n\e[31m\e[31m   |\e[0m                ^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Reassignment to val curr\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmph5uufpuv.scala:32:30 ------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m                    numPrimes += \e[31m1\e[0m\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \ value += is not a member of Long - did you mean numPrimes.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010066
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def nextPrime(n: Long): Long = {\n            if (n < 2)\
    \ n\n            else nextPrime(n % 2 match {\n                case 0 => n + 2\n\
    \                case 1 => n + 1\n                case _ => n\n            })\n\
    \        }\n\n        def getFibonacci(n: Long): Long = {\n            if (n <=\
    \ 1) n\n            else getFibonacci(n - 2) + getFibonacci(n - 1)\n        }\n\
    \n        // using sieve algorithm to find all prime number up to n\n        var\
    \ primes: mutable.Set[Long] = mutable.Set()\n        for (i = 1 until n) primes\
    \ += i\n        primes.retain(x => x <= n).filterNot(x => n % x == 0).foreach(x\
    \ => primes.remove(x))\n\n        primes.find(x => getFibonacci(x) == n).getOrElse(0)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmp8m8e2pb9.scala:32:15 ---------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m until n) primes\
    \ += i\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m   |\e[0m          \
    \     '<-' expected, but '=' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8m8e2pb9.scala:31:20\
    \ ------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mvar\e[0m \e\
    [36mprimes\e[0m: mutable.Set[\e[35mLong\e[0m] = mutable.Set()\n\e[31m\e[31m  \
    \ |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                    Not\
    \ found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8m8e2pb9.scala:31:40\
    \ ------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mvar\e[0m \e\
    [36mprimes\e[0m: mutable.Set[\e[35mLong\e[0m] = mutable.Set()\n\e[31m\e[31m  \
    \ |\e[0m                                        ^^^^^^^\e[0m\n\e[31m   |\e[0m\
    \                                        Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E008] Not Found Error: /tmp/tmp8m8e2pb9.scala:32:26 ------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m        \e[33mfor\e[0m (i = \e[31m1\e[0m until n) primes\
    \ += i\n\e[31m\e[31m   |\e[0m                          ^\e[0m\n\e[31m   |\e[0mvalue\
    \ foreach is not a member of Null, but could be made available as an extension\
    \ method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might\
    \ fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\
    \e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\e[31m   |\e[0m\
    \  import collection.LazyZip3.lazyZip3ToIterable\n\e[31m   |\e[0m  import collection.LazyZip4.lazyZip4ToIterable\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.list asScalaBuffer\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.properties AsScalaMap\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.enumeration AsScalaIterator\n\
    \e[31m   |\e[0m  import collection.convert.ImplicitConversions.iterator asScala\n\
    \e"
  stdout: ''
  timestamp: 1660010069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // initialize fibonacci numbers\n        val fibs = mutable.ArrayBuffer(1,\
    \ 2)\n        \n        // find first non-prime number that satisfy condition\
    \ fib(n) == n+fib(n-1)\n        while (fibs.size > 0 && fibs.last != n) {\n  \
    \          fibs += fibs.last\n        }\n        \n        fibs.last\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmphhsz2l2h.scala:17:19 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ArrayBuffer(\e\
    [31m1\e[0m, \e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n1 error\
    \ found\n"
  stdout: ''
  timestamp: 1660010060
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val rec = new Rec[Long]\n        rec(0) = n\n        rec(1)\
    \ = 1\n        val fib : Rec[Long] = new Rec[Long]\n        for(i <- 2 to n){\n\
    \            fib(i :: fib) = rec(fib(i - 1) + (fib(i-1) * fib(i-2)))\n       \
    \ }\n        fib(n)._1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8sdf5q9q.scala:16:22 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mrec\e[0m = \e[33mnew\e[0m\
    \ \e[35mRec\e[0m[\e[35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                     \
    \ ^^^\e[0m\n\e[31m   |\e[0m                      Not found: type Rec\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8sdf5q9q.scala:19:18 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mfib\e[0m : \e[35mRec\e[0m[\e\
    [35mLong\e[0m] = \e[33mnew\e[0m \e[35mRec\e[0m[\e[35mLong\e[0m]\n\e[31m\e[31m\
    \   |\e[0m                  ^^^\e[0m\n\e[31m   |\e[0m                  Not found:\
    \ type Rec\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp8sdf5q9q.scala:19:34\
    \ ------------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e\
    [36mfib\e[0m : \e[35mRec\e[0m[\e[35mLong\e[0m] = \e[33mnew\e[0m \e[35mRec\e[0m[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                                  ^^^\e[0m\n\
    \e[31m   |\e[0m                                  Not found: type Rec\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8sdf5q9q.scala:20:22 --------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m(i <- \e[31m2\e[0m to n){\n\e[31m\e\
    [31m   |\e[0m                      ^\e[0m\n\e[31m   |\e[0m                   \
    \   Found:    (n : Long)\n\e[31m   |\e[0m                      Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010067
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // Initialize 2 & 3 as Fibonacci number\n        var a =\
    \ 2l\n        var b = 3l\n        // Initialize prime number to n\n        var\
    \ p = (n+1l) * 2\n        // Create a list of (prime, number-of-divisors) pairs.\n\
    \        val primes = mutable.ArrayBuffer.fill(p)(0).map{ p =>\n            (p\
    \ , math.gcd(p , a+b) )\n        }\n\n        // Find the smallest prime >= p\n\
    \        var smallest = primes.min(_._2)\n\n        // If smallest prime > n,\
    \ then p cannot be prime, else primes have already been found\n        if ( smallest\
    \ > n ) p\n        else\n            // Find the smallest number of divisors such\
    \ that p is composite number.\n            // A prime number has at least one\
    \ divisor by itself.\n            primes.filter( _._2 == smallest ).min( _._1\
    \ )\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpt4oeukgq.scala:22:21 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer.fill(p)(\e\
    [31m0\e[0m).map{ \e[36mp\e[0m =>\n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010059
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n<2l) return n\n        if (n%2l==0l) return n\n   \
    \     else if (n%3l==0l) return primeFib(n / 3l)\n        else return primeFib(n\
    \ / 2l)*primeFib(n/2)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp87ghhhry.scala:22)\n\tat Problem.main(tmp87ghhhry.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010069
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n == 0L) 0L\n        else if (n == 1L) 1L\n        else\
    \ primeFib(n-1L) + primeFib(n-2L)\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpd_tqljkh.scala:21)\n\tat Problem.main(tmpd_tqljkh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010070
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 0) throw new ArithmeticException(\"Invalid N\"\
    )\n        if (n == 1) return 2\n        if (n == 2) return 3\n        val result\
    \ = primeFib(n - 2)\n        if (n % 2 == 0) result * result + 3 else result *\
    \ result + 5\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp09toou1a.scala:25)\n\tat Problem.main(tmp09toou1a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010069
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // 1st, 2nd fibonacci numbers, all even numbers\n      \
    \  val fib_one = BigInt(2)\n        val fib_two = BigInt(3)\n        val fib_result\
    \ = BigInt(2)\n        val fib_result = BigInt(3)\n        // 2st, 3rd fibonacci\
    \ numbers, all odd numbers\n        val fib_three = BigInt(2)\n        val fib_four\
    \ = BigInt(3)\n        val fib_result = BigInt(2)\n        val fib_result = BigInt(3)\n\
    \        while(n >= 2l) {\n            if((n%2l) == 0) {\n                fib_result\
    \ = fib_result + fib_one\n                fib_one = fib_two\n                fib_two\
    \ = fib_result\n                fib_result = BigInt(2)\n            } else {\n\
    \                fib_result = fib_result + fib_two\n                fib_two =\
    \ fib_four\n                fib_four = fib_result\n                fib_result\
    \ = BigInt(2)\n            }\n            n = n - 1l\n        }\n        return\
    \ fib_result + fib_four\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp074n1ge3.scala:20:12 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36mfib_result\e[0m = BigInt(\e\
    [31m3\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mfib_result is already defined as \e[33mvalue\e[0m \e[35mfib_result\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E161] Naming\
    \ Error: /tmp/tmp074n1ge3.scala:24:12 ---------------------------\e[0m\e[0m\n\e\
    [31m24 |\e[0m        \e[33mval\e[0m \e[36mfib_result\e[0m = BigInt(\e[31m2\e[0m)\n\
    \e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mfib_result\
    \ is already defined as \e[33mvalue\e[0m \e[35mfib_result\e[0m\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mNote that overloaded methods must all be defined in the same group\
    \ of toplevel definitions\n\e[31m\e[31m-- [E161] Naming Error: /tmp/tmp074n1ge3.scala:25:12\
    \ ---------------------------\e[0m\e[0m\n\e[31m25 |\e[0m        \e[33mval\e[0m\
    \ \e[36mfib_result\e[0m = BigInt(\e[31m3\e[0m)\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mfib_result is already defined as \e[33mvalue\e[0m \e[35mfib_result\e\
    [0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be\
    \ defined in the same group of toplevel definitions\n\e[31m\e[31m-- [E052] Type\
    \ Error: /tmp/tmp074n1ge3.scala:28:27 -----------------------------\e[0m\e[0m\n\
    \e[31m28 |\e[0m                fib_result = fib_result + fib_one\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Reassignment to val fib_result\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E052] Type Error: /tmp/tmp074n1ge3.scala:29:24 -----------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m                fib_one = fib_two\n\e[31m\e[31m   |\e\
    [0m                ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment\
    \ to val fib_one\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Erro"
  stdout: ''
  timestamp: 1660010071
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def f(n: Long): Long = {\n            if (n <= 1l)\n   \
    \             1l\n            else if (n == 2l)\n                2l\n        \
    \    else if (n == 3l)\n                3l\n            else if (n == 5l)\n  \
    \              5l\n            else\n                n * (f(n-1l) + f(n-2l))\n\
    \        }\n        val res = (2l).asInstanceOf[Int] * f(n)\n        res\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbqfv6ahg.scala:33)\n\tat Problem.main(tmpbqfv6ahg.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010072
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // First test to see if n is prime\n        var i : Long\
    \ = n - 1\n        while (i >= 1) {\n            if (n % i == 0) {\n         \
    \       i -= 1\n            } else {\n                break\n            }\n \
    \       }\n        if (i == 1) {\n            return n\n        }\n        //\
    \ then test to see if n is a Fibonacci number\n        i += 1\n        val fib1\
    \ : Long = primeFib(i)\n        val fib2 : Long = primeFib(i)\n        while (fib2\
    \ != fib1) {\n            fib1 = fib2\n            fib2 = primeFib(i + fib1)\n\
    \            i += fib1\n        }\n        fib1\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp37e13ru6.scala:22:16 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmp37e13ru6.scala:33:17 -----------------------------\e\
    [0m\e[0m\n\e[31m33 |\e[0m            fib1 = fib2\n\e[31m\e[31m   |\e[0m      \
    \      ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val fib1\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmp37e13ru6.scala:34:17 -----------------------------\e\
    [0m\e[0m\n\e[31m34 |\e[0m            fib2 = primeFib(i + fib1)\n\e[31m\e[31m \
    \  |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m         \
    \   Reassignment to val fib2\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010068
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def nextPrime(n:Long):Long = {\n            var nprime =\
    \ 2 * n + 1\n            while ( (nprime < n) &&  (! (nprime % n)) ) {\n     \
    \           nprime += 1\n            }\n            nprime\n        }\n      \
    \  val n = n - 1\n        if ( n == 0 ) 2\n        else if ( n < 2l) n\n     \
    \   else nextPrime(n) // if n is odd it returns n+1th Fibonacci number\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpbqx9vs4m.scala:18:38 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m            \e[33mwhile\e[0m ( (nprime < n) &&  (! (nprime\
    \ % n)) ) {\n\e[31m\e[31m   |\e[0m                                      ^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m      value unary_! is not a member of Long - did you mean\
    \ Long.unary_+?\n\e[31m\e[31m-- [E045] Cyclic Error: /tmp/tmpbqx9vs4m.scala:23:16\
    \ ---------------------------\e[0m\e[0m\n\e[31m23 |\e[0m        \e[33mval\e[0m\
    \ \e[36mn\e[0m = n - \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                ^\e[0m\n\
    \e[31m   |\e[0m                Recursive \e[33mvalue\e[0m \e[35mn\e[0m needs type\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010073
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib_nums = Vector.fill(100)(0l).scanLeft(1l)(_ + _)\
    \ // Fibonacci numbers sequence\n        if(fib_nums.contains(n))\n          \
    \  n\n        else if(fib_nums.takeWhile(_ < n).isEmpty) 0\n        else fib_nums.takeWhile(_\
    \ < n).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpci6mvui3.scala:23)\n\tat Problem.main(tmpci6mvui3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010077
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var x = 1l\n        var y = 2l\n        while (x<= n) {\n\
    \            if ((n % x) == 0)\n                return x\n            else\n \
    \               x = x + y\n            y = y + x\n        }\n        n\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmptv_vip_p.scala:28)\n\tat Problem.main(tmptv_vip_p.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(p: Long) : Boolean = {\n            for (i <-\
    \ 2 to (p / 2)) {\n                if (p % i == 0) {\n                    return\
    \ false\n                }\n            }\n            true\n        }\n     \
    \   val f = BigInt(n.toInt + 1)\n        for {\n            x <- if (isPrime(f))\
    \ 1l else 2l\n        } yield f\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv8ad569e.scala:17:28\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mfor\e[0m (i\
    \ <- \e[31m2\e[0m to (p / \e[31m2\e[0m)) {\n\e[31m\e[31m   |\e[0m            \
    \                ^^^^^\e[0m\n\e[31m   |\e[0m                            Found:\
    \    Long\n\e[31m   |\e[0m                            Required: Int\n\e[31m  \
    \ |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpv8ad569e.scala:26:29 --------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            x <- \e[33mif\e[0m (isPrime(f)) \e[31m1l\e\
    [0m \e[33melse\e[0m \e[31m2l\e[0m\n\e[31m\e[31m   |\e[0m                     \
    \        ^\e[0m\n\e[31m   |\e[0m                             Found:    (f : BigInt)\n\
    \e[31m   |\e[0m                             Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010079
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(r : Long) : Boolean = {\n            val numPrime\
    \ = (3l to r)\n            for(remR <- numPrime) {\n                if(numPrime.filter(remR\
    \ % _ == 0).isEmpty) {\n                    return true\n                }\n \
    \           }\n            false\n        }\n        if(n < 2l) 1l\n        else\
    \ {\n            val fib = (n - (2l)) + (3l to (n-1l))\n            val prime\
    \ = fib.filter(_ % 2 != 0)\n            if(isPrime((fib.size - 1l) * fib.head))\n\
    \                primeFib(fib.size)\n            else\n                primeFib(fib.head\
    \ * 2l)\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E134] Type Error: /tmp/tmpvf393zxf.scala:27:33 -----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            \e[33mval\e[0m \e[36mfib\e[0m = (n - (\e\
    [31m2l\e[0m)) + (\e[31m3l\e[0m to (n-\e[31m1l\e[0m))\n\e[31m\e[31m   |\e[0m  \
    \                    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mNone of the overloaded\
    \ alternatives of \e[33mmethod\e[0m \e[35m+\e[0m in \e[33mclass\e[0m \e[35mLong\e\
    [0m with types\n\e[31m   |\e[0m (x: Double): Double\n\e[31m   |\e[0m (x: Float):\
    \ Float\n\e[31m   |\e[0m (x: Long): Long\n\e[31m   |\e[0m (x: Int): Long\n\e[31m\
    \   |\e[0m (x: Char): Long\n\e[31m   |\e[0m (x: Short): Long\n\e[31m   |\e[0m\
    \ (x: Byte): Long\n\e[31m   |\e[0m (x: String): String\n\e[31m   |\e[0mmatch arguments\
    \ (scala.collection.immutable.NumericRange.Inclusive[Long])\n1 error found\n"
  stdout: ''
  timestamp: 1660010077
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 2l\n        var s = a\n    \
    \    var i = 2l\n        var j = 0l\n        var prime: Boolean = true\n     \
    \   var temp: Long = 0l\n        \n        while (s < n) {\n            if (n\
    \ % a == 0) {\n                i = i + 1l\n                s = s + 1l\n      \
    \      }\n            \n            if (n % b == 0) {\n                j = j +\
    \ 1l\n                s = s + 1l\n            }\n            \n            if\
    \ ((j % 2l) == 0) {\n                prime = false\n            } else {\n   \
    \             prime = true\n            }\n            \n            if (prime\
    \ == true) {\n                temp = s\n                s = s + 2l\n         \
    \   }\n            \n            i = i + 1l\n            b = s + 2l\n        \
    \    a = temp + 2l\n        }\n        \n        return (s)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7wovfjoq.scala:55)\n\tat Problem.main(tmp7wovfjoq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010080
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n<2)\n            return n\n        val m = 2\n    \
    \    while (m <= n)\n            {\n            if (m*m == n) return m\n     \
    \       m += 1\n            }\n        m\n        }\n    \n    // primes_less_than\
    \ returns list of primes less than n.\n    // >>> primes_less_than(100l)\n   \
    \ // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71)\n    def primes_less_than(n : Long) : List[Long] = {\n        val p = scala.util.Random.shuffle(scala.util.Prime.primes).toList\n\
    \        val m = 2\n        val q = scala.util.Random.shuffle(p.tail).toList\n\
    \        if (n<2)\n            return p\n        while (q contains n+1 )\n   \
    \         {\n            m += 1\n            q = scala.util.Random.shuffle(p.tail).toList\n\
    \            }\n        (p+q+p.takeWhile(_<=n)).filter(_ % n == 0).takeWhile(_<n)\n\
    \        }\n    \n    // primes_less_than_prime_fib returns list of primes less\
    \ than the n-th Fibonacci number.\n    // >>> primes_less_than_prime_fib(100l)\n\
    \    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71)\n    def primes_less_than_prime_fib(n : Long) : List[Long] = {\n       \
    \ val p = scala.util.Random.shuffle(scala.util.Prime.primes).toList\n        val\
    \ m = 2\n        val q = scala.util.Random.shuffle(p.tail).toList\n        if\
    \ (n<2)\n            return p\n        while (q contains n+1 )\n            {\n\
    \            m += 1\n            q = scala.util.Random.shuffle(p.tail).toList\n\
    \            }\n        (p+q+p.takeWhile(_<=n)).filter(_ % n == 0).takeWhile(_<n).filter(_\
    \ <= n)\n        }\n    \n    // primes_less_than_prime_fib_prime_fib returns\
    \ list of primes less than the n-th Fibonacci number.\n    // >>> primes_less_than_prime_fib_prime_fib(100l)\n\
    \    // (2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71)\n    def primes_less_than_prime_fib_prime_fib(n : Long) : List[Long] = {\n\
    \        val p = scala.util.Random.shuffle(scala.util.Prime.primes).toList\n \
    \       val m = 2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmput6pzdes.scala:22:14 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m            m += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m\
    \            ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of\
    \ Int - did you mean m.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmput6pzdes.scala:31:53\
    \ ------------------------\e[0m\e[0m\n\e[31m31 |\e[0m        \e[33mval\e[0m \e\
    [36mp\e[0m = scala.util.Random.shuffle(scala.util.Prime.primes).toList\n\e[31m\e\
    [31m   |\e[0m                                          ^^^^^^^^^^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                     value Prime is not a member\
    \ of util\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmput6pzdes.scala:38:14\
    \ ------------------------\e[0m\e[0m\n\e[31m38 |\e[0m            m += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean m.!=?\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmput6pzdes.scala:39:14 -----------------------------\e[0m\e[0m\n\e[31m39\
    \ |\e[0m            q = scala.util.Random.shuffle(p.tail).toList\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            Reassignment to val q\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmput6pzdes.scala:48:53 ------------------------\e\
    [0m\e[0m\n\e[31m48 |\e[0m        \e[33mval\e[0m \e[36mp\e[0m = scala.util.Random.shuffle(scala.util.Prime.primes).toList\n\
    \e[31m\e[31m   |\e[0m                                          ^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                     value Prime is not a\
    \ member of util\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmput6pzdes.scala:55:14\
    \ ------------------------\e[0m\e[0m\n\e[31m55 |\e[0m            m += \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ += is not a member of Int - did you mean m.!=?\n\e[31m\e[31m-- [E052] Type Error:\
    \ /tmp/tmput6pzdes.scala:56:14 -----------------------------\e[0m\e[0m\n\e[31m56\
    \ |\e[0m            q = scala.util.Random.shuffl"
  stdout: ''
  timestamp: 1660010087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // initialize fib\n        var fib : Long = 1l\n       \
    \ var fprime : Long = 1l\n\n        // while prime is false and fib is less than\
    \ n\n        while (!isPrime(fib, fprime, n) && fib <= n){\n            // update\
    \ fib\n            fib = fib + fprime;\n            // update fprime\n       \
    \     fprime = fib;\n        }\n        // return fib\n        return fib;\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpexkdo341.scala:21:16 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mwhile\e[0m (!isPrime(fib, fprime, n) &&\
    \ fib <= n){\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010074
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var x = 1l\n        var y = 2l\n        var ans = 0l\n \
    \       while (n > 0) {\n            ans = ans + x\n            x = y\n      \
    \      y = ans + y\n            n = n - 1\n        }\n        ans\n    }\n   \
    \ def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n   \
    \ assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l))\
    \ == (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l))\
    \ == (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmp947laanh.scala:23:14 -----------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m            n = n - \e[31m1\e[0m\n\e[31m\e[31m   |\e\
    [0m            ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment to val\
    \ n\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010075
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs : mutable.Set[Long] = mutable.Set()\n        fibs\
    \ += 2\n        fibs += 3\n        fibs += 5\n        while (fibs.contains(n))\
    \ {\n            fibs += fibs\n        }\n        fibs.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpbl1v4i00.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m : mutable.Set[\e\
    [35mLong\e[0m] = mutable.Set()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpbl1v4i00.scala:16:39 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m : mutable.Set[\e\
    [35mLong\e[0m] = mutable.Set()\n\e[31m\e[31m   |\e[0m                        \
    \               ^^^^^^^\e[0m\n\e[31m   |\e[0m                                \
    \       Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010074
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 1l\n        var c = 2l\n   \
    \     val res = []\n        for (i = 3l; i < n+1l; i += 1l) {\n            c =\
    \ (a+b)\n            a = b\n            b = c\n            c += 1l\n         \
    \   if (c > n) res.append(c-1l)\n        }\n        if (n <= 5l) res(n-1l)\n \
    \       else res\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmxvvdjo6.scala:19:19 ---------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m        \e[33mval\e[0m \e[36mres\e[0m = []\n\e[31m\e\
    [31m   |\e[0m                   ^\e[0m\n\e[31m   |\e[0m                   an identifier\
    \ expected, but ']' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmxvvdjo6.scala:20:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m\
    \ (i = \e[31m3l\e[0m; i < n+\e[31m1l\e[0m; i += \e[31m1l\e[0m) {\n\e[31m\e[31m\
    \   |\e[0m^^^\e[0m\n\e[31m   |\e[0m'=>' expected, but 'end of statement' found\n\
    \e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpmxvvdjo6.scala:20:15 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (i = \e[31m3l\e[0m; i < n+\e[31m1l\e\
    [0m; i += \e[31m1l\e[0m) {\n\e[31m\e[31m   |\e[0m               ^\e[0m\n\e[31m\
    \   |\e[0m               ')' expected, but '=' found\n\e[31m\e[31m-- [E040] Syntax\
    \ Error: /tmp/tmpmxvvdjo6.scala:20:29 ---------------------------\e[0m\e[0m\n\e\
    [31m20 |\e[0m        \e[33mfor\e[0m (i = \e[31m3l\e[0m; i < n+\e[31m1l\e[0m; i\
    \ += \e[31m1l\e[0m) {\n\e[31m\e[31m   |\e[0m                             ^\e[0m\n\
    \e[31m   |\e[0m                             '<-' expected, but ';' found\n\e[31m\e\
    [31m-- [E040] Syntax Error: /tmp/tmpmxvvdjo6.scala:20:38 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (i = \e[31m3l\e[0m; i < n+\e[31m1l\e\
    [0m; i += \e[31m1l\e[0m) {\n\e[31m\e[31m   |\e[0m                            \
    \          ^\e[0m\n\e[31m   |\e[0m                                      '<-' expected,\
    \ but ')' found\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpmxvvdjo6.scala:20:19\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m (i\
    \ = \e[31m3l\e[0m; i < n+\e[31m1l\e[0m; i += \e[31m1l\e[0m) {\n\e[31m\e[31m  \
    \ |\e[0m                   ^\e[0m\n\e[31m   |\e[0mvalue foreach is not a member\
    \ of Null, but could be made available as an extension method.\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m  import Option.option2Iterable\n\e[31m   |\e[0m  import collection.LazyZip2.lazyZip2ToIterable\n\
    \e[31m   |\e[0m  import collection.LazyZip3.la"
  stdout: ''
  timestamp: 1660010084
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val arr : mutable.MutableList[Int] = mutable.MutableList.empty\n\
    \        arr += 0\n        arr += 1\n        var temp : Int = 0\n        var count\
    \ = 0\n        while ((n < arr(0)) && (count < arr.size)) {\n            temp\
    \ = arr(n) + arr(n-1)\n            arr += temp\n            count += 1\n     \
    \       n += temp\n        }\n        temp\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2828bik5.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36marr\e[0m : mutable.MutableList[\e\
    [35mInt\e[0m] = mutable.MutableList.empty\n\e[31m\e[31m   |\e[0m             \
    \     ^^^^^^^\e[0m\n\e[31m   |\e[0m                  Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp2828bik5.scala:16:45 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36marr\e[0m : mutable.MutableList[\e\
    [35mInt\e[0m] = mutable.MutableList.empty\n\e[31m\e[31m   |\e[0m             \
    \                                ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \                              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmp2828bik5.scala:25:14 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m            n += temp\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long -\
    \ did you mean n.!=?\n3 errors found\n"
  stdout: ''
  timestamp: 1660010083
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primeList = new scala.collection.mutable.ListBuffer[Long]()\n\
    \        primeList += 2\n        primeList += 3\n        while ((n > 0l) && (primeList.contains(n)))\n\
    \            primeList += 5\n        while ((n > 0l) && (primeList.contains(n)))\n\
    \            primeList += 7\n        while ((n > 0l) && (primeList.contains(n)))\n\
    \            primeList += 11\n        while ((n > 0l) && (primeList.contains(n)))\n\
    \            primeList += 13\n        while ((n > 0l) && (primeList.contains(n)))\n\
    \            primeList += 17\n        while ((n > 0l) && (primeList.contains(n)))\n\
    \            primeList += 19\n        while ((n > 0l) && (primeList.contains(n)))\n\
    \            primeList += 23\n        primeList.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp2xqrp0dh.scala:36)\n\tat Problem.main(tmp2xqrp0dh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010087
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n < 3l) {\n            return n\n        }\n       \
    \ else {\n            val nextFib = (n + 1l).fibonacci()\n            if (nextFib\
    \ > n + 1l) {\n                nextFib\n            }\n            else {\n  \
    \              primeFib(nextFib)\n            }\n        }\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp71ngt29y.scala:20:35 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mval\e[0m \e[36mnextFib\e[0m = (n +\
    \ \e[31m1l\e[0m).fibonacci()\n\e[31m\e[31m   |\e[0m                          ^^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                          value fibonacci is not a member\
    \ of Long\n1 error found\n"
  stdout: ''
  timestamp: 1660010085
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib_1 =  1L\n        var fib_2 = 2L\n        var fib_3\
    \ =  1L\n        var num_prime = 1L\n        var i = n\n\n        while (i !=\
    \ 1L)\n        {\n            var temp = fib_1\n            fib_1 = fib_2\n  \
    \          fib_2 = temp\n            var temp = fib_2\n            fib_3 = fib_3\
    \ + fib_2\n            num_prime += 1\n\n            i += 1\n        }\n\n   \
    \     fib_3\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmps70nl0tp.scala:27:16 ---------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            \e[33mvar\e[0m \e[36mtemp\e[0m = fib_2\n\e\
    [31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0mtemp is already\
    \ defined as \e[33mvariable\e[0m \e[35mtemp\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0mNote that overloaded methods must all be defined in the same group of toplevel\
    \ definitions\n1 error found\n"
  stdout: ''
  timestamp: 1660010081
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = scala.collection.mutable.ListBuffer.empty[Long]\n\
    \        var current = 2l\n        while (primes.size < n)\n        {\n      \
    \      primes += current\n            current += 1l\n        }\n        primes.take(n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphue8zwfc.scala:23:20\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        primes.take(n)\n\e[31m\e\
    [31m   |\e[0m                    ^\e[0m\n\e[31m   |\e[0m                    Found:\
    \    (n : Long)\n\e[31m   |\e[0m                    Required: Int\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010090
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var p : Long = n.toInt\n        var q : Long = 1\n     \
    \   var r : Long = 0\n        while (p < q) {\n            r = p + q\n       \
    \     if (r > n)\n                q = r\n            else {\n                p\
    \ += q\n                p += r\n            }\n        }\n        return p\n \
    \   }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpazdn023p.scala:31)\n\tat Problem.main(tmpazdn023p.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val r = BigInt(2)\n        val d = BigInt(5)\n        while\
    \ (n >= d) {\n            val t = r.multiply(r)\n            val u = d\n     \
    \       val v = d\n            val m = (v + u) / 2\n            if ((n % m) ==\
    \ 0) {\n                r = u\n                d = v\n            } else {\n \
    \               r = v\n                d = m\n            }\n        }\n     \
    \   r\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpdeeh1ucg.scala:19:22 ------------------------\e\
    [0m\e[0m\n\e[31m19 |\e[0m            \e[33mval\e[0m \e[36mt\e[0m = r.multiply(r)\n\
    \e[31m\e[31m   |\e[0m                    ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m    \
    \                value multiply is not a member of BigInt\n\e[31m\e[31m-- [E052]\
    \ Type Error: /tmp/tmpdeeh1ucg.scala:24:18 -----------------------------\e[0m\e\
    [0m\n\e[31m24 |\e[0m                r = u\n\e[31m\e[31m   |\e[0m             \
    \   ^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val r\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E052] Type Error: /tmp/tmpdeeh1ucg.scala:25:18 -----------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                d = v\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val d\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpdeeh1ucg.scala:27:18 -----------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                r = v\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val r\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpdeeh1ucg.scala:28:18 -----------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m                d = m\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Reassignment to val d\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpdeeh1ucg.scala:31:8\
    \ ---------------------\e[0m\e[0m\n\e[31m31 |\e[0m        r\n\e[31m\e[31m   |\e\
    [0m        ^\e[0m\n\e[31m   |\e[0m        Found:    (r : BigInt)\n\e[31m   |\e\
    [0m        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n6 errors found\n"
  stdout: ''
  timestamp: 1660010092
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if ( n < 2l ) {\n            if ( n == 2l ) {\n        \
    \        return 1l\n            }\n            return n\n        }\n        val\
    \ cache = new mutable.HashMap[Long, Long]()\n        def primeF(n, acc: Long):\
    \ Long = {\n            if ( cache.containsKey(n) ) {\n                return\
    \ cache.get(n)\n            }\n            if ( n % 2l == 0l ) {\n           \
    \     val nextN = primeF(n / 2l, acc)\n                if ( n % 4l == 0l ) {\n\
    \                    val nextNextN = primeF(n / 4l, nextN)\n                 \
    \   cache.set(n, nextNextN)\n                } else {\n                    cache.set(n,\
    \ nextN)\n                }\n                return nextN\n            }\n   \
    \         val nextN = primeF(n / 2l, acc)\n            cache.set(n, nextN)\n \
    \           return nextN\n        }\n        primeF(n, 1l)\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpcsv4fvg9.scala:23:20 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mdef\e[0m \e[36mprimeF\e[0m(\e[36mn\e[0m,\
    \ \e[36macc\e[0m: \e[35mLong\e[0m): \e[35mLong\e[0m = {\n\e[31m\e[31m   |\e[0m\
    \                    ^\e[0m\n\e[31m   |\e[0m                    ':' expected,\
    \ but ',' found\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpcsv4fvg9.scala:22:24\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mval\e[0m \e\
    [36mcache\e[0m = \e[33mnew\e[0m mutable.HashMap[\e[35mLong\e[0m, \e[35mLong\e\
    [0m]()\n\e[31m\e[31m   |\e[0m                        ^^^^^^^\e[0m\n\e[31m   |\e\
    [0m                        Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010084
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var p = 2l\n        var q = 2l\n        var r : Long = p\
    \ + (q * p)\n        while(r > n){\n            q = (q * p)%n\n            p =\
    \ q\n            q = p + (q * p)\n            r = p + (q * p)\n        }\n   \
    \     return r\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpbbimm3wh.scala:28)\n\tat Problem.main(tmpbbimm3wh.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010091
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val cache = mutable.ArrayBuffer.empty[Int]\n        def\
    \ loop(i: Int, a: Int, b: Int) : Long = {\n            if (i == 0) a\n       \
    \     else loop(i-1, a + b, cache(i-1) + cache(i-2))\n        }\n        loop(n,\
    \ 2, n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpsygwx05s.scala:16:20 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mcache\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mInt\e[0m]\n\e[31m\e[31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                    Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E007] Type Mismatch Error: /tmp/tmpsygwx05s.scala:21:13 --------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        loop(n, \e[31m2\e[0m, n)\n\e[31m\e[31m   |\e\
    [0m             ^\e[0m\n\e[31m   |\e[0m             Found:    (n : Long)\n\e[31m\
    \   |\e[0m             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpsygwx05s.scala:21:19 --------------------\e[0m\e\
    [0m\n\e[31m21 |\e[0m        loop(n, \e[31m2\e[0m, n)\n\e[31m\e[31m   |\e[0m  \
    \                 ^\e[0m\n\e[31m   |\e[0m                   Found:    (n : Long)\n\
    \e[31m   |\e[0m                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n      val fibs = mutable.ListBuffer[Long](1l, 2l)\n      val limit\
    \ = (1l) until (n).dropRight(1)\n\n      for {\n        i <- limit\n        j\
    \ <- fibs.lastOption\n      } yield {\n        if (j+i == n) return j\n      \
    \  fibs += i+j\n        j\n      }\n      fibs.last\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp87_wu4pp.scala:16:17 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m      \e[33mval\e[0m \e[36mfibs\e[0m = mutable.ListBuffer[\e\
    [35mLong\e[0m](\e[31m1l\e[0m, \e[31m2l\e[0m)\n\e[31m\e[31m   |\e[0m          \
    \       ^^^^^^^\e[0m\n\e[31m   |\e[0m                 Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp87_wu4pp.scala:17:33 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m      \e[33mval\e[0m \e[36mlimit\e[0m = (\e[31m1l\e[0m)\
    \ until (n).dropRight(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                   \
    \          ^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                             value\
    \ dropRight is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1660010094
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = scala.collection.mutable.ListBuffer[(Long, Boolean)]()\n\
    \        var a = 2l\n        var b = 3l\n        for(i <- 0 to n) {\n        \
    \    if((b == a)) {\n                fib.add((a,true))\n                a = b\n\
    \                b += 2l\n            }\n            else {\n                fib.add((a,false))\n\
    \                a = b\n                b += 2l\n            }\n        }\n  \
    \      fib.last._1._1\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpvg_cdhbc.scala:19:22\
    \ --------------------\e[0m\e[0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m to n) {\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m\
    \   |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m        \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpvg_cdhbc.scala:21:20 ------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m                fib.add((a,\e[31mtrue\e[0m))\n\e[31m\e[31m   |\e[0m       \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0mvalue add is not a member of scala.collection.mutable.ListBuffer[(Long,\
    \ Boolean)], but could be made available as an extension method.\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.mutableSeq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.seq\
    \ AsJavaList\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.collection\
    \ asJava\n\e[31m   |\e[0m  import collection.convert.ImplicitConversionsToJava.collection\
    \ asJava\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpvg_cdhbc.scala:26:20\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m                fib.add((a,\e\
    [31mfalse\e[0m))\n\e[31m\e[31m   |\e[0m                ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0mvalue add is not a member of scala.collection.mutable.ListBuffer[(Long,\
    \ Boolean)], but could be made available as an extension method.\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0mOne of the following imports might fix the problem:\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m  import collection.convert.ImplicitConversions.buffer\
    \ AsJavaList\n\e[31m   |\e[0m  i"
  stdout: ''
  timestamp: 1660010098
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // Initialize first two fibonacci numbers. Because Fibonacci\
    \ numbers are less than or equal to\n        // the given number and the given\
    \ number is not prime or even Fibonacci number, the first\n        // two fibonacci\
    \ numbers are less than or equal to the given number.\n        var fibonacciFirst\
    \ = (1l) // 1\n        var fibonacciSecond = (2l) // 1\n        for(i <- 2 to\
    \ n){\n            // If the given number is not a prime or even fibonacci number,\
    \ increment second fibonacci\n            // number by adding the first two fibonacci\
    \ numbers.\n            if(fibonacciSecond.isPrime || fibonacciSecond == fibonacciFirst){\n\
    \                fibonacciSecond += fibonacciFirst\n            } else {\n   \
    \             // If n is not a prime or even fibonacci number, then return the\
    \ given number as the\n                // result.\n                break\n   \
    \         }\n        }\n        return fibonacciSecond\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmps6mw8koq.scala:21:22\
    \ --------------------\e[0m\e[0m\n\e[31m21 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmps6mw8koq.scala:24:31 ------------------------\e[0m\e[0m\n\e[31m24 |\e\
    [0m            \e[33mif\e[0m(fibonacciSecond.isPrime || fibonacciSecond == fibonacciFirst){\n\
    \e[31m\e[31m   |\e[0m               ^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m               value isPrime is not a member of Long\n\e[31m\e[31m-- [E006]\
    \ Not Found Error: /tmp/tmps6mw8koq.scala:29:16 ------------------------\e[0m\e\
    [0m\n\e[31m29 |\e[0m                break\n\e[31m\e[31m   |\e[0m             \
    \   ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010098
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 1l\n        var b = 2l\n        var count = 0l\n\
    \        while( (count < n) && ( (a <= b) && ( b <= math.sqrt((a * a))) ) ) {\n\
    \            count = count + 1l\n            a = a + b\n            b = b - a\n\
    \        }\n        if( count == n ) {\n            return a\n        } else {\n\
    \            return -1l\n        }\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp6e8wd023.scala:31)\n\tat Problem.main(tmp6e8wd023.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010098
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if(n == 0 || n == 1) return n\n        val f: List[Long]\
    \ = List(2l, 3l, 5l, 8l, 13l, 21l, 34l, 55l, 89l)\n        f.indexOf(n)\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpxyjlev9n.scala:21)\n\tat Problem.main(tmpxyjlev9n.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val i = 2\n        var a = 2\n        var b = 1\n      \
    \  var c = 2\n        val p = 3\n        var n = n\n        var p = p\n      \
    \  var i = i\n        val prime = 0\n        while ((p <= n) && (prime == 0))\
    \ {\n            for (i in 0 until i) {\n                val temp = a\n      \
    \          a = b\n                b = temp\n            }\n            for (i\
    \ in 0 until i) {\n                val temp = c\n                c = p\n     \
    \           p = temp\n            }\n            var m = 2\n            for (i\
    \ in 0 until m) {\n                val temp = p\n                p = m\n     \
    \           m = temp\n            }\n            i = i + 1\n            if (b\
    \ == a) {\n                prime = 1\n            }\n        }\n        if (prime\
    \ == 1) {\n            return a\n        } else {\n            return b\n    \
    \    }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpma71j1jb.scala:26:33 ---------------------------\e\
    [0m\e[0m\n\e[31m26 |\e[0m            \e[33mfor\e[0m (i in \e[31m0\e[0m until i)\
    \ {\n\e[31m\e[31m   |\e[0m                                 ^\e[0m\n\e[31m   |\e\
    [0m                                 '<-' expected, but '{' found\n\e[31m\e[31m--\
    \ [E020] Syntax Error: /tmp/tmpma71j1jb.scala:46:8 ----------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        }\n\e[31m\e[31m   |\e[0m        ^\e[0m\n\e[31m\
    \   |\e[0m        \e[33myield\e[0m or \e[33mdo\e[0m expected\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E161] Naming Error: /tmp/tmpma71j1jb.scala:22:12 ---------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m        \e[33mvar\e[0m \e[36mp\e[0m = p\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mp is already defined as \e[33mvalue\e\
    [0m \e[35mp\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E161] Naming Error: /tmp/tmpma71j1jb.scala:23:12 ---------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m        \e[33mvar\e[0m \e[36mi\e[0m = i\n\e[31m\e[31m\
    \   |\e[0m        ^^^^^^^^^\e[0m\n\e[31m   |\e[0mi is already defined as \e[33mvalue\e\
    [0m \e[35mi\e[0m\n\e[31m   |\e[0m\n\e[31m   |\e[0mNote that overloaded methods\
    \ must all be defined in the same group of toplevel definitions\n\e[31m\e[31m--\
    \ [E045] Cyclic Error: /tmp/tmpma71j1jb.scala:21:16 ---------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m        \e[33mvar\e[0m \e[36mn\e[0m = n\n\e[31m\e[31m\
    \   |\e[0m                ^\e[0m\n\e[31m   |\e[0m                Recursive \e\
    [33mvariable\e[0m \e[35mn\e[0m needs type\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpma71j1jb.scala:30:13 ------------------------\e[0m\e\
    [0m\n\e[31m30 |\e[0m            }\n\e[31m\e[31m   |\e[0m             ^\e[0m\n\e\
    [31m   |\e[0mvalue withFilter is not a member of Null, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m  "
  stdout: ''
  timestamp: 1660010100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n : Long) : Boolean = {\n            val i =\
    \ 2\n            while (i <= n / i) {\n                if (n % i == 0)\n     \
    \               return false\n                i += 2\n            }\n        \
    \    true\n        }\n        val fib = n -2 // n - 2 because 0 is also prime.\n\
    \        if (fib == 0 || fib == 1)\n            return fib\n        val max =\
    \ (2l to fib).find {\n            n => isPrime(n.toLong)\n        }.filter(_ %\
    \ 2 == 0)\n        if (max.isEmpty)\n            fib\n        else\n         \
    \   max.get\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp2jciblx0.scala:21:18 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m                i += \e[31m2\e[0m\n\e[31m\e[31m   |\e\
    [0m                ^^^^\e[0m\n\e[31m   |\e[0m                value += is not a\
    \ member of Int - did you mean i.!=?\n1 error found\n"
  stdout: ''
  timestamp: 1660010099
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // base cases\n        if(n < 3) return n\n        if(n\
    \ < 5) return 5l\n\n        // finding out whether n is divisible by 4 or not\n\
    \        var divisors = 2l\n        var current = 2l\n        while(divisors.compareTo(n)\
    \ > 0){\n            divisors += current\n            current += 2l\n        }\n\
    \        // if current is greater than n\n        if(current.compareTo(n) > 0){\n\
    \            return n\n        } else {\n            val remainder = n % current\n\
    \            return primeFib(divisors) + remainder\n        }\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpwcoasi2b.scala:36)\n\tat Problem.main(tmpwcoasi2b.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n      if(n < 4) return n\n      if(n % 2 == 0) primeFib(n / 2)\n\
    \      else primeFib(3 * n + 2)\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp9a25if8z.scala:21)\n\tat Problem.main(tmp9a25if8z.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Int) : Boolean = {\n            if (n <=\
    \ 2) false\n            else if (n % 2 == 0 || n % 3 == 0) false\n           \
    \ else true\n        }\n        def sum(a: Int, b: Int) : Int = {\n          \
    \  val sum = a+b\n            sum\n        }\n        var sum : Int = 0\n    \
    \    var n2 : int = n\n        while (n2 >= 2) {\n            if (isPrime(n2))\
    \ {\n                sum = sum(sum, n2)\n                n2 = n2 - 1\n       \
    \     }\n            else {\n                n2 = n2 - 2\n            }\n    \
    \    }\n        sum\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E161] Naming Error: /tmp/tmprealvtjz.scala:25:12 ---------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m        \e[33mvar\e[0m \e[36msum\e[0m : \e[35mInt\e[0m\
    \ = \e[31m0\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0msum is already defined as \e[33mmethod\e[0m \e[35msum\e[0m\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0mNote that overloaded methods must all be defined in\
    \ the same group of toplevel definitions\n\e[31m\e[31m-- [E006] Not Found Error:\
    \ /tmp/tmprealvtjz.scala:26:17 ------------------------\e[0m\e[0m\n\e[31m26 |\e\
    [0m        \e[33mvar\e[0m \e[36mn2\e[0m : \e[35mint\e[0m = n\n\e[31m\e[31m   |\e\
    [0m                 ^^^\e[0m\n\e[31m   |\e[0m                 Not found: type\
    \ int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprealvtjz.scala:29:26\
    \ --------------------\e[0m\e[0m\n\e[31m29 |\e[0m                sum = sum(sum,\
    \ n2)\n\e[31m\e[31m   |\e[0m                          ^^^\e[0m\n\e[31m   |\e[0m\
    \                          Found:    (Int, Int) => Int\n\e[31m   |\e[0m      \
    \                    Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmprealvtjz.scala:36:8 ---------------------\e[0m\e[0m\n\e[31m36\
    \ |\e[0m        sum\n\e[31m\e[31m   |\e[0m        ^^^\e[0m\n\e[31m   |\e[0m  \
    \      Found:    (Int, Int) => Int\n\e[31m   |\e[0m        Required: Long\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n4 errors found\n"
  stdout: ''
  timestamp: 1660010103
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = scala.collection.mutable.HashSet[Long]()\n\
    \        var a = 2\n        var b = 1\n        while(a < n){\n            if(primes.contains(a)){\n\
    \                a += 1\n            }else{\n                primes.add(a)\n \
    \               b = a + b\n                a += 1\n            }\n        }\n\
    \        b\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvadg81nq.scala:31)\n\tat Problem.main(tmpvadg81nq.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010105
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib = 2L\n        while (fib < n) {\n            fib\
    \ = fib + fib\n        }\n        fib\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzwwiirfz.scala:24)\n\tat Problem.main(tmpzwwiirfz.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010105
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n : Long) : Boolean = \n            {\n    \
    \            if (n == 1l || n == 2l) true\n                else {\n          \
    \          val isPrime = (n % 2l) == 0l\n                    if (!isPrime) isPrime\n\
    \                    else { val isPrime = (n % 3l) == 0l; !isPrime }\n       \
    \         }\n            }\n        // n is odd so n-1 is prime and n-2 not so\
    \ return n-2 as the answer\n        if (isPrime(n-1l)) { n-2l }\n        // n\
    \ is even so n-1 is not prime and n-2 is, so return n-2 as the answer\n      \
    \  else { n-2l }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp14pgelzv.scala:31)\n\tat Problem.main(tmp14pgelzv.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010105
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // n is less than or equal to 10\n        if (n <= 10) {\n\
    \            return n\n        }\n        val isPrime = (2l) until (n).forall\
    \ {\n            case x if x % _ == 0 => false\n            case x => true\n \
    \       }\n        if (isPrime)\n            return n\n        else\n        \
    \    return primeFib(n + 2l) \n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E081] Type Error: /tmp/tmp11aqdhpz.scala:21:26 -----------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            \e[33mcase\e[0m x \e[33mif\e[0m x % _ ==\
    \ \e[31m0\e[0m => \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                    \
    \      ^\e[0m\n\e[31m   |\e[0m   Missing parameter type\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m   I could not infer the type of the parameter _$1 of expanded function:\n\
    \e[31m   |\e[0m   _$1 => \n\e[31m   |\e[0m     (\e[31m2L\e[0m) until \n\e[31m\
    \   |\e[0m       (n).forall(\n\e[31m   |\e[0m         {\n\e[31m   |\e[0m     \
    \      \e[33mcase \e[0mx\e[33m if \e[0mx % _$1 == 0 => \n\e[31m   |\e[0m     \
    \        \e[31mfalse\e[0m\n\e[31m   |\e[0m           \e[33mcase \e[0mx => \n\e\
    [31m   |\e[0m             \e[31mtrue\e[0m\n\e[31m   |\e[0m         }\n\e[31m \
    \  |\e[0m       ).\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp11aqdhpz.scala:20:37\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e\
    [36misPrime\e[0m = (\e[31m2l\e[0m) until (n).forall {\n\e[31m\e[31m   |\e[0m \
    \                                ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            \
    \                     value forall is not a member of Long\n2 errors found\n"
  stdout: ''
  timestamp: 1660010108
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def iterate(i : Long, memo : mutable.HashSet[Long]) : Long\
    \ = {\n            if (i <= 1) {\n                memo(i)\n            } else\
    \ {\n                val next = i + 2\n                iterate(next, memo)\n \
    \           }\n        }\n\n        var i : Long = 0\n        var memo : mutable.HashSet[Long]\
    \ = mutable.HashSet()\n        iterate(i, memo)\n        memo(n).asInstanceOf[Long]\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6_6lzuf.scala:16:37 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mdef\e[0m \e[36miterate\e[0m(\e[36mi\e[0m\
    \ : \e[35mLong\e[0m, \e[36mmemo\e[0m : mutable.HashSet[\e[35mLong\e[0m]) : \e\
    [35mLong\e[0m = {\n\e[31m\e[31m   |\e[0m                                     ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                     Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6_6lzuf.scala:26:19\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mvar\e[0m \e\
    [36mmemo\e[0m : mutable.HashSet[\e[35mLong\e[0m] = mutable.HashSet()\n\e[31m\e\
    [31m   |\e[0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                \
    \   Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available\
    \ when compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpc6_6lzuf.scala:26:43\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m        \e[33mvar\e[0m \e\
    [36mmemo\e[0m : mutable.HashSet[\e[35mLong\e[0m] = mutable.HashSet()\n\e[31m\e\
    [31m   |\e[0m                                           ^^^^^^^\e[0m\n\e[31m \
    \  |\e[0m                                           Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010100
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // Check if n is prime.\n        if(n.toInt==1) return n\n\
    \        if(isPrime(n)) \n            // If n is a prime, return its Fibonacci\
    \ number.\n            return fib(n.toInt)\n        else\n            // If n\
    \ is not a prime, find the Fibonacci number which is not prime.\n            val\
    \ fib_not_prime = fib(n.toInt)\n            while(!isPrime(fib_not_prime)) fib_not_prime\
    \ = fib(n.toInt)\n            fib_not_prime\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpck9p00ox.scala:18:11 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        \e[33mif\e[0m(isPrime(n)) \n\e[31m\e[31m   |\e\
    [0m           ^^^^^^^\e[0m\n\e[31m   |\e[0m           Not found: isPrime\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpck9p00ox.scala:20:19 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mreturn\e[0m fib(n.toInt)\n\e[31m\e\
    [31m   |\e[0m                   ^^^\e[0m\n\e[31m   |\e[0m                   Not\
    \ found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpck9p00ox.scala:23:32\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            \e[33mval\e[0m\
    \ \e[36mfib_not_prime\e[0m = fib(n.toInt)\n\e[31m\e[31m   |\e[0m             \
    \                   ^^^\e[0m\n\e[31m   |\e[0m                                Not\
    \ found: fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpck9p00ox.scala:24:19\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m            \e[33mwhile\e\
    [0m(!isPrime(fib_not_prime)) fib_not_prime = fib(n.toInt)\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Not found:\
    \ isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpck9p00ox.scala:24:59\
    \ ------------------------\e[0m\e[0m\n\e[31m24 |\e[0m            \e[33mwhile\e\
    [0m(!isPrime(fib_not_prime)) fib_not_prime = fib(n.toInt)\n\e[31m\e[31m   |\e\
    [0m                                                           ^^^\e[0m\n\e[31m\
    \   |\e[0m                                                          Not found:\
    \ fib\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n5 errors found\n"
  stdout: ''
  timestamp: 1660010101
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primesArray = Array.fill(n + 1) {\n            if (Math.sqrt(i\
    \ + 1) == 1) {\n                println(\"i\" + i + \"'s square root is \" + Math.sqrt(i)\
    \ + \"; it's a whole number!\");\n                1\n            } else {\n  \
    \              if (i % 2 == 0) {\n                    println(\"i\" + i + \"'s\
    \ square root is \" + Math.sqrt(i) + \"; it's even.\");\n                    2\n\
    \                } else {\n                    println(\"i\" + i + \"'s square\
    \ root is \" + Math.sqrt(i) + \"; it's odd.\");\n                    3\n     \
    \           }\n            }\n        }\n        val primes = primesArray\n  \
    \      val fibonacciArray = Array.fill(n + 1) {\n            if (primes(n - 2)\
    \ == 2) {\n                println(\"i\" + i + \"'s Fibonacci number is \" + i\
    \ * (n - 2) + \"; it's a whole number!\");\n                n - 2\n          \
    \  } else {\n                if (primes(n - 2) == 3) {\n                    println(\"\
    i\" + i + \"'s Fibonacci number is \" + i * (n - 2) + \"; it's even.\");\n   \
    \                 n - 2\n                } else {\n                    println(\"\
    i\" + i + \"'s Fibonacci number is \" + i * (n - 2) + \"; it's odd.\");\n    \
    \                n - 3\n                }\n            }\n        }\n        val\
    \ fibonacci = fibonacciArray\n        primes(n), fibonacci(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmprzu3vi41.scala:46:17 -----------------------------------------\e\
    [0m\e[0m\n\e[31m46 |\e[0m        primes(n), fibonacci(n)\n\e[31m\e[31m   |\e[0m\
    \                 ^\e[0m\n\e[31m   |\e[0m                 end of statement expected\
    \ but ',' found\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmprzu3vi41.scala:16:37\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimesArray\e\
    [0m = Array.fill(n + \e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m                  \
    \                   ^^^^^\e[0m\n\e[31m   |\e[0m                              \
    \       Found:    Long\n\e[31m   |\e[0m                                     Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprzu3vi41.scala:17:26\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m\
    \ (Math.sqrt(i + \e[31m1\e[0m) == \e[31m1\e[0m) {\n\e[31m\e[31m   |\e[0m     \
    \                     ^\e[0m\n\e[31m   |\e[0m                          Not found:\
    \ i\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprzu3vi41.scala:18:30\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                println(\e\
    [31m\"i\"\e[0m + i + \e[31m\"'s square root is \"\e[0m + Math.sqrt(i) + \e[31m\"\
    ; it's a whole number!\"\e[0m);\n\e[31m\e[31m   |\e[0m                       \
    \       ^\e[0m\n\e[31m   |\e[0m                              Not found: i\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmprzu3vi41.scala:18:67\
    \ ------------------------\e[0m\e[0m\n\e[31m18 |\e[0m                println(\e\
    [31m\"i\"\e[0m + i + \e[31m\"'s square root is \"\e[0m + Math.sqrt(i) + \e[31m\"\
    ; it's a whole number!\"\e[0m);\n\e[31m\e[31m   |\e[0m                       \
    \                                            ^\e[0m\n\e[31m   |\e[0m         \
    \                                                   Not found: i\n\e[31m   |\e\
    [0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E00"
  stdout: ''
  timestamp: 1660010112
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n == 1l) 2l\n        else if (n == 2l) 3l\n        else\
    \ if (n == 3l) 5l\n        else { \n            val sqrt = (long) Math.sqrt(n);\n\
    \            val fib = n-long(sqrt);\n            val newfib = (fib % 2l) + 1l;\n\
    \            if (newfib == long(sqrt)) newfib\n            else primeFib(newfib)\
    \ \n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmpfzgz_msy.scala:20:34 ---------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m            \e[33mval\e[0m \e[36msqrt\e[0m = (long) Math.sqrt(n);\n\
    \e[31m\e[31m   |\e[0m                                  ^\e[0m\n\e[31m   |\e[0m\
    \                                  expression expected but \e[31m'.'\e[0m found\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfzgz_msy.scala:20:24\
    \ ------------------------\e[0m\e[0m\n\e[31m20 |\e[0m            \e[33mval\e[0m\
    \ \e[36msqrt\e[0m = (long) Math.sqrt(n);\n\e[31m\e[31m   |\e[0m              \
    \          ^^^^\e[0m\n\e[31m   |\e[0m                        Not found: long\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpfzgz_msy.scala:21:24\
    \ ------------------------\e[0m\e[0m\n\e[31m21 |\e[0m            \e[33mval\e[0m\
    \ \e[36mfib\e[0m = n-long(sqrt);\n\e[31m\e[31m   |\e[0m                      \
    \  ^^^^\e[0m\n\e[31m   |\e[0m                        Not found: long\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010103
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val memo = mutable.HashMap[Long, Long]()\n        def prime(n:\
    \ Long): Long = n match {\n            case 0 | 1 => n\n            case n if\
    \ n % 2 == 0 => prime(n * 2)\n            case n if n % 2 == 1 => prime(n * 3\
    \ + 1)\n            case n => memo.get(n) match {\n                case None =>\
    \ {\n                    val q = prime(n * 3 + 1)\n                    memo(n)\
    \ = (q * q * n) / n\n                    q\n                }\n              \
    \  case Some(ans) => ans\n            }\n        }\n        memo.get(n) match\
    \ {\n            case None => prime(n + 2)\n            case Some(ans) => ans\n\
    \        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbpv5lpo.scala:16:19 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mmemo\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m, \e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m                   ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                   Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpdbpv5lpo.scala:27:34 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                \e[33mcase\e[0m Some(ans) => ans\n\e\
    [31m\e[31m   |\e[0m                                  ^^^\e[0m\n\e[31m   |\e[0m\
    \                                  Not found: ans\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E006] Not Found Error: /tmp/tmpdbpv5lpo.scala:32:30 ------------------------\e\
    [0m\e[0m\n\e[31m32 |\e[0m            \e[33mcase\e[0m Some(ans) => ans\n\e[31m\e\
    [31m   |\e[0m                              ^^^\e[0m\n\e[31m   |\e[0m         \
    \                     Not found: ans\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010106
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 1\n        var b : Long = 2\n        var\
    \ i : Long = 1\n        while (i < n) {\n            val temp = a\n          \
    \  a = b\n            b = temp + b\n            i += 1\n        }\n        a\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpvwz1sqjd.scala:28)\n\tat Problem.main(tmpvwz1sqjd.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector(2l, 3l, 5l)\n        fibs.drop(n).takeWhile(fibs(_)\
    \ < n).head\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa9_v96u3.scala:17:18\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs.drop(n).takeWhile(fibs(_)\
    \ < n).head\n\e[31m\e[31m   |\e[0m                  ^\e[0m\n\e[31m   |\e[0m  \
    \                Found:    (n : Long)\n\e[31m   |\e[0m                  Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpa9_v96u3.scala:17:36\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs.drop(n).takeWhile(fibs(_)\
    \ < n).head\n\e[31m\e[31m   |\e[0m                                    ^\e[0m\n\
    \e[31m   |\e[0m                                    Found:    (_$1 : Long)\n\e\
    [31m   |\e[0m                                    Required: Int\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 0l\n        var b = 1l\n        var sum = 0l\n \
    \       while(true){\n            if(n % a == 0){\n                b = b - a\n\
    \                sum = b + sum\n            }\n            else\n            \
    \    a = a + b\n            if(b == 0)\n                break\n            n+=1\n\
    \        }\n        return sum\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpy313d9e6.scala:27:16 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpy313d9e6.scala:28:13 ------------------------\e\
    [0m\e[0m\n\e[31m28 |\e[0m            n+=\e[31m1\e[0m\n\e[31m\e[31m   |\e[0m  \
    \          ^^^\e[0m\n\e[31m   |\e[0m            value += is not a member of Long\
    \ - did you mean n.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010114
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var i : Long = 0\n        var j : Long = 1\n        var\
    \ n : Long = 1\n        var sum : Long = 0\n        while (i != 0) {\n       \
    \     if (n % i == 0) {\n                if (i % 2 == 0) {\n                 \
    \   n = n / 2\n                } else {\n                    n = n * 3 + 1\n \
    \               }\n                i = i + 1\n            } else {\n         \
    \       i = i + 1\n            }\n        }\n        return sum\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpzdt4av__.scala:35)\n\tat Problem.main(tmpzdt4av__.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 0L\n        var b = 1L\n        for(i <- 1 to n){\n\
    \            if(a != 1L && b != 1L) {\n                val c = a + b\n       \
    \         a = b\n                b = c\n            }\n            else {\n  \
    \              a = b\n                b = 2L\n            }\n        }\n     \
    \   if(b == 1L)\n            b\n        else\n            -1L\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpe_0vvw2m.scala:18:22\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n : Long) : Boolean = {\n            var i :\
    \ Long = 1\n            var count : Long = 1\n            while (i <= n){\n  \
    \              if (i % i == 0)\n                { count += 1; i = 0}\n       \
    \         else {i += 1}\n            }\n            count == n\n        }\n  \
    \      var fibo : Long = 1\n        while(fibo < n)\n        { fibo += 1 }\n \
    \       if (n == 0)\n        { return 1 }\n        else if (n % 2 == 0)\n    \
    \    { return 2 }\n        else { //if n is odd, check from 3 to sqrt(n) \n  \
    \          if (isPrime((Math.sqrt(n) + 1l)))\n            { \n               \
    \ while(fibo < n)\n                { fibo += 1 }\n                return fibo\n\
    \            }\n            else {\n                while(fibo < n) //if n is\
    \ not prime, check from 1 to sqrt(n)\n                { fibo += 1 }\n        \
    \        return primeFib((Math.sqrt(n) + 1l))\n            }\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp9quo_4pk.scala:34:25\
    \ --------------------\e[0m\e[0m\n\e[31m34 |\e[0m            \e[33mif\e[0m (isPrime((Math.sqrt(n)\
    \ + \e[31m1l\e[0m)))\n\e[31m\e[31m   |\e[0m                         ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                         Found:    Double\n\e[31m   |\e[0m\
    \                         Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmp9quo_4pk.scala:43:33 --------------------\e[0m\e\
    [0m\n\e[31m43 |\e[0m                \e[33mreturn\e[0m primeFib((Math.sqrt(n) +\
    \ \e[31m1l\e[0m))\n\e[31m\e[31m   |\e[0m                                 ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                                 Found:    Double\n\e[31m\
    \   |\e[0m                                 Required: Long\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n2 errors\
    \ found\n"
  stdout: ''
  timestamp: 1660010121
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib : Long = 0\n        var nextFib : Long = 1\n   \
    \     while (fib < n){\n            fib = nextFib\n            nextFib = fib +\
    \ fib\n        }\n        fib\n    }\n    def main(args: Array[String]) = {\n\
    \    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n  \
    \  assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n   \
    \ assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n  \
    \  assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpgernbi3o.scala:25)\n\tat Problem.main(tmpgernbi3o.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010121
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val arr = mutable.ArrayBuffer.empty[Long]\n        var prev\
    \ = 0\n        var curr = 1\n        while (arr.length < n){\n            arr\
    \ += curr\n            curr += prev\n            prev = curr\n        }\n    \
    \    arr(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp_xeu1th4.scala:16:18 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36marr\e[0m = mutable.ArrayBuffer.empty[\e\
    [35mLong\e[0m]\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e[0m\n\e[31m  \
    \ |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010114
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fib_list : mutable.List[Long] = mutable.ListBuffer()\n\
    \        var i : Long = 1\n        while(i <= n){\n            fib_list += i\n\
    \            i = i + 2\n        }\n        if(fib_list.contains(n)) n\n      \
    \  else primeFib(n+1)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9z72zmvt.scala:16:23 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e[36mfib_list\e[0m : mutable.List[\e\
    [35mLong\e[0m] = mutable.ListBuffer()\n\e[31m\e[31m   |\e[0m                 \
    \      ^^^^^^^\e[0m\n\e[31m   |\e[0m                       Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp9z72zmvt.scala:16:44\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mvar\e[0m \e\
    [36mfib_list\e[0m : mutable.List[\e[35mLong\e[0m] = mutable.ListBuffer()\n\e[31m\e\
    [31m   |\e[0m                                            ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                            Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    2 errors found\n"
  stdout: ''
  timestamp: 1660010113
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibNums = new mutable.ListBuffer[Long]()\n        fibNums\
    \ += 2\n        fibNums += 3\n\n        var j = 1\n        while (fibNums.size\
    \ < n)\n        {\n            if (fibNums.contains(j))\n            {\n     \
    \           j += 2\n            }\n            else\n            {\n         \
    \       fibNums += j\n                j = 1\n            }\n        }\n      \
    \  fibNums(n)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpvgp4p2eh.scala:16:26 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibNums\e[0m = \e[33mnew\e\
    [0m mutable.ListBuffer[\e[35mLong\e[0m]()\n\e[31m\e[31m   |\e[0m             \
    \             ^^^^^^^\e[0m\n\e[31m   |\e[0m                          Not found:\
    \ mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var fibonacci = scala.math.BigInt(1)\n        var prime\
    \ = 1\n        while(fibonacci < n) {\n            fibonacci = fibonacci + scala.math.BigInt(2)\n\
    \            prime = prime + 1\n        }\n        return fibonacci - scala.math.BigInt(1)\
    \ + prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpovviggmb.scala:22:15\
    \ --------------------\e[0m\e[0m\n\e[31m22 |\e[0m        \e[33mreturn\e[0m fibonacci\
    \ - scala.math.BigInt(\e[31m1\e[0m) + prime\n\e[31m\e[31m   |\e[0m           \
    \    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m          \
    \     Found:    BigInt\n\e[31m   |\e[0m               Required: Long\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010120
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if ((n <= 0l) || (n == 2l)) {\n            return n\n  \
    \      }\n        else if (n == 1l) {\n            return 2l\n        }\n    \
    \    else if (n == 2l) {\n            return 3l\n        }\n        else {\n \
    \           var a : Long = n - 2l\n            var b : Long = 3l + 0l\n      \
    \      while (b < a) {\n                var c = a + b\n                if (n %\
    \ c == 0l) {\n                    a = c\n                } else {\n          \
    \          b = c\n                }\n            }\n            return b\n   \
    \     }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp4_m94ju8.scala:41)\n\tat Problem.main(tmp4_m94ju8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010122
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n      val num = (2l*n+1l*(n+1)+1)\n      val sq = num.pow(2l*n)\n\
    \      if(sq.equals(num)) sq else {\n        val num2 = (2l*(n+1)-1l*(n+1)+1)\n\
    \        val sq2 = num2.pow(2l*(n+1))\n        if(sq2.equals(num2)) sq2 else {\n\
    \          val num3 = (2l*(n+1)-2l*(n+1)+1)\n          val sq3 = num3.pow(2l*(n+1))\n\
    \          if(sq3.equals(num3)) sq3 else {\n            val num4 = (2l*(n+1)-3l*(n+1)+1)\n\
    \            val sq4 = num4.pow(2l*(n+1))\n            if(sq4.equals(num4)) sq4\
    \ else {\n              val num5 = (2l*(n+1)-4l*(n+1)+1)\n              val sq5\
    \ = num5.pow(2l*(n+1))\n              if(sq5.equals(num5)) sq5 else {\n      \
    \          val num6 = (2l*(n+1)-5l*(n+1)+1)\n                val sq6 = num6.pow(2l*(n+1))\n\
    \                if(sq6.equals(num6)) sq6 else {\n                  val num7 =\
    \ (2l*(n+1)-6l*(n+1)+1)\n                  val sq7 = num7.pow(2l*(n+1))\n    \
    \              if(sq7.equals(num7)) sq7 else {\n                    val num8 =\
    \ (2l*(n+1)-7l*(n+1)+1)\n                    val sq8 = num8.pow(2l*(n+1))\n  \
    \                  if(sq8.equals(num8)) sq8 else {\n                      val\
    \ num9 = (2l*(n+1)-8l*(n+1)+1)\n                      val sq9 = num9.pow(2l*(n+1))\n\
    \                      if(sq9.equals(num9)) sq9 else {\n                     \
    \   val num10 = (2l*(n+1)-9l*(n+1)+1)\n                        val sq10 = num10.pow(2l*(n+1))\n\
    \                        if(sq10.equals(num10)) sq10 else {\n                \
    \          val num11 = (2l*(n+1)-10l*(n+1)+1)\n                          val sq11\
    \ = num11.pow(2l*(n+1))\n                          if(sq11.equals(num11)) sq11\
    \ else {\n                            val num12 = (2l*(n+1)-11l*(n+1)+1)\n   \
    \                         val sq12 = num12.pow(2l*(n+1))\n                   \
    \         if(sq12.equals(num12)) sq12 else {\n                              val\
    \ num13 = (2\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpl5n2scmi.scala:53:4 ----------------------------\e\
    [0m\e[0m\n\e[31m53 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    ')' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpl5n2scmi.scala:68:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m68 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E008] Not\
    \ Found Error: /tmp/tmpl5n2scmi.scala:17:19 ------------------------\e[0m\e[0m\n\
    \e[31m17 |\e[0m      \e[33mval\e[0m \e[36msq\e[0m = num.pow(\e[31m2l\e[0m*n)\n\
    \e[31m\e[31m   |\e[0m               ^^^^^^^\e[0m\n\e[31m   |\e[0mvalue pow is\
    \ not a member of Long, but could be made available as an extension method.\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports might fix the problem:\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\e[31m\
    \   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpl5n2scmi.scala:20:23 ------------------------\e[0m\e\
    [0m\n\e[31m20 |\e[0m        \e[33mval\e[0m \e[36msq2\e[0m = num2.pow(\e[31m2l\e\
    [0m*(n+\e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                  ^^^^^^^^\e[0m\n\e\
    [31m   |\e[0mvalue pow is not a member of Long, but could be made available as\
    \ an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following imports\
    \ might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\
    \e[31m   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl5n2scmi.scala:23:25 ------------------------\e\
    [0m\e[0m\n\e[31m23 |\e[0m          \e[33mval\e[0m \e[36msq3\e[0m = num3.pow(\e\
    [31m2l\e[0m*(n+\e[31m1\e[0m))\n\e[31m\e[31m   |\e[0m                    ^^^^^^^^\e\
    [0m\n\e[31m   |\e[0mvalue pow is not a member of Long, but could be made available\
    \ as an extension method.\n\e[31m   |\e[0m\n\e[31m   |\e[0mOne of the following\
    \ imports might fix the problem:\n\e[31m   |\e[0m\n\e[31m   |\e[0m  import math.BigDecimal.long2bigDecimal\n\
    \e[31m   |\e[0m  import math.BigInt.long2bigInt\n\e[31m   |\e[0m\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpl5n2scmi.scala:26:27 -------"
  stdout: ''
  timestamp: 1660010129
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibArray = Array(2, 3); \n        for(x <- 1 to n){\n\
    \            fibArray += fibArray(0)\n        }\n        fibArray.last \n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpb_28dizx.scala:17:22\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mfor\e[0m(x <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpb_28dizx.scala:18:21 ------------------------\e[0m\e[0m\n\e[31m18 |\e\
    [0m            fibArray += fibArray(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m     \
    \       ^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m      value += is not a member of Array[Int]\
    \ - did you mean fibArray.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010125
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        \n        while\
    \ (true) {\n            \n            val c = b\n            b = a + (b - a)\n\
    \            a = c\n            if (b > n) \n                break\n        }\n\
    \        \n        return b\n    }\n    def main(args: Array[String]) = {\n  \
    \  assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l))\
    \ == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) ==\
    \ (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) ==\
    \ (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmp242un1a3.scala:25:16 ------------------------\e\
    [0m\e[0m\n\e[31m25 |\e[0m                break\n\e[31m\e[31m   |\e[0m        \
    \        ^^^^^\e[0m\n\e[31m   |\e[0m                Not found: break\n\e[31m \
    \  |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010116
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(10)(2)\n        val current = 2\n\
    \        // For each n, we calculate it's n-th Fibonacci number and its prime.\n\
    \        // We store them in Vector and calculate the sum of them at the end.\n\
    \        for(i <- 1 to n){\n            val result = fibs(current)\n         \
    \   current += 1\n            fibs(current) = fibs(current - 1) + fibs(current\
    \ - 2)\n        }\n        // We calculate the sum of them.\n        fibs(current).sum\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpwsehad71.scala:20:22\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m1\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpwsehad71.scala:22:20 ------------------------\e[0m\e[0m\n\e[31m22 |\e\
    [0m            current += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value += is not a member of Int - did you mean\
    \ current.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpwsehad71.scala:23:12\
    \ ------------------------\e[0m\e[0m\n\e[31m23 |\e[0m            fibs(current)\
    \ = fibs(current - \e[31m1\e[0m) + fibs(current - \e[31m2\e[0m)\n\e[31m\e[31m\
    \   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not a member of\
    \ Vector[Int] - did you mean fibs.updated?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmpwsehad71.scala:26:22 ------------------------\e[0m\e[0m\n\e[31m26 |\e\
    [0m        fibs(current).sum\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value sum is not a member of Int\n4 errors found\n"
  stdout: ''
  timestamp: 1660010129
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def fibs(n : Long, n1 : Long, n2 : Long): Long = {\n   \
    \         if (n1 === n2) {\n                n\n            } else if (n1 < n2)\
    \ {\n                fibs(n1, n2 + n1, n2)\n            } else {\n           \
    \     fibs(n2, n1 + n2, n1)\n            }\n        }\n        fibs(1, 1, n)\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpuatmddkg.scala:17:19 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m            \e[33mif\e[0m (n1 === n2) {\n\e[31m\e[31m\
    \   |\e[0m                ^^^^^^\e[0m\n\e[31m   |\e[0m                value ===\
    \ is not a member of Long - did you mean n1.==?\n1 error found\n"
  stdout: ''
  timestamp: 1660010125
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var pf : Long = 1\n        var pf2 : Long = 2\n        var\
    \ pf3 : Long = 3\n        // pf is Fibonacci number and it's also prime\n    \
    \    // pf2 is Fibonacci number but it's not a prime\n        // pf3 is Fibonacci\
    \ number but it's not a prime\n        while(n > 0){\n            pf = pf2\n \
    \           pf2 = pf2\n            pf3 = pf + pf2\n            pf := pf2\n   \
    \         pf2 := pf + pf2\n            pf := pf2\n            n--\n        }\n\
    \        return pf\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E018] Syntax Error: /tmp/tmp63uwc1ze.scala:29:15 ---------------------------\e\
    [0m\e[0m\n\e[31m29 |\e[0m            n--\n\e[31m\e[31m   |\e[0m              \
    \ ^\e[0m\n\e[31m   |\e[0m               expression expected but \e[31m'}'\e[0m\
    \ found\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp63uwc1ze.scala:26:15\
    \ ------------------------\e[0m\e[0m\n\e[31m26 |\e[0m            pf := pf2\n\e\
    [31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            value :=\
    \ is not a member of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmp63uwc1ze.scala:27:16 ------------------------\e[0m\e[0m\n\e[31m27\
    \ |\e[0m            pf2 := pf + pf2\n\e[31m\e[31m   |\e[0m            ^^^^^^\e\
    [0m\n\e[31m   |\e[0m            value := is not a member of Long - did you mean\
    \ Long.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp63uwc1ze.scala:28:15\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m            pf := pf2\n\e\
    [31m\e[31m   |\e[0m            ^^^^^\e[0m\n\e[31m   |\e[0m            value :=\
    \ is not a member of Long - did you mean Long.!=?\n4 errors found\n"
  stdout: ''
  timestamp: 1660010130
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes : mutable.Set[Long] = mutable.Set(1)\n      \
    \  val fibonacci : mutable.Set[Long] = mutable.Set(0)\n        for (i <- 2 to\
    \ n) {\n            if (fibonacci.contains(i)) {\n                primes.add(i)\n\
    \            } else {\n                fibonacci.add(i)\n            }\n     \
    \   }\n        return primes.last\n    }\n    def main(args: Array[String]) =\
    \ {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoxgnbyfv.scala:16:21 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m : mutable.Set[\e\
    [35mLong\e[0m] = mutable.Set(\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \         ^^^^^^^\e[0m\n\e[31m   |\e[0m                     Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoxgnbyfv.scala:16:41\
    \ ------------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e\
    [36mprimes\e[0m : mutable.Set[\e[35mLong\e[0m] = mutable.Set(\e[31m1\e[0m)\n\e\
    [31m\e[31m   |\e[0m                                         ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                                         Not found: mutable\n\e[31m\
    \   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    \e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoxgnbyfv.scala:17:24 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e[36mfibonacci\e[0m : mutable.Set[\e\
    [35mLong\e[0m] = mutable.Set(\e[31m0\e[0m)\n\e[31m\e[31m   |\e[0m            \
    \            ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpoxgnbyfv.scala:17:44\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        \e[33mval\e[0m \e\
    [36mfibonacci\e[0m : mutable.Set[\e[35mLong\e[0m] = mutable.Set(\e[31m0\e[0m)\n\
    \e[31m\e[31m   |\e[0m                                            ^^^^^^^\e[0m\n\
    \e[31m   |\e[0m                                            Not found: mutable\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpoxgnbyfv.scala:18:23\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m (i <-\
    \ \e[31m2\e[0m to n) {\n\e[31m\e[31m   |\e[0m                       ^\e[0m\n\e\
    [31m   |\e[0m                       Found:    (n : Long)\n\e[31m   |\e[0m    \
    \                   Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ availab"
  stdout: ''
  timestamp: 1660010128
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // A small prime number is defined as a composite number\
    \ that is \n        // less than or equal to twice the square root of a large\
    \ prime number\n        // (https://en.wikipedia.org/wiki/Prime_number_theorem)\n\
    \        // A Fibonacci number is a large prime number that is divisible by two\n\
    \        // And this two together make the biggest Fibonacci number (and it is\
    \ also prime)\n        // We assume that all primes are less than 1000 and that\
    \ \n        // Fibonacci numbers are less than 1000000 \n        if(n == 2) 2l\n\
    \        else if(n == 3l) 3l\n        else if(n == 5l) 5l\n        else if(n ==\
    \ 10l) 10l\n        else if(n == 20l) 20l\n        else if(n == 50l) 50l\n   \
    \     else if(n == 100l) 100l\n        else if(n == 500l) 500l\n        else if(n\
    \ == 1000l) 1000l\n        else if(n == 10000l) 10000l\n        else if(n == 100000l)\
    \ 100000l\n        else if(n == 1000000l) 1000000l\n        else if(n == 1000000l)\
    \ 1000000l\n        else if(n == 1000000l) 1000000l\n        else if(n == 10000000l)\
    \ 10000000l\n        else if(n == 100000000l) 100000000l\n        else if(n ==\
    \ 1000000000l) 1000000000l\n        else if(n == 10000000000l) 10000000000l\n\
    \        else if(n == 100000000000l) 100000000000l\n        else if(n == 1000000000000l)\
    \ 1000000000000l\n        else if(n == 10000000000000l) 10000000000000l\n    \
    \    else if(n == 100000000000000l) 100000000000000l\n        else if(n == 1000000000000000l)\
    \ 1000000000000000l\n        else if(n == 10000000000000000l) 10000000000000000l\n\
    \        else if(n == 100000000000000000l) 100000000000000000l\n        else if(n\
    \ == 1000000000000000000l) 1000000000000000000l\n        else if(n == 10000000000000000000l)\
    \ 10000000000000000000l\n        else if(n == 100000000000000000000l) 100000000000000000000l\n\
    \        else if(n == 1000000000000000000000l) 1000000000000000000000l\n     \
    \   else if(n == 10000000000000000000000l) 10000000000000000000000l\n        else\
    \ if(n == 100000000000000000000000l) 100000000000000000000000l\n        else if(n\
    \ == 1000000000000000000000000l) 1000000000000000000000000l\n        else if(n\
    \ == 10000000000000000000000000l) 10000000000000000000000000l\n        else if(n\
    \ == 100000000000000000000000000l) 100000000000000000000000000l\n        else\
    \ if(n == 1000000000000000000000000000l) \n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- Error: /tmp/tmp0z4ijoi5.scala:49:21 -----------------------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m(n == \e[31m10000000000000000000l\e\
    [0m) \e[31m10000000000000000000l\e[0m\n\e[31m\e[31m   |\e[0m                 \
    \    ^\e[0m\n\e[31m   |\e[0m                     number too large\n\e[31m\e[31m--\
    \ [E040] Syntax Error: /tmp/tmp0z4ijoi5.scala:49:44 ---------------------------\e\
    [0m\e[0m\n\e[31m49 |\e[0m        \e[33melse\e[0m \e[33mif\e[0m(n == \e[31m10000000000000000000l\e\
    [0m) \e[31m10000000000000000000l\e[0m\n\e[31m\e[31m   |\e[0m                 \
    \                           ^\e[0m\n\e[31m   |\e[0m                          \
    \          ')' expected, but long literal found\n\e[33m\e[33m-- [E129] Potential\
    \ Issue Warning: /tmp/tmp0z4ijoi5.scala:58:4 -----------------\e[0m\e[0m\n\e[33m57\
    \ |\e[0m        \e[33melse\e[0m \e[33mif\e[0m(n == \e[31m1000000000000000000000000000l\e\
    [0m) \n\e[33m58 |\e[0m    }\n\e[33m\e[33m   |\e[0m                           \
    \                        ^\e[0m\n\e[33m   |\e[0mA pure expression does nothing\
    \ in statement position; you may be omitting necessary parentheses\n\e[33m   |\e\
    [0m\n\e[33m   |\e[0m longer explanation available when compiling with `-explain`\n\
    1 warning found\n2 errors found\n"
  stdout: ''
  timestamp: 1660010124
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var lastFib :Long = 0\n        var nextFib :Long = 1\n \
    \       while (n > 0) {\n            nextFib = lastFib + nextFib\n           \
    \ lastFib = nextFib\n            nextFib++\n            n -= 1\n        }\n  \
    \      return lastFib\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpgqk0z0r5.scala:21:19 ------------------------\e\
    [0m\e[0m\n\e[31m21 |\e[0m            nextFib++\n\e[31m\e[31m   |\e[0m        \
    \    ^^^^^^^^^\e[0m\n\e[31m   |\e[0m            value ++ is not a member of Long\n\
    1 error found\n"
  stdout: ''
  timestamp: 1660010128
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // use mutable.Buffer collection to save all fibonacci numbers\n\
    \        var fib : mutable.Buffer[Long] = mutable.Buffer()\n        var previous\
    \ = 0\n        fib += 0\n        fib += 1\n        // start from n-1 because the\
    \ first number is 0\n        for (i <- 1 to (n - 1)){\n            fib += (fib\
    \ - previous)\n            previous = fib\n        }\n        // remove the first\
    \ two numbers, because they are 0\n        fib.drop(2).toSeq\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpuobyfa75.scala:17:18 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m : mutable.Buffer[\e\
    [35mLong\e[0m] = mutable.Buffer()\n\e[31m\e[31m   |\e[0m                  ^^^^^^^\e\
    [0m\n\e[31m   |\e[0m                  Not found: mutable\n\e[31m   |\e[0m\n\e\
    [31m   |\e[0m longer explanation available when compiling with `-explain`\n\e\
    [31m\e[31m-- [E006] Not Found Error: /tmp/tmpuobyfa75.scala:17:41 ------------------------\e\
    [0m\e[0m\n\e[31m17 |\e[0m        \e[33mvar\e[0m \e[36mfib\e[0m : mutable.Buffer[\e\
    [35mLong\e[0m] = mutable.Buffer()\n\e[31m\e[31m   |\e[0m                     \
    \                    ^^^^^^^\e[0m\n\e[31m   |\e[0m                           \
    \              Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpuobyfa75.scala:22:24 --------------------\e[0m\e[0m\n\e[31m22\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m1\e[0m to (n - \e[31m1\e[0m)){\n\e\
    [31m\e[31m   |\e[0m                        ^^^^^\e[0m\n\e[31m   |\e[0m       \
    \                 Found:    Long\n\e[31m   |\e[0m                        Required:\
    \ Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010131
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        // base case\n        if (n == 0 || n == 1) {\n        \
    \    return n\n        }\n        // recursive case\n        if (n % 2 == 0) {\n\
    \            return primeFib(3 * n + 1)\n        }\n        else {\n         \
    \   return primeFib(3 * n - 1)\n        }\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp7dro0hu8.scala:29)\n\tat Problem.main(tmp7dro0hu8.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010136
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var last = 0\n        var last1 = 1\n        var prime =\
    \ 0\n        var prime1 = 1\n        for(i <- 2 to n){\n            last += last1\n\
    \            last1 = last\n            prime += prime1\n            prime1 = prime\n\
    \        }\n        prime\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp2h8563ig.scala:20:22\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n){\n\e[31m\e[31m   |\e[0m                      ^\e[0m\n\e[31m \
    \  |\e[0m                      Found:    (n : Long)\n\e[31m   |\e[0m         \
    \             Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010135
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrimeFib(x: Long) : Boolean = {\n            if((x%2l)\
    \ == 0) return false\n            if(x%3l==0) return false\n            if(x%5l==0)\
    \ return false\n            if(x%7l==0) return false\n            if(x%11l==0)\
    \ return false\n            if(x%13l==0) return false\n            if(x%17l==0)\
    \ return false\n            if(x%19l==0) return false\n            if(x%23l==0)\
    \ return false\n            if(x%29l==0) return false\n            if(x%31l==0)\
    \ return false\n            if(x%37l==0) return false\n            if(x%41l==0)\
    \ return false\n            if(x%47l==0) return false\n            if(x%53l==0)\
    \ return false\n            if(x%59l==0) return false\n            if(x%61l==0)\
    \ return false\n            if(x%67l==0) return false\n            if(x%73l==0)\
    \ return false\n            if(x%79l==0) return false\n            if(x%83l==0)\
    \ return false\n            if(x%89l==0) return false\n            if(x%97l==0)\
    \ return false\n            if(x%101l==0) return false\n            if(x%103l==0)\
    \ return false\n            if(x%107l==0) return false\n            if(x%109l==0)\
    \ return false\n            if(x%113l==0) return false\n            if(x%127l==0)\
    \ return false\n            if(x%131l==0) return false\n            if(x%137l==0)\
    \ return false\n            if(x%139l==0) return false\n            if(x%141l==0)\
    \ return false\n            if(x%143l==0) return false\n            if(x%147l==0)\
    \ return false\n            if(x%149l==0) return false\n            if(x%151l==0)\
    \ return false\n            if(x%157l==0) return false\n            if(x%163l==0)\
    \ return false\n            if(x%167l==0) return false\n            if(x%173l==0)\
    \ return false\n            if(x%179l==0) return false\n            if(x%181l==0)\
    \ return false\n            if(x%191l==0) return false\n            if(x%193l==0)\
    \ \n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) ==\
    \ (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n\
    \    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo7qdty57.scala:62:4 ----------------------------\e\
    [0m\e[0m\n\e[31m62 |\e[0m    }\n\e[31m\e[31m   |\e[0m    ^\e[0m\n\e[31m   |\e\
    [0m    'then' expected, but '}' found\n\e[31m\e[31m-- [E040] Syntax Error: /tmp/tmpo7qdty57.scala:77:0\
    \ ----------------------------\e[0m\e[0m\n\e[31m77 |\e[0m\n\e[31m\e[31m   |\e\
    [0m^\e[0m\n\e[31m   |\e[0m'}' expected, but eof found\n\e[31m\e[31m-- [E007] Type\
    \ Mismatch Error: /tmp/tmpo7qdty57.scala:76:1 ---------------------\e[0m\e[0m\n\
    \e[31m76 |\e[0m}\n\e[31m\e[31m   |\e[0m ^\e[0m\n\e[31m   |\e[0m Found:    Unit\n\
    \e[31m   |\e[0m Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[33m\e[33m-- Warning: /tmp/tmpo7qdty57.scala:63:4\
    \ ----------------------------------------\e[0m\e[0m\n\e[33m63 |\e[0m    \e[33mdef\e\
    [0m \e[36mmain\e[0m(\e[36margs\e[0m: \e[35mArray\e[0m[\e[35mString\e[0m]) = {\n\
    \e[33m\e[33m   |\e[0m    ^\e[0m\n\e[33m   |\e[0m    Line is indented too far to\
    \ the left, or a `}` is missing\n1 warning found\n3 errors found\n"
  stdout: ''
  timestamp: 1660010138
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primeFreq = mutable.HashMap[Long,Long]();\n        primeFreq.put(1l,1l);\n\
    \        primeFreq.put(2l,2l);\n        primeFreq.put(3l,3l);\n        primeFreq.put(4l,5l);\n\
    \        primeFreq.put(5l,10l);\n        primeFreq.put(6l,15l);\n        primeFreq.put(7l,21l);\n\
    \        primeFreq.put(8l,28l);\n        primeFreq.put(9l,36l);\n        primeFreq.put(10l,45l);\n\
    \        primeFreq.put(11l,57l);\n        primeFreq.put(12l,66l);\n        primeFreq.put(13l,76l);\n\
    \        primeFreq.put(14l,86l);\n        primeFreq.put(15l,96l);\n        primeFreq.put(16l,106l);\n\
    \        primeFreq.put(17l,114l);\n        primeFreq.put(18l,120l);\n        primeFreq.put(19l,129l);\n\
    \        primeFreq.put(20l,138l);\n        primeFreq.put(21l,147l);\n        primeFreq.put(22l,156l);\n\
    \        primeFreq.put(23l,164l);\n        primeFreq.put(24l,172l);\n        primeFreq.put(25l,180l);\n\
    \        primeFreq.put(26l,188l);\n        primeFreq.put(27l,196l);\n        primeFreq.put(28l,204l);\n\
    \        primeFreq.put(29l,212l);\n        primeFreq.put(30l,220l);\n        primeFreq.put(31l,228l);\n\
    \        primeFreq.put(32l,236l);\n        primeFreq.put(33l,246l);\n        primeFreq.put(34l,254l);\n\
    \        primeFreq.put(35l,262l);\n        primeFreq.put(36l,270l);\n        primeFreq.put(37l,278l);\n\
    \        primeFreq.put(38l,286l);\n        primeFreq.put(39l,294l);\n        primeFreq.put(40l,302l);\n\
    \        primeFreq.put(41l,308l);\n        primeFreq.put(42l,316l);\n        primeFreq.put(43l,322l);\n\
    \        primeFreq.put(44l,330l);\n        primeFreq.put(45l,338l);\n        primeFreq.put(46l,346l);\n\
    \        primeFreq.put(47l,352l);\n        primeFreq.put(48l,360l);\n        primeFreq.put(49l,368l);\n\
    \        primeF\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpril9zo__.scala:16:24 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimeFreq\e[0m = mutable.HashMap[\e\
    [35mLong\e[0m,\e[35mLong\e[0m]();\n\e[31m\e[31m   |\e[0m                     \
    \   ^^^^^^^\e[0m\n\e[31m   |\e[0m                        Not found: mutable\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpril9zo__.scala:66:8\
    \ -------------------------\e[0m\e[0m\n\e[31m66 |\e[0m        primeF\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^\e[0m\n\e[31m   |\e[0m        Not found: primeF\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010130
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val primes = mutable.ArrayBuffer(2l) \n        var next_prime\
    \ = 2l\n        while (next_prime < n && !primes.contains(next_prime)) {\n   \
    \         primes += next_prime \n            next_prime += 1l\n        }\n   \
    \     primes.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmpiwc0a1j0.scala:16:21 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mprimes\e[0m = mutable.ArrayBuffer(\e\
    [31m2l\e[0m) \n\e[31m\e[31m   |\e[0m                     ^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                     Not found: mutable\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010131
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n      if (n == 1l || n == 0l) {\n        if (n == 1l) {\n      \
    \    1l\n        } else {\n          0l\n        }\n      } else if (n % 2l ==\
    \ 0l) {\n        primeFib(n / 2l) + 1l\n      } else {\n        primeFib(n / 2l)\
    \ + 1l\n      }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpj69i9pp_.scala:29)\n\tat Problem.main(tmpj69i9pp_.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010137
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n <= 2)\n            return n\n        val first = primeFib(n\
    \ / 2l)\n        val second = primeFib(n / 2l)\n        if (second > first)\n\
    \            second\n        else\n            first\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnw3cudvi.scala:26)\n\tat Problem.main(tmpnw3cudvi.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010138
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a : Long = 0\n        var b : Long = 1\n        var\
    \ i : Long = 1\n        while (i<n) {\n            if (b%i == 0) {\n         \
    \       a = b\n            }\n            b = b+a\n            i += 1\n      \
    \  }\n        return a\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmph8oa8f2a.scala:29)\n\tat Problem.main(tmph8oa8f2a.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010139
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var nextFib = 1l\n\
    \        var count = 0l\n\n        // If n is even.\n        if (n.toLong % 2\
    \ == 0) {\n            a = b\n            n = n.toLong / 2\n        }\n      \
    \  // If n is odd.\n        else {\n            b = nextFib\n            nextFib\
    \ = a + b\n            n = n.toLong / 2\n        }\n\n        // Loop to find\
    \ and return the prime number.\n        n match {\n            case 0l => a\n\
    \            case 1l => b\n            case _  => nextFib\n        }\n    }\n\
    \    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E052] Type Error: /tmp/tmpb33m7b8_.scala:24:14 -----------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            n = n.toLong / \e[31m2\e[0m\n\e[31m\e[31m\
    \   |\e[0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m            Reassignment\
    \ to val n\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when\
    \ compiling with `-explain`\n\e[31m\e[31m-- [E052] Type Error: /tmp/tmpb33m7b8_.scala:30:14\
    \ -----------------------------\e[0m\e[0m\n\e[31m30 |\e[0m            n = n.toLong\
    \ / \e[31m2\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m            Reassignment to val n\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n2 errors found\n"
  stdout: ''
  timestamp: 1660010132
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n : Long) : Boolean = {\n            val sqrt:\
    \ Long = Math.sqrt(n)\n            var i: Long = 1\n            while (i <= sqrt)\
    \ {\n                if (n % i == 0)\n                    return false\n     \
    \           i += 1\n            }\n            return true\n        }\n      \
    \  if (isPrime(n)) {\n            return n\n        }\n        var a: Long = 1\n\
    \        var b: Long = 1\n        val m: Long = n - 1\n        while (m >= 1)\
    \ {\n            val n: Long = a + b\n            a = b\n            b = n\n \
    \           m -= 1\n        }\n        if (n > 1)\n            primeFib(n + 1)\n\
    \        else\n            a\n    }\n    def main(args: Array[String]) = {\n \
    \   assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n   \
    \ assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l))\
    \ == (89l));\n    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l))\
    \ == (1597l));\n    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l))\
    \ == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmphqkakw4l.scala:17:38\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mval\e[0m \e\
    [36msqrt\e[0m: \e[35mLong\e[0m = Math.sqrt(n)\n\e[31m\e[31m   |\e[0m         \
    \                    ^^^^^^^^^^^^\e[0m\n\e[31m   |\e[0m                      \
    \       Found:    Double\n\e[31m   |\e[0m                             Required:\
    \ Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling\
    \ with `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmphqkakw4l.scala:36:14\
    \ ------------------------\e[0m\e[0m\n\e[31m36 |\e[0m            m -= \e[31m1\e\
    [0m\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value\
    \ -= is not a member of Long - did you mean m.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010140
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var x = 0l\n        var y = 0l\n        var z = 0l\n   \
    \     var fib : Long = 1l\n        var isPrime : Boolean = false\n        while\
    \ (!isPrime) {\n            if (fib > n) {\n                isPrime = true\n \
    \           }\n            if (fib == n) {\n                return fib\n     \
    \       }\n            if (fib % 2 == 0) {\n                fib = fib * 3 + 1\n\
    \            } else if (fib % 3 == 0) {\n                fib = fib * 5 + 1\n \
    \           } else {\n                fib = fib * 3 + 1\n            }\n     \
    \       x += 1\n            y += 1\n            z += 1\n        }\n        fib\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmpnhzplj_5.scala:42)\n\tat Problem.main(tmpnhzplj_5.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010143
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fibs = Vector.fill(n)((0l))\n        fibs(0) += 1l\n\
    \        fibs(1) += 2l\n        fibs(2) += 3l\n        fibs(3) += 5l\n       \
    \ fibs(4) += 13l\n        fibs(5) += 89l\n        fibs.takeWhile(elem => elem\
    \ != fibs.last).last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6bo0owzc.scala:16:31\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfibs\e\
    [0m = Vector.fill(n)((\e[31m0l\e[0m))\n\e[31m\e[31m   |\e[0m                 \
    \              ^\e[0m\n\e[31m   |\e[0m                               Found:  \
    \  (n : Long)\n\e[31m   |\e[0m                               Required: Int\n\e\
    [31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6bo0owzc.scala:17:16\
    \ ------------------------\e[0m\e[0m\n\e[31m17 |\e[0m        fibs(\e[31m0\e[0m)\
    \ += \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        value += is not a member of Long - did you mean Long.!=?\n\e[31m\e\
    [31m-- [E008] Not Found Error: /tmp/tmp6bo0owzc.scala:18:16 ------------------------\e\
    [0m\e[0m\n\e[31m18 |\e[0m        fibs(\e[31m1\e[0m) += \e[31m2l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a\
    \ member of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp6bo0owzc.scala:19:16 ------------------------\e[0m\e[0m\n\e[31m19 |\e\
    [0m        fibs(\e[31m2\e[0m) += \e[31m3l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m        value += is not a member of Long - did you mean Long.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6bo0owzc.scala:20:16 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m        fibs(\e[31m3\e[0m) += \e[31m5l\e[0m\n\e[31m\e\
    [31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a\
    \ member of Long - did you mean Long.!=?\n\e[31m\e[31m-- [E008] Not Found Error:\
    \ /tmp/tmp6bo0owzc.scala:21:16 ------------------------\e[0m\e[0m\n\e[31m21 |\e\
    [0m        fibs(\e[31m4\e[0m) += \e[31m13l\e[0m\n\e[31m\e[31m   |\e[0m       \
    \ ^^^^^^^^^^\e[0m\n\e[31m   |\e[0m        value += is not a member of Long - did\
    \ you mean Long.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmp6bo0owzc.scala:22:16\
    \ ------------------------\e[0m\e[0m\n\e[31m22 |\e[0m        fibs(\e[31m5\e[0m)\
    \ += \e[31m89l\e[0m\n\e[31m\e[31m   |\e[0m        ^^^^^^^^^^\e[0m\n\e[31m   |\e\
    [0m        value += is not a member of Long"
  stdout: ''
  timestamp: 1660010146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if (n < 2) n\n        else {\n            var a = 2\n  \
    \          var b = 2\n            while (b < n) {\n                val mid = (a+b)/2\n\
    \                if (isPrime(mid)) {\n                    a = mid\n          \
    \      } else {\n                    b = mid\n                }\n            }\n\
    \            b\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E006] Not Found Error: /tmp/tmplbqi7sg3.scala:22:20 ------------------------\e\
    [0m\e[0m\n\e[31m22 |\e[0m                \e[33mif\e[0m (isPrime(mid)) {\n\e[31m\e\
    [31m   |\e[0m                    ^^^^^^^\e[0m\n\e[31m   |\e[0m               \
    \     Not found: isPrime\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010137
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val a = 2l\n        val b = 5l\n        val c = 5l\n   \
    \     val d = 6l\n        val r = 0l\n        var i = 0l\n        while(n>0l){\n\
    \            val tmp = a+b\n            a := b\n            b := tmp\n       \
    \     r := r + a\n            c := d + (r%b)\n            d := tmp\n         \
    \   n -= 1l\n            i += 1l\n        }\n        r\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplgsfp7uf.scala:24:14 ------------------------\e\
    [0m\e[0m\n\e[31m24 |\e[0m            a := b\n\e[31m\e[31m   |\e[0m           \
    \ ^^^^\e[0m\n\e[31m   |\e[0m            value := is not a member of Long - did\
    \ you mean a.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplgsfp7uf.scala:25:14\
    \ ------------------------\e[0m\e[0m\n\e[31m25 |\e[0m            b := tmp\n\e\
    [31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value :=\
    \ is not a member of Long - did you mean b.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmplgsfp7uf.scala:26:14 ------------------------\e[0m\e[0m\n\e[31m26\
    \ |\e[0m            r := r + a\n\e[31m\e[31m   |\e[0m            ^^^^\e[0m\n\e\
    [31m   |\e[0m            value := is not a member of Long - did you mean r.!=?\n\
    \e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplgsfp7uf.scala:27:14 ------------------------\e\
    [0m\e[0m\n\e[31m27 |\e[0m            c := d + (r%b)\n\e[31m\e[31m   |\e[0m   \
    \         ^^^^\e[0m\n\e[31m   |\e[0m            value := is not a member of Long\
    \ - did you mean c.!=?\n\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmplgsfp7uf.scala:28:14\
    \ ------------------------\e[0m\e[0m\n\e[31m28 |\e[0m            d := tmp\n\e\
    [31m\e[31m   |\e[0m            ^^^^\e[0m\n\e[31m   |\e[0m            value :=\
    \ is not a member of Long - did you mean d.!=?\n\e[31m\e[31m-- [E008] Not Found\
    \ Error: /tmp/tmplgsfp7uf.scala:29:14 ------------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m            n -= \e[31m1l\e[0m\n\e[31m\e[31m   |\e[0m            ^^^^\e\
    [0m\n\e[31m   |\e[0m            value -= is not a member of Long - did you mean\
    \ n.!=?\n6 errors found\n"
  stdout: ''
  timestamp: 1660010145
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 0\n        var b = 1\n        for(i <- 2 to n step\
    \ 2){\n            if(b%i == 0){\n                a+=1\n            }\n      \
    \  }\n        return b\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpgkt7bz3j.scala:18:22\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m2\e[0m to n step \e[31m2\e[0m){\n\e[31m\e[31m   |\e[0m                   \
    \   ^\e[0m\n\e[31m   |\e[0m                      Found:    (n : Long)\n\e[31m\
    \   |\e[0m                      Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m\
    \ longer explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010145
- exit_code: 0
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2l\n        var b = 3l\n        var c = 5l\n   \
    \     var i = 1l\n        while (i <= n && a < n)\n        {\n            val\
    \ p = (a * b) % c\n            if (p < a)\n            {\n                a =\
    \ p\n            }\n            else \n            {\n                b = p\n\
    \            }\n            i += 1\n        }\n        if (n == a)\n        {\n\
    \            return a\n        }\n        if (n == b)\n        {\n           \
    \ return b\n        }\n        var result = a + b\n        return result\n   \
    \ }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Exception
  stderr: "java.lang.AssertionError: assertion failed\n\tat scala.runtime.Scala3RunTime$.assertFailed(Scala3RunTime.scala:11)\n\
    \tat Problem$.main(tmp0ur_czr3.scala:45)\n\tat Problem.main(tmp0ur_czr3.scala)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\n\
    \tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\n\
    \tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\
    \tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\n\tat dotty.tools.runner.RichClassLoader$.run$extension$$anonfun$1(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.ScalaClassLoader$.asContext(ScalaClassLoader.scala:80)\n\
    \tat dotty.tools.runner.RichClassLoader$.dotty$tools$runner$RichClassLoader$$$asContext$extension(ScalaClassLoader.scala:18)\n\
    \tat dotty.tools.runner.RichClassLoader$.run$extension(ScalaClassLoader.scala:36)\n\
    \tat dotty.tools.runner.CommonRunner.run(ObjectRunner.scala:23)\n\tat dotty.tools.runner.CommonRunner.run$(ObjectRunner.scala:13)\n\
    \tat dotty.tools.runner.ObjectRunner$.run(ObjectRunner.scala:48)\n\tat dotty.tools.runner.CommonRunner.runAndCatch(ObjectRunner.scala:30)\n\
    \tat dotty.tools.runner.CommonRunner.runAndCatch$(ObjectRunner.scala:13)\n\tat\
    \ dotty.tools.runner.ObjectRunner$.runAndCatch(ObjectRunner.scala:48)\n\tat dotty.tools.MainGenericRunner$.run$1(MainGenericRunner.scala:213)\n\
    \tat dotty.tools.MainGenericRunner$.main(MainGenericRunner.scala:268)\n\tat dotty.tools.MainGenericRunner.main(MainGenericRunner.scala)\n"
  stdout: ''
  timestamp: 1660010146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val ln = scala.math.lcm.toInt (n.toLong)\n        val fibonacciSeq\
    \ = scala.collection.mutable.ListBuffer.empty[Long]\n        fibonacciSeq += n\n\
    \        fibonacciSeq += n-1\n        fibonacciSeq += n+1\n        fibonacciSeq.toList.take(ln).toSeq.last\n\
    \    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n\
    \    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) == (5l));\n  \
    \  assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n  \
    \  assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpb_b0x_ez.scala:16:28 ------------------------\e\
    [0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mln\e[0m = scala.math.lcm.toInt\
    \ (n.toLong)\n\e[31m\e[31m   |\e[0m                 ^^^^^^^^^^^^^^\e[0m\n\e[31m\
    \   |\e[0m                 value lcm is not a member of math\n1 error found\n"
  stdout: ''
  timestamp: 1660010146
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val fib : Array[Long] = new Array[Long](n+1)\n        fib(0)\
    \ = 0\n        fib(1) = 1\n        fib(2) = 1\n        for (i <- 3 until n) {\n\
    \            fib(i)=fib(i-1)+fib(i-2)\n        }\n        fib(n)\n    }\n    def\
    \ main(args: Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ju8dr6g.scala:16:48\
    \ --------------------\e[0m\e[0m\n\e[31m16 |\e[0m        \e[33mval\e[0m \e[36mfib\e\
    [0m : \e[35mArray\e[0m[\e[35mLong\e[0m] = \e[33mnew\e[0m \e[35mArray\e[0m[\e[35mLong\e\
    [0m](n+\e[31m1\e[0m)\n\e[31m\e[31m   |\e[0m                                  \
    \              ^^^\e[0m\n\e[31m   |\e[0m                                     \
    \           Found:    Long\n\e[31m   |\e[0m                                  \
    \              Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmp6ju8dr6g.scala:20:26 --------------------\e[0m\e[0m\n\e[31m20\
    \ |\e[0m        \e[33mfor\e[0m (i <- \e[31m3\e[0m until n) {\n\e[31m\e[31m   |\e\
    [0m                          ^\e[0m\n\e[31m   |\e[0m                         \
    \ Found:    (n : Long)\n\e[31m   |\e[0m                          Required: Int\n\
    \e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation available when compiling with\
    \ `-explain`\n\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp6ju8dr6g.scala:23:12\
    \ --------------------\e[0m\e[0m\n\e[31m23 |\e[0m        fib(n)\n\e[31m\e[31m\
    \   |\e[0m            ^\e[0m\n\e[31m   |\e[0m            Found:    (n : Long)\n\
    \e[31m   |\e[0m            Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n3 errors found\n"
  stdout: ''
  timestamp: 1660010148
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        val p = scala.math.BigInt(n).toString\n        if (p.toString.indexOf(\"\
    (\") >= 0)\n            (p.toString.substring(p.toString.indexOf(\"(\") + 1, p.toString.indexOf(\"\
    )\")).toLong)\n        else\n            p\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp8yw7r_pa.scala:20:12\
    \ --------------------\e[0m\e[0m\n\e[31m20 |\e[0m            p\n\e[31m\e[31m \
    \  |\e[0m            ^\e[0m\n\e[31m   |\e[0m            Found:    (p : String)\n\
    \e[31m   |\e[0m            Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010147
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def find(n : Long) : Long = {\n            if (n == 0 ||\
    \ n == 1) {\n                return n\n            }\n            else {\n   \
    \             return find(n-1) + find(n-2) + n\n            }\n        }\n   \
    \     if (n%2 == 0) {\n            return find(n+2)\n        }\n        else {\n\
    \            val l = math.ceil(sqrt(n).toInt)\n            val k = n/l\n     \
    \       val q = primeFib(k)\n            val r = primeFib(k+1)\n            return\
    \ r*q + l\n        }\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpi25kp56k.scala:30:29\
    \ --------------------\e[0m\e[0m\n\e[31m30 |\e[0m            \e[33mval\e[0m \e\
    [36mq\e[0m = primeFib(k)\n\e[31m\e[31m   |\e[0m                             ^\e\
    [0m\n\e[31m   |\e[0m                             Found:    (k : Double)\n\e[31m\
    \   |\e[0m                             Required: Long\n\e[31m   |\e[0m\n\e[31m\
    \   |\e[0m longer explanation available when compiling with `-explain`\n\e[31m\e\
    [31m-- [E007] Type Mismatch Error: /tmp/tmpi25kp56k.scala:31:29 --------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m            \e[33mval\e[0m \e[36mr\e[0m = primeFib(k+\e\
    [31m1\e[0m)\n\e[31m\e[31m   |\e[0m                             ^^^\e[0m\n\e[31m\
    \   |\e[0m                             Found:    Double\n\e[31m   |\e[0m     \
    \                        Required: Long\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpi25kp56k.scala:32:19 --------------------\e[0m\e\
    [0m\n\e[31m32 |\e[0m            \e[33mreturn\e[0m r*q + l\n\e[31m\e[31m   |\e\
    [0m                   ^^^^^^^\e[0m\n\e[31m   |\e[0m                   Found: \
    \   Double\n\e[31m   |\e[0m                   Required: Long\n\e[31m   |\e[0m\n\
    \e[31m   |\e[0m longer explanation available when compiling with `-explain`\n\
    3 errors found\n"
  stdout: ''
  timestamp: 1660010149
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var x = 1\n        var y = 2\n        var count = 0\n  \
    \      while (count != n) {\n            if (x * y == n) count += 1\n        \
    \    x += 1\n            y += 1\n        }\n        x\n    }\n    def main(args:\
    \ Array[String]) = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l))\
    \ == (3l));\n    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) ==\
    \ (13l));\n    assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) ==\
    \ (233l));\n    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l))\
    \ == (28657l));\n    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l))\
    \ == (433494437l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010151
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Long) : Boolean = \n            for( i <-\
    \ 2 to n/2 if n%i == 0 ) yield false\n        val m = 2l\n        for( i <- 2l\
    \ to n ) if( isPrime(i) ) m += 1\n        m\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmpnsght3z4.scala:17:27\
    \ --------------------\e[0m\e[0m\n\e[31m17 |\e[0m            \e[33mfor\e[0m( i\
    \ <- \e[31m2\e[0m to n/\e[31m2\e[0m \e[33mif\e[0m n%i == \e[31m0\e[0m ) \e[33myield\e\
    [0m \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m                           ^^^\e[0m\n\
    \e[31m   |\e[0m                           Found:    Long\n\e[31m   |\e[0m    \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n\e[31m\e[31m-- [E008]\
    \ Not Found Error: /tmp/tmpnsght3z4.scala:19:47 ------------------------\e[0m\e\
    [0m\n\e[31m19 |\e[0m        \e[33mfor\e[0m( i <- \e[31m2l\e[0m to n ) \e[33mif\e\
    [0m( isPrime(i) ) m += \e[31m1\e[0m\n\e[31m\e[31m   |\e[0m                   \
    \                          ^^^^\e[0m\n\e[31m   |\e[0m                   value\
    \ += is not a member of Long - did you mean m.!=?\n2 errors found\n"
  stdout: ''
  timestamp: 1660010149
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        def isPrime(n: Long) : Boolean = {\n            if (n <\
    \ 2l) false\n            else {\n                if (n % 2 == 0) false\n     \
    \           else if (!(n % 3) == 0) false\n                else {\n          \
    \          for (i <- 4l until (n-2l)) {\n                        if (n % i ==\
    \ 0) false\n                    }\n                    true\n                }\n\
    \            }\n        }\n        val fibs = Vector.fill(n)(0l)\n        var\
    \ i = 0l\n        while (fibs.last() < 2l) fibs(i) = fibs(i-1) + fibs(i-2)\n \
    \       fibs.last\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E008] Not Found Error: /tmp/tmpzthloawo.scala:20:25 ------------------------\e\
    [0m\e[0m\n\e[31m20 |\e[0m                \e[33melse\e[0m \e[33mif\e[0m (!(n %\
    \ \e[31m3\e[0m) == \e[31m0\e[0m) \e[31mfalse\e[0m\n\e[31m\e[31m   |\e[0m     \
    \                    ^^^^^^^^\e[0m\n\e[31m   |\e[0m      value unary_! is not\
    \ a member of Long - did you mean Long.unary_+?\n\e[31m\e[31m-- [E007] Type Mismatch\
    \ Error: /tmp/tmpzthloawo.scala:29:31 --------------------\e[0m\e[0m\n\e[31m29\
    \ |\e[0m        \e[33mval\e[0m \e[36mfibs\e[0m = Vector.fill(n)(\e[31m0l\e[0m)\n\
    \e[31m\e[31m   |\e[0m                               ^\e[0m\n\e[31m   |\e[0m  \
    \                             Found:    (n : Long)\n\e[31m   |\e[0m          \
    \                     Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer explanation\
    \ available when compiling with `-explain`\n\e[31m\e[31m-- [E050] Type Error:\
    \ /tmp/tmpzthloawo.scala:31:20 -----------------------------\e[0m\e[0m\n\e[31m31\
    \ |\e[0m        \e[33mwhile\e[0m (fibs.last() < \e[31m2l\e[0m) fibs(i) = fibs(i-\e\
    [31m1\e[0m) + fibs(i-\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m               ^^^^^^^^^\e\
    [0m\n\e[31m   |\e[0m               \e[33mmethod\e[0m \e[35mlast\e[0m in \e[33mclass\e\
    [0m \e[35mVector\e[0m does not take parameters\n\e[31m   |\e[0m\n\e[31m   |\e\
    [0m longer explanation available when compiling with `-explain`\n\e[31m\e[31m--\
    \ [E008] Not Found Error: /tmp/tmpzthloawo.scala:31:33 ------------------------\e\
    [0m\e[0m\n\e[31m31 |\e[0m        \e[33mwhile\e[0m (fibs.last() < \e[31m2l\e[0m)\
    \ fibs(i) = fibs(i-\e[31m1\e[0m) + fibs(i-\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m\
    \                                 ^^^^\e[0m\n\e[31m   |\e[0mvalue update is not\
    \ a member of Vector[Long] - did you mean fibs.updated?\n\e[31m\e[31m-- [E007]\
    \ Type Mismatch Error: /tmp/tmpzthloawo.scala:31:48 --------------------\e[0m\e\
    [0m\n\e[31m31 |\e[0m        \e[33mwhile\e[0m (fibs.last() < \e[31m2l\e[0m) fibs(i)\
    \ = fibs(i-\e[31m1\e[0m) + fibs(i-\e[31m2\e[0m)\n\e[31m\e[31m   |\e[0m       \
    \                                         ^^^\e[0m\n\e[31m   |\e[0m          \
    \                                      Found:    Long\n\e[31m   |\e[0m       \
    \                                         Required: I"
  stdout: ''
  timestamp: 1660010150
- exit_code: -1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        if((n % 2l) == 0l) {\n            primeFib(n / 2l)\n   \
    \     } else if((n % 2l) != 0l){\n            primeFib(n / 2l) + 1l\n        }\
    \ else primeFib(n * 3l)\n    }\n    def main(args: Array[String]) = {\n    assert(primeFib((1l))\
    \ == (2l));\n    assert(primeFib((2l)) == (3l));\n    assert(primeFib((3l)) ==\
    \ (5l));\n    assert(primeFib((4l)) == (13l));\n    assert(primeFib((5l)) == (89l));\n\
    \    assert(primeFib((6l)) == (233l));\n    assert(primeFib((7l)) == (1597l));\n\
    \    assert(primeFib((8l)) == (28657l));\n    assert(primeFib((9l)) == (514229l));\n\
    \    assert(primeFib((10l)) == (433494437l));\n    }\n\n}\n"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660010153
- exit_code: 1
  program: "import scala.math._\nimport scala.collection.mutable._\nobject Problem\
    \ {\n    // prime_fib returns n-th number that is a Fibonacci number and it's\
    \ also prime.\n    // >>> primeFib((1l))\n    // (2l)\n    // >>> primeFib((2l))\n\
    \    // (3l)\n    // >>> primeFib((3l))\n    // (5l)\n    // >>> primeFib((4l))\n\
    \    // (13l)\n    // >>> primeFib((5l))\n    // (89l)\n    def primeFib(n : Long)\
    \ : Long = {\n        var a = 2\n        var b = 1\n        for(i <- 0 until n){\n\
    \            if(b == 1){\n                b = 2\n                a = a + b\n \
    \           }\n            else if(b == 2){\n                a = 3\n         \
    \       b = a + b\n            }\n            else{\n                a = a + b\n\
    \            }\n        }\n        return a\n    }\n    def main(args: Array[String])\
    \ = {\n    assert(primeFib((1l)) == (2l));\n    assert(primeFib((2l)) == (3l));\n\
    \    assert(primeFib((3l)) == (5l));\n    assert(primeFib((4l)) == (13l));\n \
    \   assert(primeFib((5l)) == (89l));\n    assert(primeFib((6l)) == (233l));\n\
    \    assert(primeFib((7l)) == (1597l));\n    assert(primeFib((8l)) == (28657l));\n\
    \    assert(primeFib((9l)) == (514229l));\n    assert(primeFib((10l)) == (433494437l));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: "\e[31m\e[31m-- [E007] Type Mismatch Error: /tmp/tmp_3itaofm.scala:18:25\
    \ --------------------\e[0m\e[0m\n\e[31m18 |\e[0m        \e[33mfor\e[0m(i <- \e\
    [31m0\e[0m until n){\n\e[31m\e[31m   |\e[0m                         ^\e[0m\n\e\
    [31m   |\e[0m                         Found:    (n : Long)\n\e[31m   |\e[0m  \
    \                       Required: Int\n\e[31m   |\e[0m\n\e[31m   |\e[0m longer\
    \ explanation available when compiling with `-explain`\n1 error found\n"
  stdout: ''
  timestamp: 1660010149
